// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/detection.proto

package zb.dcts.scenario.detection;

public final class Detection {
  private Detection() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code zb.dcts.scenario.detection.ThresholdType}
   */
  public enum ThresholdType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *历史门限
     * </pre>
     *
     * <code>HISTORY = 0;</code>
     */
    HISTORY(0),
    /**
     * <pre>
     *用户自定义门限
     * </pre>
     *
     * <code>USER_DEFINE = 1;</code>
     */
    USER_DEFINE(1),
    /**
     * <pre>
     *自适应门限
     * </pre>
     *
     * <code>ADAPTIVE = 2;</code>
     */
    ADAPTIVE(2),
    /**
     * <pre>
     *邻值比较门限
     * </pre>
     *
     * <code>NEIGHBOR = 3;</code>
     */
    NEIGHBOR(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *历史门限
     * </pre>
     *
     * <code>HISTORY = 0;</code>
     */
    public static final int HISTORY_VALUE = 0;
    /**
     * <pre>
     *用户自定义门限
     * </pre>
     *
     * <code>USER_DEFINE = 1;</code>
     */
    public static final int USER_DEFINE_VALUE = 1;
    /**
     * <pre>
     *自适应门限
     * </pre>
     *
     * <code>ADAPTIVE = 2;</code>
     */
    public static final int ADAPTIVE_VALUE = 2;
    /**
     * <pre>
     *邻值比较门限
     * </pre>
     *
     * <code>NEIGHBOR = 3;</code>
     */
    public static final int NEIGHBOR_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ThresholdType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ThresholdType forNumber(int value) {
      switch (value) {
        case 0: return HISTORY;
        case 1: return USER_DEFINE;
        case 2: return ADAPTIVE;
        case 3: return NEIGHBOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ThresholdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ThresholdType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThresholdType>() {
            public ThresholdType findValueByNumber(int number) {
              return ThresholdType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.getDescriptor().getEnumTypes().get(0);
    }

    private static final ThresholdType[] VALUES = values();

    public static ThresholdType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ThresholdType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.scenario.detection.ThresholdType)
  }

  /**
   * <pre>
   *信号活跃度
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.scenario.detection.SignalActivity}
   */
  public enum SignalActivity
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     *当前活跃
     * </pre>
     *
     * <code>ACTIVE = 1;</code>
     */
    ACTIVE(1),
    /**
     * <pre>
     *已不活跃
     * </pre>
     *
     * <code>INACTIVE = 2;</code>
     */
    INACTIVE(2),
    /**
     * <pre>
     *过时
     * </pre>
     *
     * <code>DECAYED = 4;</code>
     */
    DECAYED(4),
    /**
     * <code>REMOVED = 8;</code>
     */
    REMOVED(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     *当前活跃
     * </pre>
     *
     * <code>ACTIVE = 1;</code>
     */
    public static final int ACTIVE_VALUE = 1;
    /**
     * <pre>
     *已不活跃
     * </pre>
     *
     * <code>INACTIVE = 2;</code>
     */
    public static final int INACTIVE_VALUE = 2;
    /**
     * <pre>
     *过时
     * </pre>
     *
     * <code>DECAYED = 4;</code>
     */
    public static final int DECAYED_VALUE = 4;
    /**
     * <code>REMOVED = 8;</code>
     */
    public static final int REMOVED_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SignalActivity valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SignalActivity forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return ACTIVE;
        case 2: return INACTIVE;
        case 4: return DECAYED;
        case 8: return REMOVED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SignalActivity>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SignalActivity> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SignalActivity>() {
            public SignalActivity findValueByNumber(int number) {
              return SignalActivity.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.getDescriptor().getEnumTypes().get(1);
    }

    private static final SignalActivity[] VALUES = values();

    public static SignalActivity valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SignalActivity(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.scenario.detection.SignalActivity)
  }

  public interface ThresholdSectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.ThresholdSector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *门限判别的起始终止频率
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return Whether the freqSpan field is set.
     */
    boolean hasFreqSpan();
    /**
     * <pre>
     *门限判别的起始终止频率
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return The freqSpan.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan();
    /**
     * <pre>
     *门限判别的起始终止频率
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder();

    /**
     * <pre>
     *门限电平，单位dBm
     * </pre>
     *
     * <code>float level = 2;</code>
     * @return The level.
     */
    float getLevel();
  }
  /**
   * <pre>
   *----------------------------能量检测--------------------//
   *门限设置/门限判别结果
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.ThresholdSector}
   */
  public static final class ThresholdSector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.ThresholdSector)
      ThresholdSectorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ThresholdSector.newBuilder() to construct.
    private ThresholdSector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThresholdSector() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ThresholdSector();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ThresholdSector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (freqSpan_ != null) {
                subBuilder = freqSpan_.toBuilder();
              }
              freqSpan_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqSpan_);
                freqSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 21: {

              level_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdSector_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdSector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.ThresholdSector.class, zb.dcts.scenario.detection.Detection.ThresholdSector.Builder.class);
    }

    public static final int FREQ_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
    /**
     * <pre>
     *门限判别的起始终止频率
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return Whether the freqSpan field is set.
     */
    @java.lang.Override
    public boolean hasFreqSpan() {
      return freqSpan_ != null;
    }
    /**
     * <pre>
     *门限判别的起始终止频率
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return The freqSpan.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
      return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
    }
    /**
     * <pre>
     *门限判别的起始终止频率
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
      return getFreqSpan();
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private float level_;
    /**
     * <pre>
     *门限电平，单位dBm
     * </pre>
     *
     * <code>float level = 2;</code>
     * @return The level.
     */
    @java.lang.Override
    public float getLevel() {
      return level_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (freqSpan_ != null) {
        output.writeMessage(1, getFreqSpan());
      }
      if (level_ != 0F) {
        output.writeFloat(2, level_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freqSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFreqSpan());
      }
      if (level_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, level_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.ThresholdSector)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.ThresholdSector other = (zb.dcts.scenario.detection.Detection.ThresholdSector) obj;

      if (hasFreqSpan() != other.hasFreqSpan()) return false;
      if (hasFreqSpan()) {
        if (!getFreqSpan()
            .equals(other.getFreqSpan())) return false;
      }
      if (java.lang.Float.floatToIntBits(getLevel())
          != java.lang.Float.floatToIntBits(
              other.getLevel())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFreqSpan()) {
        hash = (37 * hash) + FREQ_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSpan().hashCode();
      }
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLevel());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdSector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.ThresholdSector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *----------------------------能量检测--------------------//
     *门限设置/门限判别结果
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.ThresholdSector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.ThresholdSector)
        zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdSector_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdSector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.ThresholdSector.class, zb.dcts.scenario.detection.Detection.ThresholdSector.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.ThresholdSector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }
        level_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdSector_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ThresholdSector getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.ThresholdSector.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ThresholdSector build() {
        zb.dcts.scenario.detection.Detection.ThresholdSector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ThresholdSector buildPartial() {
        zb.dcts.scenario.detection.Detection.ThresholdSector result = new zb.dcts.scenario.detection.Detection.ThresholdSector(this);
        if (freqSpanBuilder_ == null) {
          result.freqSpan_ = freqSpan_;
        } else {
          result.freqSpan_ = freqSpanBuilder_.build();
        }
        result.level_ = level_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.ThresholdSector) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.ThresholdSector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.ThresholdSector other) {
        if (other == zb.dcts.scenario.detection.Detection.ThresholdSector.getDefaultInstance()) return this;
        if (other.hasFreqSpan()) {
          mergeFreqSpan(other.getFreqSpan());
        }
        if (other.getLevel() != 0F) {
          setLevel(other.getLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.ThresholdSector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.ThresholdSector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqSpanBuilder_;
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       * @return Whether the freqSpan field is set.
       */
      public boolean hasFreqSpan() {
        return freqSpanBuilder_ != null || freqSpan_ != null;
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       * @return The freqSpan.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
        if (freqSpanBuilder_ == null) {
          return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        } else {
          return freqSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder setFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqSpan_ = value;
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder setFreqSpan(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = builderForValue.build();
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder mergeFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (freqSpan_ != null) {
            freqSpan_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(freqSpan_).mergeFrom(value).buildPartial();
          } else {
            freqSpan_ = value;
          }
          onChanged();
        } else {
          freqSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder clearFreqSpan() {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
          onChanged();
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqSpanBuilder() {
        
        onChanged();
        return getFreqSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
        if (freqSpanBuilder_ != null) {
          return freqSpanBuilder_.getMessageOrBuilder();
        } else {
          return freqSpan_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        }
      }
      /**
       * <pre>
       *门限判别的起始终止频率
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqSpanFieldBuilder() {
        if (freqSpanBuilder_ == null) {
          freqSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFreqSpan(),
                  getParentForChildren(),
                  isClean());
          freqSpan_ = null;
        }
        return freqSpanBuilder_;
      }

      private float level_ ;
      /**
       * <pre>
       *门限电平，单位dBm
       * </pre>
       *
       * <code>float level = 2;</code>
       * @return The level.
       */
      @java.lang.Override
      public float getLevel() {
        return level_;
      }
      /**
       * <pre>
       *门限电平，单位dBm
       * </pre>
       *
       * <code>float level = 2;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(float value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *门限电平，单位dBm
       * </pre>
       *
       * <code>float level = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.ThresholdSector)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.ThresholdSector)
    private static final zb.dcts.scenario.detection.Detection.ThresholdSector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.ThresholdSector();
    }

    public static zb.dcts.scenario.detection.Detection.ThresholdSector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThresholdSector>
        PARSER = new com.google.protobuf.AbstractParser<ThresholdSector>() {
      @java.lang.Override
      public ThresholdSector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ThresholdSector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ThresholdSector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThresholdSector> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ThresholdSector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserThresholdParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.UserThresholdParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.ThresholdSector> 
        getSectorsList();
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.ThresholdSector getSectors(int index);
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    int getSectorsCount();
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder> 
        getSectorsOrBuilderList();
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder getSectorsOrBuilder(
        int index);
  }
  /**
   * <pre>
   *用户自定义门限
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.UserThresholdParam}
   */
  public static final class UserThresholdParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.UserThresholdParam)
      UserThresholdParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserThresholdParam.newBuilder() to construct.
    private UserThresholdParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserThresholdParam() {
      sectors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UserThresholdParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserThresholdParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                sectors_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.ThresholdSector>();
                mutable_bitField0_ |= 0x00000001;
              }
              sectors_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.ThresholdSector.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          sectors_ = java.util.Collections.unmodifiableList(sectors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_UserThresholdParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_UserThresholdParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.UserThresholdParam.class, zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder.class);
    }

    public static final int SECTORS_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.scenario.detection.Detection.ThresholdSector> sectors_;
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.ThresholdSector> getSectorsList() {
      return sectors_;
    }
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder> 
        getSectorsOrBuilderList() {
      return sectors_;
    }
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    @java.lang.Override
    public int getSectorsCount() {
      return sectors_.size();
    }
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ThresholdSector getSectors(int index) {
      return sectors_.get(index);
    }
    /**
     * <pre>
     *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder getSectorsOrBuilder(
        int index) {
      return sectors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < sectors_.size(); i++) {
        output.writeMessage(1, sectors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < sectors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, sectors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.UserThresholdParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.UserThresholdParam other = (zb.dcts.scenario.detection.Detection.UserThresholdParam) obj;

      if (!getSectorsList()
          .equals(other.getSectorsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSectorsCount() > 0) {
        hash = (37 * hash) + SECTORS_FIELD_NUMBER;
        hash = (53 * hash) + getSectorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.UserThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.UserThresholdParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *用户自定义门限
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.UserThresholdParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.UserThresholdParam)
        zb.dcts.scenario.detection.Detection.UserThresholdParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_UserThresholdParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_UserThresholdParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.UserThresholdParam.class, zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.UserThresholdParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSectorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (sectorsBuilder_ == null) {
          sectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sectorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_UserThresholdParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.UserThresholdParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.UserThresholdParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.UserThresholdParam build() {
        zb.dcts.scenario.detection.Detection.UserThresholdParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.UserThresholdParam buildPartial() {
        zb.dcts.scenario.detection.Detection.UserThresholdParam result = new zb.dcts.scenario.detection.Detection.UserThresholdParam(this);
        int from_bitField0_ = bitField0_;
        if (sectorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            sectors_ = java.util.Collections.unmodifiableList(sectors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sectors_ = sectors_;
        } else {
          result.sectors_ = sectorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.UserThresholdParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.UserThresholdParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.UserThresholdParam other) {
        if (other == zb.dcts.scenario.detection.Detection.UserThresholdParam.getDefaultInstance()) return this;
        if (sectorsBuilder_ == null) {
          if (!other.sectors_.isEmpty()) {
            if (sectors_.isEmpty()) {
              sectors_ = other.sectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSectorsIsMutable();
              sectors_.addAll(other.sectors_);
            }
            onChanged();
          }
        } else {
          if (!other.sectors_.isEmpty()) {
            if (sectorsBuilder_.isEmpty()) {
              sectorsBuilder_.dispose();
              sectorsBuilder_ = null;
              sectors_ = other.sectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sectorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSectorsFieldBuilder() : null;
            } else {
              sectorsBuilder_.addAllMessages(other.sectors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.UserThresholdParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.UserThresholdParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.scenario.detection.Detection.ThresholdSector> sectors_ =
        java.util.Collections.emptyList();
      private void ensureSectorsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          sectors_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.ThresholdSector>(sectors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.ThresholdSector, zb.dcts.scenario.detection.Detection.ThresholdSector.Builder, zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder> sectorsBuilder_;

      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.ThresholdSector> getSectorsList() {
        if (sectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sectors_);
        } else {
          return sectorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public int getSectorsCount() {
        if (sectorsBuilder_ == null) {
          return sectors_.size();
        } else {
          return sectorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.ThresholdSector getSectors(int index) {
        if (sectorsBuilder_ == null) {
          return sectors_.get(index);
        } else {
          return sectorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder setSectors(
          int index, zb.dcts.scenario.detection.Detection.ThresholdSector value) {
        if (sectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectorsIsMutable();
          sectors_.set(index, value);
          onChanged();
        } else {
          sectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder setSectors(
          int index, zb.dcts.scenario.detection.Detection.ThresholdSector.Builder builderForValue) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          sectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder addSectors(zb.dcts.scenario.detection.Detection.ThresholdSector value) {
        if (sectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectorsIsMutable();
          sectors_.add(value);
          onChanged();
        } else {
          sectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder addSectors(
          int index, zb.dcts.scenario.detection.Detection.ThresholdSector value) {
        if (sectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectorsIsMutable();
          sectors_.add(index, value);
          onChanged();
        } else {
          sectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder addSectors(
          zb.dcts.scenario.detection.Detection.ThresholdSector.Builder builderForValue) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.add(builderForValue.build());
          onChanged();
        } else {
          sectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder addSectors(
          int index, zb.dcts.scenario.detection.Detection.ThresholdSector.Builder builderForValue) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          sectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder addAllSectors(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.ThresholdSector> values) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sectors_);
          onChanged();
        } else {
          sectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder clearSectors() {
        if (sectorsBuilder_ == null) {
          sectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public Builder removeSectors(int index) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.remove(index);
          onChanged();
        } else {
          sectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.ThresholdSector.Builder getSectorsBuilder(
          int index) {
        return getSectorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder getSectorsOrBuilder(
          int index) {
        if (sectorsBuilder_ == null) {
          return sectors_.get(index);  } else {
          return sectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder> 
           getSectorsOrBuilderList() {
        if (sectorsBuilder_ != null) {
          return sectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sectors_);
        }
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.ThresholdSector.Builder addSectorsBuilder() {
        return getSectorsFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.ThresholdSector.getDefaultInstance());
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.ThresholdSector.Builder addSectorsBuilder(
          int index) {
        return getSectorsFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.ThresholdSector.getDefaultInstance());
      }
      /**
       * <pre>
       *自定义门限是在若干频段内指定的水平电平值，频段可重叠，可乱序
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdSector sectors = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.ThresholdSector.Builder> 
           getSectorsBuilderList() {
        return getSectorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.ThresholdSector, zb.dcts.scenario.detection.Detection.ThresholdSector.Builder, zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder> 
          getSectorsFieldBuilder() {
        if (sectorsBuilder_ == null) {
          sectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.ThresholdSector, zb.dcts.scenario.detection.Detection.ThresholdSector.Builder, zb.dcts.scenario.detection.Detection.ThresholdSectorOrBuilder>(
                  sectors_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          sectors_ = null;
        }
        return sectorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.UserThresholdParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.UserThresholdParam)
    private static final zb.dcts.scenario.detection.Detection.UserThresholdParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.UserThresholdParam();
    }

    public static zb.dcts.scenario.detection.Detection.UserThresholdParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserThresholdParam>
        PARSER = new com.google.protobuf.AbstractParser<UserThresholdParam>() {
      @java.lang.Override
      public UserThresholdParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserThresholdParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserThresholdParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserThresholdParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.UserThresholdParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HistoryThresholdParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.HistoryThresholdParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.TimeSpan span = 1;</code>
     * @return Whether the span field is set.
     */
    boolean hasSpan();
    /**
     * <code>.zb.dcts.TimeSpan span = 1;</code>
     * @return The span.
     */
    zb.dcts.Dcts.TimeSpan getSpan();
    /**
     * <code>.zb.dcts.TimeSpan span = 1;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getSpanOrBuilder();

    /**
     * <pre>
     *最大读取记录个数，因为记录过多，历史门限的生成时间会很长
     * </pre>
     *
     * <code>int32 max_load_count = 3;</code>
     * @return The maxLoadCount.
     */
    int getMaxLoadCount();

    /**
     * <code>float offset = 4;</code>
     * @return The offset.
     */
    float getOffset();
  }
  /**
   * <pre>
   *历史门限
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.HistoryThresholdParam}
   */
  public static final class HistoryThresholdParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.HistoryThresholdParam)
      HistoryThresholdParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HistoryThresholdParam.newBuilder() to construct.
    private HistoryThresholdParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HistoryThresholdParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HistoryThresholdParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HistoryThresholdParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (span_ != null) {
                subBuilder = span_.toBuilder();
              }
              span_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(span_);
                span_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              maxLoadCount_ = input.readInt32();
              break;
            }
            case 37: {

              offset_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.HistoryThresholdParam.class, zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder.class);
    }

    public static final int SPAN_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.TimeSpan span_;
    /**
     * <code>.zb.dcts.TimeSpan span = 1;</code>
     * @return Whether the span field is set.
     */
    @java.lang.Override
    public boolean hasSpan() {
      return span_ != null;
    }
    /**
     * <code>.zb.dcts.TimeSpan span = 1;</code>
     * @return The span.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getSpan() {
      return span_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : span_;
    }
    /**
     * <code>.zb.dcts.TimeSpan span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getSpanOrBuilder() {
      return getSpan();
    }

    public static final int MAX_LOAD_COUNT_FIELD_NUMBER = 3;
    private int maxLoadCount_;
    /**
     * <pre>
     *最大读取记录个数，因为记录过多，历史门限的生成时间会很长
     * </pre>
     *
     * <code>int32 max_load_count = 3;</code>
     * @return The maxLoadCount.
     */
    @java.lang.Override
    public int getMaxLoadCount() {
      return maxLoadCount_;
    }

    public static final int OFFSET_FIELD_NUMBER = 4;
    private float offset_;
    /**
     * <code>float offset = 4;</code>
     * @return The offset.
     */
    @java.lang.Override
    public float getOffset() {
      return offset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (span_ != null) {
        output.writeMessage(1, getSpan());
      }
      if (maxLoadCount_ != 0) {
        output.writeInt32(3, maxLoadCount_);
      }
      if (offset_ != 0F) {
        output.writeFloat(4, offset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (span_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSpan());
      }
      if (maxLoadCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxLoadCount_);
      }
      if (offset_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, offset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.HistoryThresholdParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.HistoryThresholdParam other = (zb.dcts.scenario.detection.Detection.HistoryThresholdParam) obj;

      if (hasSpan() != other.hasSpan()) return false;
      if (hasSpan()) {
        if (!getSpan()
            .equals(other.getSpan())) return false;
      }
      if (getMaxLoadCount()
          != other.getMaxLoadCount()) return false;
      if (java.lang.Float.floatToIntBits(getOffset())
          != java.lang.Float.floatToIntBits(
              other.getOffset())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSpan()) {
        hash = (37 * hash) + SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getSpan().hashCode();
      }
      hash = (37 * hash) + MAX_LOAD_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxLoadCount();
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOffset());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.HistoryThresholdParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *历史门限
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.HistoryThresholdParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.HistoryThresholdParam)
        zb.dcts.scenario.detection.Detection.HistoryThresholdParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.HistoryThresholdParam.class, zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.HistoryThresholdParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (spanBuilder_ == null) {
          span_ = null;
        } else {
          span_ = null;
          spanBuilder_ = null;
        }
        maxLoadCount_ = 0;

        offset_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HistoryThresholdParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.HistoryThresholdParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HistoryThresholdParam build() {
        zb.dcts.scenario.detection.Detection.HistoryThresholdParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HistoryThresholdParam buildPartial() {
        zb.dcts.scenario.detection.Detection.HistoryThresholdParam result = new zb.dcts.scenario.detection.Detection.HistoryThresholdParam(this);
        if (spanBuilder_ == null) {
          result.span_ = span_;
        } else {
          result.span_ = spanBuilder_.build();
        }
        result.maxLoadCount_ = maxLoadCount_;
        result.offset_ = offset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.HistoryThresholdParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.HistoryThresholdParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.HistoryThresholdParam other) {
        if (other == zb.dcts.scenario.detection.Detection.HistoryThresholdParam.getDefaultInstance()) return this;
        if (other.hasSpan()) {
          mergeSpan(other.getSpan());
        }
        if (other.getMaxLoadCount() != 0) {
          setMaxLoadCount(other.getMaxLoadCount());
        }
        if (other.getOffset() != 0F) {
          setOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.HistoryThresholdParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.HistoryThresholdParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.Dcts.TimeSpan span_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> spanBuilder_;
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       * @return Whether the span field is set.
       */
      public boolean hasSpan() {
        return spanBuilder_ != null || span_ != null;
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       * @return The span.
       */
      public zb.dcts.Dcts.TimeSpan getSpan() {
        if (spanBuilder_ == null) {
          return span_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : span_;
        } else {
          return spanBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       */
      public Builder setSpan(zb.dcts.Dcts.TimeSpan value) {
        if (spanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          span_ = value;
          onChanged();
        } else {
          spanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       */
      public Builder setSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (spanBuilder_ == null) {
          span_ = builderForValue.build();
          onChanged();
        } else {
          spanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       */
      public Builder mergeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (spanBuilder_ == null) {
          if (span_ != null) {
            span_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(span_).mergeFrom(value).buildPartial();
          } else {
            span_ = value;
          }
          onChanged();
        } else {
          spanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       */
      public Builder clearSpan() {
        if (spanBuilder_ == null) {
          span_ = null;
          onChanged();
        } else {
          span_ = null;
          spanBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getSpanBuilder() {
        
        onChanged();
        return getSpanFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getSpanOrBuilder() {
        if (spanBuilder_ != null) {
          return spanBuilder_.getMessageOrBuilder();
        } else {
          return span_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : span_;
        }
      }
      /**
       * <code>.zb.dcts.TimeSpan span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getSpanFieldBuilder() {
        if (spanBuilder_ == null) {
          spanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getSpan(),
                  getParentForChildren(),
                  isClean());
          span_ = null;
        }
        return spanBuilder_;
      }

      private int maxLoadCount_ ;
      /**
       * <pre>
       *最大读取记录个数，因为记录过多，历史门限的生成时间会很长
       * </pre>
       *
       * <code>int32 max_load_count = 3;</code>
       * @return The maxLoadCount.
       */
      @java.lang.Override
      public int getMaxLoadCount() {
        return maxLoadCount_;
      }
      /**
       * <pre>
       *最大读取记录个数，因为记录过多，历史门限的生成时间会很长
       * </pre>
       *
       * <code>int32 max_load_count = 3;</code>
       * @param value The maxLoadCount to set.
       * @return This builder for chaining.
       */
      public Builder setMaxLoadCount(int value) {
        
        maxLoadCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大读取记录个数，因为记录过多，历史门限的生成时间会很长
       * </pre>
       *
       * <code>int32 max_load_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxLoadCount() {
        
        maxLoadCount_ = 0;
        onChanged();
        return this;
      }

      private float offset_ ;
      /**
       * <code>float offset = 4;</code>
       * @return The offset.
       */
      @java.lang.Override
      public float getOffset() {
        return offset_;
      }
      /**
       * <code>float offset = 4;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(float value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float offset = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        
        offset_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.HistoryThresholdParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HistoryThresholdParam)
    private static final zb.dcts.scenario.detection.Detection.HistoryThresholdParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.HistoryThresholdParam();
    }

    public static zb.dcts.scenario.detection.Detection.HistoryThresholdParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HistoryThresholdParam>
        PARSER = new com.google.protobuf.AbstractParser<HistoryThresholdParam>() {
      @java.lang.Override
      public HistoryThresholdParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HistoryThresholdParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HistoryThresholdParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HistoryThresholdParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HistoryThresholdParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AdaptiveThresholdParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.AdaptiveThresholdParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *迭代次数
     * </pre>
     *
     * <code>int32 average_count = 1;</code>
     * @return The averageCount.
     */
    int getAverageCount();

    /**
     * <pre>
     *分段模式
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
     * @return The enum numeric value on the wire for partitionMode.
     */
    int getPartitionModeValue();
    /**
     * <pre>
     *分段模式
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
     * @return The partitionMode.
     */
    zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode getPartitionMode();

    /**
     * <pre>
     *门限偏移
     * </pre>
     *
     * <code>float offset = 3;</code>
     * @return The offset.
     */
    float getOffset();
  }
  /**
   * <pre>
   *自适应门限
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.AdaptiveThresholdParam}
   */
  public static final class AdaptiveThresholdParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.AdaptiveThresholdParam)
      AdaptiveThresholdParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AdaptiveThresholdParam.newBuilder() to construct.
    private AdaptiveThresholdParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AdaptiveThresholdParam() {
      partitionMode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AdaptiveThresholdParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AdaptiveThresholdParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              averageCount_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              partitionMode_ = rawValue;
              break;
            }
            case 29: {

              offset_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.class, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder.class);
    }

    /**
     * Protobuf enum {@code zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode}
     */
    public enum PartitionMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       *标准模式
       * </pre>
       *
       * <code>PM_STANDARD = 0;</code>
       */
      PM_STANDARD(0),
      /**
       * <pre>
       *激进模式，将采用更细的粒度统计
       * </pre>
       *
       * <code>PM_AGGRESIVE = 1;</code>
       */
      PM_AGGRESIVE(1),
      /**
       * <pre>
       *快速模式，将采用较粗的粒度统计
       * </pre>
       *
       * <code>PM_FAST = 2;</code>
       */
      PM_FAST(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       *标准模式
       * </pre>
       *
       * <code>PM_STANDARD = 0;</code>
       */
      public static final int PM_STANDARD_VALUE = 0;
      /**
       * <pre>
       *激进模式，将采用更细的粒度统计
       * </pre>
       *
       * <code>PM_AGGRESIVE = 1;</code>
       */
      public static final int PM_AGGRESIVE_VALUE = 1;
      /**
       * <pre>
       *快速模式，将采用较粗的粒度统计
       * </pre>
       *
       * <code>PM_FAST = 2;</code>
       */
      public static final int PM_FAST_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PartitionMode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PartitionMode forNumber(int value) {
        switch (value) {
          case 0: return PM_STANDARD;
          case 1: return PM_AGGRESIVE;
          case 2: return PM_FAST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PartitionMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PartitionMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PartitionMode>() {
              public PartitionMode findValueByNumber(int number) {
                return PartitionMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.getDescriptor().getEnumTypes().get(0);
      }

      private static final PartitionMode[] VALUES = values();

      public static PartitionMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PartitionMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode)
    }

    public static final int AVERAGE_COUNT_FIELD_NUMBER = 1;
    private int averageCount_;
    /**
     * <pre>
     *迭代次数
     * </pre>
     *
     * <code>int32 average_count = 1;</code>
     * @return The averageCount.
     */
    @java.lang.Override
    public int getAverageCount() {
      return averageCount_;
    }

    public static final int PARTITION_MODE_FIELD_NUMBER = 2;
    private int partitionMode_;
    /**
     * <pre>
     *分段模式
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
     * @return The enum numeric value on the wire for partitionMode.
     */
    @java.lang.Override public int getPartitionModeValue() {
      return partitionMode_;
    }
    /**
     * <pre>
     *分段模式
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
     * @return The partitionMode.
     */
    @java.lang.Override public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode getPartitionMode() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode result = zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode.valueOf(partitionMode_);
      return result == null ? zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode.UNRECOGNIZED : result;
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private float offset_;
    /**
     * <pre>
     *门限偏移
     * </pre>
     *
     * <code>float offset = 3;</code>
     * @return The offset.
     */
    @java.lang.Override
    public float getOffset() {
      return offset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (averageCount_ != 0) {
        output.writeInt32(1, averageCount_);
      }
      if (partitionMode_ != zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode.PM_STANDARD.getNumber()) {
        output.writeEnum(2, partitionMode_);
      }
      if (offset_ != 0F) {
        output.writeFloat(3, offset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (averageCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, averageCount_);
      }
      if (partitionMode_ != zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode.PM_STANDARD.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, partitionMode_);
      }
      if (offset_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, offset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam other = (zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam) obj;

      if (getAverageCount()
          != other.getAverageCount()) return false;
      if (partitionMode_ != other.partitionMode_) return false;
      if (java.lang.Float.floatToIntBits(getOffset())
          != java.lang.Float.floatToIntBits(
              other.getOffset())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AVERAGE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAverageCount();
      hash = (37 * hash) + PARTITION_MODE_FIELD_NUMBER;
      hash = (53 * hash) + partitionMode_;
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOffset());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *自适应门限
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.AdaptiveThresholdParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.AdaptiveThresholdParam)
        zb.dcts.scenario.detection.Detection.AdaptiveThresholdParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.class, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        averageCount_ = 0;

        partitionMode_ = 0;

        offset_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam build() {
        zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam buildPartial() {
        zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam result = new zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam(this);
        result.averageCount_ = averageCount_;
        result.partitionMode_ = partitionMode_;
        result.offset_ = offset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam other) {
        if (other == zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.getDefaultInstance()) return this;
        if (other.getAverageCount() != 0) {
          setAverageCount(other.getAverageCount());
        }
        if (other.partitionMode_ != 0) {
          setPartitionModeValue(other.getPartitionModeValue());
        }
        if (other.getOffset() != 0F) {
          setOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int averageCount_ ;
      /**
       * <pre>
       *迭代次数
       * </pre>
       *
       * <code>int32 average_count = 1;</code>
       * @return The averageCount.
       */
      @java.lang.Override
      public int getAverageCount() {
        return averageCount_;
      }
      /**
       * <pre>
       *迭代次数
       * </pre>
       *
       * <code>int32 average_count = 1;</code>
       * @param value The averageCount to set.
       * @return This builder for chaining.
       */
      public Builder setAverageCount(int value) {
        
        averageCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *迭代次数
       * </pre>
       *
       * <code>int32 average_count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAverageCount() {
        
        averageCount_ = 0;
        onChanged();
        return this;
      }

      private int partitionMode_ = 0;
      /**
       * <pre>
       *分段模式
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
       * @return The enum numeric value on the wire for partitionMode.
       */
      @java.lang.Override public int getPartitionModeValue() {
        return partitionMode_;
      }
      /**
       * <pre>
       *分段模式
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
       * @param value The enum numeric value on the wire for partitionMode to set.
       * @return This builder for chaining.
       */
      public Builder setPartitionModeValue(int value) {
        
        partitionMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *分段模式
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
       * @return The partitionMode.
       */
      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode getPartitionMode() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode result = zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode.valueOf(partitionMode_);
        return result == null ? zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *分段模式
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
       * @param value The partitionMode to set.
       * @return This builder for chaining.
       */
      public Builder setPartitionMode(zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.PartitionMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        partitionMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *分段模式
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode partition_mode = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartitionMode() {
        
        partitionMode_ = 0;
        onChanged();
        return this;
      }

      private float offset_ ;
      /**
       * <pre>
       *门限偏移
       * </pre>
       *
       * <code>float offset = 3;</code>
       * @return The offset.
       */
      @java.lang.Override
      public float getOffset() {
        return offset_;
      }
      /**
       * <pre>
       *门限偏移
       * </pre>
       *
       * <code>float offset = 3;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(float value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *门限偏移
       * </pre>
       *
       * <code>float offset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        
        offset_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.AdaptiveThresholdParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.AdaptiveThresholdParam)
    private static final zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam();
    }

    public static zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AdaptiveThresholdParam>
        PARSER = new com.google.protobuf.AbstractParser<AdaptiveThresholdParam>() {
      @java.lang.Override
      public AdaptiveThresholdParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdaptiveThresholdParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AdaptiveThresholdParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdaptiveThresholdParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NeighborVarThresholdParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.NeighborVarThresholdParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *区分信噪的噪声标准差差倍数
     * </pre>
     *
     * <code>float noise_variance_scale = 1;</code>
     * @return The noiseVarianceScale.
     */
    float getNoiseVarianceScale();

    /**
     * <pre>
     *计算噪声标准差时，噪声偏移阈值
     * </pre>
     *
     * <code>float noise_max_variance = 2;</code>
     * @return The noiseMaxVariance.
     */
    float getNoiseMaxVariance();

    /**
     * <pre>
     *门限偏移
     * </pre>
     *
     * <code>float offset = 3;</code>
     * @return The offset.
     */
    float getOffset();

    /**
     * <pre>
     *估计噪声方差的频段宽度
     * </pre>
     *
     * <code>double lookup_freq_span = 4;</code>
     * @return The lookupFreqSpan.
     */
    double getLookupFreqSpan();

    /**
     * <pre>
     *平滑点数范围
     * </pre>
     *
     * <code>int32 smooth_range = 5;</code>
     * @return The smoothRange.
     */
    int getSmoothRange();
  }
  /**
   * <pre>
   *邻值比较门限
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.NeighborVarThresholdParam}
   */
  public static final class NeighborVarThresholdParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.NeighborVarThresholdParam)
      NeighborVarThresholdParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NeighborVarThresholdParam.newBuilder() to construct.
    private NeighborVarThresholdParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NeighborVarThresholdParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NeighborVarThresholdParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NeighborVarThresholdParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              noiseVarianceScale_ = input.readFloat();
              break;
            }
            case 21: {

              noiseMaxVariance_ = input.readFloat();
              break;
            }
            case 29: {

              offset_ = input.readFloat();
              break;
            }
            case 33: {

              lookupFreqSpan_ = input.readDouble();
              break;
            }
            case 40: {

              smoothRange_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.class, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder.class);
    }

    public static final int NOISE_VARIANCE_SCALE_FIELD_NUMBER = 1;
    private float noiseVarianceScale_;
    /**
     * <pre>
     *区分信噪的噪声标准差差倍数
     * </pre>
     *
     * <code>float noise_variance_scale = 1;</code>
     * @return The noiseVarianceScale.
     */
    @java.lang.Override
    public float getNoiseVarianceScale() {
      return noiseVarianceScale_;
    }

    public static final int NOISE_MAX_VARIANCE_FIELD_NUMBER = 2;
    private float noiseMaxVariance_;
    /**
     * <pre>
     *计算噪声标准差时，噪声偏移阈值
     * </pre>
     *
     * <code>float noise_max_variance = 2;</code>
     * @return The noiseMaxVariance.
     */
    @java.lang.Override
    public float getNoiseMaxVariance() {
      return noiseMaxVariance_;
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private float offset_;
    /**
     * <pre>
     *门限偏移
     * </pre>
     *
     * <code>float offset = 3;</code>
     * @return The offset.
     */
    @java.lang.Override
    public float getOffset() {
      return offset_;
    }

    public static final int LOOKUP_FREQ_SPAN_FIELD_NUMBER = 4;
    private double lookupFreqSpan_;
    /**
     * <pre>
     *估计噪声方差的频段宽度
     * </pre>
     *
     * <code>double lookup_freq_span = 4;</code>
     * @return The lookupFreqSpan.
     */
    @java.lang.Override
    public double getLookupFreqSpan() {
      return lookupFreqSpan_;
    }

    public static final int SMOOTH_RANGE_FIELD_NUMBER = 5;
    private int smoothRange_;
    /**
     * <pre>
     *平滑点数范围
     * </pre>
     *
     * <code>int32 smooth_range = 5;</code>
     * @return The smoothRange.
     */
    @java.lang.Override
    public int getSmoothRange() {
      return smoothRange_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (noiseVarianceScale_ != 0F) {
        output.writeFloat(1, noiseVarianceScale_);
      }
      if (noiseMaxVariance_ != 0F) {
        output.writeFloat(2, noiseMaxVariance_);
      }
      if (offset_ != 0F) {
        output.writeFloat(3, offset_);
      }
      if (lookupFreqSpan_ != 0D) {
        output.writeDouble(4, lookupFreqSpan_);
      }
      if (smoothRange_ != 0) {
        output.writeInt32(5, smoothRange_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (noiseVarianceScale_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, noiseVarianceScale_);
      }
      if (noiseMaxVariance_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, noiseMaxVariance_);
      }
      if (offset_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, offset_);
      }
      if (lookupFreqSpan_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lookupFreqSpan_);
      }
      if (smoothRange_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, smoothRange_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam other = (zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam) obj;

      if (java.lang.Float.floatToIntBits(getNoiseVarianceScale())
          != java.lang.Float.floatToIntBits(
              other.getNoiseVarianceScale())) return false;
      if (java.lang.Float.floatToIntBits(getNoiseMaxVariance())
          != java.lang.Float.floatToIntBits(
              other.getNoiseMaxVariance())) return false;
      if (java.lang.Float.floatToIntBits(getOffset())
          != java.lang.Float.floatToIntBits(
              other.getOffset())) return false;
      if (java.lang.Double.doubleToLongBits(getLookupFreqSpan())
          != java.lang.Double.doubleToLongBits(
              other.getLookupFreqSpan())) return false;
      if (getSmoothRange()
          != other.getSmoothRange()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NOISE_VARIANCE_SCALE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getNoiseVarianceScale());
      hash = (37 * hash) + NOISE_MAX_VARIANCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getNoiseMaxVariance());
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOffset());
      hash = (37 * hash) + LOOKUP_FREQ_SPAN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLookupFreqSpan()));
      hash = (37 * hash) + SMOOTH_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getSmoothRange();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *邻值比较门限
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.NeighborVarThresholdParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.NeighborVarThresholdParam)
        zb.dcts.scenario.detection.Detection.NeighborVarThresholdParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.class, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        noiseVarianceScale_ = 0F;

        noiseMaxVariance_ = 0F;

        offset_ = 0F;

        lookupFreqSpan_ = 0D;

        smoothRange_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam build() {
        zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam buildPartial() {
        zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam result = new zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam(this);
        result.noiseVarianceScale_ = noiseVarianceScale_;
        result.noiseMaxVariance_ = noiseMaxVariance_;
        result.offset_ = offset_;
        result.lookupFreqSpan_ = lookupFreqSpan_;
        result.smoothRange_ = smoothRange_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam other) {
        if (other == zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.getDefaultInstance()) return this;
        if (other.getNoiseVarianceScale() != 0F) {
          setNoiseVarianceScale(other.getNoiseVarianceScale());
        }
        if (other.getNoiseMaxVariance() != 0F) {
          setNoiseMaxVariance(other.getNoiseMaxVariance());
        }
        if (other.getOffset() != 0F) {
          setOffset(other.getOffset());
        }
        if (other.getLookupFreqSpan() != 0D) {
          setLookupFreqSpan(other.getLookupFreqSpan());
        }
        if (other.getSmoothRange() != 0) {
          setSmoothRange(other.getSmoothRange());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float noiseVarianceScale_ ;
      /**
       * <pre>
       *区分信噪的噪声标准差差倍数
       * </pre>
       *
       * <code>float noise_variance_scale = 1;</code>
       * @return The noiseVarianceScale.
       */
      @java.lang.Override
      public float getNoiseVarianceScale() {
        return noiseVarianceScale_;
      }
      /**
       * <pre>
       *区分信噪的噪声标准差差倍数
       * </pre>
       *
       * <code>float noise_variance_scale = 1;</code>
       * @param value The noiseVarianceScale to set.
       * @return This builder for chaining.
       */
      public Builder setNoiseVarianceScale(float value) {
        
        noiseVarianceScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区分信噪的噪声标准差差倍数
       * </pre>
       *
       * <code>float noise_variance_scale = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNoiseVarianceScale() {
        
        noiseVarianceScale_ = 0F;
        onChanged();
        return this;
      }

      private float noiseMaxVariance_ ;
      /**
       * <pre>
       *计算噪声标准差时，噪声偏移阈值
       * </pre>
       *
       * <code>float noise_max_variance = 2;</code>
       * @return The noiseMaxVariance.
       */
      @java.lang.Override
      public float getNoiseMaxVariance() {
        return noiseMaxVariance_;
      }
      /**
       * <pre>
       *计算噪声标准差时，噪声偏移阈值
       * </pre>
       *
       * <code>float noise_max_variance = 2;</code>
       * @param value The noiseMaxVariance to set.
       * @return This builder for chaining.
       */
      public Builder setNoiseMaxVariance(float value) {
        
        noiseMaxVariance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *计算噪声标准差时，噪声偏移阈值
       * </pre>
       *
       * <code>float noise_max_variance = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNoiseMaxVariance() {
        
        noiseMaxVariance_ = 0F;
        onChanged();
        return this;
      }

      private float offset_ ;
      /**
       * <pre>
       *门限偏移
       * </pre>
       *
       * <code>float offset = 3;</code>
       * @return The offset.
       */
      @java.lang.Override
      public float getOffset() {
        return offset_;
      }
      /**
       * <pre>
       *门限偏移
       * </pre>
       *
       * <code>float offset = 3;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(float value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *门限偏移
       * </pre>
       *
       * <code>float offset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        
        offset_ = 0F;
        onChanged();
        return this;
      }

      private double lookupFreqSpan_ ;
      /**
       * <pre>
       *估计噪声方差的频段宽度
       * </pre>
       *
       * <code>double lookup_freq_span = 4;</code>
       * @return The lookupFreqSpan.
       */
      @java.lang.Override
      public double getLookupFreqSpan() {
        return lookupFreqSpan_;
      }
      /**
       * <pre>
       *估计噪声方差的频段宽度
       * </pre>
       *
       * <code>double lookup_freq_span = 4;</code>
       * @param value The lookupFreqSpan to set.
       * @return This builder for chaining.
       */
      public Builder setLookupFreqSpan(double value) {
        
        lookupFreqSpan_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *估计噪声方差的频段宽度
       * </pre>
       *
       * <code>double lookup_freq_span = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLookupFreqSpan() {
        
        lookupFreqSpan_ = 0D;
        onChanged();
        return this;
      }

      private int smoothRange_ ;
      /**
       * <pre>
       *平滑点数范围
       * </pre>
       *
       * <code>int32 smooth_range = 5;</code>
       * @return The smoothRange.
       */
      @java.lang.Override
      public int getSmoothRange() {
        return smoothRange_;
      }
      /**
       * <pre>
       *平滑点数范围
       * </pre>
       *
       * <code>int32 smooth_range = 5;</code>
       * @param value The smoothRange to set.
       * @return This builder for chaining.
       */
      public Builder setSmoothRange(int value) {
        
        smoothRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *平滑点数范围
       * </pre>
       *
       * <code>int32 smooth_range = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSmoothRange() {
        
        smoothRange_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.NeighborVarThresholdParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.NeighborVarThresholdParam)
    private static final zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam();
    }

    public static zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NeighborVarThresholdParam>
        PARSER = new com.google.protobuf.AbstractParser<NeighborVarThresholdParam>() {
      @java.lang.Override
      public NeighborVarThresholdParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NeighborVarThresholdParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NeighborVarThresholdParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NeighborVarThresholdParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EnergyDetectionParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.EnergyDetectionParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @return A list containing the activeTypes.
     */
    java.util.List<zb.dcts.scenario.detection.Detection.ThresholdType> getActiveTypesList();
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @return The count of activeTypes.
     */
    int getActiveTypesCount();
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @param index The index of the element to return.
     * @return The activeTypes at the given index.
     */
    zb.dcts.scenario.detection.Detection.ThresholdType getActiveTypes(int index);
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @return A list containing the enum numeric values on the wire for activeTypes.
     */
    java.util.List<java.lang.Integer>
    getActiveTypesValueList();
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of activeTypes at the given index.
     */
    int getActiveTypesValue(int index);

    /**
     * <pre>
     *复合门限的逻辑关系
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
     * @return The enum numeric value on the wire for logic.
     */
    int getLogicValue();
    /**
     * <pre>
     *复合门限的逻辑关系
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
     * @return The logic.
     */
    zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType getLogic();

    /**
     * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
     * @return Whether the historyThreshold field is set.
     */
    boolean hasHistoryThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
     * @return The historyThreshold.
     */
    zb.dcts.scenario.detection.Detection.HistoryThresholdParam getHistoryThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
     */
    zb.dcts.scenario.detection.Detection.HistoryThresholdParamOrBuilder getHistoryThresholdOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
     * @return Whether the userThreshold field is set.
     */
    boolean hasUserThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
     * @return The userThreshold.
     */
    zb.dcts.scenario.detection.Detection.UserThresholdParam getUserThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
     */
    zb.dcts.scenario.detection.Detection.UserThresholdParamOrBuilder getUserThresholdOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
     * @return Whether the adaptiveThreshold field is set.
     */
    boolean hasAdaptiveThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
     * @return The adaptiveThreshold.
     */
    zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam getAdaptiveThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
     */
    zb.dcts.scenario.detection.Detection.AdaptiveThresholdParamOrBuilder getAdaptiveThresholdOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
     * @return Whether the neighborThreshold field is set.
     */
    boolean hasNeighborThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
     * @return The neighborThreshold.
     */
    zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam getNeighborThreshold();
    /**
     * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
     */
    zb.dcts.scenario.detection.Detection.NeighborVarThresholdParamOrBuilder getNeighborThresholdOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.EnergyDetectionParam}
   */
  public static final class EnergyDetectionParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.EnergyDetectionParam)
      EnergyDetectionParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EnergyDetectionParam.newBuilder() to construct.
    private EnergyDetectionParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EnergyDetectionParam() {
      activeTypes_ = java.util.Collections.emptyList();
      logic_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EnergyDetectionParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EnergyDetectionParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                activeTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              activeTypes_.add(rawValue);
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  activeTypes_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                activeTypes_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              logic_ = rawValue;
              break;
            }
            case 42: {
              zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder subBuilder = null;
              if (historyThreshold_ != null) {
                subBuilder = historyThreshold_.toBuilder();
              }
              historyThreshold_ = input.readMessage(zb.dcts.scenario.detection.Detection.HistoryThresholdParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(historyThreshold_);
                historyThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder subBuilder = null;
              if (userThreshold_ != null) {
                subBuilder = userThreshold_.toBuilder();
              }
              userThreshold_ = input.readMessage(zb.dcts.scenario.detection.Detection.UserThresholdParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userThreshold_);
                userThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder subBuilder = null;
              if (adaptiveThreshold_ != null) {
                subBuilder = adaptiveThreshold_.toBuilder();
              }
              adaptiveThreshold_ = input.readMessage(zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(adaptiveThreshold_);
                adaptiveThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder subBuilder = null;
              if (neighborThreshold_ != null) {
                subBuilder = neighborThreshold_.toBuilder();
              }
              neighborThreshold_ = input.readMessage(zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(neighborThreshold_);
                neighborThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          activeTypes_ = java.util.Collections.unmodifiableList(activeTypes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.EnergyDetectionParam.class, zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder.class);
    }

    /**
     * Protobuf enum {@code zb.dcts.scenario.detection.EnergyDetectionParam.LogicType}
     */
    public enum LogicType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       *所有门限都超过，才算
       * </pre>
       *
       * <code>LT_AND = 0;</code>
       */
      LT_AND(0),
      /**
       * <pre>
       *只要超过任意门限，就算
       * </pre>
       *
       * <code>LT_OR = 1;</code>
       */
      LT_OR(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       *所有门限都超过，才算
       * </pre>
       *
       * <code>LT_AND = 0;</code>
       */
      public static final int LT_AND_VALUE = 0;
      /**
       * <pre>
       *只要超过任意门限，就算
       * </pre>
       *
       * <code>LT_OR = 1;</code>
       */
      public static final int LT_OR_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogicType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LogicType forNumber(int value) {
        switch (value) {
          case 0: return LT_AND;
          case 1: return LT_OR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogicType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogicType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogicType>() {
              public LogicType findValueByNumber(int number) {
                return LogicType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.EnergyDetectionParam.getDescriptor().getEnumTypes().get(0);
      }

      private static final LogicType[] VALUES = values();

      public static LogicType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogicType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:zb.dcts.scenario.detection.EnergyDetectionParam.LogicType)
    }

    public static final int ACTIVE_TYPES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> activeTypes_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, zb.dcts.scenario.detection.Detection.ThresholdType> activeTypes_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, zb.dcts.scenario.detection.Detection.ThresholdType>() {
              public zb.dcts.scenario.detection.Detection.ThresholdType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                zb.dcts.scenario.detection.Detection.ThresholdType result = zb.dcts.scenario.detection.Detection.ThresholdType.valueOf(from);
                return result == null ? zb.dcts.scenario.detection.Detection.ThresholdType.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @return A list containing the activeTypes.
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.ThresholdType> getActiveTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, zb.dcts.scenario.detection.Detection.ThresholdType>(activeTypes_, activeTypes_converter_);
    }
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @return The count of activeTypes.
     */
    @java.lang.Override
    public int getActiveTypesCount() {
      return activeTypes_.size();
    }
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @param index The index of the element to return.
     * @return The activeTypes at the given index.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ThresholdType getActiveTypes(int index) {
      return activeTypes_converter_.convert(activeTypes_.get(index));
    }
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @return A list containing the enum numeric values on the wire for activeTypes.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getActiveTypesValueList() {
      return activeTypes_;
    }
    /**
     * <pre>
     *使能的门限类型，可复选历史、用户定义、自适应
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of activeTypes at the given index.
     */
    @java.lang.Override
    public int getActiveTypesValue(int index) {
      return activeTypes_.get(index);
    }
    private int activeTypesMemoizedSerializedSize;

    public static final int LOGIC_FIELD_NUMBER = 2;
    private int logic_;
    /**
     * <pre>
     *复合门限的逻辑关系
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
     * @return The enum numeric value on the wire for logic.
     */
    @java.lang.Override public int getLogicValue() {
      return logic_;
    }
    /**
     * <pre>
     *复合门限的逻辑关系
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
     * @return The logic.
     */
    @java.lang.Override public zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType getLogic() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType result = zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType.valueOf(logic_);
      return result == null ? zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType.UNRECOGNIZED : result;
    }

    public static final int HISTORY_THRESHOLD_FIELD_NUMBER = 5;
    private zb.dcts.scenario.detection.Detection.HistoryThresholdParam historyThreshold_;
    /**
     * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
     * @return Whether the historyThreshold field is set.
     */
    @java.lang.Override
    public boolean hasHistoryThreshold() {
      return historyThreshold_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
     * @return The historyThreshold.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HistoryThresholdParam getHistoryThreshold() {
      return historyThreshold_ == null ? zb.dcts.scenario.detection.Detection.HistoryThresholdParam.getDefaultInstance() : historyThreshold_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HistoryThresholdParamOrBuilder getHistoryThresholdOrBuilder() {
      return getHistoryThreshold();
    }

    public static final int USER_THRESHOLD_FIELD_NUMBER = 6;
    private zb.dcts.scenario.detection.Detection.UserThresholdParam userThreshold_;
    /**
     * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
     * @return Whether the userThreshold field is set.
     */
    @java.lang.Override
    public boolean hasUserThreshold() {
      return userThreshold_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
     * @return The userThreshold.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.UserThresholdParam getUserThreshold() {
      return userThreshold_ == null ? zb.dcts.scenario.detection.Detection.UserThresholdParam.getDefaultInstance() : userThreshold_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.UserThresholdParamOrBuilder getUserThresholdOrBuilder() {
      return getUserThreshold();
    }

    public static final int ADAPTIVE_THRESHOLD_FIELD_NUMBER = 7;
    private zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam adaptiveThreshold_;
    /**
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
     * @return Whether the adaptiveThreshold field is set.
     */
    @java.lang.Override
    public boolean hasAdaptiveThreshold() {
      return adaptiveThreshold_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
     * @return The adaptiveThreshold.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam getAdaptiveThreshold() {
      return adaptiveThreshold_ == null ? zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.getDefaultInstance() : adaptiveThreshold_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParamOrBuilder getAdaptiveThresholdOrBuilder() {
      return getAdaptiveThreshold();
    }

    public static final int NEIGHBOR_THRESHOLD_FIELD_NUMBER = 9;
    private zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam neighborThreshold_;
    /**
     * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
     * @return Whether the neighborThreshold field is set.
     */
    @java.lang.Override
    public boolean hasNeighborThreshold() {
      return neighborThreshold_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
     * @return The neighborThreshold.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam getNeighborThreshold() {
      return neighborThreshold_ == null ? zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.getDefaultInstance() : neighborThreshold_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParamOrBuilder getNeighborThresholdOrBuilder() {
      return getNeighborThreshold();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getActiveTypesList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(activeTypesMemoizedSerializedSize);
      }
      for (int i = 0; i < activeTypes_.size(); i++) {
        output.writeEnumNoTag(activeTypes_.get(i));
      }
      if (logic_ != zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType.LT_AND.getNumber()) {
        output.writeEnum(2, logic_);
      }
      if (historyThreshold_ != null) {
        output.writeMessage(5, getHistoryThreshold());
      }
      if (userThreshold_ != null) {
        output.writeMessage(6, getUserThreshold());
      }
      if (adaptiveThreshold_ != null) {
        output.writeMessage(7, getAdaptiveThreshold());
      }
      if (neighborThreshold_ != null) {
        output.writeMessage(9, getNeighborThreshold());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < activeTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(activeTypes_.get(i));
        }
        size += dataSize;
        if (!getActiveTypesList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }activeTypesMemoizedSerializedSize = dataSize;
      }
      if (logic_ != zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType.LT_AND.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, logic_);
      }
      if (historyThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHistoryThreshold());
      }
      if (userThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getUserThreshold());
      }
      if (adaptiveThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getAdaptiveThreshold());
      }
      if (neighborThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getNeighborThreshold());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.EnergyDetectionParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.EnergyDetectionParam other = (zb.dcts.scenario.detection.Detection.EnergyDetectionParam) obj;

      if (!activeTypes_.equals(other.activeTypes_)) return false;
      if (logic_ != other.logic_) return false;
      if (hasHistoryThreshold() != other.hasHistoryThreshold()) return false;
      if (hasHistoryThreshold()) {
        if (!getHistoryThreshold()
            .equals(other.getHistoryThreshold())) return false;
      }
      if (hasUserThreshold() != other.hasUserThreshold()) return false;
      if (hasUserThreshold()) {
        if (!getUserThreshold()
            .equals(other.getUserThreshold())) return false;
      }
      if (hasAdaptiveThreshold() != other.hasAdaptiveThreshold()) return false;
      if (hasAdaptiveThreshold()) {
        if (!getAdaptiveThreshold()
            .equals(other.getAdaptiveThreshold())) return false;
      }
      if (hasNeighborThreshold() != other.hasNeighborThreshold()) return false;
      if (hasNeighborThreshold()) {
        if (!getNeighborThreshold()
            .equals(other.getNeighborThreshold())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getActiveTypesCount() > 0) {
        hash = (37 * hash) + ACTIVE_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + activeTypes_.hashCode();
      }
      hash = (37 * hash) + LOGIC_FIELD_NUMBER;
      hash = (53 * hash) + logic_;
      if (hasHistoryThreshold()) {
        hash = (37 * hash) + HISTORY_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryThreshold().hashCode();
      }
      if (hasUserThreshold()) {
        hash = (37 * hash) + USER_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getUserThreshold().hashCode();
      }
      if (hasAdaptiveThreshold()) {
        hash = (37 * hash) + ADAPTIVE_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getAdaptiveThreshold().hashCode();
      }
      if (hasNeighborThreshold()) {
        hash = (37 * hash) + NEIGHBOR_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborThreshold().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.EnergyDetectionParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.EnergyDetectionParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.EnergyDetectionParam)
        zb.dcts.scenario.detection.Detection.EnergyDetectionParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.EnergyDetectionParam.class, zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.EnergyDetectionParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        activeTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        logic_ = 0;

        if (historyThresholdBuilder_ == null) {
          historyThreshold_ = null;
        } else {
          historyThreshold_ = null;
          historyThresholdBuilder_ = null;
        }
        if (userThresholdBuilder_ == null) {
          userThreshold_ = null;
        } else {
          userThreshold_ = null;
          userThresholdBuilder_ = null;
        }
        if (adaptiveThresholdBuilder_ == null) {
          adaptiveThreshold_ = null;
        } else {
          adaptiveThreshold_ = null;
          adaptiveThresholdBuilder_ = null;
        }
        if (neighborThresholdBuilder_ == null) {
          neighborThreshold_ = null;
        } else {
          neighborThreshold_ = null;
          neighborThresholdBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.EnergyDetectionParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.EnergyDetectionParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.EnergyDetectionParam build() {
        zb.dcts.scenario.detection.Detection.EnergyDetectionParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.EnergyDetectionParam buildPartial() {
        zb.dcts.scenario.detection.Detection.EnergyDetectionParam result = new zb.dcts.scenario.detection.Detection.EnergyDetectionParam(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          activeTypes_ = java.util.Collections.unmodifiableList(activeTypes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.activeTypes_ = activeTypes_;
        result.logic_ = logic_;
        if (historyThresholdBuilder_ == null) {
          result.historyThreshold_ = historyThreshold_;
        } else {
          result.historyThreshold_ = historyThresholdBuilder_.build();
        }
        if (userThresholdBuilder_ == null) {
          result.userThreshold_ = userThreshold_;
        } else {
          result.userThreshold_ = userThresholdBuilder_.build();
        }
        if (adaptiveThresholdBuilder_ == null) {
          result.adaptiveThreshold_ = adaptiveThreshold_;
        } else {
          result.adaptiveThreshold_ = adaptiveThresholdBuilder_.build();
        }
        if (neighborThresholdBuilder_ == null) {
          result.neighborThreshold_ = neighborThreshold_;
        } else {
          result.neighborThreshold_ = neighborThresholdBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.EnergyDetectionParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.EnergyDetectionParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.EnergyDetectionParam other) {
        if (other == zb.dcts.scenario.detection.Detection.EnergyDetectionParam.getDefaultInstance()) return this;
        if (!other.activeTypes_.isEmpty()) {
          if (activeTypes_.isEmpty()) {
            activeTypes_ = other.activeTypes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureActiveTypesIsMutable();
            activeTypes_.addAll(other.activeTypes_);
          }
          onChanged();
        }
        if (other.logic_ != 0) {
          setLogicValue(other.getLogicValue());
        }
        if (other.hasHistoryThreshold()) {
          mergeHistoryThreshold(other.getHistoryThreshold());
        }
        if (other.hasUserThreshold()) {
          mergeUserThreshold(other.getUserThreshold());
        }
        if (other.hasAdaptiveThreshold()) {
          mergeAdaptiveThreshold(other.getAdaptiveThreshold());
        }
        if (other.hasNeighborThreshold()) {
          mergeNeighborThreshold(other.getNeighborThreshold());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.EnergyDetectionParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.EnergyDetectionParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> activeTypes_ =
        java.util.Collections.emptyList();
      private void ensureActiveTypesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          activeTypes_ = new java.util.ArrayList<java.lang.Integer>(activeTypes_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @return A list containing the activeTypes.
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.ThresholdType> getActiveTypesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, zb.dcts.scenario.detection.Detection.ThresholdType>(activeTypes_, activeTypes_converter_);
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @return The count of activeTypes.
       */
      public int getActiveTypesCount() {
        return activeTypes_.size();
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param index The index of the element to return.
       * @return The activeTypes at the given index.
       */
      public zb.dcts.scenario.detection.Detection.ThresholdType getActiveTypes(int index) {
        return activeTypes_converter_.convert(activeTypes_.get(index));
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param index The index to set the value at.
       * @param value The activeTypes to set.
       * @return This builder for chaining.
       */
      public Builder setActiveTypes(
          int index, zb.dcts.scenario.detection.Detection.ThresholdType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActiveTypesIsMutable();
        activeTypes_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param value The activeTypes to add.
       * @return This builder for chaining.
       */
      public Builder addActiveTypes(zb.dcts.scenario.detection.Detection.ThresholdType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActiveTypesIsMutable();
        activeTypes_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param values The activeTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllActiveTypes(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.ThresholdType> values) {
        ensureActiveTypesIsMutable();
        for (zb.dcts.scenario.detection.Detection.ThresholdType value : values) {
          activeTypes_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearActiveTypes() {
        activeTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @return A list containing the enum numeric values on the wire for activeTypes.
       */
      public java.util.List<java.lang.Integer>
      getActiveTypesValueList() {
        return java.util.Collections.unmodifiableList(activeTypes_);
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of activeTypes at the given index.
       */
      public int getActiveTypesValue(int index) {
        return activeTypes_.get(index);
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of activeTypes at the given index.
       * @return This builder for chaining.
       */
      public Builder setActiveTypesValue(
          int index, int value) {
        ensureActiveTypesIsMutable();
        activeTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param value The enum numeric value on the wire for activeTypes to add.
       * @return This builder for chaining.
       */
      public Builder addActiveTypesValue(int value) {
        ensureActiveTypesIsMutable();
        activeTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使能的门限类型，可复选历史、用户定义、自适应
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.ThresholdType active_types = 1;</code>
       * @param values The enum numeric values on the wire for activeTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllActiveTypesValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureActiveTypesIsMutable();
        for (int value : values) {
          activeTypes_.add(value);
        }
        onChanged();
        return this;
      }

      private int logic_ = 0;
      /**
       * <pre>
       *复合门限的逻辑关系
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
       * @return The enum numeric value on the wire for logic.
       */
      @java.lang.Override public int getLogicValue() {
        return logic_;
      }
      /**
       * <pre>
       *复合门限的逻辑关系
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
       * @param value The enum numeric value on the wire for logic to set.
       * @return This builder for chaining.
       */
      public Builder setLogicValue(int value) {
        
        logic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *复合门限的逻辑关系
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
       * @return The logic.
       */
      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType getLogic() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType result = zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType.valueOf(logic_);
        return result == null ? zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *复合门限的逻辑关系
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
       * @param value The logic to set.
       * @return This builder for chaining.
       */
      public Builder setLogic(zb.dcts.scenario.detection.Detection.EnergyDetectionParam.LogicType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        logic_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *复合门限的逻辑关系
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType logic = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogic() {
        
        logic_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.scenario.detection.Detection.HistoryThresholdParam historyThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HistoryThresholdParam, zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder, zb.dcts.scenario.detection.Detection.HistoryThresholdParamOrBuilder> historyThresholdBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       * @return Whether the historyThreshold field is set.
       */
      public boolean hasHistoryThreshold() {
        return historyThresholdBuilder_ != null || historyThreshold_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       * @return The historyThreshold.
       */
      public zb.dcts.scenario.detection.Detection.HistoryThresholdParam getHistoryThreshold() {
        if (historyThresholdBuilder_ == null) {
          return historyThreshold_ == null ? zb.dcts.scenario.detection.Detection.HistoryThresholdParam.getDefaultInstance() : historyThreshold_;
        } else {
          return historyThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       */
      public Builder setHistoryThreshold(zb.dcts.scenario.detection.Detection.HistoryThresholdParam value) {
        if (historyThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          historyThreshold_ = value;
          onChanged();
        } else {
          historyThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       */
      public Builder setHistoryThreshold(
          zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder builderForValue) {
        if (historyThresholdBuilder_ == null) {
          historyThreshold_ = builderForValue.build();
          onChanged();
        } else {
          historyThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       */
      public Builder mergeHistoryThreshold(zb.dcts.scenario.detection.Detection.HistoryThresholdParam value) {
        if (historyThresholdBuilder_ == null) {
          if (historyThreshold_ != null) {
            historyThreshold_ =
              zb.dcts.scenario.detection.Detection.HistoryThresholdParam.newBuilder(historyThreshold_).mergeFrom(value).buildPartial();
          } else {
            historyThreshold_ = value;
          }
          onChanged();
        } else {
          historyThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       */
      public Builder clearHistoryThreshold() {
        if (historyThresholdBuilder_ == null) {
          historyThreshold_ = null;
          onChanged();
        } else {
          historyThreshold_ = null;
          historyThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder getHistoryThresholdBuilder() {
        
        onChanged();
        return getHistoryThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.HistoryThresholdParamOrBuilder getHistoryThresholdOrBuilder() {
        if (historyThresholdBuilder_ != null) {
          return historyThresholdBuilder_.getMessageOrBuilder();
        } else {
          return historyThreshold_ == null ?
              zb.dcts.scenario.detection.Detection.HistoryThresholdParam.getDefaultInstance() : historyThreshold_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.HistoryThresholdParam history_threshold = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HistoryThresholdParam, zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder, zb.dcts.scenario.detection.Detection.HistoryThresholdParamOrBuilder> 
          getHistoryThresholdFieldBuilder() {
        if (historyThresholdBuilder_ == null) {
          historyThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HistoryThresholdParam, zb.dcts.scenario.detection.Detection.HistoryThresholdParam.Builder, zb.dcts.scenario.detection.Detection.HistoryThresholdParamOrBuilder>(
                  getHistoryThreshold(),
                  getParentForChildren(),
                  isClean());
          historyThreshold_ = null;
        }
        return historyThresholdBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.UserThresholdParam userThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.UserThresholdParam, zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder, zb.dcts.scenario.detection.Detection.UserThresholdParamOrBuilder> userThresholdBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       * @return Whether the userThreshold field is set.
       */
      public boolean hasUserThreshold() {
        return userThresholdBuilder_ != null || userThreshold_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       * @return The userThreshold.
       */
      public zb.dcts.scenario.detection.Detection.UserThresholdParam getUserThreshold() {
        if (userThresholdBuilder_ == null) {
          return userThreshold_ == null ? zb.dcts.scenario.detection.Detection.UserThresholdParam.getDefaultInstance() : userThreshold_;
        } else {
          return userThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       */
      public Builder setUserThreshold(zb.dcts.scenario.detection.Detection.UserThresholdParam value) {
        if (userThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userThreshold_ = value;
          onChanged();
        } else {
          userThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       */
      public Builder setUserThreshold(
          zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder builderForValue) {
        if (userThresholdBuilder_ == null) {
          userThreshold_ = builderForValue.build();
          onChanged();
        } else {
          userThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       */
      public Builder mergeUserThreshold(zb.dcts.scenario.detection.Detection.UserThresholdParam value) {
        if (userThresholdBuilder_ == null) {
          if (userThreshold_ != null) {
            userThreshold_ =
              zb.dcts.scenario.detection.Detection.UserThresholdParam.newBuilder(userThreshold_).mergeFrom(value).buildPartial();
          } else {
            userThreshold_ = value;
          }
          onChanged();
        } else {
          userThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       */
      public Builder clearUserThreshold() {
        if (userThresholdBuilder_ == null) {
          userThreshold_ = null;
          onChanged();
        } else {
          userThreshold_ = null;
          userThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       */
      public zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder getUserThresholdBuilder() {
        
        onChanged();
        return getUserThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       */
      public zb.dcts.scenario.detection.Detection.UserThresholdParamOrBuilder getUserThresholdOrBuilder() {
        if (userThresholdBuilder_ != null) {
          return userThresholdBuilder_.getMessageOrBuilder();
        } else {
          return userThreshold_ == null ?
              zb.dcts.scenario.detection.Detection.UserThresholdParam.getDefaultInstance() : userThreshold_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.UserThresholdParam user_threshold = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.UserThresholdParam, zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder, zb.dcts.scenario.detection.Detection.UserThresholdParamOrBuilder> 
          getUserThresholdFieldBuilder() {
        if (userThresholdBuilder_ == null) {
          userThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.UserThresholdParam, zb.dcts.scenario.detection.Detection.UserThresholdParam.Builder, zb.dcts.scenario.detection.Detection.UserThresholdParamOrBuilder>(
                  getUserThreshold(),
                  getParentForChildren(),
                  isClean());
          userThreshold_ = null;
        }
        return userThresholdBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam adaptiveThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParamOrBuilder> adaptiveThresholdBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       * @return Whether the adaptiveThreshold field is set.
       */
      public boolean hasAdaptiveThreshold() {
        return adaptiveThresholdBuilder_ != null || adaptiveThreshold_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       * @return The adaptiveThreshold.
       */
      public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam getAdaptiveThreshold() {
        if (adaptiveThresholdBuilder_ == null) {
          return adaptiveThreshold_ == null ? zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.getDefaultInstance() : adaptiveThreshold_;
        } else {
          return adaptiveThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       */
      public Builder setAdaptiveThreshold(zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam value) {
        if (adaptiveThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          adaptiveThreshold_ = value;
          onChanged();
        } else {
          adaptiveThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       */
      public Builder setAdaptiveThreshold(
          zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder builderForValue) {
        if (adaptiveThresholdBuilder_ == null) {
          adaptiveThreshold_ = builderForValue.build();
          onChanged();
        } else {
          adaptiveThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       */
      public Builder mergeAdaptiveThreshold(zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam value) {
        if (adaptiveThresholdBuilder_ == null) {
          if (adaptiveThreshold_ != null) {
            adaptiveThreshold_ =
              zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.newBuilder(adaptiveThreshold_).mergeFrom(value).buildPartial();
          } else {
            adaptiveThreshold_ = value;
          }
          onChanged();
        } else {
          adaptiveThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       */
      public Builder clearAdaptiveThreshold() {
        if (adaptiveThresholdBuilder_ == null) {
          adaptiveThreshold_ = null;
          onChanged();
        } else {
          adaptiveThreshold_ = null;
          adaptiveThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       */
      public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder getAdaptiveThresholdBuilder() {
        
        onChanged();
        return getAdaptiveThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       */
      public zb.dcts.scenario.detection.Detection.AdaptiveThresholdParamOrBuilder getAdaptiveThresholdOrBuilder() {
        if (adaptiveThresholdBuilder_ != null) {
          return adaptiveThresholdBuilder_.getMessageOrBuilder();
        } else {
          return adaptiveThreshold_ == null ?
              zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.getDefaultInstance() : adaptiveThreshold_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.AdaptiveThresholdParam adaptive_threshold = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParamOrBuilder> 
          getAdaptiveThresholdFieldBuilder() {
        if (adaptiveThresholdBuilder_ == null) {
          adaptiveThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParam.Builder, zb.dcts.scenario.detection.Detection.AdaptiveThresholdParamOrBuilder>(
                  getAdaptiveThreshold(),
                  getParentForChildren(),
                  isClean());
          adaptiveThreshold_ = null;
        }
        return adaptiveThresholdBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam neighborThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParamOrBuilder> neighborThresholdBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       * @return Whether the neighborThreshold field is set.
       */
      public boolean hasNeighborThreshold() {
        return neighborThresholdBuilder_ != null || neighborThreshold_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       * @return The neighborThreshold.
       */
      public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam getNeighborThreshold() {
        if (neighborThresholdBuilder_ == null) {
          return neighborThreshold_ == null ? zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.getDefaultInstance() : neighborThreshold_;
        } else {
          return neighborThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       */
      public Builder setNeighborThreshold(zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam value) {
        if (neighborThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          neighborThreshold_ = value;
          onChanged();
        } else {
          neighborThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       */
      public Builder setNeighborThreshold(
          zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder builderForValue) {
        if (neighborThresholdBuilder_ == null) {
          neighborThreshold_ = builderForValue.build();
          onChanged();
        } else {
          neighborThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       */
      public Builder mergeNeighborThreshold(zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam value) {
        if (neighborThresholdBuilder_ == null) {
          if (neighborThreshold_ != null) {
            neighborThreshold_ =
              zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.newBuilder(neighborThreshold_).mergeFrom(value).buildPartial();
          } else {
            neighborThreshold_ = value;
          }
          onChanged();
        } else {
          neighborThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       */
      public Builder clearNeighborThreshold() {
        if (neighborThresholdBuilder_ == null) {
          neighborThreshold_ = null;
          onChanged();
        } else {
          neighborThreshold_ = null;
          neighborThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       */
      public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder getNeighborThresholdBuilder() {
        
        onChanged();
        return getNeighborThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       */
      public zb.dcts.scenario.detection.Detection.NeighborVarThresholdParamOrBuilder getNeighborThresholdOrBuilder() {
        if (neighborThresholdBuilder_ != null) {
          return neighborThresholdBuilder_.getMessageOrBuilder();
        } else {
          return neighborThreshold_ == null ?
              zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.getDefaultInstance() : neighborThreshold_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.NeighborVarThresholdParam neighbor_threshold = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParamOrBuilder> 
          getNeighborThresholdFieldBuilder() {
        if (neighborThresholdBuilder_ == null) {
          neighborThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParam.Builder, zb.dcts.scenario.detection.Detection.NeighborVarThresholdParamOrBuilder>(
                  getNeighborThreshold(),
                  getParentForChildren(),
                  isClean());
          neighborThreshold_ = null;
        }
        return neighborThresholdBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.EnergyDetectionParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.EnergyDetectionParam)
    private static final zb.dcts.scenario.detection.Detection.EnergyDetectionParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.EnergyDetectionParam();
    }

    public static zb.dcts.scenario.detection.Detection.EnergyDetectionParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EnergyDetectionParam>
        PARSER = new com.google.protobuf.AbstractParser<EnergyDetectionParam>() {
      @java.lang.Override
      public EnergyDetectionParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnergyDetectionParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EnergyDetectionParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EnergyDetectionParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.EnergyDetectionParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThresholdTraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.ThresholdTrace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
     * @return The type.
     */
    zb.dcts.scenario.detection.Detection.ThresholdType getType();

    /**
     * <code>repeated float threshold_trace = 2;</code>
     * @return A list containing the thresholdTrace.
     */
    java.util.List<java.lang.Float> getThresholdTraceList();
    /**
     * <code>repeated float threshold_trace = 2;</code>
     * @return The count of thresholdTrace.
     */
    int getThresholdTraceCount();
    /**
     * <code>repeated float threshold_trace = 2;</code>
     * @param index The index of the element to return.
     * @return The thresholdTrace at the given index.
     */
    float getThresholdTrace(int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.ThresholdTrace}
   */
  public static final class ThresholdTrace extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.ThresholdTrace)
      ThresholdTraceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ThresholdTrace.newBuilder() to construct.
    private ThresholdTrace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThresholdTrace() {
      type_ = 0;
      thresholdTrace_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ThresholdTrace();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ThresholdTrace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                thresholdTrace_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              thresholdTrace_.addFloat(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                thresholdTrace_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                thresholdTrace_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          thresholdTrace_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdTrace_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.ThresholdTrace.class, zb.dcts.scenario.detection.Detection.ThresholdTrace.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public zb.dcts.scenario.detection.Detection.ThresholdType getType() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.detection.Detection.ThresholdType result = zb.dcts.scenario.detection.Detection.ThresholdType.valueOf(type_);
      return result == null ? zb.dcts.scenario.detection.Detection.ThresholdType.UNRECOGNIZED : result;
    }

    public static final int THRESHOLD_TRACE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.FloatList thresholdTrace_;
    /**
     * <code>repeated float threshold_trace = 2;</code>
     * @return A list containing the thresholdTrace.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getThresholdTraceList() {
      return thresholdTrace_;
    }
    /**
     * <code>repeated float threshold_trace = 2;</code>
     * @return The count of thresholdTrace.
     */
    public int getThresholdTraceCount() {
      return thresholdTrace_.size();
    }
    /**
     * <code>repeated float threshold_trace = 2;</code>
     * @param index The index of the element to return.
     * @return The thresholdTrace at the given index.
     */
    public float getThresholdTrace(int index) {
      return thresholdTrace_.getFloat(index);
    }
    private int thresholdTraceMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (type_ != zb.dcts.scenario.detection.Detection.ThresholdType.HISTORY.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (getThresholdTraceList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(thresholdTraceMemoizedSerializedSize);
      }
      for (int i = 0; i < thresholdTrace_.size(); i++) {
        output.writeFloatNoTag(thresholdTrace_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != zb.dcts.scenario.detection.Detection.ThresholdType.HISTORY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getThresholdTraceList().size();
        size += dataSize;
        if (!getThresholdTraceList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        thresholdTraceMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.ThresholdTrace)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.ThresholdTrace other = (zb.dcts.scenario.detection.Detection.ThresholdTrace) obj;

      if (type_ != other.type_) return false;
      if (!getThresholdTraceList()
          .equals(other.getThresholdTraceList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (getThresholdTraceCount() > 0) {
        hash = (37 * hash) + THRESHOLD_TRACE_FIELD_NUMBER;
        hash = (53 * hash) + getThresholdTraceList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ThresholdTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.ThresholdTrace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.ThresholdTrace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.ThresholdTrace)
        zb.dcts.scenario.detection.Detection.ThresholdTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdTrace_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.ThresholdTrace.class, zb.dcts.scenario.detection.Detection.ThresholdTrace.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.ThresholdTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        thresholdTrace_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ThresholdTrace_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ThresholdTrace getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.ThresholdTrace.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ThresholdTrace build() {
        zb.dcts.scenario.detection.Detection.ThresholdTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ThresholdTrace buildPartial() {
        zb.dcts.scenario.detection.Detection.ThresholdTrace result = new zb.dcts.scenario.detection.Detection.ThresholdTrace(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        if (((bitField0_ & 0x00000001) != 0)) {
          thresholdTrace_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.thresholdTrace_ = thresholdTrace_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.ThresholdTrace) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.ThresholdTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.ThresholdTrace other) {
        if (other == zb.dcts.scenario.detection.Detection.ThresholdTrace.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.thresholdTrace_.isEmpty()) {
          if (thresholdTrace_.isEmpty()) {
            thresholdTrace_ = other.thresholdTrace_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureThresholdTraceIsMutable();
            thresholdTrace_.addAll(other.thresholdTrace_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.ThresholdTrace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.ThresholdTrace) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ThresholdType getType() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.detection.Detection.ThresholdType result = zb.dcts.scenario.detection.Detection.ThresholdType.valueOf(type_);
        return result == null ? zb.dcts.scenario.detection.Detection.ThresholdType.UNRECOGNIZED : result;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(zb.dcts.scenario.detection.Detection.ThresholdType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ThresholdType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList thresholdTrace_ = emptyFloatList();
      private void ensureThresholdTraceIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          thresholdTrace_ = mutableCopy(thresholdTrace_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float threshold_trace = 2;</code>
       * @return A list containing the thresholdTrace.
       */
      public java.util.List<java.lang.Float>
          getThresholdTraceList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(thresholdTrace_) : thresholdTrace_;
      }
      /**
       * <code>repeated float threshold_trace = 2;</code>
       * @return The count of thresholdTrace.
       */
      public int getThresholdTraceCount() {
        return thresholdTrace_.size();
      }
      /**
       * <code>repeated float threshold_trace = 2;</code>
       * @param index The index of the element to return.
       * @return The thresholdTrace at the given index.
       */
      public float getThresholdTrace(int index) {
        return thresholdTrace_.getFloat(index);
      }
      /**
       * <code>repeated float threshold_trace = 2;</code>
       * @param index The index to set the value at.
       * @param value The thresholdTrace to set.
       * @return This builder for chaining.
       */
      public Builder setThresholdTrace(
          int index, float value) {
        ensureThresholdTraceIsMutable();
        thresholdTrace_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float threshold_trace = 2;</code>
       * @param value The thresholdTrace to add.
       * @return This builder for chaining.
       */
      public Builder addThresholdTrace(float value) {
        ensureThresholdTraceIsMutable();
        thresholdTrace_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float threshold_trace = 2;</code>
       * @param values The thresholdTrace to add.
       * @return This builder for chaining.
       */
      public Builder addAllThresholdTrace(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureThresholdTraceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, thresholdTrace_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float threshold_trace = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearThresholdTrace() {
        thresholdTrace_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.ThresholdTrace)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.ThresholdTrace)
    private static final zb.dcts.scenario.detection.Detection.ThresholdTrace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.ThresholdTrace();
    }

    public static zb.dcts.scenario.detection.Detection.ThresholdTrace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThresholdTrace>
        PARSER = new com.google.protobuf.AbstractParser<ThresholdTrace>() {
      @java.lang.Override
      public ThresholdTrace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ThresholdTrace(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ThresholdTrace> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThresholdTrace> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ThresholdTrace getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FreqSpanFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.FreqSpanFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    java.util.List<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan> 
        getFreqSpansList();
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpans(int index);
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    int getFreqSpansCount();
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    java.util.List<? extends zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
        getFreqSpansOrBuilderList();
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpansOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.FreqSpanFilter}
   */
  public static final class FreqSpanFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.FreqSpanFilter)
      FreqSpanFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FreqSpanFilter.newBuilder() to construct.
    private FreqSpanFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FreqSpanFilter() {
      freqSpans_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FreqSpanFilter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FreqSpanFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                freqSpans_ = new java.util.ArrayList<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan>();
                mutable_bitField0_ |= 0x00000001;
              }
              freqSpans_.add(
                  input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          freqSpans_ = java.util.Collections.unmodifiableList(freqSpans_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FreqSpanFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FreqSpanFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.FreqSpanFilter.class, zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder.class);
    }

    public static final int FREQ_SPANS_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan> freqSpans_;
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan> getFreqSpansList() {
      return freqSpans_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
        getFreqSpansOrBuilderList() {
      return freqSpans_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    @java.lang.Override
    public int getFreqSpansCount() {
      return freqSpans_.size();
    }
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpans(int index) {
      return freqSpans_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpansOrBuilder(
        int index) {
      return freqSpans_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < freqSpans_.size(); i++) {
        output.writeMessage(1, freqSpans_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < freqSpans_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, freqSpans_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.FreqSpanFilter)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.FreqSpanFilter other = (zb.dcts.scenario.detection.Detection.FreqSpanFilter) obj;

      if (!getFreqSpansList()
          .equals(other.getFreqSpansList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFreqSpansCount() > 0) {
        hash = (37 * hash) + FREQ_SPANS_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSpansList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.FreqSpanFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.FreqSpanFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.FreqSpanFilter)
        zb.dcts.scenario.detection.Detection.FreqSpanFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FreqSpanFilter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FreqSpanFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.FreqSpanFilter.class, zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.FreqSpanFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFreqSpansFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (freqSpansBuilder_ == null) {
          freqSpans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          freqSpansBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FreqSpanFilter_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.FreqSpanFilter getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.FreqSpanFilter.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.FreqSpanFilter build() {
        zb.dcts.scenario.detection.Detection.FreqSpanFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.FreqSpanFilter buildPartial() {
        zb.dcts.scenario.detection.Detection.FreqSpanFilter result = new zb.dcts.scenario.detection.Detection.FreqSpanFilter(this);
        int from_bitField0_ = bitField0_;
        if (freqSpansBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            freqSpans_ = java.util.Collections.unmodifiableList(freqSpans_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.freqSpans_ = freqSpans_;
        } else {
          result.freqSpans_ = freqSpansBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.FreqSpanFilter) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.FreqSpanFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.FreqSpanFilter other) {
        if (other == zb.dcts.scenario.detection.Detection.FreqSpanFilter.getDefaultInstance()) return this;
        if (freqSpansBuilder_ == null) {
          if (!other.freqSpans_.isEmpty()) {
            if (freqSpans_.isEmpty()) {
              freqSpans_ = other.freqSpans_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFreqSpansIsMutable();
              freqSpans_.addAll(other.freqSpans_);
            }
            onChanged();
          }
        } else {
          if (!other.freqSpans_.isEmpty()) {
            if (freqSpansBuilder_.isEmpty()) {
              freqSpansBuilder_.dispose();
              freqSpansBuilder_ = null;
              freqSpans_ = other.freqSpans_;
              bitField0_ = (bitField0_ & ~0x00000001);
              freqSpansBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFreqSpansFieldBuilder() : null;
            } else {
              freqSpansBuilder_.addAllMessages(other.freqSpans_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.FreqSpanFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.FreqSpanFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan> freqSpans_ =
        java.util.Collections.emptyList();
      private void ensureFreqSpansIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          freqSpans_ = new java.util.ArrayList<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan>(freqSpans_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqSpansBuilder_;

      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan> getFreqSpansList() {
        if (freqSpansBuilder_ == null) {
          return java.util.Collections.unmodifiableList(freqSpans_);
        } else {
          return freqSpansBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public int getFreqSpansCount() {
        if (freqSpansBuilder_ == null) {
          return freqSpans_.size();
        } else {
          return freqSpansBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpans(int index) {
        if (freqSpansBuilder_ == null) {
          return freqSpans_.get(index);
        } else {
          return freqSpansBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder setFreqSpans(
          int index, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqSpansIsMutable();
          freqSpans_.set(index, value);
          onChanged();
        } else {
          freqSpansBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder setFreqSpans(
          int index, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpansBuilder_ == null) {
          ensureFreqSpansIsMutable();
          freqSpans_.set(index, builderForValue.build());
          onChanged();
        } else {
          freqSpansBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder addFreqSpans(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqSpansIsMutable();
          freqSpans_.add(value);
          onChanged();
        } else {
          freqSpansBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder addFreqSpans(
          int index, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqSpansIsMutable();
          freqSpans_.add(index, value);
          onChanged();
        } else {
          freqSpansBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder addFreqSpans(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpansBuilder_ == null) {
          ensureFreqSpansIsMutable();
          freqSpans_.add(builderForValue.build());
          onChanged();
        } else {
          freqSpansBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder addFreqSpans(
          int index, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpansBuilder_ == null) {
          ensureFreqSpansIsMutable();
          freqSpans_.add(index, builderForValue.build());
          onChanged();
        } else {
          freqSpansBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder addAllFreqSpans(
          java.lang.Iterable<? extends zb.dcts.scenario.spectrum.Spectrum.FrequencySpan> values) {
        if (freqSpansBuilder_ == null) {
          ensureFreqSpansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, freqSpans_);
          onChanged();
        } else {
          freqSpansBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder clearFreqSpans() {
        if (freqSpansBuilder_ == null) {
          freqSpans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          freqSpansBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public Builder removeFreqSpans(int index) {
        if (freqSpansBuilder_ == null) {
          ensureFreqSpansIsMutable();
          freqSpans_.remove(index);
          onChanged();
        } else {
          freqSpansBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqSpansBuilder(
          int index) {
        return getFreqSpansFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpansOrBuilder(
          int index) {
        if (freqSpansBuilder_ == null) {
          return freqSpans_.get(index);  } else {
          return freqSpansBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
           getFreqSpansOrBuilderList() {
        if (freqSpansBuilder_ != null) {
          return freqSpansBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(freqSpans_);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder addFreqSpansBuilder() {
        return getFreqSpansFieldBuilder().addBuilder(
            zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder addFreqSpansBuilder(
          int index) {
        return getFreqSpansFieldBuilder().addBuilder(
            index, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.spectrum.FrequencySpan freq_spans = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder> 
           getFreqSpansBuilderList() {
        return getFreqSpansFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqSpansFieldBuilder() {
        if (freqSpansBuilder_ == null) {
          freqSpansBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  freqSpans_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          freqSpans_ = null;
        }
        return freqSpansBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.FreqSpanFilter)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.FreqSpanFilter)
    private static final zb.dcts.scenario.detection.Detection.FreqSpanFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.FreqSpanFilter();
    }

    public static zb.dcts.scenario.detection.Detection.FreqSpanFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FreqSpanFilter>
        PARSER = new com.google.protobuf.AbstractParser<FreqSpanFilter>() {
      @java.lang.Override
      public FreqSpanFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FreqSpanFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FreqSpanFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FreqSpanFilter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.FreqSpanFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalSegmentationParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalSegmentationParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *允许的中心频率抖动，百分比(0,1)
     * </pre>
     *
     * <code>float freq_center_jitter_tolerance = 1;</code>
     * @return The freqCenterJitterTolerance.
     */
    float getFreqCenterJitterTolerance();

    /**
     * <pre>
     *相邻信号融合，允许的边界模糊区（Hz）
     * </pre>
     *
     * <code>float freq_border_blur_tolerance = 2;</code>
     * @return The freqBorderBlurTolerance.
     */
    float getFreqBorderBlurTolerance();

    /**
     * <pre>
     *允许的最小信号接收强度(dBm)
     * </pre>
     *
     * <code>float min_rss = 3;</code>
     * @return The minRss.
     */
    float getMinRss();

    /**
     * <pre>
     *时间间隙，单位ms
     * </pre>
     *
     * <code>int32 time_gap_tolerance = 4;</code>
     * @return The timeGapTolerance.
     */
    int getTimeGapTolerance();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalSegmentationParam}
   */
  public static final class SignalSegmentationParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalSegmentationParam)
      SignalSegmentationParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalSegmentationParam.newBuilder() to construct.
    private SignalSegmentationParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalSegmentationParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalSegmentationParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalSegmentationParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              freqCenterJitterTolerance_ = input.readFloat();
              break;
            }
            case 21: {

              freqBorderBlurTolerance_ = input.readFloat();
              break;
            }
            case 29: {

              minRss_ = input.readFloat();
              break;
            }
            case 32: {

              timeGapTolerance_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalSegmentationParam.class, zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder.class);
    }

    public static final int FREQ_CENTER_JITTER_TOLERANCE_FIELD_NUMBER = 1;
    private float freqCenterJitterTolerance_;
    /**
     * <pre>
     *允许的中心频率抖动，百分比(0,1)
     * </pre>
     *
     * <code>float freq_center_jitter_tolerance = 1;</code>
     * @return The freqCenterJitterTolerance.
     */
    @java.lang.Override
    public float getFreqCenterJitterTolerance() {
      return freqCenterJitterTolerance_;
    }

    public static final int FREQ_BORDER_BLUR_TOLERANCE_FIELD_NUMBER = 2;
    private float freqBorderBlurTolerance_;
    /**
     * <pre>
     *相邻信号融合，允许的边界模糊区（Hz）
     * </pre>
     *
     * <code>float freq_border_blur_tolerance = 2;</code>
     * @return The freqBorderBlurTolerance.
     */
    @java.lang.Override
    public float getFreqBorderBlurTolerance() {
      return freqBorderBlurTolerance_;
    }

    public static final int MIN_RSS_FIELD_NUMBER = 3;
    private float minRss_;
    /**
     * <pre>
     *允许的最小信号接收强度(dBm)
     * </pre>
     *
     * <code>float min_rss = 3;</code>
     * @return The minRss.
     */
    @java.lang.Override
    public float getMinRss() {
      return minRss_;
    }

    public static final int TIME_GAP_TOLERANCE_FIELD_NUMBER = 4;
    private int timeGapTolerance_;
    /**
     * <pre>
     *时间间隙，单位ms
     * </pre>
     *
     * <code>int32 time_gap_tolerance = 4;</code>
     * @return The timeGapTolerance.
     */
    @java.lang.Override
    public int getTimeGapTolerance() {
      return timeGapTolerance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (freqCenterJitterTolerance_ != 0F) {
        output.writeFloat(1, freqCenterJitterTolerance_);
      }
      if (freqBorderBlurTolerance_ != 0F) {
        output.writeFloat(2, freqBorderBlurTolerance_);
      }
      if (minRss_ != 0F) {
        output.writeFloat(3, minRss_);
      }
      if (timeGapTolerance_ != 0) {
        output.writeInt32(4, timeGapTolerance_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freqCenterJitterTolerance_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, freqCenterJitterTolerance_);
      }
      if (freqBorderBlurTolerance_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, freqBorderBlurTolerance_);
      }
      if (minRss_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, minRss_);
      }
      if (timeGapTolerance_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, timeGapTolerance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalSegmentationParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalSegmentationParam other = (zb.dcts.scenario.detection.Detection.SignalSegmentationParam) obj;

      if (java.lang.Float.floatToIntBits(getFreqCenterJitterTolerance())
          != java.lang.Float.floatToIntBits(
              other.getFreqCenterJitterTolerance())) return false;
      if (java.lang.Float.floatToIntBits(getFreqBorderBlurTolerance())
          != java.lang.Float.floatToIntBits(
              other.getFreqBorderBlurTolerance())) return false;
      if (java.lang.Float.floatToIntBits(getMinRss())
          != java.lang.Float.floatToIntBits(
              other.getMinRss())) return false;
      if (getTimeGapTolerance()
          != other.getTimeGapTolerance()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FREQ_CENTER_JITTER_TOLERANCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFreqCenterJitterTolerance());
      hash = (37 * hash) + FREQ_BORDER_BLUR_TOLERANCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFreqBorderBlurTolerance());
      hash = (37 * hash) + MIN_RSS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinRss());
      hash = (37 * hash) + TIME_GAP_TOLERANCE_FIELD_NUMBER;
      hash = (53 * hash) + getTimeGapTolerance();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalSegmentationParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalSegmentationParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalSegmentationParam)
        zb.dcts.scenario.detection.Detection.SignalSegmentationParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalSegmentationParam.class, zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalSegmentationParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        freqCenterJitterTolerance_ = 0F;

        freqBorderBlurTolerance_ = 0F;

        minRss_ = 0F;

        timeGapTolerance_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSegmentationParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalSegmentationParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSegmentationParam build() {
        zb.dcts.scenario.detection.Detection.SignalSegmentationParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSegmentationParam buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalSegmentationParam result = new zb.dcts.scenario.detection.Detection.SignalSegmentationParam(this);
        result.freqCenterJitterTolerance_ = freqCenterJitterTolerance_;
        result.freqBorderBlurTolerance_ = freqBorderBlurTolerance_;
        result.minRss_ = minRss_;
        result.timeGapTolerance_ = timeGapTolerance_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalSegmentationParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalSegmentationParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalSegmentationParam other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalSegmentationParam.getDefaultInstance()) return this;
        if (other.getFreqCenterJitterTolerance() != 0F) {
          setFreqCenterJitterTolerance(other.getFreqCenterJitterTolerance());
        }
        if (other.getFreqBorderBlurTolerance() != 0F) {
          setFreqBorderBlurTolerance(other.getFreqBorderBlurTolerance());
        }
        if (other.getMinRss() != 0F) {
          setMinRss(other.getMinRss());
        }
        if (other.getTimeGapTolerance() != 0) {
          setTimeGapTolerance(other.getTimeGapTolerance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalSegmentationParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalSegmentationParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float freqCenterJitterTolerance_ ;
      /**
       * <pre>
       *允许的中心频率抖动，百分比(0,1)
       * </pre>
       *
       * <code>float freq_center_jitter_tolerance = 1;</code>
       * @return The freqCenterJitterTolerance.
       */
      @java.lang.Override
      public float getFreqCenterJitterTolerance() {
        return freqCenterJitterTolerance_;
      }
      /**
       * <pre>
       *允许的中心频率抖动，百分比(0,1)
       * </pre>
       *
       * <code>float freq_center_jitter_tolerance = 1;</code>
       * @param value The freqCenterJitterTolerance to set.
       * @return This builder for chaining.
       */
      public Builder setFreqCenterJitterTolerance(float value) {
        
        freqCenterJitterTolerance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *允许的中心频率抖动，百分比(0,1)
       * </pre>
       *
       * <code>float freq_center_jitter_tolerance = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreqCenterJitterTolerance() {
        
        freqCenterJitterTolerance_ = 0F;
        onChanged();
        return this;
      }

      private float freqBorderBlurTolerance_ ;
      /**
       * <pre>
       *相邻信号融合，允许的边界模糊区（Hz）
       * </pre>
       *
       * <code>float freq_border_blur_tolerance = 2;</code>
       * @return The freqBorderBlurTolerance.
       */
      @java.lang.Override
      public float getFreqBorderBlurTolerance() {
        return freqBorderBlurTolerance_;
      }
      /**
       * <pre>
       *相邻信号融合，允许的边界模糊区（Hz）
       * </pre>
       *
       * <code>float freq_border_blur_tolerance = 2;</code>
       * @param value The freqBorderBlurTolerance to set.
       * @return This builder for chaining.
       */
      public Builder setFreqBorderBlurTolerance(float value) {
        
        freqBorderBlurTolerance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相邻信号融合，允许的边界模糊区（Hz）
       * </pre>
       *
       * <code>float freq_border_blur_tolerance = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreqBorderBlurTolerance() {
        
        freqBorderBlurTolerance_ = 0F;
        onChanged();
        return this;
      }

      private float minRss_ ;
      /**
       * <pre>
       *允许的最小信号接收强度(dBm)
       * </pre>
       *
       * <code>float min_rss = 3;</code>
       * @return The minRss.
       */
      @java.lang.Override
      public float getMinRss() {
        return minRss_;
      }
      /**
       * <pre>
       *允许的最小信号接收强度(dBm)
       * </pre>
       *
       * <code>float min_rss = 3;</code>
       * @param value The minRss to set.
       * @return This builder for chaining.
       */
      public Builder setMinRss(float value) {
        
        minRss_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *允许的最小信号接收强度(dBm)
       * </pre>
       *
       * <code>float min_rss = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinRss() {
        
        minRss_ = 0F;
        onChanged();
        return this;
      }

      private int timeGapTolerance_ ;
      /**
       * <pre>
       *时间间隙，单位ms
       * </pre>
       *
       * <code>int32 time_gap_tolerance = 4;</code>
       * @return The timeGapTolerance.
       */
      @java.lang.Override
      public int getTimeGapTolerance() {
        return timeGapTolerance_;
      }
      /**
       * <pre>
       *时间间隙，单位ms
       * </pre>
       *
       * <code>int32 time_gap_tolerance = 4;</code>
       * @param value The timeGapTolerance to set.
       * @return This builder for chaining.
       */
      public Builder setTimeGapTolerance(int value) {
        
        timeGapTolerance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间间隙，单位ms
       * </pre>
       *
       * <code>int32 time_gap_tolerance = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeGapTolerance() {
        
        timeGapTolerance_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalSegmentationParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSegmentationParam)
    private static final zb.dcts.scenario.detection.Detection.SignalSegmentationParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalSegmentationParam();
    }

    public static zb.dcts.scenario.detection.Detection.SignalSegmentationParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalSegmentationParam>
        PARSER = new com.google.protobuf.AbstractParser<SignalSegmentationParam>() {
      @java.lang.Override
      public SignalSegmentationParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalSegmentationParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalSegmentationParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalSegmentationParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSegmentationParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HopSignalClusterParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.HopSignalClusterParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *跳频信号所处的频率区间
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
     * @return Whether the frequencyRange field is set.
     */
    boolean hasFrequencyRange();
    /**
     * <pre>
     *跳频信号所处的频率区间
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
     * @return The frequencyRange.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFrequencyRange();
    /**
     * <pre>
     *跳频信号所处的频率区间
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFrequencyRangeOrBuilder();

    /**
     * <pre>
     *跳频信号单跳的带宽允许范围
     * </pre>
     *
     * <code>.zb.dcts.DRange band_width_range = 3;</code>
     * @return Whether the bandWidthRange field is set.
     */
    boolean hasBandWidthRange();
    /**
     * <pre>
     *跳频信号单跳的带宽允许范围
     * </pre>
     *
     * <code>.zb.dcts.DRange band_width_range = 3;</code>
     * @return The bandWidthRange.
     */
    zb.dcts.Dcts.DRange getBandWidthRange();
    /**
     * <pre>
     *跳频信号单跳的带宽允许范围
     * </pre>
     *
     * <code>.zb.dcts.DRange band_width_range = 3;</code>
     */
    zb.dcts.Dcts.DRangeOrBuilder getBandWidthRangeOrBuilder();

    /**
     * <pre>
     *单跳中心频率抖动的允许范围
     * </pre>
     *
     * <code>float freq_jitter_tolerance = 4;</code>
     * @return The freqJitterTolerance.
     */
    float getFreqJitterTolerance();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.HopSignalClusterParam}
   */
  public static final class HopSignalClusterParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.HopSignalClusterParam)
      HopSignalClusterParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HopSignalClusterParam.newBuilder() to construct.
    private HopSignalClusterParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HopSignalClusterParam() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HopSignalClusterParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HopSignalClusterParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (frequencyRange_ != null) {
                subBuilder = frequencyRange_.toBuilder();
              }
              frequencyRange_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(frequencyRange_);
                frequencyRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.Dcts.DRange.Builder subBuilder = null;
              if (bandWidthRange_ != null) {
                subBuilder = bandWidthRange_.toBuilder();
              }
              bandWidthRange_ = input.readMessage(zb.dcts.Dcts.DRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bandWidthRange_);
                bandWidthRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 37: {

              freqJitterTolerance_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.HopSignalClusterParam.class, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREQUENCY_RANGE_FIELD_NUMBER = 2;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan frequencyRange_;
    /**
     * <pre>
     *跳频信号所处的频率区间
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
     * @return Whether the frequencyRange field is set.
     */
    @java.lang.Override
    public boolean hasFrequencyRange() {
      return frequencyRange_ != null;
    }
    /**
     * <pre>
     *跳频信号所处的频率区间
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
     * @return The frequencyRange.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFrequencyRange() {
      return frequencyRange_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : frequencyRange_;
    }
    /**
     * <pre>
     *跳频信号所处的频率区间
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFrequencyRangeOrBuilder() {
      return getFrequencyRange();
    }

    public static final int BAND_WIDTH_RANGE_FIELD_NUMBER = 3;
    private zb.dcts.Dcts.DRange bandWidthRange_;
    /**
     * <pre>
     *跳频信号单跳的带宽允许范围
     * </pre>
     *
     * <code>.zb.dcts.DRange band_width_range = 3;</code>
     * @return Whether the bandWidthRange field is set.
     */
    @java.lang.Override
    public boolean hasBandWidthRange() {
      return bandWidthRange_ != null;
    }
    /**
     * <pre>
     *跳频信号单跳的带宽允许范围
     * </pre>
     *
     * <code>.zb.dcts.DRange band_width_range = 3;</code>
     * @return The bandWidthRange.
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRange getBandWidthRange() {
      return bandWidthRange_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : bandWidthRange_;
    }
    /**
     * <pre>
     *跳频信号单跳的带宽允许范围
     * </pre>
     *
     * <code>.zb.dcts.DRange band_width_range = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRangeOrBuilder getBandWidthRangeOrBuilder() {
      return getBandWidthRange();
    }

    public static final int FREQ_JITTER_TOLERANCE_FIELD_NUMBER = 4;
    private float freqJitterTolerance_;
    /**
     * <pre>
     *单跳中心频率抖动的允许范围
     * </pre>
     *
     * <code>float freq_jitter_tolerance = 4;</code>
     * @return The freqJitterTolerance.
     */
    @java.lang.Override
    public float getFreqJitterTolerance() {
      return freqJitterTolerance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (frequencyRange_ != null) {
        output.writeMessage(2, getFrequencyRange());
      }
      if (bandWidthRange_ != null) {
        output.writeMessage(3, getBandWidthRange());
      }
      if (freqJitterTolerance_ != 0F) {
        output.writeFloat(4, freqJitterTolerance_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (frequencyRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFrequencyRange());
      }
      if (bandWidthRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBandWidthRange());
      }
      if (freqJitterTolerance_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, freqJitterTolerance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.HopSignalClusterParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.HopSignalClusterParam other = (zb.dcts.scenario.detection.Detection.HopSignalClusterParam) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasFrequencyRange() != other.hasFrequencyRange()) return false;
      if (hasFrequencyRange()) {
        if (!getFrequencyRange()
            .equals(other.getFrequencyRange())) return false;
      }
      if (hasBandWidthRange() != other.hasBandWidthRange()) return false;
      if (hasBandWidthRange()) {
        if (!getBandWidthRange()
            .equals(other.getBandWidthRange())) return false;
      }
      if (java.lang.Float.floatToIntBits(getFreqJitterTolerance())
          != java.lang.Float.floatToIntBits(
              other.getFreqJitterTolerance())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasFrequencyRange()) {
        hash = (37 * hash) + FREQUENCY_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getFrequencyRange().hashCode();
      }
      if (hasBandWidthRange()) {
        hash = (37 * hash) + BAND_WIDTH_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getBandWidthRange().hashCode();
      }
      hash = (37 * hash) + FREQ_JITTER_TOLERANCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFreqJitterTolerance());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.HopSignalClusterParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.HopSignalClusterParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.HopSignalClusterParam)
        zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.HopSignalClusterParam.class, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.HopSignalClusterParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (frequencyRangeBuilder_ == null) {
          frequencyRange_ = null;
        } else {
          frequencyRange_ = null;
          frequencyRangeBuilder_ = null;
        }
        if (bandWidthRangeBuilder_ == null) {
          bandWidthRange_ = null;
        } else {
          bandWidthRange_ = null;
          bandWidthRangeBuilder_ = null;
        }
        freqJitterTolerance_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.HopSignalClusterParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParam build() {
        zb.dcts.scenario.detection.Detection.HopSignalClusterParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParam buildPartial() {
        zb.dcts.scenario.detection.Detection.HopSignalClusterParam result = new zb.dcts.scenario.detection.Detection.HopSignalClusterParam(this);
        result.name_ = name_;
        if (frequencyRangeBuilder_ == null) {
          result.frequencyRange_ = frequencyRange_;
        } else {
          result.frequencyRange_ = frequencyRangeBuilder_.build();
        }
        if (bandWidthRangeBuilder_ == null) {
          result.bandWidthRange_ = bandWidthRange_;
        } else {
          result.bandWidthRange_ = bandWidthRangeBuilder_.build();
        }
        result.freqJitterTolerance_ = freqJitterTolerance_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.HopSignalClusterParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.HopSignalClusterParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.HopSignalClusterParam other) {
        if (other == zb.dcts.scenario.detection.Detection.HopSignalClusterParam.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasFrequencyRange()) {
          mergeFrequencyRange(other.getFrequencyRange());
        }
        if (other.hasBandWidthRange()) {
          mergeBandWidthRange(other.getBandWidthRange());
        }
        if (other.getFreqJitterTolerance() != 0F) {
          setFreqJitterTolerance(other.getFreqJitterTolerance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.HopSignalClusterParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.HopSignalClusterParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频通信系统的名称 例如Link16 71电台 J链 bluetooth
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan frequencyRange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> frequencyRangeBuilder_;
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       * @return Whether the frequencyRange field is set.
       */
      public boolean hasFrequencyRange() {
        return frequencyRangeBuilder_ != null || frequencyRange_ != null;
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       * @return The frequencyRange.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFrequencyRange() {
        if (frequencyRangeBuilder_ == null) {
          return frequencyRange_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : frequencyRange_;
        } else {
          return frequencyRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       */
      public Builder setFrequencyRange(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (frequencyRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          frequencyRange_ = value;
          onChanged();
        } else {
          frequencyRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       */
      public Builder setFrequencyRange(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (frequencyRangeBuilder_ == null) {
          frequencyRange_ = builderForValue.build();
          onChanged();
        } else {
          frequencyRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       */
      public Builder mergeFrequencyRange(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (frequencyRangeBuilder_ == null) {
          if (frequencyRange_ != null) {
            frequencyRange_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(frequencyRange_).mergeFrom(value).buildPartial();
          } else {
            frequencyRange_ = value;
          }
          onChanged();
        } else {
          frequencyRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       */
      public Builder clearFrequencyRange() {
        if (frequencyRangeBuilder_ == null) {
          frequencyRange_ = null;
          onChanged();
        } else {
          frequencyRange_ = null;
          frequencyRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFrequencyRangeBuilder() {
        
        onChanged();
        return getFrequencyRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFrequencyRangeOrBuilder() {
        if (frequencyRangeBuilder_ != null) {
          return frequencyRangeBuilder_.getMessageOrBuilder();
        } else {
          return frequencyRange_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : frequencyRange_;
        }
      }
      /**
       * <pre>
       *跳频信号所处的频率区间
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan frequency_range = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFrequencyRangeFieldBuilder() {
        if (frequencyRangeBuilder_ == null) {
          frequencyRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFrequencyRange(),
                  getParentForChildren(),
                  isClean());
          frequencyRange_ = null;
        }
        return frequencyRangeBuilder_;
      }

      private zb.dcts.Dcts.DRange bandWidthRange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> bandWidthRangeBuilder_;
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       * @return Whether the bandWidthRange field is set.
       */
      public boolean hasBandWidthRange() {
        return bandWidthRangeBuilder_ != null || bandWidthRange_ != null;
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       * @return The bandWidthRange.
       */
      public zb.dcts.Dcts.DRange getBandWidthRange() {
        if (bandWidthRangeBuilder_ == null) {
          return bandWidthRange_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : bandWidthRange_;
        } else {
          return bandWidthRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       */
      public Builder setBandWidthRange(zb.dcts.Dcts.DRange value) {
        if (bandWidthRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bandWidthRange_ = value;
          onChanged();
        } else {
          bandWidthRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       */
      public Builder setBandWidthRange(
          zb.dcts.Dcts.DRange.Builder builderForValue) {
        if (bandWidthRangeBuilder_ == null) {
          bandWidthRange_ = builderForValue.build();
          onChanged();
        } else {
          bandWidthRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       */
      public Builder mergeBandWidthRange(zb.dcts.Dcts.DRange value) {
        if (bandWidthRangeBuilder_ == null) {
          if (bandWidthRange_ != null) {
            bandWidthRange_ =
              zb.dcts.Dcts.DRange.newBuilder(bandWidthRange_).mergeFrom(value).buildPartial();
          } else {
            bandWidthRange_ = value;
          }
          onChanged();
        } else {
          bandWidthRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       */
      public Builder clearBandWidthRange() {
        if (bandWidthRangeBuilder_ == null) {
          bandWidthRange_ = null;
          onChanged();
        } else {
          bandWidthRange_ = null;
          bandWidthRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       */
      public zb.dcts.Dcts.DRange.Builder getBandWidthRangeBuilder() {
        
        onChanged();
        return getBandWidthRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       */
      public zb.dcts.Dcts.DRangeOrBuilder getBandWidthRangeOrBuilder() {
        if (bandWidthRangeBuilder_ != null) {
          return bandWidthRangeBuilder_.getMessageOrBuilder();
        } else {
          return bandWidthRange_ == null ?
              zb.dcts.Dcts.DRange.getDefaultInstance() : bandWidthRange_;
        }
      }
      /**
       * <pre>
       *跳频信号单跳的带宽允许范围
       * </pre>
       *
       * <code>.zb.dcts.DRange band_width_range = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> 
          getBandWidthRangeFieldBuilder() {
        if (bandWidthRangeBuilder_ == null) {
          bandWidthRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder>(
                  getBandWidthRange(),
                  getParentForChildren(),
                  isClean());
          bandWidthRange_ = null;
        }
        return bandWidthRangeBuilder_;
      }

      private float freqJitterTolerance_ ;
      /**
       * <pre>
       *单跳中心频率抖动的允许范围
       * </pre>
       *
       * <code>float freq_jitter_tolerance = 4;</code>
       * @return The freqJitterTolerance.
       */
      @java.lang.Override
      public float getFreqJitterTolerance() {
        return freqJitterTolerance_;
      }
      /**
       * <pre>
       *单跳中心频率抖动的允许范围
       * </pre>
       *
       * <code>float freq_jitter_tolerance = 4;</code>
       * @param value The freqJitterTolerance to set.
       * @return This builder for chaining.
       */
      public Builder setFreqJitterTolerance(float value) {
        
        freqJitterTolerance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *单跳中心频率抖动的允许范围
       * </pre>
       *
       * <code>float freq_jitter_tolerance = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreqJitterTolerance() {
        
        freqJitterTolerance_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.HopSignalClusterParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalClusterParam)
    private static final zb.dcts.scenario.detection.Detection.HopSignalClusterParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.HopSignalClusterParam();
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalClusterParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HopSignalClusterParam>
        PARSER = new com.google.protobuf.AbstractParser<HopSignalClusterParam>() {
      @java.lang.Override
      public HopSignalClusterParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HopSignalClusterParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HopSignalClusterParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HopSignalClusterParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalClusterParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HopSignalDetectionParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.HopSignalDetectionParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.HopSignalClusterParam> 
        getHopSignalClustersList();
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalClusterParam getHopSignalClusters(int index);
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    int getHopSignalClustersCount();
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder> 
        getHopSignalClustersOrBuilderList();
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder getHopSignalClustersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.HopSignalDetectionParam}
   */
  public static final class HopSignalDetectionParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.HopSignalDetectionParam)
      HopSignalDetectionParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HopSignalDetectionParam.newBuilder() to construct.
    private HopSignalDetectionParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HopSignalDetectionParam() {
      hopSignalClusters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HopSignalDetectionParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HopSignalDetectionParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                hopSignalClusters_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalClusterParam>();
                mutable_bitField0_ |= 0x00000001;
              }
              hopSignalClusters_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.HopSignalClusterParam.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          hopSignalClusters_ = java.util.Collections.unmodifiableList(hopSignalClusters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.class, zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder.class);
    }

    public static final int HOP_SIGNAL_CLUSTERS_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalClusterParam> hopSignalClusters_;
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalClusterParam> getHopSignalClustersList() {
      return hopSignalClusters_;
    }
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder> 
        getHopSignalClustersOrBuilderList() {
      return hopSignalClusters_;
    }
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public int getHopSignalClustersCount() {
      return hopSignalClusters_.size();
    }
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalClusterParam getHopSignalClusters(int index) {
      return hopSignalClusters_.get(index);
    }
    /**
     * <pre>
     *基于频谱做跳频信号检测，只关心跳频信号的频域特征
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder getHopSignalClustersOrBuilder(
        int index) {
      return hopSignalClusters_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hopSignalClusters_.size(); i++) {
        output.writeMessage(1, hopSignalClusters_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hopSignalClusters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hopSignalClusters_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.HopSignalDetectionParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.HopSignalDetectionParam other = (zb.dcts.scenario.detection.Detection.HopSignalDetectionParam) obj;

      if (!getHopSignalClustersList()
          .equals(other.getHopSignalClustersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHopSignalClustersCount() > 0) {
        hash = (37 * hash) + HOP_SIGNAL_CLUSTERS_FIELD_NUMBER;
        hash = (53 * hash) + getHopSignalClustersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.HopSignalDetectionParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.HopSignalDetectionParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.HopSignalDetectionParam)
        zb.dcts.scenario.detection.Detection.HopSignalDetectionParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.class, zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHopSignalClustersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (hopSignalClustersBuilder_ == null) {
          hopSignalClusters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hopSignalClustersBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalDetectionParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalDetectionParam build() {
        zb.dcts.scenario.detection.Detection.HopSignalDetectionParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalDetectionParam buildPartial() {
        zb.dcts.scenario.detection.Detection.HopSignalDetectionParam result = new zb.dcts.scenario.detection.Detection.HopSignalDetectionParam(this);
        int from_bitField0_ = bitField0_;
        if (hopSignalClustersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            hopSignalClusters_ = java.util.Collections.unmodifiableList(hopSignalClusters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hopSignalClusters_ = hopSignalClusters_;
        } else {
          result.hopSignalClusters_ = hopSignalClustersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.HopSignalDetectionParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.HopSignalDetectionParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.HopSignalDetectionParam other) {
        if (other == zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.getDefaultInstance()) return this;
        if (hopSignalClustersBuilder_ == null) {
          if (!other.hopSignalClusters_.isEmpty()) {
            if (hopSignalClusters_.isEmpty()) {
              hopSignalClusters_ = other.hopSignalClusters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHopSignalClustersIsMutable();
              hopSignalClusters_.addAll(other.hopSignalClusters_);
            }
            onChanged();
          }
        } else {
          if (!other.hopSignalClusters_.isEmpty()) {
            if (hopSignalClustersBuilder_.isEmpty()) {
              hopSignalClustersBuilder_.dispose();
              hopSignalClustersBuilder_ = null;
              hopSignalClusters_ = other.hopSignalClusters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hopSignalClustersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHopSignalClustersFieldBuilder() : null;
            } else {
              hopSignalClustersBuilder_.addAllMessages(other.hopSignalClusters_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.HopSignalDetectionParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.HopSignalDetectionParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalClusterParam> hopSignalClusters_ =
        java.util.Collections.emptyList();
      private void ensureHopSignalClustersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hopSignalClusters_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalClusterParam>(hopSignalClusters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalClusterParam, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder> hopSignalClustersBuilder_;

      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalClusterParam> getHopSignalClustersList() {
        if (hopSignalClustersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hopSignalClusters_);
        } else {
          return hopSignalClustersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public int getHopSignalClustersCount() {
        if (hopSignalClustersBuilder_ == null) {
          return hopSignalClusters_.size();
        } else {
          return hopSignalClustersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParam getHopSignalClusters(int index) {
        if (hopSignalClustersBuilder_ == null) {
          return hopSignalClusters_.get(index);
        } else {
          return hopSignalClustersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder setHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalClusterParam value) {
        if (hopSignalClustersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.set(index, value);
          onChanged();
        } else {
          hopSignalClustersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder setHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder builderForValue) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.set(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalClustersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(zb.dcts.scenario.detection.Detection.HopSignalClusterParam value) {
        if (hopSignalClustersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(value);
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalClusterParam value) {
        if (hopSignalClustersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(index, value);
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(
          zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder builderForValue) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(builderForValue.build());
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder builderForValue) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder addAllHopSignalClusters(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterParam> values) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hopSignalClusters_);
          onChanged();
        } else {
          hopSignalClustersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder clearHopSignalClusters() {
        if (hopSignalClustersBuilder_ == null) {
          hopSignalClusters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hopSignalClustersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public Builder removeHopSignalClusters(int index) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.remove(index);
          onChanged();
        } else {
          hopSignalClustersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder getHopSignalClustersBuilder(
          int index) {
        return getHopSignalClustersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder getHopSignalClustersOrBuilder(
          int index) {
        if (hopSignalClustersBuilder_ == null) {
          return hopSignalClusters_.get(index);  } else {
          return hopSignalClustersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder> 
           getHopSignalClustersOrBuilderList() {
        if (hopSignalClustersBuilder_ != null) {
          return hopSignalClustersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hopSignalClusters_);
        }
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder addHopSignalClustersBuilder() {
        return getHopSignalClustersFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.HopSignalClusterParam.getDefaultInstance());
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder addHopSignalClustersBuilder(
          int index) {
        return getHopSignalClustersFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.getDefaultInstance());
      }
      /**
       * <pre>
       *基于频谱做跳频信号检测，只关心跳频信号的频域特征
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalClusterParam hop_signal_clusters = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder> 
           getHopSignalClustersBuilderList() {
        return getHopSignalClustersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalClusterParam, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder> 
          getHopSignalClustersFieldBuilder() {
        if (hopSignalClustersBuilder_ == null) {
          hopSignalClustersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HopSignalClusterParam, zb.dcts.scenario.detection.Detection.HopSignalClusterParam.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterParamOrBuilder>(
                  hopSignalClusters_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          hopSignalClusters_ = null;
        }
        return hopSignalClustersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.HopSignalDetectionParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalDetectionParam)
    private static final zb.dcts.scenario.detection.Detection.HopSignalDetectionParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.HopSignalDetectionParam();
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalDetectionParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HopSignalDetectionParam>
        PARSER = new com.google.protobuf.AbstractParser<HopSignalDetectionParam>() {
      @java.lang.Override
      public HopSignalDetectionParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HopSignalDetectionParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HopSignalDetectionParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HopSignalDetectionParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalDetectionParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalDetectParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalDetectParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *频段过滤器(位于白名单的频率区间将忽略检测)
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
     * @return Whether the whiteList field is set.
     */
    boolean hasWhiteList();
    /**
     * <pre>
     *频段过滤器(位于白名单的频率区间将忽略检测)
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
     * @return The whiteList.
     */
    zb.dcts.scenario.detection.Detection.FreqSpanFilter getWhiteList();
    /**
     * <pre>
     *频段过滤器(位于白名单的频率区间将忽略检测)
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.FreqSpanFilterOrBuilder getWhiteListOrBuilder();

    /**
     * <pre>
     *信号分离参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
     * @return Whether the signalSegmenationParam field is set.
     */
    boolean hasSignalSegmenationParam();
    /**
     * <pre>
     *信号分离参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
     * @return The signalSegmenationParam.
     */
    zb.dcts.scenario.detection.Detection.SignalSegmentationParam getSignalSegmenationParam();
    /**
     * <pre>
     *信号分离参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalSegmentationParamOrBuilder getSignalSegmenationParamOrBuilder();

    /**
     * <pre>
     *跳频检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
     * @return Whether the hopSignalDetectionParam field is set.
     */
    boolean hasHopSignalDetectionParam();
    /**
     * <pre>
     *跳频检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
     * @return The hopSignalDetectionParam.
     */
    zb.dcts.scenario.detection.Detection.HopSignalDetectionParam getHopSignalDetectionParam();
    /**
     * <pre>
     *跳频检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalDetectionParamOrBuilder getHopSignalDetectionParamOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalDetectParam}
   */
  public static final class SignalDetectParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalDetectParam)
      SignalDetectParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalDetectParam.newBuilder() to construct.
    private SignalDetectParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalDetectParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalDetectParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalDetectParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder subBuilder = null;
              if (whiteList_ != null) {
                subBuilder = whiteList_.toBuilder();
              }
              whiteList_ = input.readMessage(zb.dcts.scenario.detection.Detection.FreqSpanFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(whiteList_);
                whiteList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder subBuilder = null;
              if (signalSegmenationParam_ != null) {
                subBuilder = signalSegmenationParam_.toBuilder();
              }
              signalSegmenationParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.SignalSegmentationParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signalSegmenationParam_);
                signalSegmenationParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder subBuilder = null;
              if (hopSignalDetectionParam_ != null) {
                subBuilder = hopSignalDetectionParam_.toBuilder();
              }
              hopSignalDetectionParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hopSignalDetectionParam_);
                hopSignalDetectionParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDetectParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDetectParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalDetectParam.class, zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder.class);
    }

    public static final int WHITE_LIST_FIELD_NUMBER = 1;
    private zb.dcts.scenario.detection.Detection.FreqSpanFilter whiteList_;
    /**
     * <pre>
     *频段过滤器(位于白名单的频率区间将忽略检测)
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
     * @return Whether the whiteList field is set.
     */
    @java.lang.Override
    public boolean hasWhiteList() {
      return whiteList_ != null;
    }
    /**
     * <pre>
     *频段过滤器(位于白名单的频率区间将忽略检测)
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
     * @return The whiteList.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.FreqSpanFilter getWhiteList() {
      return whiteList_ == null ? zb.dcts.scenario.detection.Detection.FreqSpanFilter.getDefaultInstance() : whiteList_;
    }
    /**
     * <pre>
     *频段过滤器(位于白名单的频率区间将忽略检测)
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.FreqSpanFilterOrBuilder getWhiteListOrBuilder() {
      return getWhiteList();
    }

    public static final int SIGNAL_SEGMENATION_PARAM_FIELD_NUMBER = 2;
    private zb.dcts.scenario.detection.Detection.SignalSegmentationParam signalSegmenationParam_;
    /**
     * <pre>
     *信号分离参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
     * @return Whether the signalSegmenationParam field is set.
     */
    @java.lang.Override
    public boolean hasSignalSegmenationParam() {
      return signalSegmenationParam_ != null;
    }
    /**
     * <pre>
     *信号分离参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
     * @return The signalSegmenationParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSegmentationParam getSignalSegmenationParam() {
      return signalSegmenationParam_ == null ? zb.dcts.scenario.detection.Detection.SignalSegmentationParam.getDefaultInstance() : signalSegmenationParam_;
    }
    /**
     * <pre>
     *信号分离参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSegmentationParamOrBuilder getSignalSegmenationParamOrBuilder() {
      return getSignalSegmenationParam();
    }

    public static final int HOP_SIGNAL_DETECTION_PARAM_FIELD_NUMBER = 3;
    private zb.dcts.scenario.detection.Detection.HopSignalDetectionParam hopSignalDetectionParam_;
    /**
     * <pre>
     *跳频检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
     * @return Whether the hopSignalDetectionParam field is set.
     */
    @java.lang.Override
    public boolean hasHopSignalDetectionParam() {
      return hopSignalDetectionParam_ != null;
    }
    /**
     * <pre>
     *跳频检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
     * @return The hopSignalDetectionParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalDetectionParam getHopSignalDetectionParam() {
      return hopSignalDetectionParam_ == null ? zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.getDefaultInstance() : hopSignalDetectionParam_;
    }
    /**
     * <pre>
     *跳频检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalDetectionParamOrBuilder getHopSignalDetectionParamOrBuilder() {
      return getHopSignalDetectionParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (whiteList_ != null) {
        output.writeMessage(1, getWhiteList());
      }
      if (signalSegmenationParam_ != null) {
        output.writeMessage(2, getSignalSegmenationParam());
      }
      if (hopSignalDetectionParam_ != null) {
        output.writeMessage(3, getHopSignalDetectionParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (whiteList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getWhiteList());
      }
      if (signalSegmenationParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSignalSegmenationParam());
      }
      if (hopSignalDetectionParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getHopSignalDetectionParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalDetectParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalDetectParam other = (zb.dcts.scenario.detection.Detection.SignalDetectParam) obj;

      if (hasWhiteList() != other.hasWhiteList()) return false;
      if (hasWhiteList()) {
        if (!getWhiteList()
            .equals(other.getWhiteList())) return false;
      }
      if (hasSignalSegmenationParam() != other.hasSignalSegmenationParam()) return false;
      if (hasSignalSegmenationParam()) {
        if (!getSignalSegmenationParam()
            .equals(other.getSignalSegmenationParam())) return false;
      }
      if (hasHopSignalDetectionParam() != other.hasHopSignalDetectionParam()) return false;
      if (hasHopSignalDetectionParam()) {
        if (!getHopSignalDetectionParam()
            .equals(other.getHopSignalDetectionParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWhiteList()) {
        hash = (37 * hash) + WHITE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getWhiteList().hashCode();
      }
      if (hasSignalSegmenationParam()) {
        hash = (37 * hash) + SIGNAL_SEGMENATION_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getSignalSegmenationParam().hashCode();
      }
      if (hasHopSignalDetectionParam()) {
        hash = (37 * hash) + HOP_SIGNAL_DETECTION_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getHopSignalDetectionParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDetectParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalDetectParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalDetectParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalDetectParam)
        zb.dcts.scenario.detection.Detection.SignalDetectParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDetectParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDetectParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalDetectParam.class, zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalDetectParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (whiteListBuilder_ == null) {
          whiteList_ = null;
        } else {
          whiteList_ = null;
          whiteListBuilder_ = null;
        }
        if (signalSegmenationParamBuilder_ == null) {
          signalSegmenationParam_ = null;
        } else {
          signalSegmenationParam_ = null;
          signalSegmenationParamBuilder_ = null;
        }
        if (hopSignalDetectionParamBuilder_ == null) {
          hopSignalDetectionParam_ = null;
        } else {
          hopSignalDetectionParam_ = null;
          hopSignalDetectionParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDetectParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalDetectParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalDetectParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalDetectParam build() {
        zb.dcts.scenario.detection.Detection.SignalDetectParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalDetectParam buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalDetectParam result = new zb.dcts.scenario.detection.Detection.SignalDetectParam(this);
        if (whiteListBuilder_ == null) {
          result.whiteList_ = whiteList_;
        } else {
          result.whiteList_ = whiteListBuilder_.build();
        }
        if (signalSegmenationParamBuilder_ == null) {
          result.signalSegmenationParam_ = signalSegmenationParam_;
        } else {
          result.signalSegmenationParam_ = signalSegmenationParamBuilder_.build();
        }
        if (hopSignalDetectionParamBuilder_ == null) {
          result.hopSignalDetectionParam_ = hopSignalDetectionParam_;
        } else {
          result.hopSignalDetectionParam_ = hopSignalDetectionParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalDetectParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalDetectParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalDetectParam other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalDetectParam.getDefaultInstance()) return this;
        if (other.hasWhiteList()) {
          mergeWhiteList(other.getWhiteList());
        }
        if (other.hasSignalSegmenationParam()) {
          mergeSignalSegmenationParam(other.getSignalSegmenationParam());
        }
        if (other.hasHopSignalDetectionParam()) {
          mergeHopSignalDetectionParam(other.getHopSignalDetectionParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalDetectParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalDetectParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.detection.Detection.FreqSpanFilter whiteList_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.FreqSpanFilter, zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder, zb.dcts.scenario.detection.Detection.FreqSpanFilterOrBuilder> whiteListBuilder_;
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       * @return Whether the whiteList field is set.
       */
      public boolean hasWhiteList() {
        return whiteListBuilder_ != null || whiteList_ != null;
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       * @return The whiteList.
       */
      public zb.dcts.scenario.detection.Detection.FreqSpanFilter getWhiteList() {
        if (whiteListBuilder_ == null) {
          return whiteList_ == null ? zb.dcts.scenario.detection.Detection.FreqSpanFilter.getDefaultInstance() : whiteList_;
        } else {
          return whiteListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       */
      public Builder setWhiteList(zb.dcts.scenario.detection.Detection.FreqSpanFilter value) {
        if (whiteListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          whiteList_ = value;
          onChanged();
        } else {
          whiteListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       */
      public Builder setWhiteList(
          zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder builderForValue) {
        if (whiteListBuilder_ == null) {
          whiteList_ = builderForValue.build();
          onChanged();
        } else {
          whiteListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       */
      public Builder mergeWhiteList(zb.dcts.scenario.detection.Detection.FreqSpanFilter value) {
        if (whiteListBuilder_ == null) {
          if (whiteList_ != null) {
            whiteList_ =
              zb.dcts.scenario.detection.Detection.FreqSpanFilter.newBuilder(whiteList_).mergeFrom(value).buildPartial();
          } else {
            whiteList_ = value;
          }
          onChanged();
        } else {
          whiteListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       */
      public Builder clearWhiteList() {
        if (whiteListBuilder_ == null) {
          whiteList_ = null;
          onChanged();
        } else {
          whiteList_ = null;
          whiteListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder getWhiteListBuilder() {
        
        onChanged();
        return getWhiteListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.FreqSpanFilterOrBuilder getWhiteListOrBuilder() {
        if (whiteListBuilder_ != null) {
          return whiteListBuilder_.getMessageOrBuilder();
        } else {
          return whiteList_ == null ?
              zb.dcts.scenario.detection.Detection.FreqSpanFilter.getDefaultInstance() : whiteList_;
        }
      }
      /**
       * <pre>
       *频段过滤器(位于白名单的频率区间将忽略检测)
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FreqSpanFilter white_list = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.FreqSpanFilter, zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder, zb.dcts.scenario.detection.Detection.FreqSpanFilterOrBuilder> 
          getWhiteListFieldBuilder() {
        if (whiteListBuilder_ == null) {
          whiteListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.FreqSpanFilter, zb.dcts.scenario.detection.Detection.FreqSpanFilter.Builder, zb.dcts.scenario.detection.Detection.FreqSpanFilterOrBuilder>(
                  getWhiteList(),
                  getParentForChildren(),
                  isClean());
          whiteList_ = null;
        }
        return whiteListBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.SignalSegmentationParam signalSegmenationParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSegmentationParam, zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder, zb.dcts.scenario.detection.Detection.SignalSegmentationParamOrBuilder> signalSegmenationParamBuilder_;
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       * @return Whether the signalSegmenationParam field is set.
       */
      public boolean hasSignalSegmenationParam() {
        return signalSegmenationParamBuilder_ != null || signalSegmenationParam_ != null;
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       * @return The signalSegmenationParam.
       */
      public zb.dcts.scenario.detection.Detection.SignalSegmentationParam getSignalSegmenationParam() {
        if (signalSegmenationParamBuilder_ == null) {
          return signalSegmenationParam_ == null ? zb.dcts.scenario.detection.Detection.SignalSegmentationParam.getDefaultInstance() : signalSegmenationParam_;
        } else {
          return signalSegmenationParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       */
      public Builder setSignalSegmenationParam(zb.dcts.scenario.detection.Detection.SignalSegmentationParam value) {
        if (signalSegmenationParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signalSegmenationParam_ = value;
          onChanged();
        } else {
          signalSegmenationParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       */
      public Builder setSignalSegmenationParam(
          zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder builderForValue) {
        if (signalSegmenationParamBuilder_ == null) {
          signalSegmenationParam_ = builderForValue.build();
          onChanged();
        } else {
          signalSegmenationParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       */
      public Builder mergeSignalSegmenationParam(zb.dcts.scenario.detection.Detection.SignalSegmentationParam value) {
        if (signalSegmenationParamBuilder_ == null) {
          if (signalSegmenationParam_ != null) {
            signalSegmenationParam_ =
              zb.dcts.scenario.detection.Detection.SignalSegmentationParam.newBuilder(signalSegmenationParam_).mergeFrom(value).buildPartial();
          } else {
            signalSegmenationParam_ = value;
          }
          onChanged();
        } else {
          signalSegmenationParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       */
      public Builder clearSignalSegmenationParam() {
        if (signalSegmenationParamBuilder_ == null) {
          signalSegmenationParam_ = null;
          onChanged();
        } else {
          signalSegmenationParam_ = null;
          signalSegmenationParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder getSignalSegmenationParamBuilder() {
        
        onChanged();
        return getSignalSegmenationParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSegmentationParamOrBuilder getSignalSegmenationParamOrBuilder() {
        if (signalSegmenationParamBuilder_ != null) {
          return signalSegmenationParamBuilder_.getMessageOrBuilder();
        } else {
          return signalSegmenationParam_ == null ?
              zb.dcts.scenario.detection.Detection.SignalSegmentationParam.getDefaultInstance() : signalSegmenationParam_;
        }
      }
      /**
       * <pre>
       *信号分离参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSegmentationParam signal_segmenation_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSegmentationParam, zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder, zb.dcts.scenario.detection.Detection.SignalSegmentationParamOrBuilder> 
          getSignalSegmenationParamFieldBuilder() {
        if (signalSegmenationParamBuilder_ == null) {
          signalSegmenationParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalSegmentationParam, zb.dcts.scenario.detection.Detection.SignalSegmentationParam.Builder, zb.dcts.scenario.detection.Detection.SignalSegmentationParamOrBuilder>(
                  getSignalSegmenationParam(),
                  getParentForChildren(),
                  isClean());
          signalSegmenationParam_ = null;
        }
        return signalSegmenationParamBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.HopSignalDetectionParam hopSignalDetectionParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalDetectionParam, zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder, zb.dcts.scenario.detection.Detection.HopSignalDetectionParamOrBuilder> hopSignalDetectionParamBuilder_;
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       * @return Whether the hopSignalDetectionParam field is set.
       */
      public boolean hasHopSignalDetectionParam() {
        return hopSignalDetectionParamBuilder_ != null || hopSignalDetectionParam_ != null;
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       * @return The hopSignalDetectionParam.
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDetectionParam getHopSignalDetectionParam() {
        if (hopSignalDetectionParamBuilder_ == null) {
          return hopSignalDetectionParam_ == null ? zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.getDefaultInstance() : hopSignalDetectionParam_;
        } else {
          return hopSignalDetectionParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       */
      public Builder setHopSignalDetectionParam(zb.dcts.scenario.detection.Detection.HopSignalDetectionParam value) {
        if (hopSignalDetectionParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hopSignalDetectionParam_ = value;
          onChanged();
        } else {
          hopSignalDetectionParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       */
      public Builder setHopSignalDetectionParam(
          zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder builderForValue) {
        if (hopSignalDetectionParamBuilder_ == null) {
          hopSignalDetectionParam_ = builderForValue.build();
          onChanged();
        } else {
          hopSignalDetectionParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       */
      public Builder mergeHopSignalDetectionParam(zb.dcts.scenario.detection.Detection.HopSignalDetectionParam value) {
        if (hopSignalDetectionParamBuilder_ == null) {
          if (hopSignalDetectionParam_ != null) {
            hopSignalDetectionParam_ =
              zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.newBuilder(hopSignalDetectionParam_).mergeFrom(value).buildPartial();
          } else {
            hopSignalDetectionParam_ = value;
          }
          onChanged();
        } else {
          hopSignalDetectionParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       */
      public Builder clearHopSignalDetectionParam() {
        if (hopSignalDetectionParamBuilder_ == null) {
          hopSignalDetectionParam_ = null;
          onChanged();
        } else {
          hopSignalDetectionParam_ = null;
          hopSignalDetectionParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder getHopSignalDetectionParamBuilder() {
        
        onChanged();
        return getHopSignalDetectionParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDetectionParamOrBuilder getHopSignalDetectionParamOrBuilder() {
        if (hopSignalDetectionParamBuilder_ != null) {
          return hopSignalDetectionParamBuilder_.getMessageOrBuilder();
        } else {
          return hopSignalDetectionParam_ == null ?
              zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.getDefaultInstance() : hopSignalDetectionParam_;
        }
      }
      /**
       * <pre>
       *跳频检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalDetectionParam hop_signal_detection_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalDetectionParam, zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder, zb.dcts.scenario.detection.Detection.HopSignalDetectionParamOrBuilder> 
          getHopSignalDetectionParamFieldBuilder() {
        if (hopSignalDetectionParamBuilder_ == null) {
          hopSignalDetectionParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HopSignalDetectionParam, zb.dcts.scenario.detection.Detection.HopSignalDetectionParam.Builder, zb.dcts.scenario.detection.Detection.HopSignalDetectionParamOrBuilder>(
                  getHopSignalDetectionParam(),
                  getParentForChildren(),
                  isClean());
          hopSignalDetectionParam_ = null;
        }
        return hopSignalDetectionParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalDetectParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalDetectParam)
    private static final zb.dcts.scenario.detection.Detection.SignalDetectParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalDetectParam();
    }

    public static zb.dcts.scenario.detection.Detection.SignalDetectParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalDetectParam>
        PARSER = new com.google.protobuf.AbstractParser<SignalDetectParam>() {
      @java.lang.Override
      public SignalDetectParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalDetectParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalDetectParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalDetectParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDetectParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DetectionParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.DetectionParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号检测的回传间隔,单位ms，0代表每次扫描均上传
     * </pre>
     *
     * <code>int32 result_interval = 1;</code>
     * @return The resultInterval.
     */
    int getResultInterval();

    /**
     * <pre>
     *能量检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
     * @return Whether the energyDetectParam field is set.
     */
    boolean hasEnergyDetectParam();
    /**
     * <pre>
     *能量检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
     * @return The energyDetectParam.
     */
    zb.dcts.scenario.detection.Detection.EnergyDetectionParam getEnergyDetectParam();
    /**
     * <pre>
     *能量检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.EnergyDetectionParamOrBuilder getEnergyDetectParamOrBuilder();

    /**
     * <pre>
     *信号检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
     * @return Whether the signalDetectParam field is set.
     */
    boolean hasSignalDetectParam();
    /**
     * <pre>
     *信号检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
     * @return The signalDetectParam.
     */
    zb.dcts.scenario.detection.Detection.SignalDetectParam getSignalDetectParam();
    /**
     * <pre>
     *信号检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDetectParamOrBuilder getSignalDetectParamOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.DetectionParam}
   */
  public static final class DetectionParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.DetectionParam)
      DetectionParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DetectionParam.newBuilder() to construct.
    private DetectionParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DetectionParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DetectionParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DetectionParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              resultInterval_ = input.readInt32();
              break;
            }
            case 18: {
              zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder subBuilder = null;
              if (energyDetectParam_ != null) {
                subBuilder = energyDetectParam_.toBuilder();
              }
              energyDetectParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.EnergyDetectionParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(energyDetectParam_);
                energyDetectParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder subBuilder = null;
              if (signalDetectParam_ != null) {
                subBuilder = signalDetectParam_.toBuilder();
              }
              signalDetectParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.SignalDetectParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signalDetectParam_);
                signalDetectParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.DetectionParam.class, zb.dcts.scenario.detection.Detection.DetectionParam.Builder.class);
    }

    public static final int RESULT_INTERVAL_FIELD_NUMBER = 1;
    private int resultInterval_;
    /**
     * <pre>
     *信号检测的回传间隔,单位ms，0代表每次扫描均上传
     * </pre>
     *
     * <code>int32 result_interval = 1;</code>
     * @return The resultInterval.
     */
    @java.lang.Override
    public int getResultInterval() {
      return resultInterval_;
    }

    public static final int ENERGY_DETECT_PARAM_FIELD_NUMBER = 2;
    private zb.dcts.scenario.detection.Detection.EnergyDetectionParam energyDetectParam_;
    /**
     * <pre>
     *能量检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
     * @return Whether the energyDetectParam field is set.
     */
    @java.lang.Override
    public boolean hasEnergyDetectParam() {
      return energyDetectParam_ != null;
    }
    /**
     * <pre>
     *能量检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
     * @return The energyDetectParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.EnergyDetectionParam getEnergyDetectParam() {
      return energyDetectParam_ == null ? zb.dcts.scenario.detection.Detection.EnergyDetectionParam.getDefaultInstance() : energyDetectParam_;
    }
    /**
     * <pre>
     *能量检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.EnergyDetectionParamOrBuilder getEnergyDetectParamOrBuilder() {
      return getEnergyDetectParam();
    }

    public static final int SIGNAL_DETECT_PARAM_FIELD_NUMBER = 3;
    private zb.dcts.scenario.detection.Detection.SignalDetectParam signalDetectParam_;
    /**
     * <pre>
     *信号检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
     * @return Whether the signalDetectParam field is set.
     */
    @java.lang.Override
    public boolean hasSignalDetectParam() {
      return signalDetectParam_ != null;
    }
    /**
     * <pre>
     *信号检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
     * @return The signalDetectParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDetectParam getSignalDetectParam() {
      return signalDetectParam_ == null ? zb.dcts.scenario.detection.Detection.SignalDetectParam.getDefaultInstance() : signalDetectParam_;
    }
    /**
     * <pre>
     *信号检测参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDetectParamOrBuilder getSignalDetectParamOrBuilder() {
      return getSignalDetectParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (resultInterval_ != 0) {
        output.writeInt32(1, resultInterval_);
      }
      if (energyDetectParam_ != null) {
        output.writeMessage(2, getEnergyDetectParam());
      }
      if (signalDetectParam_ != null) {
        output.writeMessage(3, getSignalDetectParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (resultInterval_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, resultInterval_);
      }
      if (energyDetectParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEnergyDetectParam());
      }
      if (signalDetectParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSignalDetectParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.DetectionParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.DetectionParam other = (zb.dcts.scenario.detection.Detection.DetectionParam) obj;

      if (getResultInterval()
          != other.getResultInterval()) return false;
      if (hasEnergyDetectParam() != other.hasEnergyDetectParam()) return false;
      if (hasEnergyDetectParam()) {
        if (!getEnergyDetectParam()
            .equals(other.getEnergyDetectParam())) return false;
      }
      if (hasSignalDetectParam() != other.hasSignalDetectParam()) return false;
      if (hasSignalDetectParam()) {
        if (!getSignalDetectParam()
            .equals(other.getSignalDetectParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getResultInterval();
      if (hasEnergyDetectParam()) {
        hash = (37 * hash) + ENERGY_DETECT_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getEnergyDetectParam().hashCode();
      }
      if (hasSignalDetectParam()) {
        hash = (37 * hash) + SIGNAL_DETECT_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getSignalDetectParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.DetectionParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.DetectionParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.DetectionParam)
        zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.DetectionParam.class, zb.dcts.scenario.detection.Detection.DetectionParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.DetectionParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        resultInterval_ = 0;

        if (energyDetectParamBuilder_ == null) {
          energyDetectParam_ = null;
        } else {
          energyDetectParam_ = null;
          energyDetectParamBuilder_ = null;
        }
        if (signalDetectParamBuilder_ == null) {
          signalDetectParam_ = null;
        } else {
          signalDetectParam_ = null;
          signalDetectParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DetectionParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DetectionParam build() {
        zb.dcts.scenario.detection.Detection.DetectionParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DetectionParam buildPartial() {
        zb.dcts.scenario.detection.Detection.DetectionParam result = new zb.dcts.scenario.detection.Detection.DetectionParam(this);
        result.resultInterval_ = resultInterval_;
        if (energyDetectParamBuilder_ == null) {
          result.energyDetectParam_ = energyDetectParam_;
        } else {
          result.energyDetectParam_ = energyDetectParamBuilder_.build();
        }
        if (signalDetectParamBuilder_ == null) {
          result.signalDetectParam_ = signalDetectParam_;
        } else {
          result.signalDetectParam_ = signalDetectParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.DetectionParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.DetectionParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.DetectionParam other) {
        if (other == zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance()) return this;
        if (other.getResultInterval() != 0) {
          setResultInterval(other.getResultInterval());
        }
        if (other.hasEnergyDetectParam()) {
          mergeEnergyDetectParam(other.getEnergyDetectParam());
        }
        if (other.hasSignalDetectParam()) {
          mergeSignalDetectParam(other.getSignalDetectParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.DetectionParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.DetectionParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int resultInterval_ ;
      /**
       * <pre>
       *信号检测的回传间隔,单位ms，0代表每次扫描均上传
       * </pre>
       *
       * <code>int32 result_interval = 1;</code>
       * @return The resultInterval.
       */
      @java.lang.Override
      public int getResultInterval() {
        return resultInterval_;
      }
      /**
       * <pre>
       *信号检测的回传间隔,单位ms，0代表每次扫描均上传
       * </pre>
       *
       * <code>int32 result_interval = 1;</code>
       * @param value The resultInterval to set.
       * @return This builder for chaining.
       */
      public Builder setResultInterval(int value) {
        
        resultInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号检测的回传间隔,单位ms，0代表每次扫描均上传
       * </pre>
       *
       * <code>int32 result_interval = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResultInterval() {
        
        resultInterval_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.scenario.detection.Detection.EnergyDetectionParam energyDetectParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.EnergyDetectionParam, zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder, zb.dcts.scenario.detection.Detection.EnergyDetectionParamOrBuilder> energyDetectParamBuilder_;
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       * @return Whether the energyDetectParam field is set.
       */
      public boolean hasEnergyDetectParam() {
        return energyDetectParamBuilder_ != null || energyDetectParam_ != null;
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       * @return The energyDetectParam.
       */
      public zb.dcts.scenario.detection.Detection.EnergyDetectionParam getEnergyDetectParam() {
        if (energyDetectParamBuilder_ == null) {
          return energyDetectParam_ == null ? zb.dcts.scenario.detection.Detection.EnergyDetectionParam.getDefaultInstance() : energyDetectParam_;
        } else {
          return energyDetectParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       */
      public Builder setEnergyDetectParam(zb.dcts.scenario.detection.Detection.EnergyDetectionParam value) {
        if (energyDetectParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          energyDetectParam_ = value;
          onChanged();
        } else {
          energyDetectParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       */
      public Builder setEnergyDetectParam(
          zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder builderForValue) {
        if (energyDetectParamBuilder_ == null) {
          energyDetectParam_ = builderForValue.build();
          onChanged();
        } else {
          energyDetectParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       */
      public Builder mergeEnergyDetectParam(zb.dcts.scenario.detection.Detection.EnergyDetectionParam value) {
        if (energyDetectParamBuilder_ == null) {
          if (energyDetectParam_ != null) {
            energyDetectParam_ =
              zb.dcts.scenario.detection.Detection.EnergyDetectionParam.newBuilder(energyDetectParam_).mergeFrom(value).buildPartial();
          } else {
            energyDetectParam_ = value;
          }
          onChanged();
        } else {
          energyDetectParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       */
      public Builder clearEnergyDetectParam() {
        if (energyDetectParamBuilder_ == null) {
          energyDetectParam_ = null;
          onChanged();
        } else {
          energyDetectParam_ = null;
          energyDetectParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder getEnergyDetectParamBuilder() {
        
        onChanged();
        return getEnergyDetectParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.EnergyDetectionParamOrBuilder getEnergyDetectParamOrBuilder() {
        if (energyDetectParamBuilder_ != null) {
          return energyDetectParamBuilder_.getMessageOrBuilder();
        } else {
          return energyDetectParam_ == null ?
              zb.dcts.scenario.detection.Detection.EnergyDetectionParam.getDefaultInstance() : energyDetectParam_;
        }
      }
      /**
       * <pre>
       *能量检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.EnergyDetectionParam energy_detect_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.EnergyDetectionParam, zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder, zb.dcts.scenario.detection.Detection.EnergyDetectionParamOrBuilder> 
          getEnergyDetectParamFieldBuilder() {
        if (energyDetectParamBuilder_ == null) {
          energyDetectParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.EnergyDetectionParam, zb.dcts.scenario.detection.Detection.EnergyDetectionParam.Builder, zb.dcts.scenario.detection.Detection.EnergyDetectionParamOrBuilder>(
                  getEnergyDetectParam(),
                  getParentForChildren(),
                  isClean());
          energyDetectParam_ = null;
        }
        return energyDetectParamBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.SignalDetectParam signalDetectParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDetectParam, zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder, zb.dcts.scenario.detection.Detection.SignalDetectParamOrBuilder> signalDetectParamBuilder_;
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       * @return Whether the signalDetectParam field is set.
       */
      public boolean hasSignalDetectParam() {
        return signalDetectParamBuilder_ != null || signalDetectParam_ != null;
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       * @return The signalDetectParam.
       */
      public zb.dcts.scenario.detection.Detection.SignalDetectParam getSignalDetectParam() {
        if (signalDetectParamBuilder_ == null) {
          return signalDetectParam_ == null ? zb.dcts.scenario.detection.Detection.SignalDetectParam.getDefaultInstance() : signalDetectParam_;
        } else {
          return signalDetectParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       */
      public Builder setSignalDetectParam(zb.dcts.scenario.detection.Detection.SignalDetectParam value) {
        if (signalDetectParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signalDetectParam_ = value;
          onChanged();
        } else {
          signalDetectParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       */
      public Builder setSignalDetectParam(
          zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder builderForValue) {
        if (signalDetectParamBuilder_ == null) {
          signalDetectParam_ = builderForValue.build();
          onChanged();
        } else {
          signalDetectParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       */
      public Builder mergeSignalDetectParam(zb.dcts.scenario.detection.Detection.SignalDetectParam value) {
        if (signalDetectParamBuilder_ == null) {
          if (signalDetectParam_ != null) {
            signalDetectParam_ =
              zb.dcts.scenario.detection.Detection.SignalDetectParam.newBuilder(signalDetectParam_).mergeFrom(value).buildPartial();
          } else {
            signalDetectParam_ = value;
          }
          onChanged();
        } else {
          signalDetectParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       */
      public Builder clearSignalDetectParam() {
        if (signalDetectParamBuilder_ == null) {
          signalDetectParam_ = null;
          onChanged();
        } else {
          signalDetectParam_ = null;
          signalDetectParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder getSignalDetectParamBuilder() {
        
        onChanged();
        return getSignalDetectParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDetectParamOrBuilder getSignalDetectParamOrBuilder() {
        if (signalDetectParamBuilder_ != null) {
          return signalDetectParamBuilder_.getMessageOrBuilder();
        } else {
          return signalDetectParam_ == null ?
              zb.dcts.scenario.detection.Detection.SignalDetectParam.getDefaultInstance() : signalDetectParam_;
        }
      }
      /**
       * <pre>
       *信号检测参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalDetectParam signal_detect_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDetectParam, zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder, zb.dcts.scenario.detection.Detection.SignalDetectParamOrBuilder> 
          getSignalDetectParamFieldBuilder() {
        if (signalDetectParamBuilder_ == null) {
          signalDetectParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalDetectParam, zb.dcts.scenario.detection.Detection.SignalDetectParam.Builder, zb.dcts.scenario.detection.Detection.SignalDetectParamOrBuilder>(
                  getSignalDetectParam(),
                  getParentForChildren(),
                  isClean());
          signalDetectParam_ = null;
        }
        return signalDetectParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.DetectionParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.DetectionParam)
    private static final zb.dcts.scenario.detection.Detection.DetectionParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.DetectionParam();
    }

    public static zb.dcts.scenario.detection.Detection.DetectionParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DetectionParam>
        PARSER = new com.google.protobuf.AbstractParser<DetectionParam>() {
      @java.lang.Override
      public DetectionParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DetectionParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DetectionParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DetectionParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.DetectionParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalFeatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalFeature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *所属的检测顺序号
     * </pre>
     *
     * <code>int32 sequence_number = 1;</code>
     * @return The sequenceNumber.
     */
    int getSequenceNumber();

    /**
     * <pre>
     *信号的频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
     * @return Whether the signalBand field is set.
     */
    boolean hasSignalBand();
    /**
     * <pre>
     *信号的频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
     * @return The signalBand.
     */
    zb.dcts.scenario.spectrum.Spectrum.SignalBand getSignalBand();
    /**
     * <pre>
     *信号的频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.SignalBandOrBuilder getSignalBandOrBuilder();

    /**
     * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
     * @return Whether the amplitude field is set.
     */
    boolean hasAmplitude();
    /**
     * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
     * @return The amplitude.
     */
    zb.dcts.Dcts.StatisticVal getAmplitude();
    /**
     * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder();

    /**
     * <code>.zb.dcts.StatisticVal hits = 5;</code>
     * @return Whether the hits field is set.
     */
    boolean hasHits();
    /**
     * <code>.zb.dcts.StatisticVal hits = 5;</code>
     * @return The hits.
     */
    zb.dcts.Dcts.StatisticVal getHits();
    /**
     * <code>.zb.dcts.StatisticVal hits = 5;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getHitsOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalFeature}
   */
  public static final class SignalFeature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalFeature)
      SignalFeatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalFeature.newBuilder() to construct.
    private SignalFeature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalFeature() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalFeature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalFeature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              sequenceNumber_ = input.readInt32();
              break;
            }
            case 18: {
              zb.dcts.scenario.spectrum.Spectrum.SignalBand.Builder subBuilder = null;
              if (signalBand_ != null) {
                subBuilder = signalBand_.toBuilder();
              }
              signalBand_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.SignalBand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signalBand_);
                signalBand_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (amplitude_ != null) {
                subBuilder = amplitude_.toBuilder();
              }
              amplitude_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(amplitude_);
                amplitude_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (hits_ != null) {
                subBuilder = hits_.toBuilder();
              }
              hits_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hits_);
                hits_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalFeature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalFeature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalFeature.class, zb.dcts.scenario.detection.Detection.SignalFeature.Builder.class);
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 1;
    private int sequenceNumber_;
    /**
     * <pre>
     *所属的检测顺序号
     * </pre>
     *
     * <code>int32 sequence_number = 1;</code>
     * @return The sequenceNumber.
     */
    @java.lang.Override
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int SIGNAL_BAND_FIELD_NUMBER = 2;
    private zb.dcts.scenario.spectrum.Spectrum.SignalBand signalBand_;
    /**
     * <pre>
     *信号的频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
     * @return Whether the signalBand field is set.
     */
    @java.lang.Override
    public boolean hasSignalBand() {
      return signalBand_ != null;
    }
    /**
     * <pre>
     *信号的频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
     * @return The signalBand.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SignalBand getSignalBand() {
      return signalBand_ == null ? zb.dcts.scenario.spectrum.Spectrum.SignalBand.getDefaultInstance() : signalBand_;
    }
    /**
     * <pre>
     *信号的频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SignalBandOrBuilder getSignalBandOrBuilder() {
      return getSignalBand();
    }

    public static final int AMPLITUDE_FIELD_NUMBER = 4;
    private zb.dcts.Dcts.StatisticVal amplitude_;
    /**
     * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
     * @return Whether the amplitude field is set.
     */
    @java.lang.Override
    public boolean hasAmplitude() {
      return amplitude_ != null;
    }
    /**
     * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
     * @return The amplitude.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getAmplitude() {
      return amplitude_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
    }
    /**
     * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder() {
      return getAmplitude();
    }

    public static final int HITS_FIELD_NUMBER = 5;
    private zb.dcts.Dcts.StatisticVal hits_;
    /**
     * <code>.zb.dcts.StatisticVal hits = 5;</code>
     * @return Whether the hits field is set.
     */
    @java.lang.Override
    public boolean hasHits() {
      return hits_ != null;
    }
    /**
     * <code>.zb.dcts.StatisticVal hits = 5;</code>
     * @return The hits.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getHits() {
      return hits_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : hits_;
    }
    /**
     * <code>.zb.dcts.StatisticVal hits = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getHitsOrBuilder() {
      return getHits();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sequenceNumber_ != 0) {
        output.writeInt32(1, sequenceNumber_);
      }
      if (signalBand_ != null) {
        output.writeMessage(2, getSignalBand());
      }
      if (amplitude_ != null) {
        output.writeMessage(4, getAmplitude());
      }
      if (hits_ != null) {
        output.writeMessage(5, getHits());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sequenceNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sequenceNumber_);
      }
      if (signalBand_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSignalBand());
      }
      if (amplitude_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAmplitude());
      }
      if (hits_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHits());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalFeature)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalFeature other = (zb.dcts.scenario.detection.Detection.SignalFeature) obj;

      if (getSequenceNumber()
          != other.getSequenceNumber()) return false;
      if (hasSignalBand() != other.hasSignalBand()) return false;
      if (hasSignalBand()) {
        if (!getSignalBand()
            .equals(other.getSignalBand())) return false;
      }
      if (hasAmplitude() != other.hasAmplitude()) return false;
      if (hasAmplitude()) {
        if (!getAmplitude()
            .equals(other.getAmplitude())) return false;
      }
      if (hasHits() != other.hasHits()) return false;
      if (hasHits()) {
        if (!getHits()
            .equals(other.getHits())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNumber();
      if (hasSignalBand()) {
        hash = (37 * hash) + SIGNAL_BAND_FIELD_NUMBER;
        hash = (53 * hash) + getSignalBand().hashCode();
      }
      if (hasAmplitude()) {
        hash = (37 * hash) + AMPLITUDE_FIELD_NUMBER;
        hash = (53 * hash) + getAmplitude().hashCode();
      }
      if (hasHits()) {
        hash = (37 * hash) + HITS_FIELD_NUMBER;
        hash = (53 * hash) + getHits().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalFeature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalFeature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalFeature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalFeature)
        zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalFeature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalFeature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalFeature.class, zb.dcts.scenario.detection.Detection.SignalFeature.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalFeature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sequenceNumber_ = 0;

        if (signalBandBuilder_ == null) {
          signalBand_ = null;
        } else {
          signalBand_ = null;
          signalBandBuilder_ = null;
        }
        if (amplitudeBuilder_ == null) {
          amplitude_ = null;
        } else {
          amplitude_ = null;
          amplitudeBuilder_ = null;
        }
        if (hitsBuilder_ == null) {
          hits_ = null;
        } else {
          hits_ = null;
          hitsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalFeature_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalFeature getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalFeature.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalFeature build() {
        zb.dcts.scenario.detection.Detection.SignalFeature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalFeature buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalFeature result = new zb.dcts.scenario.detection.Detection.SignalFeature(this);
        result.sequenceNumber_ = sequenceNumber_;
        if (signalBandBuilder_ == null) {
          result.signalBand_ = signalBand_;
        } else {
          result.signalBand_ = signalBandBuilder_.build();
        }
        if (amplitudeBuilder_ == null) {
          result.amplitude_ = amplitude_;
        } else {
          result.amplitude_ = amplitudeBuilder_.build();
        }
        if (hitsBuilder_ == null) {
          result.hits_ = hits_;
        } else {
          result.hits_ = hitsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalFeature) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalFeature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalFeature other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalFeature.getDefaultInstance()) return this;
        if (other.getSequenceNumber() != 0) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasSignalBand()) {
          mergeSignalBand(other.getSignalBand());
        }
        if (other.hasAmplitude()) {
          mergeAmplitude(other.getAmplitude());
        }
        if (other.hasHits()) {
          mergeHits(other.getHits());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalFeature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalFeature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <pre>
       *所属的检测顺序号
       * </pre>
       *
       * <code>int32 sequence_number = 1;</code>
       * @return The sequenceNumber.
       */
      @java.lang.Override
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <pre>
       *所属的检测顺序号
       * </pre>
       *
       * <code>int32 sequence_number = 1;</code>
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(int value) {
        
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所属的检测顺序号
       * </pre>
       *
       * <code>int32 sequence_number = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.SignalBand signalBand_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SignalBand, zb.dcts.scenario.spectrum.Spectrum.SignalBand.Builder, zb.dcts.scenario.spectrum.Spectrum.SignalBandOrBuilder> signalBandBuilder_;
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       * @return Whether the signalBand field is set.
       */
      public boolean hasSignalBand() {
        return signalBandBuilder_ != null || signalBand_ != null;
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       * @return The signalBand.
       */
      public zb.dcts.scenario.spectrum.Spectrum.SignalBand getSignalBand() {
        if (signalBandBuilder_ == null) {
          return signalBand_ == null ? zb.dcts.scenario.spectrum.Spectrum.SignalBand.getDefaultInstance() : signalBand_;
        } else {
          return signalBandBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       */
      public Builder setSignalBand(zb.dcts.scenario.spectrum.Spectrum.SignalBand value) {
        if (signalBandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signalBand_ = value;
          onChanged();
        } else {
          signalBandBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       */
      public Builder setSignalBand(
          zb.dcts.scenario.spectrum.Spectrum.SignalBand.Builder builderForValue) {
        if (signalBandBuilder_ == null) {
          signalBand_ = builderForValue.build();
          onChanged();
        } else {
          signalBandBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       */
      public Builder mergeSignalBand(zb.dcts.scenario.spectrum.Spectrum.SignalBand value) {
        if (signalBandBuilder_ == null) {
          if (signalBand_ != null) {
            signalBand_ =
              zb.dcts.scenario.spectrum.Spectrum.SignalBand.newBuilder(signalBand_).mergeFrom(value).buildPartial();
          } else {
            signalBand_ = value;
          }
          onChanged();
        } else {
          signalBandBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       */
      public Builder clearSignalBand() {
        if (signalBandBuilder_ == null) {
          signalBand_ = null;
          onChanged();
        } else {
          signalBand_ = null;
          signalBandBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SignalBand.Builder getSignalBandBuilder() {
        
        onChanged();
        return getSignalBandFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SignalBandOrBuilder getSignalBandOrBuilder() {
        if (signalBandBuilder_ != null) {
          return signalBandBuilder_.getMessageOrBuilder();
        } else {
          return signalBand_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.SignalBand.getDefaultInstance() : signalBand_;
        }
      }
      /**
       * <pre>
       *信号的频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SignalBand signal_band = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SignalBand, zb.dcts.scenario.spectrum.Spectrum.SignalBand.Builder, zb.dcts.scenario.spectrum.Spectrum.SignalBandOrBuilder> 
          getSignalBandFieldBuilder() {
        if (signalBandBuilder_ == null) {
          signalBandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.SignalBand, zb.dcts.scenario.spectrum.Spectrum.SignalBand.Builder, zb.dcts.scenario.spectrum.Spectrum.SignalBandOrBuilder>(
                  getSignalBand(),
                  getParentForChildren(),
                  isClean());
          signalBand_ = null;
        }
        return signalBandBuilder_;
      }

      private zb.dcts.Dcts.StatisticVal amplitude_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> amplitudeBuilder_;
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       * @return Whether the amplitude field is set.
       */
      public boolean hasAmplitude() {
        return amplitudeBuilder_ != null || amplitude_ != null;
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       * @return The amplitude.
       */
      public zb.dcts.Dcts.StatisticVal getAmplitude() {
        if (amplitudeBuilder_ == null) {
          return amplitude_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
        } else {
          return amplitudeBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       */
      public Builder setAmplitude(zb.dcts.Dcts.StatisticVal value) {
        if (amplitudeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          amplitude_ = value;
          onChanged();
        } else {
          amplitudeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       */
      public Builder setAmplitude(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (amplitudeBuilder_ == null) {
          amplitude_ = builderForValue.build();
          onChanged();
        } else {
          amplitudeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       */
      public Builder mergeAmplitude(zb.dcts.Dcts.StatisticVal value) {
        if (amplitudeBuilder_ == null) {
          if (amplitude_ != null) {
            amplitude_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(amplitude_).mergeFrom(value).buildPartial();
          } else {
            amplitude_ = value;
          }
          onChanged();
        } else {
          amplitudeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       */
      public Builder clearAmplitude() {
        if (amplitudeBuilder_ == null) {
          amplitude_ = null;
          onChanged();
        } else {
          amplitude_ = null;
          amplitudeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getAmplitudeBuilder() {
        
        onChanged();
        return getAmplitudeFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder() {
        if (amplitudeBuilder_ != null) {
          return amplitudeBuilder_.getMessageOrBuilder();
        } else {
          return amplitude_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
        }
      }
      /**
       * <code>.zb.dcts.StatisticVal amplitude = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getAmplitudeFieldBuilder() {
        if (amplitudeBuilder_ == null) {
          amplitudeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getAmplitude(),
                  getParentForChildren(),
                  isClean());
          amplitude_ = null;
        }
        return amplitudeBuilder_;
      }

      private zb.dcts.Dcts.StatisticVal hits_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> hitsBuilder_;
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       * @return Whether the hits field is set.
       */
      public boolean hasHits() {
        return hitsBuilder_ != null || hits_ != null;
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       * @return The hits.
       */
      public zb.dcts.Dcts.StatisticVal getHits() {
        if (hitsBuilder_ == null) {
          return hits_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : hits_;
        } else {
          return hitsBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       */
      public Builder setHits(zb.dcts.Dcts.StatisticVal value) {
        if (hitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hits_ = value;
          onChanged();
        } else {
          hitsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       */
      public Builder setHits(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (hitsBuilder_ == null) {
          hits_ = builderForValue.build();
          onChanged();
        } else {
          hitsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       */
      public Builder mergeHits(zb.dcts.Dcts.StatisticVal value) {
        if (hitsBuilder_ == null) {
          if (hits_ != null) {
            hits_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(hits_).mergeFrom(value).buildPartial();
          } else {
            hits_ = value;
          }
          onChanged();
        } else {
          hitsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       */
      public Builder clearHits() {
        if (hitsBuilder_ == null) {
          hits_ = null;
          onChanged();
        } else {
          hits_ = null;
          hitsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getHitsBuilder() {
        
        onChanged();
        return getHitsFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getHitsOrBuilder() {
        if (hitsBuilder_ != null) {
          return hitsBuilder_.getMessageOrBuilder();
        } else {
          return hits_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : hits_;
        }
      }
      /**
       * <code>.zb.dcts.StatisticVal hits = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getHitsFieldBuilder() {
        if (hitsBuilder_ == null) {
          hitsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getHits(),
                  getParentForChildren(),
                  isClean());
          hits_ = null;
        }
        return hitsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalFeature)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalFeature)
    private static final zb.dcts.scenario.detection.Detection.SignalFeature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalFeature();
    }

    public static zb.dcts.scenario.detection.Detection.SignalFeature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalFeature>
        PARSER = new com.google.protobuf.AbstractParser<SignalFeature>() {
      @java.lang.Override
      public SignalFeature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalFeature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalFeature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalFeature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalFeature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalDigestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalDigest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     *信号id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The enum numeric value on the wire for activity.
     */
    int getActivityValue();
    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The activity.
     */
    zb.dcts.scenario.detection.Detection.SignalActivity getActivity();

    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
     * @return Whether the centerFreq field is set.
     */
    boolean hasCenterFreq();
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
     * @return The centerFreq.
     */
    zb.dcts.Dcts.StatisticVal getCenterFreq();
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getCenterFreqOrBuilder();

    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 4;</code>
     * @return Whether the bandWidth field is set.
     */
    boolean hasBandWidth();
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 4;</code>
     * @return The bandWidth.
     */
    zb.dcts.Dcts.StatisticVal getBandWidth();
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 4;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getBandWidthOrBuilder();

    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
     * @return Whether the amplitude field is set.
     */
    boolean hasAmplitude();
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
     * @return The amplitude.
     */
    zb.dcts.Dcts.StatisticVal getAmplitude();
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder();

    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
     * @return Whether the emitTimeSpan field is set.
     */
    boolean hasEmitTimeSpan();
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
     * @return The emitTimeSpan.
     */
    zb.dcts.Dcts.TimeSpan getEmitTimeSpan();
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder();

    /**
     * <pre>
     *该信号feature计数
     * </pre>
     *
     * <code>int32 num_features = 7;</code>
     * @return The numFeatures.
     */
    int getNumFeatures();

    /**
     * <pre>
     *信号的到达角，测向信息
     * </pre>
     *
     * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
     * @return Whether the dirOfArrival field is set.
     */
    boolean hasDirOfArrival();
    /**
     * <pre>
     *信号的到达角，测向信息
     * </pre>
     *
     * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
     * @return The dirOfArrival.
     */
    zb.dcts.Dcts.DOA getDirOfArrival();
    /**
     * <pre>
     *信号的到达角，测向信息
     * </pre>
     *
     * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
     */
    zb.dcts.Dcts.DOAOrBuilder getDirOfArrivalOrBuilder();

    /**
     * <pre>
     *信号分类，一般为调制识别或体制识别的结果
     * </pre>
     *
     * <code>string classification = 10;</code>
     * @return The classification.
     */
    java.lang.String getClassification();
    /**
     * <pre>
     *信号分类，一般为调制识别或体制识别的结果
     * </pre>
     *
     * <code>string classification = 10;</code>
     * @return The bytes for classification.
     */
    com.google.protobuf.ByteString
        getClassificationBytes();

    /**
     * <pre>
     *信号描述，一般为信号所处频段的名称
     * </pre>
     *
     * <code>string description = 11;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     *信号描述，一般为信号所处频段的名称
     * </pre>
     *
     * <code>string description = 11;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * <pre>
   * 信号摘要
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.SignalDigest}
   */
  public static final class SignalDigest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalDigest)
      SignalDigestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalDigest.newBuilder() to construct.
    private SignalDigest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalDigest() {
      id_ = "";
      activity_ = 0;
      classification_ = "";
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalDigest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalDigest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              activity_ = rawValue;
              break;
            }
            case 26: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (centerFreq_ != null) {
                subBuilder = centerFreq_.toBuilder();
              }
              centerFreq_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(centerFreq_);
                centerFreq_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (bandWidth_ != null) {
                subBuilder = bandWidth_.toBuilder();
              }
              bandWidth_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bandWidth_);
                bandWidth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (amplitude_ != null) {
                subBuilder = amplitude_.toBuilder();
              }
              amplitude_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(amplitude_);
                amplitude_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (emitTimeSpan_ != null) {
                subBuilder = emitTimeSpan_.toBuilder();
              }
              emitTimeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emitTimeSpan_);
                emitTimeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              numFeatures_ = input.readInt32();
              break;
            }
            case 74: {
              zb.dcts.Dcts.DOA.Builder subBuilder = null;
              if (dirOfArrival_ != null) {
                subBuilder = dirOfArrival_.toBuilder();
              }
              dirOfArrival_ = input.readMessage(zb.dcts.Dcts.DOA.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dirOfArrival_);
                dirOfArrival_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              classification_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDigest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDigest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalDigest.class, zb.dcts.scenario.detection.Detection.SignalDigest.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *信号id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *信号id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTIVITY_FIELD_NUMBER = 2;
    private int activity_;
    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The enum numeric value on the wire for activity.
     */
    @java.lang.Override public int getActivityValue() {
      return activity_;
    }
    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The activity.
     */
    @java.lang.Override public zb.dcts.scenario.detection.Detection.SignalActivity getActivity() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.detection.Detection.SignalActivity result = zb.dcts.scenario.detection.Detection.SignalActivity.valueOf(activity_);
      return result == null ? zb.dcts.scenario.detection.Detection.SignalActivity.UNRECOGNIZED : result;
    }

    public static final int CENTER_FREQ_FIELD_NUMBER = 3;
    private zb.dcts.Dcts.StatisticVal centerFreq_;
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
     * @return Whether the centerFreq field is set.
     */
    @java.lang.Override
    public boolean hasCenterFreq() {
      return centerFreq_ != null;
    }
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
     * @return The centerFreq.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getCenterFreq() {
      return centerFreq_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : centerFreq_;
    }
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getCenterFreqOrBuilder() {
      return getCenterFreq();
    }

    public static final int BAND_WIDTH_FIELD_NUMBER = 4;
    private zb.dcts.Dcts.StatisticVal bandWidth_;
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 4;</code>
     * @return Whether the bandWidth field is set.
     */
    @java.lang.Override
    public boolean hasBandWidth() {
      return bandWidth_ != null;
    }
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 4;</code>
     * @return The bandWidth.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getBandWidth() {
      return bandWidth_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : bandWidth_;
    }
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getBandWidthOrBuilder() {
      return getBandWidth();
    }

    public static final int AMPLITUDE_FIELD_NUMBER = 5;
    private zb.dcts.Dcts.StatisticVal amplitude_;
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
     * @return Whether the amplitude field is set.
     */
    @java.lang.Override
    public boolean hasAmplitude() {
      return amplitude_ != null;
    }
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
     * @return The amplitude.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getAmplitude() {
      return amplitude_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
    }
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder() {
      return getAmplitude();
    }

    public static final int EMIT_TIME_SPAN_FIELD_NUMBER = 6;
    private zb.dcts.Dcts.TimeSpan emitTimeSpan_;
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
     * @return Whether the emitTimeSpan field is set.
     */
    @java.lang.Override
    public boolean hasEmitTimeSpan() {
      return emitTimeSpan_ != null;
    }
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
     * @return The emitTimeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getEmitTimeSpan() {
      return emitTimeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
    }
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder() {
      return getEmitTimeSpan();
    }

    public static final int NUM_FEATURES_FIELD_NUMBER = 7;
    private int numFeatures_;
    /**
     * <pre>
     *该信号feature计数
     * </pre>
     *
     * <code>int32 num_features = 7;</code>
     * @return The numFeatures.
     */
    @java.lang.Override
    public int getNumFeatures() {
      return numFeatures_;
    }

    public static final int DIR_OF_ARRIVAL_FIELD_NUMBER = 9;
    private zb.dcts.Dcts.DOA dirOfArrival_;
    /**
     * <pre>
     *信号的到达角，测向信息
     * </pre>
     *
     * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
     * @return Whether the dirOfArrival field is set.
     */
    @java.lang.Override
    public boolean hasDirOfArrival() {
      return dirOfArrival_ != null;
    }
    /**
     * <pre>
     *信号的到达角，测向信息
     * </pre>
     *
     * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
     * @return The dirOfArrival.
     */
    @java.lang.Override
    public zb.dcts.Dcts.DOA getDirOfArrival() {
      return dirOfArrival_ == null ? zb.dcts.Dcts.DOA.getDefaultInstance() : dirOfArrival_;
    }
    /**
     * <pre>
     *信号的到达角，测向信息
     * </pre>
     *
     * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.DOAOrBuilder getDirOfArrivalOrBuilder() {
      return getDirOfArrival();
    }

    public static final int CLASSIFICATION_FIELD_NUMBER = 10;
    private volatile java.lang.Object classification_;
    /**
     * <pre>
     *信号分类，一般为调制识别或体制识别的结果
     * </pre>
     *
     * <code>string classification = 10;</code>
     * @return The classification.
     */
    @java.lang.Override
    public java.lang.String getClassification() {
      java.lang.Object ref = classification_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        classification_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *信号分类，一般为调制识别或体制识别的结果
     * </pre>
     *
     * <code>string classification = 10;</code>
     * @return The bytes for classification.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClassificationBytes() {
      java.lang.Object ref = classification_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        classification_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 11;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     *信号描述，一般为信号所处频段的名称
     * </pre>
     *
     * <code>string description = 11;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *信号描述，一般为信号所处频段的名称
     * </pre>
     *
     * <code>string description = 11;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (activity_ != zb.dcts.scenario.detection.Detection.SignalActivity.UNKNOWN.getNumber()) {
        output.writeEnum(2, activity_);
      }
      if (centerFreq_ != null) {
        output.writeMessage(3, getCenterFreq());
      }
      if (bandWidth_ != null) {
        output.writeMessage(4, getBandWidth());
      }
      if (amplitude_ != null) {
        output.writeMessage(5, getAmplitude());
      }
      if (emitTimeSpan_ != null) {
        output.writeMessage(6, getEmitTimeSpan());
      }
      if (numFeatures_ != 0) {
        output.writeInt32(7, numFeatures_);
      }
      if (dirOfArrival_ != null) {
        output.writeMessage(9, getDirOfArrival());
      }
      if (!getClassificationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, classification_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, description_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (activity_ != zb.dcts.scenario.detection.Detection.SignalActivity.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, activity_);
      }
      if (centerFreq_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCenterFreq());
      }
      if (bandWidth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBandWidth());
      }
      if (amplitude_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAmplitude());
      }
      if (emitTimeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getEmitTimeSpan());
      }
      if (numFeatures_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, numFeatures_);
      }
      if (dirOfArrival_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getDirOfArrival());
      }
      if (!getClassificationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, classification_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, description_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalDigest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalDigest other = (zb.dcts.scenario.detection.Detection.SignalDigest) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (activity_ != other.activity_) return false;
      if (hasCenterFreq() != other.hasCenterFreq()) return false;
      if (hasCenterFreq()) {
        if (!getCenterFreq()
            .equals(other.getCenterFreq())) return false;
      }
      if (hasBandWidth() != other.hasBandWidth()) return false;
      if (hasBandWidth()) {
        if (!getBandWidth()
            .equals(other.getBandWidth())) return false;
      }
      if (hasAmplitude() != other.hasAmplitude()) return false;
      if (hasAmplitude()) {
        if (!getAmplitude()
            .equals(other.getAmplitude())) return false;
      }
      if (hasEmitTimeSpan() != other.hasEmitTimeSpan()) return false;
      if (hasEmitTimeSpan()) {
        if (!getEmitTimeSpan()
            .equals(other.getEmitTimeSpan())) return false;
      }
      if (getNumFeatures()
          != other.getNumFeatures()) return false;
      if (hasDirOfArrival() != other.hasDirOfArrival()) return false;
      if (hasDirOfArrival()) {
        if (!getDirOfArrival()
            .equals(other.getDirOfArrival())) return false;
      }
      if (!getClassification()
          .equals(other.getClassification())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + ACTIVITY_FIELD_NUMBER;
      hash = (53 * hash) + activity_;
      if (hasCenterFreq()) {
        hash = (37 * hash) + CENTER_FREQ_FIELD_NUMBER;
        hash = (53 * hash) + getCenterFreq().hashCode();
      }
      if (hasBandWidth()) {
        hash = (37 * hash) + BAND_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getBandWidth().hashCode();
      }
      if (hasAmplitude()) {
        hash = (37 * hash) + AMPLITUDE_FIELD_NUMBER;
        hash = (53 * hash) + getAmplitude().hashCode();
      }
      if (hasEmitTimeSpan()) {
        hash = (37 * hash) + EMIT_TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getEmitTimeSpan().hashCode();
      }
      hash = (37 * hash) + NUM_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getNumFeatures();
      if (hasDirOfArrival()) {
        hash = (37 * hash) + DIR_OF_ARRIVAL_FIELD_NUMBER;
        hash = (53 * hash) + getDirOfArrival().hashCode();
      }
      hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getClassification().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalDigest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalDigest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 信号摘要
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.SignalDigest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalDigest)
        zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDigest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDigest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalDigest.class, zb.dcts.scenario.detection.Detection.SignalDigest.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalDigest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        activity_ = 0;

        if (centerFreqBuilder_ == null) {
          centerFreq_ = null;
        } else {
          centerFreq_ = null;
          centerFreqBuilder_ = null;
        }
        if (bandWidthBuilder_ == null) {
          bandWidth_ = null;
        } else {
          bandWidth_ = null;
          bandWidthBuilder_ = null;
        }
        if (amplitudeBuilder_ == null) {
          amplitude_ = null;
        } else {
          amplitude_ = null;
          amplitudeBuilder_ = null;
        }
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = null;
        } else {
          emitTimeSpan_ = null;
          emitTimeSpanBuilder_ = null;
        }
        numFeatures_ = 0;

        if (dirOfArrivalBuilder_ == null) {
          dirOfArrival_ = null;
        } else {
          dirOfArrival_ = null;
          dirOfArrivalBuilder_ = null;
        }
        classification_ = "";

        description_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalDigest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalDigest getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalDigest build() {
        zb.dcts.scenario.detection.Detection.SignalDigest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalDigest buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalDigest result = new zb.dcts.scenario.detection.Detection.SignalDigest(this);
        result.id_ = id_;
        result.activity_ = activity_;
        if (centerFreqBuilder_ == null) {
          result.centerFreq_ = centerFreq_;
        } else {
          result.centerFreq_ = centerFreqBuilder_.build();
        }
        if (bandWidthBuilder_ == null) {
          result.bandWidth_ = bandWidth_;
        } else {
          result.bandWidth_ = bandWidthBuilder_.build();
        }
        if (amplitudeBuilder_ == null) {
          result.amplitude_ = amplitude_;
        } else {
          result.amplitude_ = amplitudeBuilder_.build();
        }
        if (emitTimeSpanBuilder_ == null) {
          result.emitTimeSpan_ = emitTimeSpan_;
        } else {
          result.emitTimeSpan_ = emitTimeSpanBuilder_.build();
        }
        result.numFeatures_ = numFeatures_;
        if (dirOfArrivalBuilder_ == null) {
          result.dirOfArrival_ = dirOfArrival_;
        } else {
          result.dirOfArrival_ = dirOfArrivalBuilder_.build();
        }
        result.classification_ = classification_;
        result.description_ = description_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalDigest) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalDigest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalDigest other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.activity_ != 0) {
          setActivityValue(other.getActivityValue());
        }
        if (other.hasCenterFreq()) {
          mergeCenterFreq(other.getCenterFreq());
        }
        if (other.hasBandWidth()) {
          mergeBandWidth(other.getBandWidth());
        }
        if (other.hasAmplitude()) {
          mergeAmplitude(other.getAmplitude());
        }
        if (other.hasEmitTimeSpan()) {
          mergeEmitTimeSpan(other.getEmitTimeSpan());
        }
        if (other.getNumFeatures() != 0) {
          setNumFeatures(other.getNumFeatures());
        }
        if (other.hasDirOfArrival()) {
          mergeDirOfArrival(other.getDirOfArrival());
        }
        if (!other.getClassification().isEmpty()) {
          classification_ = other.classification_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalDigest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalDigest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *信号id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *信号id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *信号id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int activity_ = 0;
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @return The enum numeric value on the wire for activity.
       */
      @java.lang.Override public int getActivityValue() {
        return activity_;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @param value The enum numeric value on the wire for activity to set.
       * @return This builder for chaining.
       */
      public Builder setActivityValue(int value) {
        
        activity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @return The activity.
       */
      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalActivity getActivity() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.detection.Detection.SignalActivity result = zb.dcts.scenario.detection.Detection.SignalActivity.valueOf(activity_);
        return result == null ? zb.dcts.scenario.detection.Detection.SignalActivity.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @param value The activity to set.
       * @return This builder for chaining.
       */
      public Builder setActivity(zb.dcts.scenario.detection.Detection.SignalActivity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        activity_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearActivity() {
        
        activity_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.StatisticVal centerFreq_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> centerFreqBuilder_;
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       * @return Whether the centerFreq field is set.
       */
      public boolean hasCenterFreq() {
        return centerFreqBuilder_ != null || centerFreq_ != null;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       * @return The centerFreq.
       */
      public zb.dcts.Dcts.StatisticVal getCenterFreq() {
        if (centerFreqBuilder_ == null) {
          return centerFreq_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : centerFreq_;
        } else {
          return centerFreqBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       */
      public Builder setCenterFreq(zb.dcts.Dcts.StatisticVal value) {
        if (centerFreqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          centerFreq_ = value;
          onChanged();
        } else {
          centerFreqBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       */
      public Builder setCenterFreq(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (centerFreqBuilder_ == null) {
          centerFreq_ = builderForValue.build();
          onChanged();
        } else {
          centerFreqBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       */
      public Builder mergeCenterFreq(zb.dcts.Dcts.StatisticVal value) {
        if (centerFreqBuilder_ == null) {
          if (centerFreq_ != null) {
            centerFreq_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(centerFreq_).mergeFrom(value).buildPartial();
          } else {
            centerFreq_ = value;
          }
          onChanged();
        } else {
          centerFreqBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       */
      public Builder clearCenterFreq() {
        if (centerFreqBuilder_ == null) {
          centerFreq_ = null;
          onChanged();
        } else {
          centerFreq_ = null;
          centerFreqBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getCenterFreqBuilder() {
        
        onChanged();
        return getCenterFreqFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getCenterFreqOrBuilder() {
        if (centerFreqBuilder_ != null) {
          return centerFreqBuilder_.getMessageOrBuilder();
        } else {
          return centerFreq_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : centerFreq_;
        }
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getCenterFreqFieldBuilder() {
        if (centerFreqBuilder_ == null) {
          centerFreqBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getCenterFreq(),
                  getParentForChildren(),
                  isClean());
          centerFreq_ = null;
        }
        return centerFreqBuilder_;
      }

      private zb.dcts.Dcts.StatisticVal bandWidth_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> bandWidthBuilder_;
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       * @return Whether the bandWidth field is set.
       */
      public boolean hasBandWidth() {
        return bandWidthBuilder_ != null || bandWidth_ != null;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       * @return The bandWidth.
       */
      public zb.dcts.Dcts.StatisticVal getBandWidth() {
        if (bandWidthBuilder_ == null) {
          return bandWidth_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : bandWidth_;
        } else {
          return bandWidthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       */
      public Builder setBandWidth(zb.dcts.Dcts.StatisticVal value) {
        if (bandWidthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bandWidth_ = value;
          onChanged();
        } else {
          bandWidthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       */
      public Builder setBandWidth(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (bandWidthBuilder_ == null) {
          bandWidth_ = builderForValue.build();
          onChanged();
        } else {
          bandWidthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       */
      public Builder mergeBandWidth(zb.dcts.Dcts.StatisticVal value) {
        if (bandWidthBuilder_ == null) {
          if (bandWidth_ != null) {
            bandWidth_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(bandWidth_).mergeFrom(value).buildPartial();
          } else {
            bandWidth_ = value;
          }
          onChanged();
        } else {
          bandWidthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       */
      public Builder clearBandWidth() {
        if (bandWidthBuilder_ == null) {
          bandWidth_ = null;
          onChanged();
        } else {
          bandWidth_ = null;
          bandWidthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getBandWidthBuilder() {
        
        onChanged();
        return getBandWidthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getBandWidthOrBuilder() {
        if (bandWidthBuilder_ != null) {
          return bandWidthBuilder_.getMessageOrBuilder();
        } else {
          return bandWidth_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : bandWidth_;
        }
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getBandWidthFieldBuilder() {
        if (bandWidthBuilder_ == null) {
          bandWidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getBandWidth(),
                  getParentForChildren(),
                  isClean());
          bandWidth_ = null;
        }
        return bandWidthBuilder_;
      }

      private zb.dcts.Dcts.StatisticVal amplitude_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> amplitudeBuilder_;
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       * @return Whether the amplitude field is set.
       */
      public boolean hasAmplitude() {
        return amplitudeBuilder_ != null || amplitude_ != null;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       * @return The amplitude.
       */
      public zb.dcts.Dcts.StatisticVal getAmplitude() {
        if (amplitudeBuilder_ == null) {
          return amplitude_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
        } else {
          return amplitudeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       */
      public Builder setAmplitude(zb.dcts.Dcts.StatisticVal value) {
        if (amplitudeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          amplitude_ = value;
          onChanged();
        } else {
          amplitudeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       */
      public Builder setAmplitude(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (amplitudeBuilder_ == null) {
          amplitude_ = builderForValue.build();
          onChanged();
        } else {
          amplitudeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       */
      public Builder mergeAmplitude(zb.dcts.Dcts.StatisticVal value) {
        if (amplitudeBuilder_ == null) {
          if (amplitude_ != null) {
            amplitude_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(amplitude_).mergeFrom(value).buildPartial();
          } else {
            amplitude_ = value;
          }
          onChanged();
        } else {
          amplitudeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       */
      public Builder clearAmplitude() {
        if (amplitudeBuilder_ == null) {
          amplitude_ = null;
          onChanged();
        } else {
          amplitude_ = null;
          amplitudeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getAmplitudeBuilder() {
        
        onChanged();
        return getAmplitudeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder() {
        if (amplitudeBuilder_ != null) {
          return amplitudeBuilder_.getMessageOrBuilder();
        } else {
          return amplitude_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
        }
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getAmplitudeFieldBuilder() {
        if (amplitudeBuilder_ == null) {
          amplitudeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getAmplitude(),
                  getParentForChildren(),
                  isClean());
          amplitude_ = null;
        }
        return amplitudeBuilder_;
      }

      private zb.dcts.Dcts.TimeSpan emitTimeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> emitTimeSpanBuilder_;
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       * @return Whether the emitTimeSpan field is set.
       */
      public boolean hasEmitTimeSpan() {
        return emitTimeSpanBuilder_ != null || emitTimeSpan_ != null;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       * @return The emitTimeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getEmitTimeSpan() {
        if (emitTimeSpanBuilder_ == null) {
          return emitTimeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
        } else {
          return emitTimeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       */
      public Builder setEmitTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (emitTimeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emitTimeSpan_ = value;
          onChanged();
        } else {
          emitTimeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       */
      public Builder setEmitTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = builderForValue.build();
          onChanged();
        } else {
          emitTimeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       */
      public Builder mergeEmitTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (emitTimeSpanBuilder_ == null) {
          if (emitTimeSpan_ != null) {
            emitTimeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(emitTimeSpan_).mergeFrom(value).buildPartial();
          } else {
            emitTimeSpan_ = value;
          }
          onChanged();
        } else {
          emitTimeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       */
      public Builder clearEmitTimeSpan() {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = null;
          onChanged();
        } else {
          emitTimeSpan_ = null;
          emitTimeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getEmitTimeSpanBuilder() {
        
        onChanged();
        return getEmitTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder() {
        if (emitTimeSpanBuilder_ != null) {
          return emitTimeSpanBuilder_.getMessageOrBuilder();
        } else {
          return emitTimeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
        }
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getEmitTimeSpanFieldBuilder() {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getEmitTimeSpan(),
                  getParentForChildren(),
                  isClean());
          emitTimeSpan_ = null;
        }
        return emitTimeSpanBuilder_;
      }

      private int numFeatures_ ;
      /**
       * <pre>
       *该信号feature计数
       * </pre>
       *
       * <code>int32 num_features = 7;</code>
       * @return The numFeatures.
       */
      @java.lang.Override
      public int getNumFeatures() {
        return numFeatures_;
      }
      /**
       * <pre>
       *该信号feature计数
       * </pre>
       *
       * <code>int32 num_features = 7;</code>
       * @param value The numFeatures to set.
       * @return This builder for chaining.
       */
      public Builder setNumFeatures(int value) {
        
        numFeatures_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该信号feature计数
       * </pre>
       *
       * <code>int32 num_features = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumFeatures() {
        
        numFeatures_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.DOA dirOfArrival_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DOA, zb.dcts.Dcts.DOA.Builder, zb.dcts.Dcts.DOAOrBuilder> dirOfArrivalBuilder_;
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       * @return Whether the dirOfArrival field is set.
       */
      public boolean hasDirOfArrival() {
        return dirOfArrivalBuilder_ != null || dirOfArrival_ != null;
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       * @return The dirOfArrival.
       */
      public zb.dcts.Dcts.DOA getDirOfArrival() {
        if (dirOfArrivalBuilder_ == null) {
          return dirOfArrival_ == null ? zb.dcts.Dcts.DOA.getDefaultInstance() : dirOfArrival_;
        } else {
          return dirOfArrivalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       */
      public Builder setDirOfArrival(zb.dcts.Dcts.DOA value) {
        if (dirOfArrivalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dirOfArrival_ = value;
          onChanged();
        } else {
          dirOfArrivalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       */
      public Builder setDirOfArrival(
          zb.dcts.Dcts.DOA.Builder builderForValue) {
        if (dirOfArrivalBuilder_ == null) {
          dirOfArrival_ = builderForValue.build();
          onChanged();
        } else {
          dirOfArrivalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       */
      public Builder mergeDirOfArrival(zb.dcts.Dcts.DOA value) {
        if (dirOfArrivalBuilder_ == null) {
          if (dirOfArrival_ != null) {
            dirOfArrival_ =
              zb.dcts.Dcts.DOA.newBuilder(dirOfArrival_).mergeFrom(value).buildPartial();
          } else {
            dirOfArrival_ = value;
          }
          onChanged();
        } else {
          dirOfArrivalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       */
      public Builder clearDirOfArrival() {
        if (dirOfArrivalBuilder_ == null) {
          dirOfArrival_ = null;
          onChanged();
        } else {
          dirOfArrival_ = null;
          dirOfArrivalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       */
      public zb.dcts.Dcts.DOA.Builder getDirOfArrivalBuilder() {
        
        onChanged();
        return getDirOfArrivalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       */
      public zb.dcts.Dcts.DOAOrBuilder getDirOfArrivalOrBuilder() {
        if (dirOfArrivalBuilder_ != null) {
          return dirOfArrivalBuilder_.getMessageOrBuilder();
        } else {
          return dirOfArrival_ == null ?
              zb.dcts.Dcts.DOA.getDefaultInstance() : dirOfArrival_;
        }
      }
      /**
       * <pre>
       *信号的到达角，测向信息
       * </pre>
       *
       * <code>.zb.dcts.DOA dir_of_arrival = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DOA, zb.dcts.Dcts.DOA.Builder, zb.dcts.Dcts.DOAOrBuilder> 
          getDirOfArrivalFieldBuilder() {
        if (dirOfArrivalBuilder_ == null) {
          dirOfArrivalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.DOA, zb.dcts.Dcts.DOA.Builder, zb.dcts.Dcts.DOAOrBuilder>(
                  getDirOfArrival(),
                  getParentForChildren(),
                  isClean());
          dirOfArrival_ = null;
        }
        return dirOfArrivalBuilder_;
      }

      private java.lang.Object classification_ = "";
      /**
       * <pre>
       *信号分类，一般为调制识别或体制识别的结果
       * </pre>
       *
       * <code>string classification = 10;</code>
       * @return The classification.
       */
      public java.lang.String getClassification() {
        java.lang.Object ref = classification_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          classification_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *信号分类，一般为调制识别或体制识别的结果
       * </pre>
       *
       * <code>string classification = 10;</code>
       * @return The bytes for classification.
       */
      public com.google.protobuf.ByteString
          getClassificationBytes() {
        java.lang.Object ref = classification_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          classification_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *信号分类，一般为调制识别或体制识别的结果
       * </pre>
       *
       * <code>string classification = 10;</code>
       * @param value The classification to set.
       * @return This builder for chaining.
       */
      public Builder setClassification(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        classification_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号分类，一般为调制识别或体制识别的结果
       * </pre>
       *
       * <code>string classification = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearClassification() {
        
        classification_ = getDefaultInstance().getClassification();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号分类，一般为调制识别或体制识别的结果
       * </pre>
       *
       * <code>string classification = 10;</code>
       * @param value The bytes for classification to set.
       * @return This builder for chaining.
       */
      public Builder setClassificationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        classification_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       *信号描述，一般为信号所处频段的名称
       * </pre>
       *
       * <code>string description = 11;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *信号描述，一般为信号所处频段的名称
       * </pre>
       *
       * <code>string description = 11;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *信号描述，一般为信号所处频段的名称
       * </pre>
       *
       * <code>string description = 11;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号描述，一般为信号所处频段的名称
       * </pre>
       *
       * <code>string description = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号描述，一般为信号所处频段的名称
       * </pre>
       *
       * <code>string description = 11;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalDigest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalDigest)
    private static final zb.dcts.scenario.detection.Detection.SignalDigest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalDigest();
    }

    public static zb.dcts.scenario.detection.Detection.SignalDigest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalDigest>
        PARSER = new com.google.protobuf.AbstractParser<SignalDigest>() {
      @java.lang.Override
      public SignalDigest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalDigest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalDigest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalDigest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalSegmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalSegment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return Whether the digest field is set.
     */
    boolean hasDigest();
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return The digest.
     */
    zb.dcts.scenario.detection.Detection.SignalDigest getDigest();
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getDigestOrBuilder();

    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.SignalFeature> 
        getFeatureDetailsList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalFeature getFeatureDetails(int index);
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    int getFeatureDetailsCount();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder> 
        getFeatureDetailsOrBuilderList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder getFeatureDetailsOrBuilder(
        int index);
  }
  /**
   * <pre>
   *信号片段
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.SignalSegment}
   */
  public static final class SignalSegment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalSegment)
      SignalSegmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalSegment.newBuilder() to construct.
    private SignalSegment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalSegment() {
      featureDetails_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalSegment();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalSegment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.detection.Detection.SignalDigest.Builder subBuilder = null;
              if (digest_ != null) {
                subBuilder = digest_.toBuilder();
              }
              digest_ = input.readMessage(zb.dcts.scenario.detection.Detection.SignalDigest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(digest_);
                digest_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                featureDetails_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalFeature>();
                mutable_bitField0_ |= 0x00000001;
              }
              featureDetails_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.SignalFeature.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          featureDetails_ = java.util.Collections.unmodifiableList(featureDetails_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalSegment.class, zb.dcts.scenario.detection.Detection.SignalSegment.Builder.class);
    }

    public static final int DIGEST_FIELD_NUMBER = 1;
    private zb.dcts.scenario.detection.Detection.SignalDigest digest_;
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return Whether the digest field is set.
     */
    @java.lang.Override
    public boolean hasDigest() {
      return digest_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return The digest.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigest getDigest() {
      return digest_ == null ? zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance() : digest_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getDigestOrBuilder() {
      return getDigest();
    }

    public static final int FEATURE_DETAILS_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.scenario.detection.Detection.SignalFeature> featureDetails_;
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.SignalFeature> getFeatureDetailsList() {
      return featureDetails_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder> 
        getFeatureDetailsOrBuilderList() {
      return featureDetails_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    @java.lang.Override
    public int getFeatureDetailsCount() {
      return featureDetails_.size();
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalFeature getFeatureDetails(int index) {
      return featureDetails_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder getFeatureDetailsOrBuilder(
        int index) {
      return featureDetails_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (digest_ != null) {
        output.writeMessage(1, getDigest());
      }
      for (int i = 0; i < featureDetails_.size(); i++) {
        output.writeMessage(2, featureDetails_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (digest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDigest());
      }
      for (int i = 0; i < featureDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, featureDetails_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalSegment)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalSegment other = (zb.dcts.scenario.detection.Detection.SignalSegment) obj;

      if (hasDigest() != other.hasDigest()) return false;
      if (hasDigest()) {
        if (!getDigest()
            .equals(other.getDigest())) return false;
      }
      if (!getFeatureDetailsList()
          .equals(other.getFeatureDetailsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDigest()) {
        hash = (37 * hash) + DIGEST_FIELD_NUMBER;
        hash = (53 * hash) + getDigest().hashCode();
      }
      if (getFeatureDetailsCount() > 0) {
        hash = (37 * hash) + FEATURE_DETAILS_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureDetailsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSegment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalSegment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *信号片段
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.SignalSegment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalSegment)
        zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalSegment.class, zb.dcts.scenario.detection.Detection.SignalSegment.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalSegment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFeatureDetailsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (digestBuilder_ == null) {
          digest_ = null;
        } else {
          digest_ = null;
          digestBuilder_ = null;
        }
        if (featureDetailsBuilder_ == null) {
          featureDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          featureDetailsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSegment_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSegment getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalSegment.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSegment build() {
        zb.dcts.scenario.detection.Detection.SignalSegment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSegment buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalSegment result = new zb.dcts.scenario.detection.Detection.SignalSegment(this);
        int from_bitField0_ = bitField0_;
        if (digestBuilder_ == null) {
          result.digest_ = digest_;
        } else {
          result.digest_ = digestBuilder_.build();
        }
        if (featureDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            featureDetails_ = java.util.Collections.unmodifiableList(featureDetails_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.featureDetails_ = featureDetails_;
        } else {
          result.featureDetails_ = featureDetailsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalSegment) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalSegment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalSegment other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalSegment.getDefaultInstance()) return this;
        if (other.hasDigest()) {
          mergeDigest(other.getDigest());
        }
        if (featureDetailsBuilder_ == null) {
          if (!other.featureDetails_.isEmpty()) {
            if (featureDetails_.isEmpty()) {
              featureDetails_ = other.featureDetails_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFeatureDetailsIsMutable();
              featureDetails_.addAll(other.featureDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.featureDetails_.isEmpty()) {
            if (featureDetailsBuilder_.isEmpty()) {
              featureDetailsBuilder_.dispose();
              featureDetailsBuilder_ = null;
              featureDetails_ = other.featureDetails_;
              bitField0_ = (bitField0_ & ~0x00000001);
              featureDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFeatureDetailsFieldBuilder() : null;
            } else {
              featureDetailsBuilder_.addAllMessages(other.featureDetails_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalSegment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalSegment) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.scenario.detection.Detection.SignalDigest digest_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> digestBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       * @return Whether the digest field is set.
       */
      public boolean hasDigest() {
        return digestBuilder_ != null || digest_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       * @return The digest.
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest getDigest() {
        if (digestBuilder_ == null) {
          return digest_ == null ? zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance() : digest_;
        } else {
          return digestBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder setDigest(zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (digestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          digest_ = value;
          onChanged();
        } else {
          digestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder setDigest(
          zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (digestBuilder_ == null) {
          digest_ = builderForValue.build();
          onChanged();
        } else {
          digestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder mergeDigest(zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (digestBuilder_ == null) {
          if (digest_ != null) {
            digest_ =
              zb.dcts.scenario.detection.Detection.SignalDigest.newBuilder(digest_).mergeFrom(value).buildPartial();
          } else {
            digest_ = value;
          }
          onChanged();
        } else {
          digestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder clearDigest() {
        if (digestBuilder_ == null) {
          digest_ = null;
          onChanged();
        } else {
          digest_ = null;
          digestBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder getDigestBuilder() {
        
        onChanged();
        return getDigestFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getDigestOrBuilder() {
        if (digestBuilder_ != null) {
          return digestBuilder_.getMessageOrBuilder();
        } else {
          return digest_ == null ?
              zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance() : digest_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
          getDigestFieldBuilder() {
        if (digestBuilder_ == null) {
          digestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder>(
                  getDigest(),
                  getParentForChildren(),
                  isClean());
          digest_ = null;
        }
        return digestBuilder_;
      }

      private java.util.List<zb.dcts.scenario.detection.Detection.SignalFeature> featureDetails_ =
        java.util.Collections.emptyList();
      private void ensureFeatureDetailsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          featureDetails_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalFeature>(featureDetails_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalFeature, zb.dcts.scenario.detection.Detection.SignalFeature.Builder, zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder> featureDetailsBuilder_;

      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalFeature> getFeatureDetailsList() {
        if (featureDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(featureDetails_);
        } else {
          return featureDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public int getFeatureDetailsCount() {
        if (featureDetailsBuilder_ == null) {
          return featureDetails_.size();
        } else {
          return featureDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalFeature getFeatureDetails(int index) {
        if (featureDetailsBuilder_ == null) {
          return featureDetails_.get(index);
        } else {
          return featureDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder setFeatureDetails(
          int index, zb.dcts.scenario.detection.Detection.SignalFeature value) {
        if (featureDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureDetailsIsMutable();
          featureDetails_.set(index, value);
          onChanged();
        } else {
          featureDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder setFeatureDetails(
          int index, zb.dcts.scenario.detection.Detection.SignalFeature.Builder builderForValue) {
        if (featureDetailsBuilder_ == null) {
          ensureFeatureDetailsIsMutable();
          featureDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          featureDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder addFeatureDetails(zb.dcts.scenario.detection.Detection.SignalFeature value) {
        if (featureDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureDetailsIsMutable();
          featureDetails_.add(value);
          onChanged();
        } else {
          featureDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder addFeatureDetails(
          int index, zb.dcts.scenario.detection.Detection.SignalFeature value) {
        if (featureDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureDetailsIsMutable();
          featureDetails_.add(index, value);
          onChanged();
        } else {
          featureDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder addFeatureDetails(
          zb.dcts.scenario.detection.Detection.SignalFeature.Builder builderForValue) {
        if (featureDetailsBuilder_ == null) {
          ensureFeatureDetailsIsMutable();
          featureDetails_.add(builderForValue.build());
          onChanged();
        } else {
          featureDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder addFeatureDetails(
          int index, zb.dcts.scenario.detection.Detection.SignalFeature.Builder builderForValue) {
        if (featureDetailsBuilder_ == null) {
          ensureFeatureDetailsIsMutable();
          featureDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          featureDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder addAllFeatureDetails(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.SignalFeature> values) {
        if (featureDetailsBuilder_ == null) {
          ensureFeatureDetailsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, featureDetails_);
          onChanged();
        } else {
          featureDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder clearFeatureDetails() {
        if (featureDetailsBuilder_ == null) {
          featureDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          featureDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public Builder removeFeatureDetails(int index) {
        if (featureDetailsBuilder_ == null) {
          ensureFeatureDetailsIsMutable();
          featureDetails_.remove(index);
          onChanged();
        } else {
          featureDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalFeature.Builder getFeatureDetailsBuilder(
          int index) {
        return getFeatureDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder getFeatureDetailsOrBuilder(
          int index) {
        if (featureDetailsBuilder_ == null) {
          return featureDetails_.get(index);  } else {
          return featureDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder> 
           getFeatureDetailsOrBuilderList() {
        if (featureDetailsBuilder_ != null) {
          return featureDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(featureDetails_);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalFeature.Builder addFeatureDetailsBuilder() {
        return getFeatureDetailsFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.SignalFeature.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalFeature.Builder addFeatureDetailsBuilder(
          int index) {
        return getFeatureDetailsFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.SignalFeature.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalFeature feature_details = 2;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalFeature.Builder> 
           getFeatureDetailsBuilderList() {
        return getFeatureDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalFeature, zb.dcts.scenario.detection.Detection.SignalFeature.Builder, zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder> 
          getFeatureDetailsFieldBuilder() {
        if (featureDetailsBuilder_ == null) {
          featureDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalFeature, zb.dcts.scenario.detection.Detection.SignalFeature.Builder, zb.dcts.scenario.detection.Detection.SignalFeatureOrBuilder>(
                  featureDetails_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          featureDetails_ = null;
        }
        return featureDetailsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalSegment)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSegment)
    private static final zb.dcts.scenario.detection.Detection.SignalSegment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalSegment();
    }

    public static zb.dcts.scenario.detection.Detection.SignalSegment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalSegment>
        PARSER = new com.google.protobuf.AbstractParser<SignalSegment>() {
      @java.lang.Override
      public SignalSegment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalSegment(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalSegment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalSegment> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSegment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HopSignalDigestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.HopSignalDigest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
     * @return Whether the centerFreq field is set.
     */
    boolean hasCenterFreq();
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
     * @return The centerFreq.
     */
    zb.dcts.Dcts.StatisticVal getCenterFreq();
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getCenterFreqOrBuilder();

    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 2;</code>
     * @return Whether the bandWidth field is set.
     */
    boolean hasBandWidth();
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 2;</code>
     * @return The bandWidth.
     */
    zb.dcts.Dcts.StatisticVal getBandWidth();
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 2;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getBandWidthOrBuilder();

    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
     * @return Whether the amplitude field is set.
     */
    boolean hasAmplitude();
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
     * @return The amplitude.
     */
    zb.dcts.Dcts.StatisticVal getAmplitude();
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
     */
    zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder();

    /**
     * <pre>
     *该信号feature计数
     * </pre>
     *
     * <code>int32 num_features = 5;</code>
     * @return The numFeatures.
     */
    int getNumFeatures();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.HopSignalDigest}
   */
  public static final class HopSignalDigest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.HopSignalDigest)
      HopSignalDigestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HopSignalDigest.newBuilder() to construct.
    private HopSignalDigest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HopSignalDigest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HopSignalDigest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HopSignalDigest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (centerFreq_ != null) {
                subBuilder = centerFreq_.toBuilder();
              }
              centerFreq_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(centerFreq_);
                centerFreq_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (bandWidth_ != null) {
                subBuilder = bandWidth_.toBuilder();
              }
              bandWidth_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bandWidth_);
                bandWidth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.Dcts.StatisticVal.Builder subBuilder = null;
              if (amplitude_ != null) {
                subBuilder = amplitude_.toBuilder();
              }
              amplitude_ = input.readMessage(zb.dcts.Dcts.StatisticVal.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(amplitude_);
                amplitude_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              numFeatures_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDigest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDigest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.HopSignalDigest.class, zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder.class);
    }

    public static final int CENTER_FREQ_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.StatisticVal centerFreq_;
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
     * @return Whether the centerFreq field is set.
     */
    @java.lang.Override
    public boolean hasCenterFreq() {
      return centerFreq_ != null;
    }
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
     * @return The centerFreq.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getCenterFreq() {
      return centerFreq_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : centerFreq_;
    }
    /**
     * <pre>
     *中心频率，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getCenterFreqOrBuilder() {
      return getCenterFreq();
    }

    public static final int BAND_WIDTH_FIELD_NUMBER = 2;
    private zb.dcts.Dcts.StatisticVal bandWidth_;
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 2;</code>
     * @return Whether the bandWidth field is set.
     */
    @java.lang.Override
    public boolean hasBandWidth() {
      return bandWidth_ != null;
    }
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 2;</code>
     * @return The bandWidth.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getBandWidth() {
      return bandWidth_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : bandWidth_;
    }
    /**
     * <pre>
     *带宽，单位Hz
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal band_width = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getBandWidthOrBuilder() {
      return getBandWidth();
    }

    public static final int AMPLITUDE_FIELD_NUMBER = 3;
    private zb.dcts.Dcts.StatisticVal amplitude_;
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
     * @return Whether the amplitude field is set.
     */
    @java.lang.Override
    public boolean hasAmplitude() {
      return amplitude_ != null;
    }
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
     * @return The amplitude.
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticVal getAmplitude() {
      return amplitude_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
    }
    /**
     * <pre>
     *幅度，单位dBm
     * </pre>
     *
     * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder() {
      return getAmplitude();
    }

    public static final int NUM_FEATURES_FIELD_NUMBER = 5;
    private int numFeatures_;
    /**
     * <pre>
     *该信号feature计数
     * </pre>
     *
     * <code>int32 num_features = 5;</code>
     * @return The numFeatures.
     */
    @java.lang.Override
    public int getNumFeatures() {
      return numFeatures_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (centerFreq_ != null) {
        output.writeMessage(1, getCenterFreq());
      }
      if (bandWidth_ != null) {
        output.writeMessage(2, getBandWidth());
      }
      if (amplitude_ != null) {
        output.writeMessage(3, getAmplitude());
      }
      if (numFeatures_ != 0) {
        output.writeInt32(5, numFeatures_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (centerFreq_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCenterFreq());
      }
      if (bandWidth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBandWidth());
      }
      if (amplitude_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAmplitude());
      }
      if (numFeatures_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, numFeatures_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.HopSignalDigest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.HopSignalDigest other = (zb.dcts.scenario.detection.Detection.HopSignalDigest) obj;

      if (hasCenterFreq() != other.hasCenterFreq()) return false;
      if (hasCenterFreq()) {
        if (!getCenterFreq()
            .equals(other.getCenterFreq())) return false;
      }
      if (hasBandWidth() != other.hasBandWidth()) return false;
      if (hasBandWidth()) {
        if (!getBandWidth()
            .equals(other.getBandWidth())) return false;
      }
      if (hasAmplitude() != other.hasAmplitude()) return false;
      if (hasAmplitude()) {
        if (!getAmplitude()
            .equals(other.getAmplitude())) return false;
      }
      if (getNumFeatures()
          != other.getNumFeatures()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCenterFreq()) {
        hash = (37 * hash) + CENTER_FREQ_FIELD_NUMBER;
        hash = (53 * hash) + getCenterFreq().hashCode();
      }
      if (hasBandWidth()) {
        hash = (37 * hash) + BAND_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getBandWidth().hashCode();
      }
      if (hasAmplitude()) {
        hash = (37 * hash) + AMPLITUDE_FIELD_NUMBER;
        hash = (53 * hash) + getAmplitude().hashCode();
      }
      hash = (37 * hash) + NUM_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getNumFeatures();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalDigest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.HopSignalDigest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.HopSignalDigest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.HopSignalDigest)
        zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDigest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDigest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.HopSignalDigest.class, zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.HopSignalDigest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (centerFreqBuilder_ == null) {
          centerFreq_ = null;
        } else {
          centerFreq_ = null;
          centerFreqBuilder_ = null;
        }
        if (bandWidthBuilder_ == null) {
          bandWidth_ = null;
        } else {
          bandWidth_ = null;
          bandWidthBuilder_ = null;
        }
        if (amplitudeBuilder_ == null) {
          amplitude_ = null;
        } else {
          amplitude_ = null;
          amplitudeBuilder_ = null;
        }
        numFeatures_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalDigest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalDigest getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.HopSignalDigest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalDigest build() {
        zb.dcts.scenario.detection.Detection.HopSignalDigest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalDigest buildPartial() {
        zb.dcts.scenario.detection.Detection.HopSignalDigest result = new zb.dcts.scenario.detection.Detection.HopSignalDigest(this);
        if (centerFreqBuilder_ == null) {
          result.centerFreq_ = centerFreq_;
        } else {
          result.centerFreq_ = centerFreqBuilder_.build();
        }
        if (bandWidthBuilder_ == null) {
          result.bandWidth_ = bandWidth_;
        } else {
          result.bandWidth_ = bandWidthBuilder_.build();
        }
        if (amplitudeBuilder_ == null) {
          result.amplitude_ = amplitude_;
        } else {
          result.amplitude_ = amplitudeBuilder_.build();
        }
        result.numFeatures_ = numFeatures_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.HopSignalDigest) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.HopSignalDigest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.HopSignalDigest other) {
        if (other == zb.dcts.scenario.detection.Detection.HopSignalDigest.getDefaultInstance()) return this;
        if (other.hasCenterFreq()) {
          mergeCenterFreq(other.getCenterFreq());
        }
        if (other.hasBandWidth()) {
          mergeBandWidth(other.getBandWidth());
        }
        if (other.hasAmplitude()) {
          mergeAmplitude(other.getAmplitude());
        }
        if (other.getNumFeatures() != 0) {
          setNumFeatures(other.getNumFeatures());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.HopSignalDigest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.HopSignalDigest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.Dcts.StatisticVal centerFreq_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> centerFreqBuilder_;
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       * @return Whether the centerFreq field is set.
       */
      public boolean hasCenterFreq() {
        return centerFreqBuilder_ != null || centerFreq_ != null;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       * @return The centerFreq.
       */
      public zb.dcts.Dcts.StatisticVal getCenterFreq() {
        if (centerFreqBuilder_ == null) {
          return centerFreq_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : centerFreq_;
        } else {
          return centerFreqBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       */
      public Builder setCenterFreq(zb.dcts.Dcts.StatisticVal value) {
        if (centerFreqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          centerFreq_ = value;
          onChanged();
        } else {
          centerFreqBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       */
      public Builder setCenterFreq(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (centerFreqBuilder_ == null) {
          centerFreq_ = builderForValue.build();
          onChanged();
        } else {
          centerFreqBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       */
      public Builder mergeCenterFreq(zb.dcts.Dcts.StatisticVal value) {
        if (centerFreqBuilder_ == null) {
          if (centerFreq_ != null) {
            centerFreq_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(centerFreq_).mergeFrom(value).buildPartial();
          } else {
            centerFreq_ = value;
          }
          onChanged();
        } else {
          centerFreqBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       */
      public Builder clearCenterFreq() {
        if (centerFreqBuilder_ == null) {
          centerFreq_ = null;
          onChanged();
        } else {
          centerFreq_ = null;
          centerFreqBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getCenterFreqBuilder() {
        
        onChanged();
        return getCenterFreqFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getCenterFreqOrBuilder() {
        if (centerFreqBuilder_ != null) {
          return centerFreqBuilder_.getMessageOrBuilder();
        } else {
          return centerFreq_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : centerFreq_;
        }
      }
      /**
       * <pre>
       *中心频率，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal center_freq = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getCenterFreqFieldBuilder() {
        if (centerFreqBuilder_ == null) {
          centerFreqBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getCenterFreq(),
                  getParentForChildren(),
                  isClean());
          centerFreq_ = null;
        }
        return centerFreqBuilder_;
      }

      private zb.dcts.Dcts.StatisticVal bandWidth_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> bandWidthBuilder_;
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       * @return Whether the bandWidth field is set.
       */
      public boolean hasBandWidth() {
        return bandWidthBuilder_ != null || bandWidth_ != null;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       * @return The bandWidth.
       */
      public zb.dcts.Dcts.StatisticVal getBandWidth() {
        if (bandWidthBuilder_ == null) {
          return bandWidth_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : bandWidth_;
        } else {
          return bandWidthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       */
      public Builder setBandWidth(zb.dcts.Dcts.StatisticVal value) {
        if (bandWidthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bandWidth_ = value;
          onChanged();
        } else {
          bandWidthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       */
      public Builder setBandWidth(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (bandWidthBuilder_ == null) {
          bandWidth_ = builderForValue.build();
          onChanged();
        } else {
          bandWidthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       */
      public Builder mergeBandWidth(zb.dcts.Dcts.StatisticVal value) {
        if (bandWidthBuilder_ == null) {
          if (bandWidth_ != null) {
            bandWidth_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(bandWidth_).mergeFrom(value).buildPartial();
          } else {
            bandWidth_ = value;
          }
          onChanged();
        } else {
          bandWidthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       */
      public Builder clearBandWidth() {
        if (bandWidthBuilder_ == null) {
          bandWidth_ = null;
          onChanged();
        } else {
          bandWidth_ = null;
          bandWidthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getBandWidthBuilder() {
        
        onChanged();
        return getBandWidthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getBandWidthOrBuilder() {
        if (bandWidthBuilder_ != null) {
          return bandWidthBuilder_.getMessageOrBuilder();
        } else {
          return bandWidth_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : bandWidth_;
        }
      }
      /**
       * <pre>
       *带宽，单位Hz
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal band_width = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getBandWidthFieldBuilder() {
        if (bandWidthBuilder_ == null) {
          bandWidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getBandWidth(),
                  getParentForChildren(),
                  isClean());
          bandWidth_ = null;
        }
        return bandWidthBuilder_;
      }

      private zb.dcts.Dcts.StatisticVal amplitude_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> amplitudeBuilder_;
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       * @return Whether the amplitude field is set.
       */
      public boolean hasAmplitude() {
        return amplitudeBuilder_ != null || amplitude_ != null;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       * @return The amplitude.
       */
      public zb.dcts.Dcts.StatisticVal getAmplitude() {
        if (amplitudeBuilder_ == null) {
          return amplitude_ == null ? zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
        } else {
          return amplitudeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       */
      public Builder setAmplitude(zb.dcts.Dcts.StatisticVal value) {
        if (amplitudeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          amplitude_ = value;
          onChanged();
        } else {
          amplitudeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       */
      public Builder setAmplitude(
          zb.dcts.Dcts.StatisticVal.Builder builderForValue) {
        if (amplitudeBuilder_ == null) {
          amplitude_ = builderForValue.build();
          onChanged();
        } else {
          amplitudeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       */
      public Builder mergeAmplitude(zb.dcts.Dcts.StatisticVal value) {
        if (amplitudeBuilder_ == null) {
          if (amplitude_ != null) {
            amplitude_ =
              zb.dcts.Dcts.StatisticVal.newBuilder(amplitude_).mergeFrom(value).buildPartial();
          } else {
            amplitude_ = value;
          }
          onChanged();
        } else {
          amplitudeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       */
      public Builder clearAmplitude() {
        if (amplitudeBuilder_ == null) {
          amplitude_ = null;
          onChanged();
        } else {
          amplitude_ = null;
          amplitudeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       */
      public zb.dcts.Dcts.StatisticVal.Builder getAmplitudeBuilder() {
        
        onChanged();
        return getAmplitudeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       */
      public zb.dcts.Dcts.StatisticValOrBuilder getAmplitudeOrBuilder() {
        if (amplitudeBuilder_ != null) {
          return amplitudeBuilder_.getMessageOrBuilder();
        } else {
          return amplitude_ == null ?
              zb.dcts.Dcts.StatisticVal.getDefaultInstance() : amplitude_;
        }
      }
      /**
       * <pre>
       *幅度，单位dBm
       * </pre>
       *
       * <code>.zb.dcts.StatisticVal amplitude = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder> 
          getAmplitudeFieldBuilder() {
        if (amplitudeBuilder_ == null) {
          amplitudeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.StatisticVal, zb.dcts.Dcts.StatisticVal.Builder, zb.dcts.Dcts.StatisticValOrBuilder>(
                  getAmplitude(),
                  getParentForChildren(),
                  isClean());
          amplitude_ = null;
        }
        return amplitudeBuilder_;
      }

      private int numFeatures_ ;
      /**
       * <pre>
       *该信号feature计数
       * </pre>
       *
       * <code>int32 num_features = 5;</code>
       * @return The numFeatures.
       */
      @java.lang.Override
      public int getNumFeatures() {
        return numFeatures_;
      }
      /**
       * <pre>
       *该信号feature计数
       * </pre>
       *
       * <code>int32 num_features = 5;</code>
       * @param value The numFeatures to set.
       * @return This builder for chaining.
       */
      public Builder setNumFeatures(int value) {
        
        numFeatures_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该信号feature计数
       * </pre>
       *
       * <code>int32 num_features = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumFeatures() {
        
        numFeatures_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.HopSignalDigest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalDigest)
    private static final zb.dcts.scenario.detection.Detection.HopSignalDigest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.HopSignalDigest();
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalDigest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HopSignalDigest>
        PARSER = new com.google.protobuf.AbstractParser<HopSignalDigest>() {
      @java.lang.Override
      public HopSignalDigest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HopSignalDigest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HopSignalDigest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HopSignalDigest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalDigest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HopSignalClusterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.HopSignalCluster)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *跳频系统
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     *跳频系统
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The enum numeric value on the wire for activity.
     */
    int getActivityValue();
    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The activity.
     */
    zb.dcts.scenario.detection.Detection.SignalActivity getActivity();

    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
     * @return Whether the emitTimeSpan field is set.
     */
    boolean hasEmitTimeSpan();
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
     * @return The emitTimeSpan.
     */
    zb.dcts.Dcts.TimeSpan getEmitTimeSpan();
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder();

    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.HopSignalDigest> 
        getFreqSetList();
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalDigest getFreqSet(int index);
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    int getFreqSetCount();
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder> 
        getFreqSetOrBuilderList();
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder getFreqSetOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.HopSignalCluster}
   */
  public static final class HopSignalCluster extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.HopSignalCluster)
      HopSignalClusterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HopSignalCluster.newBuilder() to construct.
    private HopSignalCluster(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HopSignalCluster() {
      name_ = "";
      activity_ = 0;
      freqSet_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HopSignalCluster();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HopSignalCluster(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              activity_ = rawValue;
              break;
            }
            case 26: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (emitTimeSpan_ != null) {
                subBuilder = emitTimeSpan_.toBuilder();
              }
              emitTimeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emitTimeSpan_);
                emitTimeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                freqSet_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalDigest>();
                mutable_bitField0_ |= 0x00000001;
              }
              freqSet_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.HopSignalDigest.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          freqSet_ = java.util.Collections.unmodifiableList(freqSet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalCluster_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalCluster_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.HopSignalCluster.class, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *跳频系统
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *跳频系统
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTIVITY_FIELD_NUMBER = 2;
    private int activity_;
    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The enum numeric value on the wire for activity.
     */
    @java.lang.Override public int getActivityValue() {
      return activity_;
    }
    /**
     * <pre>
     *信号活跃度
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
     * @return The activity.
     */
    @java.lang.Override public zb.dcts.scenario.detection.Detection.SignalActivity getActivity() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.detection.Detection.SignalActivity result = zb.dcts.scenario.detection.Detection.SignalActivity.valueOf(activity_);
      return result == null ? zb.dcts.scenario.detection.Detection.SignalActivity.UNRECOGNIZED : result;
    }

    public static final int EMIT_TIME_SPAN_FIELD_NUMBER = 3;
    private zb.dcts.Dcts.TimeSpan emitTimeSpan_;
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
     * @return Whether the emitTimeSpan field is set.
     */
    @java.lang.Override
    public boolean hasEmitTimeSpan() {
      return emitTimeSpan_ != null;
    }
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
     * @return The emitTimeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getEmitTimeSpan() {
      return emitTimeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
    }
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder() {
      return getEmitTimeSpan();
    }

    public static final int FREQ_SET_FIELD_NUMBER = 4;
    private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalDigest> freqSet_;
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalDigest> getFreqSetList() {
      return freqSet_;
    }
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder> 
        getFreqSetOrBuilderList() {
      return freqSet_;
    }
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    @java.lang.Override
    public int getFreqSetCount() {
      return freqSet_.size();
    }
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalDigest getFreqSet(int index) {
      return freqSet_.get(index);
    }
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder getFreqSetOrBuilder(
        int index) {
      return freqSet_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (activity_ != zb.dcts.scenario.detection.Detection.SignalActivity.UNKNOWN.getNumber()) {
        output.writeEnum(2, activity_);
      }
      if (emitTimeSpan_ != null) {
        output.writeMessage(3, getEmitTimeSpan());
      }
      for (int i = 0; i < freqSet_.size(); i++) {
        output.writeMessage(4, freqSet_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (activity_ != zb.dcts.scenario.detection.Detection.SignalActivity.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, activity_);
      }
      if (emitTimeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEmitTimeSpan());
      }
      for (int i = 0; i < freqSet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, freqSet_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.HopSignalCluster)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.HopSignalCluster other = (zb.dcts.scenario.detection.Detection.HopSignalCluster) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (activity_ != other.activity_) return false;
      if (hasEmitTimeSpan() != other.hasEmitTimeSpan()) return false;
      if (hasEmitTimeSpan()) {
        if (!getEmitTimeSpan()
            .equals(other.getEmitTimeSpan())) return false;
      }
      if (!getFreqSetList()
          .equals(other.getFreqSetList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ACTIVITY_FIELD_NUMBER;
      hash = (53 * hash) + activity_;
      if (hasEmitTimeSpan()) {
        hash = (37 * hash) + EMIT_TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getEmitTimeSpan().hashCode();
      }
      if (getFreqSetCount() > 0) {
        hash = (37 * hash) + FREQ_SET_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSetList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalCluster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.HopSignalCluster prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.HopSignalCluster}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.HopSignalCluster)
        zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalCluster_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalCluster_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.HopSignalCluster.class, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.HopSignalCluster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFreqSetFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        activity_ = 0;

        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = null;
        } else {
          emitTimeSpan_ = null;
          emitTimeSpanBuilder_ = null;
        }
        if (freqSetBuilder_ == null) {
          freqSet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          freqSetBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalCluster_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalCluster getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalCluster build() {
        zb.dcts.scenario.detection.Detection.HopSignalCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalCluster buildPartial() {
        zb.dcts.scenario.detection.Detection.HopSignalCluster result = new zb.dcts.scenario.detection.Detection.HopSignalCluster(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.activity_ = activity_;
        if (emitTimeSpanBuilder_ == null) {
          result.emitTimeSpan_ = emitTimeSpan_;
        } else {
          result.emitTimeSpan_ = emitTimeSpanBuilder_.build();
        }
        if (freqSetBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            freqSet_ = java.util.Collections.unmodifiableList(freqSet_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.freqSet_ = freqSet_;
        } else {
          result.freqSet_ = freqSetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.HopSignalCluster) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.HopSignalCluster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.HopSignalCluster other) {
        if (other == zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.activity_ != 0) {
          setActivityValue(other.getActivityValue());
        }
        if (other.hasEmitTimeSpan()) {
          mergeEmitTimeSpan(other.getEmitTimeSpan());
        }
        if (freqSetBuilder_ == null) {
          if (!other.freqSet_.isEmpty()) {
            if (freqSet_.isEmpty()) {
              freqSet_ = other.freqSet_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFreqSetIsMutable();
              freqSet_.addAll(other.freqSet_);
            }
            onChanged();
          }
        } else {
          if (!other.freqSet_.isEmpty()) {
            if (freqSetBuilder_.isEmpty()) {
              freqSetBuilder_.dispose();
              freqSetBuilder_ = null;
              freqSet_ = other.freqSet_;
              bitField0_ = (bitField0_ & ~0x00000001);
              freqSetBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFreqSetFieldBuilder() : null;
            } else {
              freqSetBuilder_.addAllMessages(other.freqSet_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.HopSignalCluster parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.HopSignalCluster) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *跳频系统
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *跳频系统
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *跳频系统
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频系统
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频系统
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int activity_ = 0;
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @return The enum numeric value on the wire for activity.
       */
      @java.lang.Override public int getActivityValue() {
        return activity_;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @param value The enum numeric value on the wire for activity to set.
       * @return This builder for chaining.
       */
      public Builder setActivityValue(int value) {
        
        activity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @return The activity.
       */
      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalActivity getActivity() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.detection.Detection.SignalActivity result = zb.dcts.scenario.detection.Detection.SignalActivity.valueOf(activity_);
        return result == null ? zb.dcts.scenario.detection.Detection.SignalActivity.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @param value The activity to set.
       * @return This builder for chaining.
       */
      public Builder setActivity(zb.dcts.scenario.detection.Detection.SignalActivity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        activity_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号活跃度
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalActivity activity = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearActivity() {
        
        activity_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.TimeSpan emitTimeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> emitTimeSpanBuilder_;
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       * @return Whether the emitTimeSpan field is set.
       */
      public boolean hasEmitTimeSpan() {
        return emitTimeSpanBuilder_ != null || emitTimeSpan_ != null;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       * @return The emitTimeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getEmitTimeSpan() {
        if (emitTimeSpanBuilder_ == null) {
          return emitTimeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
        } else {
          return emitTimeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       */
      public Builder setEmitTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (emitTimeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emitTimeSpan_ = value;
          onChanged();
        } else {
          emitTimeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       */
      public Builder setEmitTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = builderForValue.build();
          onChanged();
        } else {
          emitTimeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       */
      public Builder mergeEmitTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (emitTimeSpanBuilder_ == null) {
          if (emitTimeSpan_ != null) {
            emitTimeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(emitTimeSpan_).mergeFrom(value).buildPartial();
          } else {
            emitTimeSpan_ = value;
          }
          onChanged();
        } else {
          emitTimeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       */
      public Builder clearEmitTimeSpan() {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = null;
          onChanged();
        } else {
          emitTimeSpan_ = null;
          emitTimeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getEmitTimeSpanBuilder() {
        
        onChanged();
        return getEmitTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder() {
        if (emitTimeSpanBuilder_ != null) {
          return emitTimeSpanBuilder_.getMessageOrBuilder();
        } else {
          return emitTimeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
        }
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getEmitTimeSpanFieldBuilder() {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getEmitTimeSpan(),
                  getParentForChildren(),
                  isClean());
          emitTimeSpan_ = null;
        }
        return emitTimeSpanBuilder_;
      }

      private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalDigest> freqSet_ =
        java.util.Collections.emptyList();
      private void ensureFreqSetIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          freqSet_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalDigest>(freqSet_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalDigest, zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder, zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder> freqSetBuilder_;

      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalDigest> getFreqSetList() {
        if (freqSetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(freqSet_);
        } else {
          return freqSetBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public int getFreqSetCount() {
        if (freqSetBuilder_ == null) {
          return freqSet_.size();
        } else {
          return freqSetBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDigest getFreqSet(int index) {
        if (freqSetBuilder_ == null) {
          return freqSet_.get(index);
        } else {
          return freqSetBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder setFreqSet(
          int index, zb.dcts.scenario.detection.Detection.HopSignalDigest value) {
        if (freqSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqSetIsMutable();
          freqSet_.set(index, value);
          onChanged();
        } else {
          freqSetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder setFreqSet(
          int index, zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder builderForValue) {
        if (freqSetBuilder_ == null) {
          ensureFreqSetIsMutable();
          freqSet_.set(index, builderForValue.build());
          onChanged();
        } else {
          freqSetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder addFreqSet(zb.dcts.scenario.detection.Detection.HopSignalDigest value) {
        if (freqSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqSetIsMutable();
          freqSet_.add(value);
          onChanged();
        } else {
          freqSetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder addFreqSet(
          int index, zb.dcts.scenario.detection.Detection.HopSignalDigest value) {
        if (freqSetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqSetIsMutable();
          freqSet_.add(index, value);
          onChanged();
        } else {
          freqSetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder addFreqSet(
          zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder builderForValue) {
        if (freqSetBuilder_ == null) {
          ensureFreqSetIsMutable();
          freqSet_.add(builderForValue.build());
          onChanged();
        } else {
          freqSetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder addFreqSet(
          int index, zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder builderForValue) {
        if (freqSetBuilder_ == null) {
          ensureFreqSetIsMutable();
          freqSet_.add(index, builderForValue.build());
          onChanged();
        } else {
          freqSetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder addAllFreqSet(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.HopSignalDigest> values) {
        if (freqSetBuilder_ == null) {
          ensureFreqSetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, freqSet_);
          onChanged();
        } else {
          freqSetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder clearFreqSet() {
        if (freqSetBuilder_ == null) {
          freqSet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          freqSetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public Builder removeFreqSet(int index) {
        if (freqSetBuilder_ == null) {
          ensureFreqSetIsMutable();
          freqSet_.remove(index);
          onChanged();
        } else {
          freqSetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder getFreqSetBuilder(
          int index) {
        return getFreqSetFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder getFreqSetOrBuilder(
          int index) {
        if (freqSetBuilder_ == null) {
          return freqSet_.get(index);  } else {
          return freqSetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder> 
           getFreqSetOrBuilderList() {
        if (freqSetBuilder_ != null) {
          return freqSetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(freqSet_);
        }
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder addFreqSetBuilder() {
        return getFreqSetFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.HopSignalDigest.getDefaultInstance());
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder addFreqSetBuilder(
          int index) {
        return getFreqSetFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.HopSignalDigest.getDefaultInstance());
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalDigest freq_set = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder> 
           getFreqSetBuilderList() {
        return getFreqSetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalDigest, zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder, zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder> 
          getFreqSetFieldBuilder() {
        if (freqSetBuilder_ == null) {
          freqSetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HopSignalDigest, zb.dcts.scenario.detection.Detection.HopSignalDigest.Builder, zb.dcts.scenario.detection.Detection.HopSignalDigestOrBuilder>(
                  freqSet_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          freqSet_ = null;
        }
        return freqSetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.HopSignalCluster)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalCluster)
    private static final zb.dcts.scenario.detection.Detection.HopSignalCluster DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.HopSignalCluster();
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalCluster getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HopSignalCluster>
        PARSER = new com.google.protobuf.AbstractParser<HopSignalCluster>() {
      @java.lang.Override
      public HopSignalCluster parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HopSignalCluster(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HopSignalCluster> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HopSignalCluster> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalCluster getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FixSignalListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.FixSignalList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.SignalSegment> 
        getFixSignalsList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalSegment getFixSignals(int index);
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    int getFixSignalsCount();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder> 
        getFixSignalsOrBuilderList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder getFixSignalsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.FixSignalList}
   */
  public static final class FixSignalList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.FixSignalList)
      FixSignalListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FixSignalList.newBuilder() to construct.
    private FixSignalList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FixSignalList() {
      fixSignals_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FixSignalList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FixSignalList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fixSignals_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalSegment>();
                mutable_bitField0_ |= 0x00000001;
              }
              fixSignals_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.SignalSegment.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fixSignals_ = java.util.Collections.unmodifiableList(fixSignals_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FixSignalList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FixSignalList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.FixSignalList.class, zb.dcts.scenario.detection.Detection.FixSignalList.Builder.class);
    }

    public static final int FIX_SIGNALS_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.scenario.detection.Detection.SignalSegment> fixSignals_;
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.SignalSegment> getFixSignalsList() {
      return fixSignals_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder> 
        getFixSignalsOrBuilderList() {
      return fixSignals_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    @java.lang.Override
    public int getFixSignalsCount() {
      return fixSignals_.size();
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSegment getFixSignals(int index) {
      return fixSignals_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder getFixSignalsOrBuilder(
        int index) {
      return fixSignals_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fixSignals_.size(); i++) {
        output.writeMessage(1, fixSignals_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fixSignals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fixSignals_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.FixSignalList)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.FixSignalList other = (zb.dcts.scenario.detection.Detection.FixSignalList) obj;

      if (!getFixSignalsList()
          .equals(other.getFixSignalsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFixSignalsCount() > 0) {
        hash = (37 * hash) + FIX_SIGNALS_FIELD_NUMBER;
        hash = (53 * hash) + getFixSignalsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.FixSignalList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.FixSignalList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.FixSignalList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.FixSignalList)
        zb.dcts.scenario.detection.Detection.FixSignalListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FixSignalList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FixSignalList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.FixSignalList.class, zb.dcts.scenario.detection.Detection.FixSignalList.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.FixSignalList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFixSignalsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fixSignalsBuilder_ == null) {
          fixSignals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fixSignalsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_FixSignalList_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.FixSignalList getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.FixSignalList.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.FixSignalList build() {
        zb.dcts.scenario.detection.Detection.FixSignalList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.FixSignalList buildPartial() {
        zb.dcts.scenario.detection.Detection.FixSignalList result = new zb.dcts.scenario.detection.Detection.FixSignalList(this);
        int from_bitField0_ = bitField0_;
        if (fixSignalsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fixSignals_ = java.util.Collections.unmodifiableList(fixSignals_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fixSignals_ = fixSignals_;
        } else {
          result.fixSignals_ = fixSignalsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.FixSignalList) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.FixSignalList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.FixSignalList other) {
        if (other == zb.dcts.scenario.detection.Detection.FixSignalList.getDefaultInstance()) return this;
        if (fixSignalsBuilder_ == null) {
          if (!other.fixSignals_.isEmpty()) {
            if (fixSignals_.isEmpty()) {
              fixSignals_ = other.fixSignals_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFixSignalsIsMutable();
              fixSignals_.addAll(other.fixSignals_);
            }
            onChanged();
          }
        } else {
          if (!other.fixSignals_.isEmpty()) {
            if (fixSignalsBuilder_.isEmpty()) {
              fixSignalsBuilder_.dispose();
              fixSignalsBuilder_ = null;
              fixSignals_ = other.fixSignals_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fixSignalsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFixSignalsFieldBuilder() : null;
            } else {
              fixSignalsBuilder_.addAllMessages(other.fixSignals_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.FixSignalList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.FixSignalList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.scenario.detection.Detection.SignalSegment> fixSignals_ =
        java.util.Collections.emptyList();
      private void ensureFixSignalsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fixSignals_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalSegment>(fixSignals_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSegment, zb.dcts.scenario.detection.Detection.SignalSegment.Builder, zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder> fixSignalsBuilder_;

      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalSegment> getFixSignalsList() {
        if (fixSignalsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fixSignals_);
        } else {
          return fixSignalsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public int getFixSignalsCount() {
        if (fixSignalsBuilder_ == null) {
          return fixSignals_.size();
        } else {
          return fixSignalsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSegment getFixSignals(int index) {
        if (fixSignalsBuilder_ == null) {
          return fixSignals_.get(index);
        } else {
          return fixSignalsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder setFixSignals(
          int index, zb.dcts.scenario.detection.Detection.SignalSegment value) {
        if (fixSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalsIsMutable();
          fixSignals_.set(index, value);
          onChanged();
        } else {
          fixSignalsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder setFixSignals(
          int index, zb.dcts.scenario.detection.Detection.SignalSegment.Builder builderForValue) {
        if (fixSignalsBuilder_ == null) {
          ensureFixSignalsIsMutable();
          fixSignals_.set(index, builderForValue.build());
          onChanged();
        } else {
          fixSignalsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder addFixSignals(zb.dcts.scenario.detection.Detection.SignalSegment value) {
        if (fixSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalsIsMutable();
          fixSignals_.add(value);
          onChanged();
        } else {
          fixSignalsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder addFixSignals(
          int index, zb.dcts.scenario.detection.Detection.SignalSegment value) {
        if (fixSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalsIsMutable();
          fixSignals_.add(index, value);
          onChanged();
        } else {
          fixSignalsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder addFixSignals(
          zb.dcts.scenario.detection.Detection.SignalSegment.Builder builderForValue) {
        if (fixSignalsBuilder_ == null) {
          ensureFixSignalsIsMutable();
          fixSignals_.add(builderForValue.build());
          onChanged();
        } else {
          fixSignalsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder addFixSignals(
          int index, zb.dcts.scenario.detection.Detection.SignalSegment.Builder builderForValue) {
        if (fixSignalsBuilder_ == null) {
          ensureFixSignalsIsMutable();
          fixSignals_.add(index, builderForValue.build());
          onChanged();
        } else {
          fixSignalsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder addAllFixSignals(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.SignalSegment> values) {
        if (fixSignalsBuilder_ == null) {
          ensureFixSignalsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fixSignals_);
          onChanged();
        } else {
          fixSignalsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder clearFixSignals() {
        if (fixSignalsBuilder_ == null) {
          fixSignals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fixSignalsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public Builder removeFixSignals(int index) {
        if (fixSignalsBuilder_ == null) {
          ensureFixSignalsIsMutable();
          fixSignals_.remove(index);
          onChanged();
        } else {
          fixSignalsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSegment.Builder getFixSignalsBuilder(
          int index) {
        return getFixSignalsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder getFixSignalsOrBuilder(
          int index) {
        if (fixSignalsBuilder_ == null) {
          return fixSignals_.get(index);  } else {
          return fixSignalsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder> 
           getFixSignalsOrBuilderList() {
        if (fixSignalsBuilder_ != null) {
          return fixSignalsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fixSignals_);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSegment.Builder addFixSignalsBuilder() {
        return getFixSignalsFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.SignalSegment.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSegment.Builder addFixSignalsBuilder(
          int index) {
        return getFixSignalsFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.SignalSegment.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSegment fix_signals = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalSegment.Builder> 
           getFixSignalsBuilderList() {
        return getFixSignalsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSegment, zb.dcts.scenario.detection.Detection.SignalSegment.Builder, zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder> 
          getFixSignalsFieldBuilder() {
        if (fixSignalsBuilder_ == null) {
          fixSignalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalSegment, zb.dcts.scenario.detection.Detection.SignalSegment.Builder, zb.dcts.scenario.detection.Detection.SignalSegmentOrBuilder>(
                  fixSignals_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fixSignals_ = null;
        }
        return fixSignalsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.FixSignalList)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.FixSignalList)
    private static final zb.dcts.scenario.detection.Detection.FixSignalList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.FixSignalList();
    }

    public static zb.dcts.scenario.detection.Detection.FixSignalList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FixSignalList>
        PARSER = new com.google.protobuf.AbstractParser<FixSignalList>() {
      @java.lang.Override
      public FixSignalList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FixSignalList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FixSignalList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FixSignalList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.FixSignalList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HopSignalListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.HopSignalList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> 
        getHopSignalClustersList();
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalClusters(int index);
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    int getHopSignalClustersCount();
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
        getHopSignalClustersOrBuilderList();
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalClustersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.HopSignalList}
   */
  public static final class HopSignalList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.HopSignalList)
      HopSignalListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HopSignalList.newBuilder() to construct.
    private HopSignalList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HopSignalList() {
      hopSignalClusters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HopSignalList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HopSignalList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                hopSignalClusters_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalCluster>();
                mutable_bitField0_ |= 0x00000001;
              }
              hopSignalClusters_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.HopSignalCluster.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          hopSignalClusters_ = java.util.Collections.unmodifiableList(hopSignalClusters_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.HopSignalList.class, zb.dcts.scenario.detection.Detection.HopSignalList.Builder.class);
    }

    public static final int HOP_SIGNAL_CLUSTERS_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> hopSignalClusters_;
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> getHopSignalClustersList() {
      return hopSignalClusters_;
    }
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
        getHopSignalClustersOrBuilderList() {
      return hopSignalClusters_;
    }
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public int getHopSignalClustersCount() {
      return hopSignalClusters_.size();
    }
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalClusters(int index) {
      return hopSignalClusters_.get(index);
    }
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalClustersOrBuilder(
        int index) {
      return hopSignalClusters_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hopSignalClusters_.size(); i++) {
        output.writeMessage(1, hopSignalClusters_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hopSignalClusters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hopSignalClusters_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.HopSignalList)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.HopSignalList other = (zb.dcts.scenario.detection.Detection.HopSignalList) obj;

      if (!getHopSignalClustersList()
          .equals(other.getHopSignalClustersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHopSignalClustersCount() > 0) {
        hash = (37 * hash) + HOP_SIGNAL_CLUSTERS_FIELD_NUMBER;
        hash = (53 * hash) + getHopSignalClustersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.HopSignalList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.HopSignalList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.HopSignalList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.HopSignalList)
        zb.dcts.scenario.detection.Detection.HopSignalListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.HopSignalList.class, zb.dcts.scenario.detection.Detection.HopSignalList.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.HopSignalList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHopSignalClustersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (hopSignalClustersBuilder_ == null) {
          hopSignalClusters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hopSignalClustersBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_HopSignalList_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalList getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.HopSignalList.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalList build() {
        zb.dcts.scenario.detection.Detection.HopSignalList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.HopSignalList buildPartial() {
        zb.dcts.scenario.detection.Detection.HopSignalList result = new zb.dcts.scenario.detection.Detection.HopSignalList(this);
        int from_bitField0_ = bitField0_;
        if (hopSignalClustersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            hopSignalClusters_ = java.util.Collections.unmodifiableList(hopSignalClusters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hopSignalClusters_ = hopSignalClusters_;
        } else {
          result.hopSignalClusters_ = hopSignalClustersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.HopSignalList) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.HopSignalList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.HopSignalList other) {
        if (other == zb.dcts.scenario.detection.Detection.HopSignalList.getDefaultInstance()) return this;
        if (hopSignalClustersBuilder_ == null) {
          if (!other.hopSignalClusters_.isEmpty()) {
            if (hopSignalClusters_.isEmpty()) {
              hopSignalClusters_ = other.hopSignalClusters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHopSignalClustersIsMutable();
              hopSignalClusters_.addAll(other.hopSignalClusters_);
            }
            onChanged();
          }
        } else {
          if (!other.hopSignalClusters_.isEmpty()) {
            if (hopSignalClustersBuilder_.isEmpty()) {
              hopSignalClustersBuilder_.dispose();
              hopSignalClustersBuilder_ = null;
              hopSignalClusters_ = other.hopSignalClusters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hopSignalClustersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHopSignalClustersFieldBuilder() : null;
            } else {
              hopSignalClustersBuilder_.addAllMessages(other.hopSignalClusters_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.HopSignalList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.HopSignalList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> hopSignalClusters_ =
        java.util.Collections.emptyList();
      private void ensureHopSignalClustersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hopSignalClusters_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalCluster>(hopSignalClusters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> hopSignalClustersBuilder_;

      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> getHopSignalClustersList() {
        if (hopSignalClustersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hopSignalClusters_);
        } else {
          return hopSignalClustersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public int getHopSignalClustersCount() {
        if (hopSignalClustersBuilder_ == null) {
          return hopSignalClusters_.size();
        } else {
          return hopSignalClustersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalClusters(int index) {
        if (hopSignalClustersBuilder_ == null) {
          return hopSignalClusters_.get(index);
        } else {
          return hopSignalClustersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder setHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalClustersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.set(index, value);
          onChanged();
        } else {
          hopSignalClustersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder setHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.set(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalClustersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalClustersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(value);
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalClustersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(index, value);
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(
          zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(builderForValue.build());
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder addHopSignalClusters(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.add(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalClustersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder addAllHopSignalClusters(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.HopSignalCluster> values) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hopSignalClusters_);
          onChanged();
        } else {
          hopSignalClustersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder clearHopSignalClusters() {
        if (hopSignalClustersBuilder_ == null) {
          hopSignalClusters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hopSignalClustersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public Builder removeHopSignalClusters(int index) {
        if (hopSignalClustersBuilder_ == null) {
          ensureHopSignalClustersIsMutable();
          hopSignalClusters_.remove(index);
          onChanged();
        } else {
          hopSignalClustersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder getHopSignalClustersBuilder(
          int index) {
        return getHopSignalClustersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalClustersOrBuilder(
          int index) {
        if (hopSignalClustersBuilder_ == null) {
          return hopSignalClusters_.get(index);  } else {
          return hopSignalClustersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
           getHopSignalClustersOrBuilderList() {
        if (hopSignalClustersBuilder_ != null) {
          return hopSignalClustersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hopSignalClusters_);
        }
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder addHopSignalClustersBuilder() {
        return getHopSignalClustersFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance());
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder addHopSignalClustersBuilder(
          int index) {
        return getHopSignalClustersFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance());
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_clusters = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder> 
           getHopSignalClustersBuilderList() {
        return getHopSignalClustersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
          getHopSignalClustersFieldBuilder() {
        if (hopSignalClustersBuilder_ == null) {
          hopSignalClustersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder>(
                  hopSignalClusters_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          hopSignalClusters_ = null;
        }
        return hopSignalClustersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.HopSignalList)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalList)
    private static final zb.dcts.scenario.detection.Detection.HopSignalList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.HopSignalList();
    }

    public static zb.dcts.scenario.detection.Detection.HopSignalList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HopSignalList>
        PARSER = new com.google.protobuf.AbstractParser<HopSignalList>() {
      @java.lang.Override
      public HopSignalList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HopSignalList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HopSignalList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HopSignalList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DetectionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.DetectionRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    boolean hasResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    zb.dcts.scenario.Scenario.ScenarioTaskId getResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
     * @return Whether the detectionParam field is set.
     */
    boolean hasDetectionParam();
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
     * @return The detectionParam.
     */
    zb.dcts.scenario.detection.Detection.DetectionParam getDetectionParam();
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder getDetectionParamOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.DetectionRequest}
   */
  public static final class DetectionRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.DetectionRequest)
      DetectionRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DetectionRequest.newBuilder() to construct.
    private DetectionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DetectionRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DetectionRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DetectionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.Scenario.ScenarioTaskId.Builder subBuilder = null;
              if (responser_ != null) {
                subBuilder = responser_.toBuilder();
              }
              responser_ = input.readMessage(zb.dcts.scenario.Scenario.ScenarioTaskId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(responser_);
                responser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.scenario.detection.Detection.DetectionParam.Builder subBuilder = null;
              if (detectionParam_ != null) {
                subBuilder = detectionParam_.toBuilder();
              }
              detectionParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.DetectionParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(detectionParam_);
                detectionParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.DetectionRequest.class, zb.dcts.scenario.detection.Detection.DetectionRequest.Builder.class);
    }

    public static final int RESPONSER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    @java.lang.Override
    public boolean hasResponser() {
      return responser_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
      return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
      return getResponser();
    }

    public static final int DETECTION_PARAM_FIELD_NUMBER = 2;
    private zb.dcts.scenario.detection.Detection.DetectionParam detectionParam_;
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
     * @return Whether the detectionParam field is set.
     */
    @java.lang.Override
    public boolean hasDetectionParam() {
      return detectionParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
     * @return The detectionParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.DetectionParam getDetectionParam() {
      return detectionParam_ == null ? zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance() : detectionParam_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder getDetectionParamOrBuilder() {
      return getDetectionParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responser_ != null) {
        output.writeMessage(1, getResponser());
      }
      if (detectionParam_ != null) {
        output.writeMessage(2, getDetectionParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponser());
      }
      if (detectionParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDetectionParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.DetectionRequest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.DetectionRequest other = (zb.dcts.scenario.detection.Detection.DetectionRequest) obj;

      if (hasResponser() != other.hasResponser()) return false;
      if (hasResponser()) {
        if (!getResponser()
            .equals(other.getResponser())) return false;
      }
      if (hasDetectionParam() != other.hasDetectionParam()) return false;
      if (hasDetectionParam()) {
        if (!getDetectionParam()
            .equals(other.getDetectionParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponser()) {
        hash = (37 * hash) + RESPONSER_FIELD_NUMBER;
        hash = (53 * hash) + getResponser().hashCode();
      }
      if (hasDetectionParam()) {
        hash = (37 * hash) + DETECTION_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getDetectionParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DetectionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.DetectionRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.DetectionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.DetectionRequest)
        zb.dcts.scenario.detection.Detection.DetectionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.DetectionRequest.class, zb.dcts.scenario.detection.Detection.DetectionRequest.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.DetectionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (responserBuilder_ == null) {
          responser_ = null;
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }
        if (detectionParamBuilder_ == null) {
          detectionParam_ = null;
        } else {
          detectionParam_ = null;
          detectionParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DetectionRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DetectionRequest getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.DetectionRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DetectionRequest build() {
        zb.dcts.scenario.detection.Detection.DetectionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DetectionRequest buildPartial() {
        zb.dcts.scenario.detection.Detection.DetectionRequest result = new zb.dcts.scenario.detection.Detection.DetectionRequest(this);
        if (responserBuilder_ == null) {
          result.responser_ = responser_;
        } else {
          result.responser_ = responserBuilder_.build();
        }
        if (detectionParamBuilder_ == null) {
          result.detectionParam_ = detectionParam_;
        } else {
          result.detectionParam_ = detectionParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.DetectionRequest) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.DetectionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.DetectionRequest other) {
        if (other == zb.dcts.scenario.detection.Detection.DetectionRequest.getDefaultInstance()) return this;
        if (other.hasResponser()) {
          mergeResponser(other.getResponser());
        }
        if (other.hasDetectionParam()) {
          mergeDetectionParam(other.getDetectionParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.DetectionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.DetectionRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> responserBuilder_;
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return Whether the responser field is set.
       */
      public boolean hasResponser() {
        return responserBuilder_ != null || responser_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return The responser.
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
        if (responserBuilder_ == null) {
          return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        } else {
          return responserBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responser_ = value;
          onChanged();
        } else {
          responserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(
          zb.dcts.scenario.Scenario.ScenarioTaskId.Builder builderForValue) {
        if (responserBuilder_ == null) {
          responser_ = builderForValue.build();
          onChanged();
        } else {
          responserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder mergeResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (responser_ != null) {
            responser_ =
              zb.dcts.scenario.Scenario.ScenarioTaskId.newBuilder(responser_).mergeFrom(value).buildPartial();
          } else {
            responser_ = value;
          }
          onChanged();
        } else {
          responserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder clearResponser() {
        if (responserBuilder_ == null) {
          responser_ = null;
          onChanged();
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId.Builder getResponserBuilder() {
        
        onChanged();
        return getResponserFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
        if (responserBuilder_ != null) {
          return responserBuilder_.getMessageOrBuilder();
        } else {
          return responser_ == null ?
              zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> 
          getResponserFieldBuilder() {
        if (responserBuilder_ == null) {
          responserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder>(
                  getResponser(),
                  getParentForChildren(),
                  isClean());
          responser_ = null;
        }
        return responserBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.DetectionParam detectionParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.DetectionParam, zb.dcts.scenario.detection.Detection.DetectionParam.Builder, zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder> detectionParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       * @return Whether the detectionParam field is set.
       */
      public boolean hasDetectionParam() {
        return detectionParamBuilder_ != null || detectionParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       * @return The detectionParam.
       */
      public zb.dcts.scenario.detection.Detection.DetectionParam getDetectionParam() {
        if (detectionParamBuilder_ == null) {
          return detectionParam_ == null ? zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance() : detectionParam_;
        } else {
          return detectionParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       */
      public Builder setDetectionParam(zb.dcts.scenario.detection.Detection.DetectionParam value) {
        if (detectionParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          detectionParam_ = value;
          onChanged();
        } else {
          detectionParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       */
      public Builder setDetectionParam(
          zb.dcts.scenario.detection.Detection.DetectionParam.Builder builderForValue) {
        if (detectionParamBuilder_ == null) {
          detectionParam_ = builderForValue.build();
          onChanged();
        } else {
          detectionParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       */
      public Builder mergeDetectionParam(zb.dcts.scenario.detection.Detection.DetectionParam value) {
        if (detectionParamBuilder_ == null) {
          if (detectionParam_ != null) {
            detectionParam_ =
              zb.dcts.scenario.detection.Detection.DetectionParam.newBuilder(detectionParam_).mergeFrom(value).buildPartial();
          } else {
            detectionParam_ = value;
          }
          onChanged();
        } else {
          detectionParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       */
      public Builder clearDetectionParam() {
        if (detectionParamBuilder_ == null) {
          detectionParam_ = null;
          onChanged();
        } else {
          detectionParam_ = null;
          detectionParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.DetectionParam.Builder getDetectionParamBuilder() {
        
        onChanged();
        return getDetectionParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder getDetectionParamOrBuilder() {
        if (detectionParamBuilder_ != null) {
          return detectionParamBuilder_.getMessageOrBuilder();
        } else {
          return detectionParam_ == null ?
              zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance() : detectionParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.DetectionParam, zb.dcts.scenario.detection.Detection.DetectionParam.Builder, zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder> 
          getDetectionParamFieldBuilder() {
        if (detectionParamBuilder_ == null) {
          detectionParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.DetectionParam, zb.dcts.scenario.detection.Detection.DetectionParam.Builder, zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder>(
                  getDetectionParam(),
                  getParentForChildren(),
                  isClean());
          detectionParam_ = null;
        }
        return detectionParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.DetectionRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.DetectionRequest)
    private static final zb.dcts.scenario.detection.Detection.DetectionRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.DetectionRequest();
    }

    public static zb.dcts.scenario.detection.Detection.DetectionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DetectionRequest>
        PARSER = new com.google.protobuf.AbstractParser<DetectionRequest>() {
      @java.lang.Override
      public DetectionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DetectionRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DetectionRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DetectionRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.DetectionRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AutoGatheringParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.AutoGatheringParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号收集的持续时长(以毫秒计)
     * </pre>
     *
     * <code>int32 time_span_in_msec = 1;</code>
     * @return The timeSpanInMsec.
     */
    int getTimeSpanInMsec();

    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @return A list containing the signalCandidates.
     */
    java.util.List<java.lang.String>
        getSignalCandidatesList();
    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @return The count of signalCandidates.
     */
    int getSignalCandidatesCount();
    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @param index The index of the element to return.
     * @return The signalCandidates at the given index.
     */
    java.lang.String getSignalCandidates(int index);
    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the signalCandidates at the given index.
     */
    com.google.protobuf.ByteString
        getSignalCandidatesBytes(int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.AutoGatheringParam}
   */
  public static final class AutoGatheringParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.AutoGatheringParam)
      AutoGatheringParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AutoGatheringParam.newBuilder() to construct.
    private AutoGatheringParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AutoGatheringParam() {
      signalCandidates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AutoGatheringParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AutoGatheringParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              timeSpanInMsec_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signalCandidates_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              signalCandidates_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signalCandidates_ = signalCandidates_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AutoGatheringParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AutoGatheringParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.AutoGatheringParam.class, zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder.class);
    }

    public static final int TIME_SPAN_IN_MSEC_FIELD_NUMBER = 1;
    private int timeSpanInMsec_;
    /**
     * <pre>
     *信号收集的持续时长(以毫秒计)
     * </pre>
     *
     * <code>int32 time_span_in_msec = 1;</code>
     * @return The timeSpanInMsec.
     */
    @java.lang.Override
    public int getTimeSpanInMsec() {
      return timeSpanInMsec_;
    }

    public static final int SIGNAL_CANDIDATES_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList signalCandidates_;
    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @return A list containing the signalCandidates.
     */
    public com.google.protobuf.ProtocolStringList
        getSignalCandidatesList() {
      return signalCandidates_;
    }
    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @return The count of signalCandidates.
     */
    public int getSignalCandidatesCount() {
      return signalCandidates_.size();
    }
    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @param index The index of the element to return.
     * @return The signalCandidates at the given index.
     */
    public java.lang.String getSignalCandidates(int index) {
      return signalCandidates_.get(index);
    }
    /**
     * <pre>
     *要收集的信号
     * </pre>
     *
     * <code>repeated string signal_candidates = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the signalCandidates at the given index.
     */
    public com.google.protobuf.ByteString
        getSignalCandidatesBytes(int index) {
      return signalCandidates_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeSpanInMsec_ != 0) {
        output.writeInt32(1, timeSpanInMsec_);
      }
      for (int i = 0; i < signalCandidates_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, signalCandidates_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeSpanInMsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, timeSpanInMsec_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < signalCandidates_.size(); i++) {
          dataSize += computeStringSizeNoTag(signalCandidates_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSignalCandidatesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.AutoGatheringParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.AutoGatheringParam other = (zb.dcts.scenario.detection.Detection.AutoGatheringParam) obj;

      if (getTimeSpanInMsec()
          != other.getTimeSpanInMsec()) return false;
      if (!getSignalCandidatesList()
          .equals(other.getSignalCandidatesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_SPAN_IN_MSEC_FIELD_NUMBER;
      hash = (53 * hash) + getTimeSpanInMsec();
      if (getSignalCandidatesCount() > 0) {
        hash = (37 * hash) + SIGNAL_CANDIDATES_FIELD_NUMBER;
        hash = (53 * hash) + getSignalCandidatesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.AutoGatheringParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.AutoGatheringParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.AutoGatheringParam)
        zb.dcts.scenario.detection.Detection.AutoGatheringParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AutoGatheringParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AutoGatheringParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.AutoGatheringParam.class, zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.AutoGatheringParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timeSpanInMsec_ = 0;

        signalCandidates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_AutoGatheringParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.AutoGatheringParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.AutoGatheringParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.AutoGatheringParam build() {
        zb.dcts.scenario.detection.Detection.AutoGatheringParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.AutoGatheringParam buildPartial() {
        zb.dcts.scenario.detection.Detection.AutoGatheringParam result = new zb.dcts.scenario.detection.Detection.AutoGatheringParam(this);
        int from_bitField0_ = bitField0_;
        result.timeSpanInMsec_ = timeSpanInMsec_;
        if (((bitField0_ & 0x00000001) != 0)) {
          signalCandidates_ = signalCandidates_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.signalCandidates_ = signalCandidates_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.AutoGatheringParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.AutoGatheringParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.AutoGatheringParam other) {
        if (other == zb.dcts.scenario.detection.Detection.AutoGatheringParam.getDefaultInstance()) return this;
        if (other.getTimeSpanInMsec() != 0) {
          setTimeSpanInMsec(other.getTimeSpanInMsec());
        }
        if (!other.signalCandidates_.isEmpty()) {
          if (signalCandidates_.isEmpty()) {
            signalCandidates_ = other.signalCandidates_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSignalCandidatesIsMutable();
            signalCandidates_.addAll(other.signalCandidates_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.AutoGatheringParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.AutoGatheringParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timeSpanInMsec_ ;
      /**
       * <pre>
       *信号收集的持续时长(以毫秒计)
       * </pre>
       *
       * <code>int32 time_span_in_msec = 1;</code>
       * @return The timeSpanInMsec.
       */
      @java.lang.Override
      public int getTimeSpanInMsec() {
        return timeSpanInMsec_;
      }
      /**
       * <pre>
       *信号收集的持续时长(以毫秒计)
       * </pre>
       *
       * <code>int32 time_span_in_msec = 1;</code>
       * @param value The timeSpanInMsec to set.
       * @return This builder for chaining.
       */
      public Builder setTimeSpanInMsec(int value) {
        
        timeSpanInMsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号收集的持续时长(以毫秒计)
       * </pre>
       *
       * <code>int32 time_span_in_msec = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeSpanInMsec() {
        
        timeSpanInMsec_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList signalCandidates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSignalCandidatesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signalCandidates_ = new com.google.protobuf.LazyStringArrayList(signalCandidates_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @return A list containing the signalCandidates.
       */
      public com.google.protobuf.ProtocolStringList
          getSignalCandidatesList() {
        return signalCandidates_.getUnmodifiableView();
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @return The count of signalCandidates.
       */
      public int getSignalCandidatesCount() {
        return signalCandidates_.size();
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @param index The index of the element to return.
       * @return The signalCandidates at the given index.
       */
      public java.lang.String getSignalCandidates(int index) {
        return signalCandidates_.get(index);
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the signalCandidates at the given index.
       */
      public com.google.protobuf.ByteString
          getSignalCandidatesBytes(int index) {
        return signalCandidates_.getByteString(index);
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @param index The index to set the value at.
       * @param value The signalCandidates to set.
       * @return This builder for chaining.
       */
      public Builder setSignalCandidates(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSignalCandidatesIsMutable();
        signalCandidates_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @param value The signalCandidates to add.
       * @return This builder for chaining.
       */
      public Builder addSignalCandidates(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSignalCandidatesIsMutable();
        signalCandidates_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @param values The signalCandidates to add.
       * @return This builder for chaining.
       */
      public Builder addAllSignalCandidates(
          java.lang.Iterable<java.lang.String> values) {
        ensureSignalCandidatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, signalCandidates_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignalCandidates() {
        signalCandidates_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *要收集的信号
       * </pre>
       *
       * <code>repeated string signal_candidates = 2;</code>
       * @param value The bytes of the signalCandidates to add.
       * @return This builder for chaining.
       */
      public Builder addSignalCandidatesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSignalCandidatesIsMutable();
        signalCandidates_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.AutoGatheringParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.AutoGatheringParam)
    private static final zb.dcts.scenario.detection.Detection.AutoGatheringParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.AutoGatheringParam();
    }

    public static zb.dcts.scenario.detection.Detection.AutoGatheringParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AutoGatheringParam>
        PARSER = new com.google.protobuf.AbstractParser<AutoGatheringParam>() {
      @java.lang.Override
      public AutoGatheringParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AutoGatheringParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AutoGatheringParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AutoGatheringParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.AutoGatheringParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ManualGatheringParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.ManualGatheringParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *信号收集的持续时长(以毫秒计)
     * </pre>
     *
     * <code>int32 time_span_in_msec = 2;</code>
     * @return The timeSpanInMsec.
     */
    int getTimeSpanInMsec();

    /**
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
     * @return Whether the freqSpan field is set.
     */
    boolean hasFreqSpan();
    /**
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
     * @return The freqSpan.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan();
    /**
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.ManualGatheringParam}
   */
  public static final class ManualGatheringParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.ManualGatheringParam)
      ManualGatheringParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ManualGatheringParam.newBuilder() to construct.
    private ManualGatheringParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ManualGatheringParam() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ManualGatheringParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ManualGatheringParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              timeSpanInMsec_ = input.readInt32();
              break;
            }
            case 26: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (freqSpan_ != null) {
                subBuilder = freqSpan_.toBuilder();
              }
              freqSpan_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqSpan_);
                freqSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ManualGatheringParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ManualGatheringParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.ManualGatheringParam.class, zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_SPAN_IN_MSEC_FIELD_NUMBER = 2;
    private int timeSpanInMsec_;
    /**
     * <pre>
     *信号收集的持续时长(以毫秒计)
     * </pre>
     *
     * <code>int32 time_span_in_msec = 2;</code>
     * @return The timeSpanInMsec.
     */
    @java.lang.Override
    public int getTimeSpanInMsec() {
      return timeSpanInMsec_;
    }

    public static final int FREQ_SPAN_FIELD_NUMBER = 3;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
    /**
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
     * @return Whether the freqSpan field is set.
     */
    @java.lang.Override
    public boolean hasFreqSpan() {
      return freqSpan_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
     * @return The freqSpan.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
      return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
    }
    /**
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
      return getFreqSpan();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (timeSpanInMsec_ != 0) {
        output.writeInt32(2, timeSpanInMsec_);
      }
      if (freqSpan_ != null) {
        output.writeMessage(3, getFreqSpan());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (timeSpanInMsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timeSpanInMsec_);
      }
      if (freqSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFreqSpan());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.ManualGatheringParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.ManualGatheringParam other = (zb.dcts.scenario.detection.Detection.ManualGatheringParam) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (getTimeSpanInMsec()
          != other.getTimeSpanInMsec()) return false;
      if (hasFreqSpan() != other.hasFreqSpan()) return false;
      if (hasFreqSpan()) {
        if (!getFreqSpan()
            .equals(other.getFreqSpan())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TIME_SPAN_IN_MSEC_FIELD_NUMBER;
      hash = (53 * hash) + getTimeSpanInMsec();
      if (hasFreqSpan()) {
        hash = (37 * hash) + FREQ_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSpan().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.ManualGatheringParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.ManualGatheringParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.ManualGatheringParam)
        zb.dcts.scenario.detection.Detection.ManualGatheringParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ManualGatheringParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ManualGatheringParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.ManualGatheringParam.class, zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.ManualGatheringParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        timeSpanInMsec_ = 0;

        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_ManualGatheringParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ManualGatheringParam getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.ManualGatheringParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ManualGatheringParam build() {
        zb.dcts.scenario.detection.Detection.ManualGatheringParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.ManualGatheringParam buildPartial() {
        zb.dcts.scenario.detection.Detection.ManualGatheringParam result = new zb.dcts.scenario.detection.Detection.ManualGatheringParam(this);
        result.id_ = id_;
        result.timeSpanInMsec_ = timeSpanInMsec_;
        if (freqSpanBuilder_ == null) {
          result.freqSpan_ = freqSpan_;
        } else {
          result.freqSpan_ = freqSpanBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.ManualGatheringParam) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.ManualGatheringParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.ManualGatheringParam other) {
        if (other == zb.dcts.scenario.detection.Detection.ManualGatheringParam.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getTimeSpanInMsec() != 0) {
          setTimeSpanInMsec(other.getTimeSpanInMsec());
        }
        if (other.hasFreqSpan()) {
          mergeFreqSpan(other.getFreqSpan());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.ManualGatheringParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.ManualGatheringParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int timeSpanInMsec_ ;
      /**
       * <pre>
       *信号收集的持续时长(以毫秒计)
       * </pre>
       *
       * <code>int32 time_span_in_msec = 2;</code>
       * @return The timeSpanInMsec.
       */
      @java.lang.Override
      public int getTimeSpanInMsec() {
        return timeSpanInMsec_;
      }
      /**
       * <pre>
       *信号收集的持续时长(以毫秒计)
       * </pre>
       *
       * <code>int32 time_span_in_msec = 2;</code>
       * @param value The timeSpanInMsec to set.
       * @return This builder for chaining.
       */
      public Builder setTimeSpanInMsec(int value) {
        
        timeSpanInMsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号收集的持续时长(以毫秒计)
       * </pre>
       *
       * <code>int32 time_span_in_msec = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeSpanInMsec() {
        
        timeSpanInMsec_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqSpanBuilder_;
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       * @return Whether the freqSpan field is set.
       */
      public boolean hasFreqSpan() {
        return freqSpanBuilder_ != null || freqSpan_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       * @return The freqSpan.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
        if (freqSpanBuilder_ == null) {
          return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        } else {
          return freqSpanBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       */
      public Builder setFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqSpan_ = value;
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       */
      public Builder setFreqSpan(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = builderForValue.build();
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       */
      public Builder mergeFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (freqSpan_ != null) {
            freqSpan_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(freqSpan_).mergeFrom(value).buildPartial();
          } else {
            freqSpan_ = value;
          }
          onChanged();
        } else {
          freqSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       */
      public Builder clearFreqSpan() {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
          onChanged();
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqSpanBuilder() {
        
        onChanged();
        return getFreqSpanFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
        if (freqSpanBuilder_ != null) {
          return freqSpanBuilder_.getMessageOrBuilder();
        } else {
          return freqSpan_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqSpanFieldBuilder() {
        if (freqSpanBuilder_ == null) {
          freqSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFreqSpan(),
                  getParentForChildren(),
                  isClean());
          freqSpan_ = null;
        }
        return freqSpanBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.ManualGatheringParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.ManualGatheringParam)
    private static final zb.dcts.scenario.detection.Detection.ManualGatheringParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.ManualGatheringParam();
    }

    public static zb.dcts.scenario.detection.Detection.ManualGatheringParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ManualGatheringParam>
        PARSER = new com.google.protobuf.AbstractParser<ManualGatheringParam>() {
      @java.lang.Override
      public ManualGatheringParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ManualGatheringParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ManualGatheringParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ManualGatheringParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ManualGatheringParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalGatheringRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalGatheringRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    boolean hasResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    zb.dcts.scenario.Scenario.ScenarioTaskId getResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
     * @return Whether the autoGatheringParam field is set.
     */
    boolean hasAutoGatheringParam();
    /**
     * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
     * @return The autoGatheringParam.
     */
    zb.dcts.scenario.detection.Detection.AutoGatheringParam getAutoGatheringParam();
    /**
     * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.AutoGatheringParamOrBuilder getAutoGatheringParamOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
     * @return Whether the manualGatheringParam field is set.
     */
    boolean hasManualGatheringParam();
    /**
     * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
     * @return The manualGatheringParam.
     */
    zb.dcts.scenario.detection.Detection.ManualGatheringParam getManualGatheringParam();
    /**
     * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
     */
    zb.dcts.scenario.detection.Detection.ManualGatheringParamOrBuilder getManualGatheringParamOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalGatheringRequest}
   */
  public static final class SignalGatheringRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalGatheringRequest)
      SignalGatheringRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalGatheringRequest.newBuilder() to construct.
    private SignalGatheringRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalGatheringRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalGatheringRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalGatheringRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.Scenario.ScenarioTaskId.Builder subBuilder = null;
              if (responser_ != null) {
                subBuilder = responser_.toBuilder();
              }
              responser_ = input.readMessage(zb.dcts.scenario.Scenario.ScenarioTaskId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(responser_);
                responser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder subBuilder = null;
              if (autoGatheringParam_ != null) {
                subBuilder = autoGatheringParam_.toBuilder();
              }
              autoGatheringParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.AutoGatheringParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(autoGatheringParam_);
                autoGatheringParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder subBuilder = null;
              if (manualGatheringParam_ != null) {
                subBuilder = manualGatheringParam_.toBuilder();
              }
              manualGatheringParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.ManualGatheringParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(manualGatheringParam_);
                manualGatheringParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalGatheringRequest.class, zb.dcts.scenario.detection.Detection.SignalGatheringRequest.Builder.class);
    }

    public static final int RESPONSER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    @java.lang.Override
    public boolean hasResponser() {
      return responser_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
      return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
      return getResponser();
    }

    public static final int AUTO_GATHERING_PARAM_FIELD_NUMBER = 2;
    private zb.dcts.scenario.detection.Detection.AutoGatheringParam autoGatheringParam_;
    /**
     * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
     * @return Whether the autoGatheringParam field is set.
     */
    @java.lang.Override
    public boolean hasAutoGatheringParam() {
      return autoGatheringParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
     * @return The autoGatheringParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.AutoGatheringParam getAutoGatheringParam() {
      return autoGatheringParam_ == null ? zb.dcts.scenario.detection.Detection.AutoGatheringParam.getDefaultInstance() : autoGatheringParam_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.AutoGatheringParamOrBuilder getAutoGatheringParamOrBuilder() {
      return getAutoGatheringParam();
    }

    public static final int MANUAL_GATHERING_PARAM_FIELD_NUMBER = 3;
    private zb.dcts.scenario.detection.Detection.ManualGatheringParam manualGatheringParam_;
    /**
     * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
     * @return Whether the manualGatheringParam field is set.
     */
    @java.lang.Override
    public boolean hasManualGatheringParam() {
      return manualGatheringParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
     * @return The manualGatheringParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ManualGatheringParam getManualGatheringParam() {
      return manualGatheringParam_ == null ? zb.dcts.scenario.detection.Detection.ManualGatheringParam.getDefaultInstance() : manualGatheringParam_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.ManualGatheringParamOrBuilder getManualGatheringParamOrBuilder() {
      return getManualGatheringParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responser_ != null) {
        output.writeMessage(1, getResponser());
      }
      if (autoGatheringParam_ != null) {
        output.writeMessage(2, getAutoGatheringParam());
      }
      if (manualGatheringParam_ != null) {
        output.writeMessage(3, getManualGatheringParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponser());
      }
      if (autoGatheringParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAutoGatheringParam());
      }
      if (manualGatheringParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getManualGatheringParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalGatheringRequest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalGatheringRequest other = (zb.dcts.scenario.detection.Detection.SignalGatheringRequest) obj;

      if (hasResponser() != other.hasResponser()) return false;
      if (hasResponser()) {
        if (!getResponser()
            .equals(other.getResponser())) return false;
      }
      if (hasAutoGatheringParam() != other.hasAutoGatheringParam()) return false;
      if (hasAutoGatheringParam()) {
        if (!getAutoGatheringParam()
            .equals(other.getAutoGatheringParam())) return false;
      }
      if (hasManualGatheringParam() != other.hasManualGatheringParam()) return false;
      if (hasManualGatheringParam()) {
        if (!getManualGatheringParam()
            .equals(other.getManualGatheringParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponser()) {
        hash = (37 * hash) + RESPONSER_FIELD_NUMBER;
        hash = (53 * hash) + getResponser().hashCode();
      }
      if (hasAutoGatheringParam()) {
        hash = (37 * hash) + AUTO_GATHERING_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getAutoGatheringParam().hashCode();
      }
      if (hasManualGatheringParam()) {
        hash = (37 * hash) + MANUAL_GATHERING_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getManualGatheringParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalGatheringRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalGatheringRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalGatheringRequest)
        zb.dcts.scenario.detection.Detection.SignalGatheringRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalGatheringRequest.class, zb.dcts.scenario.detection.Detection.SignalGatheringRequest.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalGatheringRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (responserBuilder_ == null) {
          responser_ = null;
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }
        if (autoGatheringParamBuilder_ == null) {
          autoGatheringParam_ = null;
        } else {
          autoGatheringParam_ = null;
          autoGatheringParamBuilder_ = null;
        }
        if (manualGatheringParamBuilder_ == null) {
          manualGatheringParam_ = null;
        } else {
          manualGatheringParam_ = null;
          manualGatheringParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalGatheringRequest getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalGatheringRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalGatheringRequest build() {
        zb.dcts.scenario.detection.Detection.SignalGatheringRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalGatheringRequest buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalGatheringRequest result = new zb.dcts.scenario.detection.Detection.SignalGatheringRequest(this);
        if (responserBuilder_ == null) {
          result.responser_ = responser_;
        } else {
          result.responser_ = responserBuilder_.build();
        }
        if (autoGatheringParamBuilder_ == null) {
          result.autoGatheringParam_ = autoGatheringParam_;
        } else {
          result.autoGatheringParam_ = autoGatheringParamBuilder_.build();
        }
        if (manualGatheringParamBuilder_ == null) {
          result.manualGatheringParam_ = manualGatheringParam_;
        } else {
          result.manualGatheringParam_ = manualGatheringParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalGatheringRequest) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalGatheringRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalGatheringRequest other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalGatheringRequest.getDefaultInstance()) return this;
        if (other.hasResponser()) {
          mergeResponser(other.getResponser());
        }
        if (other.hasAutoGatheringParam()) {
          mergeAutoGatheringParam(other.getAutoGatheringParam());
        }
        if (other.hasManualGatheringParam()) {
          mergeManualGatheringParam(other.getManualGatheringParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalGatheringRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalGatheringRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> responserBuilder_;
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return Whether the responser field is set.
       */
      public boolean hasResponser() {
        return responserBuilder_ != null || responser_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return The responser.
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
        if (responserBuilder_ == null) {
          return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        } else {
          return responserBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responser_ = value;
          onChanged();
        } else {
          responserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(
          zb.dcts.scenario.Scenario.ScenarioTaskId.Builder builderForValue) {
        if (responserBuilder_ == null) {
          responser_ = builderForValue.build();
          onChanged();
        } else {
          responserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder mergeResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (responser_ != null) {
            responser_ =
              zb.dcts.scenario.Scenario.ScenarioTaskId.newBuilder(responser_).mergeFrom(value).buildPartial();
          } else {
            responser_ = value;
          }
          onChanged();
        } else {
          responserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder clearResponser() {
        if (responserBuilder_ == null) {
          responser_ = null;
          onChanged();
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId.Builder getResponserBuilder() {
        
        onChanged();
        return getResponserFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
        if (responserBuilder_ != null) {
          return responserBuilder_.getMessageOrBuilder();
        } else {
          return responser_ == null ?
              zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> 
          getResponserFieldBuilder() {
        if (responserBuilder_ == null) {
          responserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder>(
                  getResponser(),
                  getParentForChildren(),
                  isClean());
          responser_ = null;
        }
        return responserBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.AutoGatheringParam autoGatheringParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.AutoGatheringParam, zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder, zb.dcts.scenario.detection.Detection.AutoGatheringParamOrBuilder> autoGatheringParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       * @return Whether the autoGatheringParam field is set.
       */
      public boolean hasAutoGatheringParam() {
        return autoGatheringParamBuilder_ != null || autoGatheringParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       * @return The autoGatheringParam.
       */
      public zb.dcts.scenario.detection.Detection.AutoGatheringParam getAutoGatheringParam() {
        if (autoGatheringParamBuilder_ == null) {
          return autoGatheringParam_ == null ? zb.dcts.scenario.detection.Detection.AutoGatheringParam.getDefaultInstance() : autoGatheringParam_;
        } else {
          return autoGatheringParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       */
      public Builder setAutoGatheringParam(zb.dcts.scenario.detection.Detection.AutoGatheringParam value) {
        if (autoGatheringParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          autoGatheringParam_ = value;
          onChanged();
        } else {
          autoGatheringParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       */
      public Builder setAutoGatheringParam(
          zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder builderForValue) {
        if (autoGatheringParamBuilder_ == null) {
          autoGatheringParam_ = builderForValue.build();
          onChanged();
        } else {
          autoGatheringParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       */
      public Builder mergeAutoGatheringParam(zb.dcts.scenario.detection.Detection.AutoGatheringParam value) {
        if (autoGatheringParamBuilder_ == null) {
          if (autoGatheringParam_ != null) {
            autoGatheringParam_ =
              zb.dcts.scenario.detection.Detection.AutoGatheringParam.newBuilder(autoGatheringParam_).mergeFrom(value).buildPartial();
          } else {
            autoGatheringParam_ = value;
          }
          onChanged();
        } else {
          autoGatheringParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       */
      public Builder clearAutoGatheringParam() {
        if (autoGatheringParamBuilder_ == null) {
          autoGatheringParam_ = null;
          onChanged();
        } else {
          autoGatheringParam_ = null;
          autoGatheringParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder getAutoGatheringParamBuilder() {
        
        onChanged();
        return getAutoGatheringParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.AutoGatheringParamOrBuilder getAutoGatheringParamOrBuilder() {
        if (autoGatheringParamBuilder_ != null) {
          return autoGatheringParamBuilder_.getMessageOrBuilder();
        } else {
          return autoGatheringParam_ == null ?
              zb.dcts.scenario.detection.Detection.AutoGatheringParam.getDefaultInstance() : autoGatheringParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.AutoGatheringParam auto_gathering_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.AutoGatheringParam, zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder, zb.dcts.scenario.detection.Detection.AutoGatheringParamOrBuilder> 
          getAutoGatheringParamFieldBuilder() {
        if (autoGatheringParamBuilder_ == null) {
          autoGatheringParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.AutoGatheringParam, zb.dcts.scenario.detection.Detection.AutoGatheringParam.Builder, zb.dcts.scenario.detection.Detection.AutoGatheringParamOrBuilder>(
                  getAutoGatheringParam(),
                  getParentForChildren(),
                  isClean());
          autoGatheringParam_ = null;
        }
        return autoGatheringParamBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.ManualGatheringParam manualGatheringParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.ManualGatheringParam, zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder, zb.dcts.scenario.detection.Detection.ManualGatheringParamOrBuilder> manualGatheringParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       * @return Whether the manualGatheringParam field is set.
       */
      public boolean hasManualGatheringParam() {
        return manualGatheringParamBuilder_ != null || manualGatheringParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       * @return The manualGatheringParam.
       */
      public zb.dcts.scenario.detection.Detection.ManualGatheringParam getManualGatheringParam() {
        if (manualGatheringParamBuilder_ == null) {
          return manualGatheringParam_ == null ? zb.dcts.scenario.detection.Detection.ManualGatheringParam.getDefaultInstance() : manualGatheringParam_;
        } else {
          return manualGatheringParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       */
      public Builder setManualGatheringParam(zb.dcts.scenario.detection.Detection.ManualGatheringParam value) {
        if (manualGatheringParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          manualGatheringParam_ = value;
          onChanged();
        } else {
          manualGatheringParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       */
      public Builder setManualGatheringParam(
          zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder builderForValue) {
        if (manualGatheringParamBuilder_ == null) {
          manualGatheringParam_ = builderForValue.build();
          onChanged();
        } else {
          manualGatheringParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       */
      public Builder mergeManualGatheringParam(zb.dcts.scenario.detection.Detection.ManualGatheringParam value) {
        if (manualGatheringParamBuilder_ == null) {
          if (manualGatheringParam_ != null) {
            manualGatheringParam_ =
              zb.dcts.scenario.detection.Detection.ManualGatheringParam.newBuilder(manualGatheringParam_).mergeFrom(value).buildPartial();
          } else {
            manualGatheringParam_ = value;
          }
          onChanged();
        } else {
          manualGatheringParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       */
      public Builder clearManualGatheringParam() {
        if (manualGatheringParamBuilder_ == null) {
          manualGatheringParam_ = null;
          onChanged();
        } else {
          manualGatheringParam_ = null;
          manualGatheringParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder getManualGatheringParamBuilder() {
        
        onChanged();
        return getManualGatheringParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.ManualGatheringParamOrBuilder getManualGatheringParamOrBuilder() {
        if (manualGatheringParamBuilder_ != null) {
          return manualGatheringParamBuilder_.getMessageOrBuilder();
        } else {
          return manualGatheringParam_ == null ?
              zb.dcts.scenario.detection.Detection.ManualGatheringParam.getDefaultInstance() : manualGatheringParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.ManualGatheringParam manual_gathering_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.ManualGatheringParam, zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder, zb.dcts.scenario.detection.Detection.ManualGatheringParamOrBuilder> 
          getManualGatheringParamFieldBuilder() {
        if (manualGatheringParamBuilder_ == null) {
          manualGatheringParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.ManualGatheringParam, zb.dcts.scenario.detection.Detection.ManualGatheringParam.Builder, zb.dcts.scenario.detection.Detection.ManualGatheringParamOrBuilder>(
                  getManualGatheringParam(),
                  getParentForChildren(),
                  isClean());
          manualGatheringParam_ = null;
        }
        return manualGatheringParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalGatheringRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalGatheringRequest)
    private static final zb.dcts.scenario.detection.Detection.SignalGatheringRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalGatheringRequest();
    }

    public static zb.dcts.scenario.detection.Detection.SignalGatheringRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalGatheringRequest>
        PARSER = new com.google.protobuf.AbstractParser<SignalGatheringRequest>() {
      @java.lang.Override
      public SignalGatheringRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalGatheringRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalGatheringRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalGatheringRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalGatheringRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalSampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalSample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
     * @return Whether the sampleBlock field is set.
     */
    boolean hasSampleBlock();
    /**
     * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
     * @return The sampleBlock.
     */
    zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock getSampleBlock();
    /**
     * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.SpectrumBlockOrBuilder getSampleBlockOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalSample}
   */
  public static final class SignalSample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalSample)
      SignalSampleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalSample.newBuilder() to construct.
    private SignalSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalSample() {
      id_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalSample();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalSample(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.Builder subBuilder = null;
              if (sampleBlock_ != null) {
                subBuilder = sampleBlock_.toBuilder();
              }
              sampleBlock_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sampleBlock_);
                sampleBlock_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalSample.class, zb.dcts.scenario.detection.Detection.SignalSample.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SAMPLE_BLOCK_FIELD_NUMBER = 2;
    private zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock sampleBlock_;
    /**
     * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
     * @return Whether the sampleBlock field is set.
     */
    @java.lang.Override
    public boolean hasSampleBlock() {
      return sampleBlock_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
     * @return The sampleBlock.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock getSampleBlock() {
      return sampleBlock_ == null ? zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.getDefaultInstance() : sampleBlock_;
    }
    /**
     * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SpectrumBlockOrBuilder getSampleBlockOrBuilder() {
      return getSampleBlock();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (sampleBlock_ != null) {
        output.writeMessage(2, getSampleBlock());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (sampleBlock_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSampleBlock());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalSample)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalSample other = (zb.dcts.scenario.detection.Detection.SignalSample) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasSampleBlock() != other.hasSampleBlock()) return false;
      if (hasSampleBlock()) {
        if (!getSampleBlock()
            .equals(other.getSampleBlock())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasSampleBlock()) {
        hash = (37 * hash) + SAMPLE_BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getSampleBlock().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalSample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalSample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalSample)
        zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalSample.class, zb.dcts.scenario.detection.Detection.SignalSample.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalSample.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (sampleBlockBuilder_ == null) {
          sampleBlock_ = null;
        } else {
          sampleBlock_ = null;
          sampleBlockBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSample_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSample getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalSample.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSample build() {
        zb.dcts.scenario.detection.Detection.SignalSample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSample buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalSample result = new zb.dcts.scenario.detection.Detection.SignalSample(this);
        result.id_ = id_;
        if (sampleBlockBuilder_ == null) {
          result.sampleBlock_ = sampleBlock_;
        } else {
          result.sampleBlock_ = sampleBlockBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalSample) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalSample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalSample other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalSample.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.hasSampleBlock()) {
          mergeSampleBlock(other.getSampleBlock());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalSample parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalSample) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock sampleBlock_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock, zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumBlockOrBuilder> sampleBlockBuilder_;
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       * @return Whether the sampleBlock field is set.
       */
      public boolean hasSampleBlock() {
        return sampleBlockBuilder_ != null || sampleBlock_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       * @return The sampleBlock.
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock getSampleBlock() {
        if (sampleBlockBuilder_ == null) {
          return sampleBlock_ == null ? zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.getDefaultInstance() : sampleBlock_;
        } else {
          return sampleBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       */
      public Builder setSampleBlock(zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock value) {
        if (sampleBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sampleBlock_ = value;
          onChanged();
        } else {
          sampleBlockBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       */
      public Builder setSampleBlock(
          zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.Builder builderForValue) {
        if (sampleBlockBuilder_ == null) {
          sampleBlock_ = builderForValue.build();
          onChanged();
        } else {
          sampleBlockBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       */
      public Builder mergeSampleBlock(zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock value) {
        if (sampleBlockBuilder_ == null) {
          if (sampleBlock_ != null) {
            sampleBlock_ =
              zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.newBuilder(sampleBlock_).mergeFrom(value).buildPartial();
          } else {
            sampleBlock_ = value;
          }
          onChanged();
        } else {
          sampleBlockBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       */
      public Builder clearSampleBlock() {
        if (sampleBlockBuilder_ == null) {
          sampleBlock_ = null;
          onChanged();
        } else {
          sampleBlock_ = null;
          sampleBlockBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.Builder getSampleBlockBuilder() {
        
        onChanged();
        return getSampleBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumBlockOrBuilder getSampleBlockOrBuilder() {
        if (sampleBlockBuilder_ != null) {
          return sampleBlockBuilder_.getMessageOrBuilder();
        } else {
          return sampleBlock_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.getDefaultInstance() : sampleBlock_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.SpectrumBlock sample_block = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock, zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumBlockOrBuilder> 
          getSampleBlockFieldBuilder() {
        if (sampleBlockBuilder_ == null) {
          sampleBlockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock, zb.dcts.scenario.spectrum.Spectrum.SpectrumBlock.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumBlockOrBuilder>(
                  getSampleBlock(),
                  getParentForChildren(),
                  isClean());
          sampleBlock_ = null;
        }
        return sampleBlockBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalSample)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSample)
    private static final zb.dcts.scenario.detection.Detection.SignalSample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalSample();
    }

    public static zb.dcts.scenario.detection.Detection.SignalSample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalSample>
        PARSER = new com.google.protobuf.AbstractParser<SignalSample>() {
      @java.lang.Override
      public SignalSample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalSample(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalSample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalSample> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalSampleListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalSampleList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.SignalSample> 
        getSamplesList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalSample getSamples(int index);
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    int getSamplesCount();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder> 
        getSamplesOrBuilderList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder getSamplesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalSampleList}
   */
  public static final class SignalSampleList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalSampleList)
      SignalSampleListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalSampleList.newBuilder() to construct.
    private SignalSampleList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalSampleList() {
      samples_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalSampleList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalSampleList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                samples_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalSample>();
                mutable_bitField0_ |= 0x00000001;
              }
              samples_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.SignalSample.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          samples_ = java.util.Collections.unmodifiableList(samples_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSampleList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSampleList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalSampleList.class, zb.dcts.scenario.detection.Detection.SignalSampleList.Builder.class);
    }

    public static final int SAMPLES_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.scenario.detection.Detection.SignalSample> samples_;
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.SignalSample> getSamplesList() {
      return samples_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder> 
        getSamplesOrBuilderList() {
      return samples_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    @java.lang.Override
    public int getSamplesCount() {
      return samples_.size();
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSample getSamples(int index) {
      return samples_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder getSamplesOrBuilder(
        int index) {
      return samples_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < samples_.size(); i++) {
        output.writeMessage(1, samples_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < samples_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, samples_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalSampleList)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalSampleList other = (zb.dcts.scenario.detection.Detection.SignalSampleList) obj;

      if (!getSamplesList()
          .equals(other.getSamplesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSamplesCount() > 0) {
        hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
        hash = (53 * hash) + getSamplesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalSampleList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalSampleList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalSampleList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalSampleList)
        zb.dcts.scenario.detection.Detection.SignalSampleListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSampleList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSampleList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalSampleList.class, zb.dcts.scenario.detection.Detection.SignalSampleList.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalSampleList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSamplesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (samplesBuilder_ == null) {
          samples_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          samplesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalSampleList_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSampleList getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalSampleList.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSampleList build() {
        zb.dcts.scenario.detection.Detection.SignalSampleList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalSampleList buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalSampleList result = new zb.dcts.scenario.detection.Detection.SignalSampleList(this);
        int from_bitField0_ = bitField0_;
        if (samplesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            samples_ = java.util.Collections.unmodifiableList(samples_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.samples_ = samples_;
        } else {
          result.samples_ = samplesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalSampleList) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalSampleList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalSampleList other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalSampleList.getDefaultInstance()) return this;
        if (samplesBuilder_ == null) {
          if (!other.samples_.isEmpty()) {
            if (samples_.isEmpty()) {
              samples_ = other.samples_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSamplesIsMutable();
              samples_.addAll(other.samples_);
            }
            onChanged();
          }
        } else {
          if (!other.samples_.isEmpty()) {
            if (samplesBuilder_.isEmpty()) {
              samplesBuilder_.dispose();
              samplesBuilder_ = null;
              samples_ = other.samples_;
              bitField0_ = (bitField0_ & ~0x00000001);
              samplesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSamplesFieldBuilder() : null;
            } else {
              samplesBuilder_.addAllMessages(other.samples_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalSampleList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalSampleList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.scenario.detection.Detection.SignalSample> samples_ =
        java.util.Collections.emptyList();
      private void ensureSamplesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          samples_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalSample>(samples_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSample, zb.dcts.scenario.detection.Detection.SignalSample.Builder, zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder> samplesBuilder_;

      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalSample> getSamplesList() {
        if (samplesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(samples_);
        } else {
          return samplesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public int getSamplesCount() {
        if (samplesBuilder_ == null) {
          return samples_.size();
        } else {
          return samplesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSample getSamples(int index) {
        if (samplesBuilder_ == null) {
          return samples_.get(index);
        } else {
          return samplesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder setSamples(
          int index, zb.dcts.scenario.detection.Detection.SignalSample value) {
        if (samplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSamplesIsMutable();
          samples_.set(index, value);
          onChanged();
        } else {
          samplesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder setSamples(
          int index, zb.dcts.scenario.detection.Detection.SignalSample.Builder builderForValue) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.set(index, builderForValue.build());
          onChanged();
        } else {
          samplesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder addSamples(zb.dcts.scenario.detection.Detection.SignalSample value) {
        if (samplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSamplesIsMutable();
          samples_.add(value);
          onChanged();
        } else {
          samplesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder addSamples(
          int index, zb.dcts.scenario.detection.Detection.SignalSample value) {
        if (samplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSamplesIsMutable();
          samples_.add(index, value);
          onChanged();
        } else {
          samplesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder addSamples(
          zb.dcts.scenario.detection.Detection.SignalSample.Builder builderForValue) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.add(builderForValue.build());
          onChanged();
        } else {
          samplesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder addSamples(
          int index, zb.dcts.scenario.detection.Detection.SignalSample.Builder builderForValue) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.add(index, builderForValue.build());
          onChanged();
        } else {
          samplesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder addAllSamples(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.SignalSample> values) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, samples_);
          onChanged();
        } else {
          samplesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder clearSamples() {
        if (samplesBuilder_ == null) {
          samples_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          samplesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public Builder removeSamples(int index) {
        if (samplesBuilder_ == null) {
          ensureSamplesIsMutable();
          samples_.remove(index);
          onChanged();
        } else {
          samplesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSample.Builder getSamplesBuilder(
          int index) {
        return getSamplesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder getSamplesOrBuilder(
          int index) {
        if (samplesBuilder_ == null) {
          return samples_.get(index);  } else {
          return samplesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder> 
           getSamplesOrBuilderList() {
        if (samplesBuilder_ != null) {
          return samplesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(samples_);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSample.Builder addSamplesBuilder() {
        return getSamplesFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.SignalSample.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSample.Builder addSamplesBuilder(
          int index) {
        return getSamplesFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.SignalSample.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalSample samples = 1;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalSample.Builder> 
           getSamplesBuilderList() {
        return getSamplesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSample, zb.dcts.scenario.detection.Detection.SignalSample.Builder, zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder> 
          getSamplesFieldBuilder() {
        if (samplesBuilder_ == null) {
          samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalSample, zb.dcts.scenario.detection.Detection.SignalSample.Builder, zb.dcts.scenario.detection.Detection.SignalSampleOrBuilder>(
                  samples_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          samples_ = null;
        }
        return samplesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalSampleList)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSampleList)
    private static final zb.dcts.scenario.detection.Detection.SignalSampleList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalSampleList();
    }

    public static zb.dcts.scenario.detection.Detection.SignalSampleList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalSampleList>
        PARSER = new com.google.protobuf.AbstractParser<SignalSampleList>() {
      @java.lang.Override
      public SignalSampleList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalSampleList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalSampleList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalSampleList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSampleList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalTableQueryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalTableQueryRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    boolean hasResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    zb.dcts.scenario.Scenario.ScenarioTaskId getResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder();

    /**
     * <pre>
     *必须设置数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 2;</code>
     * @return Whether the dataSource field is set.
     */
    boolean hasDataSource();
    /**
     * <pre>
     *必须设置数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 2;</code>
     * @return The dataSource.
     */
    zb.dcts.source.Source.SourceId getDataSource();
    /**
     * <pre>
     *必须设置数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 2;</code>
     */
    zb.dcts.source.Source.SourceIdOrBuilder getDataSourceOrBuilder();

    /**
     * <pre>
     *根据活动属性查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.Integer activiy_mask = 3;</code>
     * @return Whether the activiyMask field is set.
     */
    boolean hasActiviyMask();
    /**
     * <pre>
     *根据活动属性查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.Integer activiy_mask = 3;</code>
     * @return The activiyMask.
     */
    zb.dcts.Dcts.Integer getActiviyMask();
    /**
     * <pre>
     *根据活动属性查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.Integer activiy_mask = 3;</code>
     */
    zb.dcts.Dcts.IntegerOrBuilder getActiviyMaskOrBuilder();

    /**
     * <pre>
     *根据频率范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
     * @return Whether the freqRange field is set.
     */
    boolean hasFreqRange();
    /**
     * <pre>
     *根据频率范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
     * @return The freqRange.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqRange();
    /**
     * <pre>
     *根据频率范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqRangeOrBuilder();

    /**
     * <pre>
     *根据时间范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_range = 5;</code>
     * @return Whether the timeRange field is set.
     */
    boolean hasTimeRange();
    /**
     * <pre>
     *根据时间范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_range = 5;</code>
     * @return The timeRange.
     */
    zb.dcts.Dcts.TimeSpan getTimeRange();
    /**
     * <pre>
     *根据时间范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_range = 5;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeRangeOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalTableQueryRequest}
   */
  public static final class SignalTableQueryRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalTableQueryRequest)
      SignalTableQueryRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalTableQueryRequest.newBuilder() to construct.
    private SignalTableQueryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalTableQueryRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalTableQueryRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalTableQueryRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.Scenario.ScenarioTaskId.Builder subBuilder = null;
              if (responser_ != null) {
                subBuilder = responser_.toBuilder();
              }
              responser_ = input.readMessage(zb.dcts.scenario.Scenario.ScenarioTaskId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(responser_);
                responser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.source.Source.SourceId.Builder subBuilder = null;
              if (dataSource_ != null) {
                subBuilder = dataSource_.toBuilder();
              }
              dataSource_ = input.readMessage(zb.dcts.source.Source.SourceId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataSource_);
                dataSource_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.Dcts.Integer.Builder subBuilder = null;
              if (activiyMask_ != null) {
                subBuilder = activiyMask_.toBuilder();
              }
              activiyMask_ = input.readMessage(zb.dcts.Dcts.Integer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(activiyMask_);
                activiyMask_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (freqRange_ != null) {
                subBuilder = freqRange_.toBuilder();
              }
              freqRange_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqRange_);
                freqRange_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeRange_ != null) {
                subBuilder = timeRange_.toBuilder();
              }
              timeRange_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeRange_);
                timeRange_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalTableQueryRequest.class, zb.dcts.scenario.detection.Detection.SignalTableQueryRequest.Builder.class);
    }

    public static final int RESPONSER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    @java.lang.Override
    public boolean hasResponser() {
      return responser_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
      return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
      return getResponser();
    }

    public static final int DATA_SOURCE_FIELD_NUMBER = 2;
    private zb.dcts.source.Source.SourceId dataSource_;
    /**
     * <pre>
     *必须设置数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 2;</code>
     * @return Whether the dataSource field is set.
     */
    @java.lang.Override
    public boolean hasDataSource() {
      return dataSource_ != null;
    }
    /**
     * <pre>
     *必须设置数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 2;</code>
     * @return The dataSource.
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceId getDataSource() {
      return dataSource_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : dataSource_;
    }
    /**
     * <pre>
     *必须设置数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceIdOrBuilder getDataSourceOrBuilder() {
      return getDataSource();
    }

    public static final int ACTIVIY_MASK_FIELD_NUMBER = 3;
    private zb.dcts.Dcts.Integer activiyMask_;
    /**
     * <pre>
     *根据活动属性查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.Integer activiy_mask = 3;</code>
     * @return Whether the activiyMask field is set.
     */
    @java.lang.Override
    public boolean hasActiviyMask() {
      return activiyMask_ != null;
    }
    /**
     * <pre>
     *根据活动属性查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.Integer activiy_mask = 3;</code>
     * @return The activiyMask.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Integer getActiviyMask() {
      return activiyMask_ == null ? zb.dcts.Dcts.Integer.getDefaultInstance() : activiyMask_;
    }
    /**
     * <pre>
     *根据活动属性查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.Integer activiy_mask = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.IntegerOrBuilder getActiviyMaskOrBuilder() {
      return getActiviyMask();
    }

    public static final int FREQ_RANGE_FIELD_NUMBER = 4;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqRange_;
    /**
     * <pre>
     *根据频率范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
     * @return Whether the freqRange field is set.
     */
    @java.lang.Override
    public boolean hasFreqRange() {
      return freqRange_ != null;
    }
    /**
     * <pre>
     *根据频率范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
     * @return The freqRange.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqRange() {
      return freqRange_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqRange_;
    }
    /**
     * <pre>
     *根据频率范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqRangeOrBuilder() {
      return getFreqRange();
    }

    public static final int TIME_RANGE_FIELD_NUMBER = 5;
    private zb.dcts.Dcts.TimeSpan timeRange_;
    /**
     * <pre>
     *根据时间范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_range = 5;</code>
     * @return Whether the timeRange field is set.
     */
    @java.lang.Override
    public boolean hasTimeRange() {
      return timeRange_ != null;
    }
    /**
     * <pre>
     *根据时间范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_range = 5;</code>
     * @return The timeRange.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeRange() {
      return timeRange_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeRange_;
    }
    /**
     * <pre>
     *根据时间范围查询（可选）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_range = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeRangeOrBuilder() {
      return getTimeRange();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responser_ != null) {
        output.writeMessage(1, getResponser());
      }
      if (dataSource_ != null) {
        output.writeMessage(2, getDataSource());
      }
      if (activiyMask_ != null) {
        output.writeMessage(3, getActiviyMask());
      }
      if (freqRange_ != null) {
        output.writeMessage(4, getFreqRange());
      }
      if (timeRange_ != null) {
        output.writeMessage(5, getTimeRange());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponser());
      }
      if (dataSource_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDataSource());
      }
      if (activiyMask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getActiviyMask());
      }
      if (freqRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFreqRange());
      }
      if (timeRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTimeRange());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalTableQueryRequest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalTableQueryRequest other = (zb.dcts.scenario.detection.Detection.SignalTableQueryRequest) obj;

      if (hasResponser() != other.hasResponser()) return false;
      if (hasResponser()) {
        if (!getResponser()
            .equals(other.getResponser())) return false;
      }
      if (hasDataSource() != other.hasDataSource()) return false;
      if (hasDataSource()) {
        if (!getDataSource()
            .equals(other.getDataSource())) return false;
      }
      if (hasActiviyMask() != other.hasActiviyMask()) return false;
      if (hasActiviyMask()) {
        if (!getActiviyMask()
            .equals(other.getActiviyMask())) return false;
      }
      if (hasFreqRange() != other.hasFreqRange()) return false;
      if (hasFreqRange()) {
        if (!getFreqRange()
            .equals(other.getFreqRange())) return false;
      }
      if (hasTimeRange() != other.hasTimeRange()) return false;
      if (hasTimeRange()) {
        if (!getTimeRange()
            .equals(other.getTimeRange())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponser()) {
        hash = (37 * hash) + RESPONSER_FIELD_NUMBER;
        hash = (53 * hash) + getResponser().hashCode();
      }
      if (hasDataSource()) {
        hash = (37 * hash) + DATA_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getDataSource().hashCode();
      }
      if (hasActiviyMask()) {
        hash = (37 * hash) + ACTIVIY_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getActiviyMask().hashCode();
      }
      if (hasFreqRange()) {
        hash = (37 * hash) + FREQ_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getFreqRange().hashCode();
      }
      if (hasTimeRange()) {
        hash = (37 * hash) + TIME_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeRange().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalTableQueryRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalTableQueryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalTableQueryRequest)
        zb.dcts.scenario.detection.Detection.SignalTableQueryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalTableQueryRequest.class, zb.dcts.scenario.detection.Detection.SignalTableQueryRequest.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalTableQueryRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (responserBuilder_ == null) {
          responser_ = null;
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }
        if (dataSourceBuilder_ == null) {
          dataSource_ = null;
        } else {
          dataSource_ = null;
          dataSourceBuilder_ = null;
        }
        if (activiyMaskBuilder_ == null) {
          activiyMask_ = null;
        } else {
          activiyMask_ = null;
          activiyMaskBuilder_ = null;
        }
        if (freqRangeBuilder_ == null) {
          freqRange_ = null;
        } else {
          freqRange_ = null;
          freqRangeBuilder_ = null;
        }
        if (timeRangeBuilder_ == null) {
          timeRange_ = null;
        } else {
          timeRange_ = null;
          timeRangeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalTableQueryRequest getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalTableQueryRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalTableQueryRequest build() {
        zb.dcts.scenario.detection.Detection.SignalTableQueryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalTableQueryRequest buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalTableQueryRequest result = new zb.dcts.scenario.detection.Detection.SignalTableQueryRequest(this);
        if (responserBuilder_ == null) {
          result.responser_ = responser_;
        } else {
          result.responser_ = responserBuilder_.build();
        }
        if (dataSourceBuilder_ == null) {
          result.dataSource_ = dataSource_;
        } else {
          result.dataSource_ = dataSourceBuilder_.build();
        }
        if (activiyMaskBuilder_ == null) {
          result.activiyMask_ = activiyMask_;
        } else {
          result.activiyMask_ = activiyMaskBuilder_.build();
        }
        if (freqRangeBuilder_ == null) {
          result.freqRange_ = freqRange_;
        } else {
          result.freqRange_ = freqRangeBuilder_.build();
        }
        if (timeRangeBuilder_ == null) {
          result.timeRange_ = timeRange_;
        } else {
          result.timeRange_ = timeRangeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalTableQueryRequest) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalTableQueryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalTableQueryRequest other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalTableQueryRequest.getDefaultInstance()) return this;
        if (other.hasResponser()) {
          mergeResponser(other.getResponser());
        }
        if (other.hasDataSource()) {
          mergeDataSource(other.getDataSource());
        }
        if (other.hasActiviyMask()) {
          mergeActiviyMask(other.getActiviyMask());
        }
        if (other.hasFreqRange()) {
          mergeFreqRange(other.getFreqRange());
        }
        if (other.hasTimeRange()) {
          mergeTimeRange(other.getTimeRange());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalTableQueryRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalTableQueryRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> responserBuilder_;
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return Whether the responser field is set.
       */
      public boolean hasResponser() {
        return responserBuilder_ != null || responser_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return The responser.
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
        if (responserBuilder_ == null) {
          return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        } else {
          return responserBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responser_ = value;
          onChanged();
        } else {
          responserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(
          zb.dcts.scenario.Scenario.ScenarioTaskId.Builder builderForValue) {
        if (responserBuilder_ == null) {
          responser_ = builderForValue.build();
          onChanged();
        } else {
          responserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder mergeResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (responser_ != null) {
            responser_ =
              zb.dcts.scenario.Scenario.ScenarioTaskId.newBuilder(responser_).mergeFrom(value).buildPartial();
          } else {
            responser_ = value;
          }
          onChanged();
        } else {
          responserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder clearResponser() {
        if (responserBuilder_ == null) {
          responser_ = null;
          onChanged();
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId.Builder getResponserBuilder() {
        
        onChanged();
        return getResponserFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
        if (responserBuilder_ != null) {
          return responserBuilder_.getMessageOrBuilder();
        } else {
          return responser_ == null ?
              zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> 
          getResponserFieldBuilder() {
        if (responserBuilder_ == null) {
          responserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder>(
                  getResponser(),
                  getParentForChildren(),
                  isClean());
          responser_ = null;
        }
        return responserBuilder_;
      }

      private zb.dcts.source.Source.SourceId dataSource_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> dataSourceBuilder_;
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       * @return Whether the dataSource field is set.
       */
      public boolean hasDataSource() {
        return dataSourceBuilder_ != null || dataSource_ != null;
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       * @return The dataSource.
       */
      public zb.dcts.source.Source.SourceId getDataSource() {
        if (dataSourceBuilder_ == null) {
          return dataSource_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : dataSource_;
        } else {
          return dataSourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       */
      public Builder setDataSource(zb.dcts.source.Source.SourceId value) {
        if (dataSourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataSource_ = value;
          onChanged();
        } else {
          dataSourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       */
      public Builder setDataSource(
          zb.dcts.source.Source.SourceId.Builder builderForValue) {
        if (dataSourceBuilder_ == null) {
          dataSource_ = builderForValue.build();
          onChanged();
        } else {
          dataSourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       */
      public Builder mergeDataSource(zb.dcts.source.Source.SourceId value) {
        if (dataSourceBuilder_ == null) {
          if (dataSource_ != null) {
            dataSource_ =
              zb.dcts.source.Source.SourceId.newBuilder(dataSource_).mergeFrom(value).buildPartial();
          } else {
            dataSource_ = value;
          }
          onChanged();
        } else {
          dataSourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       */
      public Builder clearDataSource() {
        if (dataSourceBuilder_ == null) {
          dataSource_ = null;
          onChanged();
        } else {
          dataSource_ = null;
          dataSourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       */
      public zb.dcts.source.Source.SourceId.Builder getDataSourceBuilder() {
        
        onChanged();
        return getDataSourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       */
      public zb.dcts.source.Source.SourceIdOrBuilder getDataSourceOrBuilder() {
        if (dataSourceBuilder_ != null) {
          return dataSourceBuilder_.getMessageOrBuilder();
        } else {
          return dataSource_ == null ?
              zb.dcts.source.Source.SourceId.getDefaultInstance() : dataSource_;
        }
      }
      /**
       * <pre>
       *必须设置数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> 
          getDataSourceFieldBuilder() {
        if (dataSourceBuilder_ == null) {
          dataSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder>(
                  getDataSource(),
                  getParentForChildren(),
                  isClean());
          dataSource_ = null;
        }
        return dataSourceBuilder_;
      }

      private zb.dcts.Dcts.Integer activiyMask_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Integer, zb.dcts.Dcts.Integer.Builder, zb.dcts.Dcts.IntegerOrBuilder> activiyMaskBuilder_;
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       * @return Whether the activiyMask field is set.
       */
      public boolean hasActiviyMask() {
        return activiyMaskBuilder_ != null || activiyMask_ != null;
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       * @return The activiyMask.
       */
      public zb.dcts.Dcts.Integer getActiviyMask() {
        if (activiyMaskBuilder_ == null) {
          return activiyMask_ == null ? zb.dcts.Dcts.Integer.getDefaultInstance() : activiyMask_;
        } else {
          return activiyMaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       */
      public Builder setActiviyMask(zb.dcts.Dcts.Integer value) {
        if (activiyMaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          activiyMask_ = value;
          onChanged();
        } else {
          activiyMaskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       */
      public Builder setActiviyMask(
          zb.dcts.Dcts.Integer.Builder builderForValue) {
        if (activiyMaskBuilder_ == null) {
          activiyMask_ = builderForValue.build();
          onChanged();
        } else {
          activiyMaskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       */
      public Builder mergeActiviyMask(zb.dcts.Dcts.Integer value) {
        if (activiyMaskBuilder_ == null) {
          if (activiyMask_ != null) {
            activiyMask_ =
              zb.dcts.Dcts.Integer.newBuilder(activiyMask_).mergeFrom(value).buildPartial();
          } else {
            activiyMask_ = value;
          }
          onChanged();
        } else {
          activiyMaskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       */
      public Builder clearActiviyMask() {
        if (activiyMaskBuilder_ == null) {
          activiyMask_ = null;
          onChanged();
        } else {
          activiyMask_ = null;
          activiyMaskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       */
      public zb.dcts.Dcts.Integer.Builder getActiviyMaskBuilder() {
        
        onChanged();
        return getActiviyMaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       */
      public zb.dcts.Dcts.IntegerOrBuilder getActiviyMaskOrBuilder() {
        if (activiyMaskBuilder_ != null) {
          return activiyMaskBuilder_.getMessageOrBuilder();
        } else {
          return activiyMask_ == null ?
              zb.dcts.Dcts.Integer.getDefaultInstance() : activiyMask_;
        }
      }
      /**
       * <pre>
       *根据活动属性查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.Integer activiy_mask = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Integer, zb.dcts.Dcts.Integer.Builder, zb.dcts.Dcts.IntegerOrBuilder> 
          getActiviyMaskFieldBuilder() {
        if (activiyMaskBuilder_ == null) {
          activiyMaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Integer, zb.dcts.Dcts.Integer.Builder, zb.dcts.Dcts.IntegerOrBuilder>(
                  getActiviyMask(),
                  getParentForChildren(),
                  isClean());
          activiyMask_ = null;
        }
        return activiyMaskBuilder_;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqRange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqRangeBuilder_;
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       * @return Whether the freqRange field is set.
       */
      public boolean hasFreqRange() {
        return freqRangeBuilder_ != null || freqRange_ != null;
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       * @return The freqRange.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqRange() {
        if (freqRangeBuilder_ == null) {
          return freqRange_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqRange_;
        } else {
          return freqRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       */
      public Builder setFreqRange(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqRange_ = value;
          onChanged();
        } else {
          freqRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       */
      public Builder setFreqRange(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqRangeBuilder_ == null) {
          freqRange_ = builderForValue.build();
          onChanged();
        } else {
          freqRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       */
      public Builder mergeFreqRange(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqRangeBuilder_ == null) {
          if (freqRange_ != null) {
            freqRange_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(freqRange_).mergeFrom(value).buildPartial();
          } else {
            freqRange_ = value;
          }
          onChanged();
        } else {
          freqRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       */
      public Builder clearFreqRange() {
        if (freqRangeBuilder_ == null) {
          freqRange_ = null;
          onChanged();
        } else {
          freqRange_ = null;
          freqRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqRangeBuilder() {
        
        onChanged();
        return getFreqRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqRangeOrBuilder() {
        if (freqRangeBuilder_ != null) {
          return freqRangeBuilder_.getMessageOrBuilder();
        } else {
          return freqRange_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqRange_;
        }
      }
      /**
       * <pre>
       *根据频率范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_range = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqRangeFieldBuilder() {
        if (freqRangeBuilder_ == null) {
          freqRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFreqRange(),
                  getParentForChildren(),
                  isClean());
          freqRange_ = null;
        }
        return freqRangeBuilder_;
      }

      private zb.dcts.Dcts.TimeSpan timeRange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeRangeBuilder_;
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       * @return Whether the timeRange field is set.
       */
      public boolean hasTimeRange() {
        return timeRangeBuilder_ != null || timeRange_ != null;
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       * @return The timeRange.
       */
      public zb.dcts.Dcts.TimeSpan getTimeRange() {
        if (timeRangeBuilder_ == null) {
          return timeRange_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeRange_;
        } else {
          return timeRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       */
      public Builder setTimeRange(zb.dcts.Dcts.TimeSpan value) {
        if (timeRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeRange_ = value;
          onChanged();
        } else {
          timeRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       */
      public Builder setTimeRange(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeRangeBuilder_ == null) {
          timeRange_ = builderForValue.build();
          onChanged();
        } else {
          timeRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       */
      public Builder mergeTimeRange(zb.dcts.Dcts.TimeSpan value) {
        if (timeRangeBuilder_ == null) {
          if (timeRange_ != null) {
            timeRange_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeRange_).mergeFrom(value).buildPartial();
          } else {
            timeRange_ = value;
          }
          onChanged();
        } else {
          timeRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       */
      public Builder clearTimeRange() {
        if (timeRangeBuilder_ == null) {
          timeRange_ = null;
          onChanged();
        } else {
          timeRange_ = null;
          timeRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeRangeBuilder() {
        
        onChanged();
        return getTimeRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeRangeOrBuilder() {
        if (timeRangeBuilder_ != null) {
          return timeRangeBuilder_.getMessageOrBuilder();
        } else {
          return timeRange_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeRange_;
        }
      }
      /**
       * <pre>
       *根据时间范围查询（可选）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_range = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeRangeFieldBuilder() {
        if (timeRangeBuilder_ == null) {
          timeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeRange(),
                  getParentForChildren(),
                  isClean());
          timeRange_ = null;
        }
        return timeRangeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalTableQueryRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalTableQueryRequest)
    private static final zb.dcts.scenario.detection.Detection.SignalTableQueryRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalTableQueryRequest();
    }

    public static zb.dcts.scenario.detection.Detection.SignalTableQueryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalTableQueryRequest>
        PARSER = new com.google.protobuf.AbstractParser<SignalTableQueryRequest>() {
      @java.lang.Override
      public SignalTableQueryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalTableQueryRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalTableQueryRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalTableQueryRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalTableQueryRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalTableQueryResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalTableQueryResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 1;</code>
     * @return Whether the dataSource field is set.
     */
    boolean hasDataSource();
    /**
     * <pre>
     *数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 1;</code>
     * @return The dataSource.
     */
    zb.dcts.source.Source.SourceId getDataSource();
    /**
     * <pre>
     *数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 1;</code>
     */
    zb.dcts.source.Source.SourceIdOrBuilder getDataSourceOrBuilder();

    /**
     * <pre>
     *总扫描次数
     * </pre>
     *
     * <code>int32 num_sweeps = 2;</code>
     * @return The numSweeps.
     */
    int getNumSweeps();

    /**
     * <pre>
     *总检测次数
     * </pre>
     *
     * <code>int32 num_detects = 3;</code>
     * @return The numDetects.
     */
    int getNumDetects();

    /**
     * <pre>
     *总信号数量
     * </pre>
     *
     * <code>int32 num_total_signals = 4;</code>
     * @return The numTotalSignals.
     */
    int getNumTotalSignals();

    /**
     * <pre>
     *符合查询条件的信号数量
     * </pre>
     *
     * <code>int32 num_query_signals = 5;</code>
     * @return The numQuerySignals.
     */
    int getNumQuerySignals();

    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> 
        getFixSignalListList();
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigest getFixSignalList(int index);
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    int getFixSignalListCount();
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
        getFixSignalListOrBuilderList();
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getFixSignalListOrBuilder(
        int index);

    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> 
        getHopSignalListList();
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalList(int index);
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    int getHopSignalListCount();
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
        getHopSignalListOrBuilderList();
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.SignalTableQueryResponse}
   */
  public static final class SignalTableQueryResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalTableQueryResponse)
      SignalTableQueryResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalTableQueryResponse.newBuilder() to construct.
    private SignalTableQueryResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalTableQueryResponse() {
      fixSignalList_ = java.util.Collections.emptyList();
      hopSignalList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalTableQueryResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalTableQueryResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.source.Source.SourceId.Builder subBuilder = null;
              if (dataSource_ != null) {
                subBuilder = dataSource_.toBuilder();
              }
              dataSource_ = input.readMessage(zb.dcts.source.Source.SourceId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataSource_);
                dataSource_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              numSweeps_ = input.readInt32();
              break;
            }
            case 24: {

              numDetects_ = input.readInt32();
              break;
            }
            case 32: {

              numTotalSignals_ = input.readInt32();
              break;
            }
            case 40: {

              numQuerySignals_ = input.readInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fixSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalDigest>();
                mutable_bitField0_ |= 0x00000001;
              }
              fixSignalList_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.SignalDigest.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                hopSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalCluster>();
                mutable_bitField0_ |= 0x00000002;
              }
              hopSignalList_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.HopSignalCluster.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fixSignalList_ = java.util.Collections.unmodifiableList(fixSignalList_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          hopSignalList_ = java.util.Collections.unmodifiableList(hopSignalList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalTableQueryResponse.class, zb.dcts.scenario.detection.Detection.SignalTableQueryResponse.Builder.class);
    }

    public static final int DATA_SOURCE_FIELD_NUMBER = 1;
    private zb.dcts.source.Source.SourceId dataSource_;
    /**
     * <pre>
     *数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 1;</code>
     * @return Whether the dataSource field is set.
     */
    @java.lang.Override
    public boolean hasDataSource() {
      return dataSource_ != null;
    }
    /**
     * <pre>
     *数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 1;</code>
     * @return The dataSource.
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceId getDataSource() {
      return dataSource_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : dataSource_;
    }
    /**
     * <pre>
     *数据源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId data_source = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceIdOrBuilder getDataSourceOrBuilder() {
      return getDataSource();
    }

    public static final int NUM_SWEEPS_FIELD_NUMBER = 2;
    private int numSweeps_;
    /**
     * <pre>
     *总扫描次数
     * </pre>
     *
     * <code>int32 num_sweeps = 2;</code>
     * @return The numSweeps.
     */
    @java.lang.Override
    public int getNumSweeps() {
      return numSweeps_;
    }

    public static final int NUM_DETECTS_FIELD_NUMBER = 3;
    private int numDetects_;
    /**
     * <pre>
     *总检测次数
     * </pre>
     *
     * <code>int32 num_detects = 3;</code>
     * @return The numDetects.
     */
    @java.lang.Override
    public int getNumDetects() {
      return numDetects_;
    }

    public static final int NUM_TOTAL_SIGNALS_FIELD_NUMBER = 4;
    private int numTotalSignals_;
    /**
     * <pre>
     *总信号数量
     * </pre>
     *
     * <code>int32 num_total_signals = 4;</code>
     * @return The numTotalSignals.
     */
    @java.lang.Override
    public int getNumTotalSignals() {
      return numTotalSignals_;
    }

    public static final int NUM_QUERY_SIGNALS_FIELD_NUMBER = 5;
    private int numQuerySignals_;
    /**
     * <pre>
     *符合查询条件的信号数量
     * </pre>
     *
     * <code>int32 num_query_signals = 5;</code>
     * @return The numQuerySignals.
     */
    @java.lang.Override
    public int getNumQuerySignals() {
      return numQuerySignals_;
    }

    public static final int FIX_SIGNAL_LIST_FIELD_NUMBER = 7;
    private java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> fixSignalList_;
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> getFixSignalListList() {
      return fixSignalList_;
    }
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
        getFixSignalListOrBuilderList() {
      return fixSignalList_;
    }
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    @java.lang.Override
    public int getFixSignalListCount() {
      return fixSignalList_.size();
    }
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigest getFixSignalList(int index) {
      return fixSignalList_.get(index);
    }
    /**
     * <pre>
     *符合查询条件的定频信号摘要
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getFixSignalListOrBuilder(
        int index) {
      return fixSignalList_.get(index);
    }

    public static final int HOP_SIGNAL_LIST_FIELD_NUMBER = 8;
    private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> hopSignalList_;
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> getHopSignalListList() {
      return hopSignalList_;
    }
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
        getHopSignalListOrBuilderList() {
      return hopSignalList_;
    }
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    @java.lang.Override
    public int getHopSignalListCount() {
      return hopSignalList_.size();
    }
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalList(int index) {
      return hopSignalList_.get(index);
    }
    /**
     * <pre>
     *符合查询条件的跳频系统
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalListOrBuilder(
        int index) {
      return hopSignalList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dataSource_ != null) {
        output.writeMessage(1, getDataSource());
      }
      if (numSweeps_ != 0) {
        output.writeInt32(2, numSweeps_);
      }
      if (numDetects_ != 0) {
        output.writeInt32(3, numDetects_);
      }
      if (numTotalSignals_ != 0) {
        output.writeInt32(4, numTotalSignals_);
      }
      if (numQuerySignals_ != 0) {
        output.writeInt32(5, numQuerySignals_);
      }
      for (int i = 0; i < fixSignalList_.size(); i++) {
        output.writeMessage(7, fixSignalList_.get(i));
      }
      for (int i = 0; i < hopSignalList_.size(); i++) {
        output.writeMessage(8, hopSignalList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dataSource_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDataSource());
      }
      if (numSweeps_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numSweeps_);
      }
      if (numDetects_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numDetects_);
      }
      if (numTotalSignals_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, numTotalSignals_);
      }
      if (numQuerySignals_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, numQuerySignals_);
      }
      for (int i = 0; i < fixSignalList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fixSignalList_.get(i));
      }
      for (int i = 0; i < hopSignalList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, hopSignalList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalTableQueryResponse)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalTableQueryResponse other = (zb.dcts.scenario.detection.Detection.SignalTableQueryResponse) obj;

      if (hasDataSource() != other.hasDataSource()) return false;
      if (hasDataSource()) {
        if (!getDataSource()
            .equals(other.getDataSource())) return false;
      }
      if (getNumSweeps()
          != other.getNumSweeps()) return false;
      if (getNumDetects()
          != other.getNumDetects()) return false;
      if (getNumTotalSignals()
          != other.getNumTotalSignals()) return false;
      if (getNumQuerySignals()
          != other.getNumQuerySignals()) return false;
      if (!getFixSignalListList()
          .equals(other.getFixSignalListList())) return false;
      if (!getHopSignalListList()
          .equals(other.getHopSignalListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDataSource()) {
        hash = (37 * hash) + DATA_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getDataSource().hashCode();
      }
      hash = (37 * hash) + NUM_SWEEPS_FIELD_NUMBER;
      hash = (53 * hash) + getNumSweeps();
      hash = (37 * hash) + NUM_DETECTS_FIELD_NUMBER;
      hash = (53 * hash) + getNumDetects();
      hash = (37 * hash) + NUM_TOTAL_SIGNALS_FIELD_NUMBER;
      hash = (53 * hash) + getNumTotalSignals();
      hash = (37 * hash) + NUM_QUERY_SIGNALS_FIELD_NUMBER;
      hash = (53 * hash) + getNumQuerySignals();
      if (getFixSignalListCount() > 0) {
        hash = (37 * hash) + FIX_SIGNAL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getFixSignalListList().hashCode();
      }
      if (getHopSignalListCount() > 0) {
        hash = (37 * hash) + HOP_SIGNAL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getHopSignalListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalTableQueryResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.SignalTableQueryResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalTableQueryResponse)
        zb.dcts.scenario.detection.Detection.SignalTableQueryResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalTableQueryResponse.class, zb.dcts.scenario.detection.Detection.SignalTableQueryResponse.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalTableQueryResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFixSignalListFieldBuilder();
          getHopSignalListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dataSourceBuilder_ == null) {
          dataSource_ = null;
        } else {
          dataSource_ = null;
          dataSourceBuilder_ = null;
        }
        numSweeps_ = 0;

        numDetects_ = 0;

        numTotalSignals_ = 0;

        numQuerySignals_ = 0;

        if (fixSignalListBuilder_ == null) {
          fixSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fixSignalListBuilder_.clear();
        }
        if (hopSignalListBuilder_ == null) {
          hopSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          hopSignalListBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalTableQueryResponse getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalTableQueryResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalTableQueryResponse build() {
        zb.dcts.scenario.detection.Detection.SignalTableQueryResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalTableQueryResponse buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalTableQueryResponse result = new zb.dcts.scenario.detection.Detection.SignalTableQueryResponse(this);
        int from_bitField0_ = bitField0_;
        if (dataSourceBuilder_ == null) {
          result.dataSource_ = dataSource_;
        } else {
          result.dataSource_ = dataSourceBuilder_.build();
        }
        result.numSweeps_ = numSweeps_;
        result.numDetects_ = numDetects_;
        result.numTotalSignals_ = numTotalSignals_;
        result.numQuerySignals_ = numQuerySignals_;
        if (fixSignalListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fixSignalList_ = java.util.Collections.unmodifiableList(fixSignalList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fixSignalList_ = fixSignalList_;
        } else {
          result.fixSignalList_ = fixSignalListBuilder_.build();
        }
        if (hopSignalListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            hopSignalList_ = java.util.Collections.unmodifiableList(hopSignalList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.hopSignalList_ = hopSignalList_;
        } else {
          result.hopSignalList_ = hopSignalListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalTableQueryResponse) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalTableQueryResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalTableQueryResponse other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalTableQueryResponse.getDefaultInstance()) return this;
        if (other.hasDataSource()) {
          mergeDataSource(other.getDataSource());
        }
        if (other.getNumSweeps() != 0) {
          setNumSweeps(other.getNumSweeps());
        }
        if (other.getNumDetects() != 0) {
          setNumDetects(other.getNumDetects());
        }
        if (other.getNumTotalSignals() != 0) {
          setNumTotalSignals(other.getNumTotalSignals());
        }
        if (other.getNumQuerySignals() != 0) {
          setNumQuerySignals(other.getNumQuerySignals());
        }
        if (fixSignalListBuilder_ == null) {
          if (!other.fixSignalList_.isEmpty()) {
            if (fixSignalList_.isEmpty()) {
              fixSignalList_ = other.fixSignalList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFixSignalListIsMutable();
              fixSignalList_.addAll(other.fixSignalList_);
            }
            onChanged();
          }
        } else {
          if (!other.fixSignalList_.isEmpty()) {
            if (fixSignalListBuilder_.isEmpty()) {
              fixSignalListBuilder_.dispose();
              fixSignalListBuilder_ = null;
              fixSignalList_ = other.fixSignalList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fixSignalListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFixSignalListFieldBuilder() : null;
            } else {
              fixSignalListBuilder_.addAllMessages(other.fixSignalList_);
            }
          }
        }
        if (hopSignalListBuilder_ == null) {
          if (!other.hopSignalList_.isEmpty()) {
            if (hopSignalList_.isEmpty()) {
              hopSignalList_ = other.hopSignalList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHopSignalListIsMutable();
              hopSignalList_.addAll(other.hopSignalList_);
            }
            onChanged();
          }
        } else {
          if (!other.hopSignalList_.isEmpty()) {
            if (hopSignalListBuilder_.isEmpty()) {
              hopSignalListBuilder_.dispose();
              hopSignalListBuilder_ = null;
              hopSignalList_ = other.hopSignalList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              hopSignalListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHopSignalListFieldBuilder() : null;
            } else {
              hopSignalListBuilder_.addAllMessages(other.hopSignalList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalTableQueryResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalTableQueryResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.source.Source.SourceId dataSource_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> dataSourceBuilder_;
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       * @return Whether the dataSource field is set.
       */
      public boolean hasDataSource() {
        return dataSourceBuilder_ != null || dataSource_ != null;
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       * @return The dataSource.
       */
      public zb.dcts.source.Source.SourceId getDataSource() {
        if (dataSourceBuilder_ == null) {
          return dataSource_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : dataSource_;
        } else {
          return dataSourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       */
      public Builder setDataSource(zb.dcts.source.Source.SourceId value) {
        if (dataSourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataSource_ = value;
          onChanged();
        } else {
          dataSourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       */
      public Builder setDataSource(
          zb.dcts.source.Source.SourceId.Builder builderForValue) {
        if (dataSourceBuilder_ == null) {
          dataSource_ = builderForValue.build();
          onChanged();
        } else {
          dataSourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       */
      public Builder mergeDataSource(zb.dcts.source.Source.SourceId value) {
        if (dataSourceBuilder_ == null) {
          if (dataSource_ != null) {
            dataSource_ =
              zb.dcts.source.Source.SourceId.newBuilder(dataSource_).mergeFrom(value).buildPartial();
          } else {
            dataSource_ = value;
          }
          onChanged();
        } else {
          dataSourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       */
      public Builder clearDataSource() {
        if (dataSourceBuilder_ == null) {
          dataSource_ = null;
          onChanged();
        } else {
          dataSource_ = null;
          dataSourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       */
      public zb.dcts.source.Source.SourceId.Builder getDataSourceBuilder() {
        
        onChanged();
        return getDataSourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       */
      public zb.dcts.source.Source.SourceIdOrBuilder getDataSourceOrBuilder() {
        if (dataSourceBuilder_ != null) {
          return dataSourceBuilder_.getMessageOrBuilder();
        } else {
          return dataSource_ == null ?
              zb.dcts.source.Source.SourceId.getDefaultInstance() : dataSource_;
        }
      }
      /**
       * <pre>
       *数据源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId data_source = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> 
          getDataSourceFieldBuilder() {
        if (dataSourceBuilder_ == null) {
          dataSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder>(
                  getDataSource(),
                  getParentForChildren(),
                  isClean());
          dataSource_ = null;
        }
        return dataSourceBuilder_;
      }

      private int numSweeps_ ;
      /**
       * <pre>
       *总扫描次数
       * </pre>
       *
       * <code>int32 num_sweeps = 2;</code>
       * @return The numSweeps.
       */
      @java.lang.Override
      public int getNumSweeps() {
        return numSweeps_;
      }
      /**
       * <pre>
       *总扫描次数
       * </pre>
       *
       * <code>int32 num_sweeps = 2;</code>
       * @param value The numSweeps to set.
       * @return This builder for chaining.
       */
      public Builder setNumSweeps(int value) {
        
        numSweeps_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总扫描次数
       * </pre>
       *
       * <code>int32 num_sweeps = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumSweeps() {
        
        numSweeps_ = 0;
        onChanged();
        return this;
      }

      private int numDetects_ ;
      /**
       * <pre>
       *总检测次数
       * </pre>
       *
       * <code>int32 num_detects = 3;</code>
       * @return The numDetects.
       */
      @java.lang.Override
      public int getNumDetects() {
        return numDetects_;
      }
      /**
       * <pre>
       *总检测次数
       * </pre>
       *
       * <code>int32 num_detects = 3;</code>
       * @param value The numDetects to set.
       * @return This builder for chaining.
       */
      public Builder setNumDetects(int value) {
        
        numDetects_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总检测次数
       * </pre>
       *
       * <code>int32 num_detects = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumDetects() {
        
        numDetects_ = 0;
        onChanged();
        return this;
      }

      private int numTotalSignals_ ;
      /**
       * <pre>
       *总信号数量
       * </pre>
       *
       * <code>int32 num_total_signals = 4;</code>
       * @return The numTotalSignals.
       */
      @java.lang.Override
      public int getNumTotalSignals() {
        return numTotalSignals_;
      }
      /**
       * <pre>
       *总信号数量
       * </pre>
       *
       * <code>int32 num_total_signals = 4;</code>
       * @param value The numTotalSignals to set.
       * @return This builder for chaining.
       */
      public Builder setNumTotalSignals(int value) {
        
        numTotalSignals_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总信号数量
       * </pre>
       *
       * <code>int32 num_total_signals = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumTotalSignals() {
        
        numTotalSignals_ = 0;
        onChanged();
        return this;
      }

      private int numQuerySignals_ ;
      /**
       * <pre>
       *符合查询条件的信号数量
       * </pre>
       *
       * <code>int32 num_query_signals = 5;</code>
       * @return The numQuerySignals.
       */
      @java.lang.Override
      public int getNumQuerySignals() {
        return numQuerySignals_;
      }
      /**
       * <pre>
       *符合查询条件的信号数量
       * </pre>
       *
       * <code>int32 num_query_signals = 5;</code>
       * @param value The numQuerySignals to set.
       * @return This builder for chaining.
       */
      public Builder setNumQuerySignals(int value) {
        
        numQuerySignals_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *符合查询条件的信号数量
       * </pre>
       *
       * <code>int32 num_query_signals = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumQuerySignals() {
        
        numQuerySignals_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> fixSignalList_ =
        java.util.Collections.emptyList();
      private void ensureFixSignalListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fixSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalDigest>(fixSignalList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> fixSignalListBuilder_;

      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> getFixSignalListList() {
        if (fixSignalListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fixSignalList_);
        } else {
          return fixSignalListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public int getFixSignalListCount() {
        if (fixSignalListBuilder_ == null) {
          return fixSignalList_.size();
        } else {
          return fixSignalListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest getFixSignalList(int index) {
        if (fixSignalListBuilder_ == null) {
          return fixSignalList_.get(index);
        } else {
          return fixSignalListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder setFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (fixSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalListIsMutable();
          fixSignalList_.set(index, value);
          onChanged();
        } else {
          fixSignalListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder setFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fixSignalListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder addFixSignalList(zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (fixSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalListIsMutable();
          fixSignalList_.add(value);
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder addFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (fixSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalListIsMutable();
          fixSignalList_.add(index, value);
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder addFixSignalList(
          zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.add(builderForValue.build());
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder addFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder addAllFixSignalList(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.SignalDigest> values) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fixSignalList_);
          onChanged();
        } else {
          fixSignalListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder clearFixSignalList() {
        if (fixSignalListBuilder_ == null) {
          fixSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fixSignalListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public Builder removeFixSignalList(int index) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.remove(index);
          onChanged();
        } else {
          fixSignalListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder getFixSignalListBuilder(
          int index) {
        return getFixSignalListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getFixSignalListOrBuilder(
          int index) {
        if (fixSignalListBuilder_ == null) {
          return fixSignalList_.get(index);  } else {
          return fixSignalListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
           getFixSignalListOrBuilderList() {
        if (fixSignalListBuilder_ != null) {
          return fixSignalListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fixSignalList_);
        }
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder addFixSignalListBuilder() {
        return getFixSignalListFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance());
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder addFixSignalListBuilder(
          int index) {
        return getFixSignalListFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance());
      }
      /**
       * <pre>
       *符合查询条件的定频信号摘要
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 7;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest.Builder> 
           getFixSignalListBuilderList() {
        return getFixSignalListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
          getFixSignalListFieldBuilder() {
        if (fixSignalListBuilder_ == null) {
          fixSignalListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder>(
                  fixSignalList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fixSignalList_ = null;
        }
        return fixSignalListBuilder_;
      }

      private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> hopSignalList_ =
        java.util.Collections.emptyList();
      private void ensureHopSignalListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          hopSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalCluster>(hopSignalList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> hopSignalListBuilder_;

      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> getHopSignalListList() {
        if (hopSignalListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hopSignalList_);
        } else {
          return hopSignalListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public int getHopSignalListCount() {
        if (hopSignalListBuilder_ == null) {
          return hopSignalList_.size();
        } else {
          return hopSignalListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalList(int index) {
        if (hopSignalListBuilder_ == null) {
          return hopSignalList_.get(index);
        } else {
          return hopSignalListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder setHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalListIsMutable();
          hopSignalList_.set(index, value);
          onChanged();
        } else {
          hopSignalListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder setHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.set(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder addHopSignalList(zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalListIsMutable();
          hopSignalList_.add(value);
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder addHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalListIsMutable();
          hopSignalList_.add(index, value);
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder addHopSignalList(
          zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.add(builderForValue.build());
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder addHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.add(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder addAllHopSignalList(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.HopSignalCluster> values) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hopSignalList_);
          onChanged();
        } else {
          hopSignalListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder clearHopSignalList() {
        if (hopSignalListBuilder_ == null) {
          hopSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          hopSignalListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public Builder removeHopSignalList(int index) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.remove(index);
          onChanged();
        } else {
          hopSignalListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder getHopSignalListBuilder(
          int index) {
        return getHopSignalListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalListOrBuilder(
          int index) {
        if (hopSignalListBuilder_ == null) {
          return hopSignalList_.get(index);  } else {
          return hopSignalListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
           getHopSignalListOrBuilderList() {
        if (hopSignalListBuilder_ != null) {
          return hopSignalListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hopSignalList_);
        }
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder addHopSignalListBuilder() {
        return getHopSignalListFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance());
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder addHopSignalListBuilder(
          int index) {
        return getHopSignalListFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance());
      }
      /**
       * <pre>
       *符合查询条件的跳频系统
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 8;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder> 
           getHopSignalListBuilderList() {
        return getHopSignalListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
          getHopSignalListFieldBuilder() {
        if (hopSignalListBuilder_ == null) {
          hopSignalListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder>(
                  hopSignalList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          hopSignalList_ = null;
        }
        return hopSignalListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalTableQueryResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalTableQueryResponse)
    private static final zb.dcts.scenario.detection.Detection.SignalTableQueryResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalTableQueryResponse();
    }

    public static zb.dcts.scenario.detection.Detection.SignalTableQueryResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalTableQueryResponse>
        PARSER = new com.google.protobuf.AbstractParser<SignalTableQueryResponse>() {
      @java.lang.Override
      public SignalTableQueryResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalTableQueryResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalTableQueryResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalTableQueryResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalTableQueryResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return Whether the resultFrom field is set.
     */
    boolean hasResultFrom();
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return The resultFrom.
     */
    zb.dcts.source.Source.SourceId getResultFrom();
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     */
    zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder();

    /**
     * <pre>
     *顺序号，每个任务执行者维护自身的顺序号
     * </pre>
     *
     * <code>uint32 sequence_number = 3;</code>
     * @return The sequenceNumber.
     */
    int getSequenceNumber();

    /**
     * <pre>
     *当前上报周期内的扫描次数
     * </pre>
     *
     * <code>uint32 sweep_count = 4;</code>
     * @return The sweepCount.
     */
    int getSweepCount();

    /**
     * <pre>
     *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 5;</code>
     * @return Whether the timeSpan field is set.
     */
    boolean hasTimeSpan();
    /**
     * <pre>
     *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 5;</code>
     * @return The timeSpan.
     */
    zb.dcts.Dcts.TimeSpan getTimeSpan();
    /**
     * <pre>
     *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 5;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

    /**
     * <pre>
     *设备位置
     * </pre>
     *
     * <code>.zb.dcts.Position device_position = 6;</code>
     * @return Whether the devicePosition field is set.
     */
    boolean hasDevicePosition();
    /**
     * <pre>
     *设备位置
     * </pre>
     *
     * <code>.zb.dcts.Position device_position = 6;</code>
     * @return The devicePosition.
     */
    zb.dcts.Dcts.Position getDevicePosition();
    /**
     * <pre>
     *设备位置
     * </pre>
     *
     * <code>.zb.dcts.Position device_position = 6;</code>
     */
    zb.dcts.Dcts.PositionOrBuilder getDevicePositionOrBuilder();
  }
  /**
   * <pre>
   *--------------------------for internal purpose--------------------//
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.Header}
   */
  public static final class Header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.Header)
      HeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Header() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.source.Source.SourceId.Builder subBuilder = null;
              if (resultFrom_ != null) {
                subBuilder = resultFrom_.toBuilder();
              }
              resultFrom_ = input.readMessage(zb.dcts.source.Source.SourceId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resultFrom_);
                resultFrom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              sequenceNumber_ = input.readUInt32();
              break;
            }
            case 32: {

              sweepCount_ = input.readUInt32();
              break;
            }
            case 42: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeSpan_ != null) {
                subBuilder = timeSpan_.toBuilder();
              }
              timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSpan_);
                timeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              zb.dcts.Dcts.Position.Builder subBuilder = null;
              if (devicePosition_ != null) {
                subBuilder = devicePosition_.toBuilder();
              }
              devicePosition_ = input.readMessage(zb.dcts.Dcts.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(devicePosition_);
                devicePosition_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_Header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.Header.class, zb.dcts.scenario.detection.Detection.Header.Builder.class);
    }

    public static final int RESULT_FROM_FIELD_NUMBER = 1;
    private zb.dcts.source.Source.SourceId resultFrom_;
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return Whether the resultFrom field is set.
     */
    @java.lang.Override
    public boolean hasResultFrom() {
      return resultFrom_ != null;
    }
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return The resultFrom.
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceId getResultFrom() {
      return resultFrom_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
    }
    /**
     * <pre>
     *数据来源
     * </pre>
     *
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder() {
      return getResultFrom();
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 3;
    private int sequenceNumber_;
    /**
     * <pre>
     *顺序号，每个任务执行者维护自身的顺序号
     * </pre>
     *
     * <code>uint32 sequence_number = 3;</code>
     * @return The sequenceNumber.
     */
    @java.lang.Override
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int SWEEP_COUNT_FIELD_NUMBER = 4;
    private int sweepCount_;
    /**
     * <pre>
     *当前上报周期内的扫描次数
     * </pre>
     *
     * <code>uint32 sweep_count = 4;</code>
     * @return The sweepCount.
     */
    @java.lang.Override
    public int getSweepCount() {
      return sweepCount_;
    }

    public static final int TIME_SPAN_FIELD_NUMBER = 5;
    private zb.dcts.Dcts.TimeSpan timeSpan_;
    /**
     * <pre>
     *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 5;</code>
     * @return Whether the timeSpan field is set.
     */
    @java.lang.Override
    public boolean hasTimeSpan() {
      return timeSpan_ != null;
    }
    /**
     * <pre>
     *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 5;</code>
     * @return The timeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeSpan() {
      return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
    }
    /**
     * <pre>
     *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
      return getTimeSpan();
    }

    public static final int DEVICE_POSITION_FIELD_NUMBER = 6;
    private zb.dcts.Dcts.Position devicePosition_;
    /**
     * <pre>
     *设备位置
     * </pre>
     *
     * <code>.zb.dcts.Position device_position = 6;</code>
     * @return Whether the devicePosition field is set.
     */
    @java.lang.Override
    public boolean hasDevicePosition() {
      return devicePosition_ != null;
    }
    /**
     * <pre>
     *设备位置
     * </pre>
     *
     * <code>.zb.dcts.Position device_position = 6;</code>
     * @return The devicePosition.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Position getDevicePosition() {
      return devicePosition_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : devicePosition_;
    }
    /**
     * <pre>
     *设备位置
     * </pre>
     *
     * <code>.zb.dcts.Position device_position = 6;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.PositionOrBuilder getDevicePositionOrBuilder() {
      return getDevicePosition();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (resultFrom_ != null) {
        output.writeMessage(1, getResultFrom());
      }
      if (sequenceNumber_ != 0) {
        output.writeUInt32(3, sequenceNumber_);
      }
      if (sweepCount_ != 0) {
        output.writeUInt32(4, sweepCount_);
      }
      if (timeSpan_ != null) {
        output.writeMessage(5, getTimeSpan());
      }
      if (devicePosition_ != null) {
        output.writeMessage(6, getDevicePosition());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (resultFrom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResultFrom());
      }
      if (sequenceNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sequenceNumber_);
      }
      if (sweepCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, sweepCount_);
      }
      if (timeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTimeSpan());
      }
      if (devicePosition_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDevicePosition());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.Header)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.Header other = (zb.dcts.scenario.detection.Detection.Header) obj;

      if (hasResultFrom() != other.hasResultFrom()) return false;
      if (hasResultFrom()) {
        if (!getResultFrom()
            .equals(other.getResultFrom())) return false;
      }
      if (getSequenceNumber()
          != other.getSequenceNumber()) return false;
      if (getSweepCount()
          != other.getSweepCount()) return false;
      if (hasTimeSpan() != other.hasTimeSpan()) return false;
      if (hasTimeSpan()) {
        if (!getTimeSpan()
            .equals(other.getTimeSpan())) return false;
      }
      if (hasDevicePosition() != other.hasDevicePosition()) return false;
      if (hasDevicePosition()) {
        if (!getDevicePosition()
            .equals(other.getDevicePosition())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResultFrom()) {
        hash = (37 * hash) + RESULT_FROM_FIELD_NUMBER;
        hash = (53 * hash) + getResultFrom().hashCode();
      }
      hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNumber();
      hash = (37 * hash) + SWEEP_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getSweepCount();
      if (hasTimeSpan()) {
        hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSpan().hashCode();
      }
      if (hasDevicePosition()) {
        hash = (37 * hash) + DEVICE_POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getDevicePosition().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *--------------------------for internal purpose--------------------//
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.Header)
        zb.dcts.scenario.detection.Detection.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.Header.class, zb.dcts.scenario.detection.Detection.Header.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resultFromBuilder_ == null) {
          resultFrom_ = null;
        } else {
          resultFrom_ = null;
          resultFromBuilder_ = null;
        }
        sequenceNumber_ = 0;

        sweepCount_ = 0;

        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }
        if (devicePositionBuilder_ == null) {
          devicePosition_ = null;
        } else {
          devicePosition_ = null;
          devicePositionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_Header_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.Header getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.Header.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.Header build() {
        zb.dcts.scenario.detection.Detection.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.Header buildPartial() {
        zb.dcts.scenario.detection.Detection.Header result = new zb.dcts.scenario.detection.Detection.Header(this);
        if (resultFromBuilder_ == null) {
          result.resultFrom_ = resultFrom_;
        } else {
          result.resultFrom_ = resultFromBuilder_.build();
        }
        result.sequenceNumber_ = sequenceNumber_;
        result.sweepCount_ = sweepCount_;
        if (timeSpanBuilder_ == null) {
          result.timeSpan_ = timeSpan_;
        } else {
          result.timeSpan_ = timeSpanBuilder_.build();
        }
        if (devicePositionBuilder_ == null) {
          result.devicePosition_ = devicePosition_;
        } else {
          result.devicePosition_ = devicePositionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.Header) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.Header other) {
        if (other == zb.dcts.scenario.detection.Detection.Header.getDefaultInstance()) return this;
        if (other.hasResultFrom()) {
          mergeResultFrom(other.getResultFrom());
        }
        if (other.getSequenceNumber() != 0) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.getSweepCount() != 0) {
          setSweepCount(other.getSweepCount());
        }
        if (other.hasTimeSpan()) {
          mergeTimeSpan(other.getTimeSpan());
        }
        if (other.hasDevicePosition()) {
          mergeDevicePosition(other.getDevicePosition());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.source.Source.SourceId resultFrom_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> resultFromBuilder_;
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return Whether the resultFrom field is set.
       */
      public boolean hasResultFrom() {
        return resultFromBuilder_ != null || resultFrom_ != null;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return The resultFrom.
       */
      public zb.dcts.source.Source.SourceId getResultFrom() {
        if (resultFromBuilder_ == null) {
          return resultFrom_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
        } else {
          return resultFromBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder setResultFrom(zb.dcts.source.Source.SourceId value) {
        if (resultFromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resultFrom_ = value;
          onChanged();
        } else {
          resultFromBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder setResultFrom(
          zb.dcts.source.Source.SourceId.Builder builderForValue) {
        if (resultFromBuilder_ == null) {
          resultFrom_ = builderForValue.build();
          onChanged();
        } else {
          resultFromBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder mergeResultFrom(zb.dcts.source.Source.SourceId value) {
        if (resultFromBuilder_ == null) {
          if (resultFrom_ != null) {
            resultFrom_ =
              zb.dcts.source.Source.SourceId.newBuilder(resultFrom_).mergeFrom(value).buildPartial();
          } else {
            resultFrom_ = value;
          }
          onChanged();
        } else {
          resultFromBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder clearResultFrom() {
        if (resultFromBuilder_ == null) {
          resultFrom_ = null;
          onChanged();
        } else {
          resultFrom_ = null;
          resultFromBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public zb.dcts.source.Source.SourceId.Builder getResultFromBuilder() {
        
        onChanged();
        return getResultFromFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder() {
        if (resultFromBuilder_ != null) {
          return resultFromBuilder_.getMessageOrBuilder();
        } else {
          return resultFrom_ == null ?
              zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
        }
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> 
          getResultFromFieldBuilder() {
        if (resultFromBuilder_ == null) {
          resultFromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder>(
                  getResultFrom(),
                  getParentForChildren(),
                  isClean());
          resultFrom_ = null;
        }
        return resultFromBuilder_;
      }

      private int sequenceNumber_ ;
      /**
       * <pre>
       *顺序号，每个任务执行者维护自身的顺序号
       * </pre>
       *
       * <code>uint32 sequence_number = 3;</code>
       * @return The sequenceNumber.
       */
      @java.lang.Override
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <pre>
       *顺序号，每个任务执行者维护自身的顺序号
       * </pre>
       *
       * <code>uint32 sequence_number = 3;</code>
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(int value) {
        
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *顺序号，每个任务执行者维护自身的顺序号
       * </pre>
       *
       * <code>uint32 sequence_number = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private int sweepCount_ ;
      /**
       * <pre>
       *当前上报周期内的扫描次数
       * </pre>
       *
       * <code>uint32 sweep_count = 4;</code>
       * @return The sweepCount.
       */
      @java.lang.Override
      public int getSweepCount() {
        return sweepCount_;
      }
      /**
       * <pre>
       *当前上报周期内的扫描次数
       * </pre>
       *
       * <code>uint32 sweep_count = 4;</code>
       * @param value The sweepCount to set.
       * @return This builder for chaining.
       */
      public Builder setSweepCount(int value) {
        
        sweepCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前上报周期内的扫描次数
       * </pre>
       *
       * <code>uint32 sweep_count = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSweepCount() {
        
        sweepCount_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.TimeSpan timeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       * @return Whether the timeSpan field is set.
       */
      public boolean hasTimeSpan() {
        return timeSpanBuilder_ != null || timeSpan_ != null;
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       * @return The timeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        if (timeSpanBuilder_ == null) {
          return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        } else {
          return timeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       */
      public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSpan_ = value;
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       */
      public Builder setTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = builderForValue.build();
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       */
      public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (timeSpan_ != null) {
            timeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
          } else {
            timeSpan_ = value;
          }
          onChanged();
        } else {
          timeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       */
      public Builder clearTimeSpan() {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
          onChanged();
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
        
        onChanged();
        return getTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        if (timeSpanBuilder_ != null) {
          return timeSpanBuilder_.getMessageOrBuilder();
        } else {
          return timeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        }
      }
      /**
       * <pre>
       *当前上报周期内的首次末次扫描时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeSpanFieldBuilder() {
        if (timeSpanBuilder_ == null) {
          timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeSpan(),
                  getParentForChildren(),
                  isClean());
          timeSpan_ = null;
        }
        return timeSpanBuilder_;
      }

      private zb.dcts.Dcts.Position devicePosition_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> devicePositionBuilder_;
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       * @return Whether the devicePosition field is set.
       */
      public boolean hasDevicePosition() {
        return devicePositionBuilder_ != null || devicePosition_ != null;
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       * @return The devicePosition.
       */
      public zb.dcts.Dcts.Position getDevicePosition() {
        if (devicePositionBuilder_ == null) {
          return devicePosition_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : devicePosition_;
        } else {
          return devicePositionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       */
      public Builder setDevicePosition(zb.dcts.Dcts.Position value) {
        if (devicePositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          devicePosition_ = value;
          onChanged();
        } else {
          devicePositionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       */
      public Builder setDevicePosition(
          zb.dcts.Dcts.Position.Builder builderForValue) {
        if (devicePositionBuilder_ == null) {
          devicePosition_ = builderForValue.build();
          onChanged();
        } else {
          devicePositionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       */
      public Builder mergeDevicePosition(zb.dcts.Dcts.Position value) {
        if (devicePositionBuilder_ == null) {
          if (devicePosition_ != null) {
            devicePosition_ =
              zb.dcts.Dcts.Position.newBuilder(devicePosition_).mergeFrom(value).buildPartial();
          } else {
            devicePosition_ = value;
          }
          onChanged();
        } else {
          devicePositionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       */
      public Builder clearDevicePosition() {
        if (devicePositionBuilder_ == null) {
          devicePosition_ = null;
          onChanged();
        } else {
          devicePosition_ = null;
          devicePositionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       */
      public zb.dcts.Dcts.Position.Builder getDevicePositionBuilder() {
        
        onChanged();
        return getDevicePositionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       */
      public zb.dcts.Dcts.PositionOrBuilder getDevicePositionOrBuilder() {
        if (devicePositionBuilder_ != null) {
          return devicePositionBuilder_.getMessageOrBuilder();
        } else {
          return devicePosition_ == null ?
              zb.dcts.Dcts.Position.getDefaultInstance() : devicePosition_;
        }
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> 
          getDevicePositionFieldBuilder() {
        if (devicePositionBuilder_ == null) {
          devicePositionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder>(
                  getDevicePosition(),
                  getParentForChildren(),
                  isClean());
          devicePosition_ = null;
        }
        return devicePositionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.Header)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.Header)
    private static final zb.dcts.scenario.detection.Detection.Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.Header();
    }

    public static zb.dcts.scenario.detection.Detection.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Header>
        PARSER = new com.google.protobuf.AbstractParser<Header>() {
      @java.lang.Override
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RawBodyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.RawBody)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *频率范围及点数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
     * @return Whether the freqSeg field is set.
     */
    boolean hasFreqSeg();
    /**
     * <pre>
     *频率范围及点数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
     * @return The freqSeg.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySegment getFreqSeg();
    /**
     * <pre>
     *频率范围及点数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySegmentOrBuilder getFreqSegOrBuilder();

    /**
     * <pre>
     *超限命中次数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
     * @return Whether the overThresholdHits field is set.
     */
    boolean hasOverThresholdHits();
    /**
     * <pre>
     *超限命中次数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
     * @return The overThresholdHits.
     */
    zb.dcts.scenario.spectrum.Spectrum.SpectrumLine getOverThresholdHits();
    /**
     * <pre>
     *超限命中次数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder getOverThresholdHitsOrBuilder();

    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    java.util.List<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine> 
        getRawSpectrumLinesList();
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.SpectrumLine getRawSpectrumLines(int index);
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    int getRawSpectrumLinesCount();
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    java.util.List<? extends zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder> 
        getRawSpectrumLinesOrBuilderList();
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder getRawSpectrumLinesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.RawBody}
   */
  public static final class RawBody extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.RawBody)
      RawBodyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RawBody.newBuilder() to construct.
    private RawBody(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RawBody() {
      rawSpectrumLines_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RawBody();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RawBody(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.Builder subBuilder = null;
              if (freqSeg_ != null) {
                subBuilder = freqSeg_.toBuilder();
              }
              freqSeg_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqSeg_);
                freqSeg_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder subBuilder = null;
              if (overThresholdHits_ != null) {
                subBuilder = overThresholdHits_.toBuilder();
              }
              overThresholdHits_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(overThresholdHits_);
                overThresholdHits_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rawSpectrumLines_ = new java.util.ArrayList<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine>();
                mutable_bitField0_ |= 0x00000001;
              }
              rawSpectrumLines_.add(
                  input.readMessage(zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rawSpectrumLines_ = java.util.Collections.unmodifiableList(rawSpectrumLines_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawBody_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawBody_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.RawBody.class, zb.dcts.scenario.detection.Detection.RawBody.Builder.class);
    }

    public static final int FREQ_SEG_FIELD_NUMBER = 1;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySegment freqSeg_;
    /**
     * <pre>
     *频率范围及点数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
     * @return Whether the freqSeg field is set.
     */
    @java.lang.Override
    public boolean hasFreqSeg() {
      return freqSeg_ != null;
    }
    /**
     * <pre>
     *频率范围及点数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
     * @return The freqSeg.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySegment getFreqSeg() {
      return freqSeg_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.getDefaultInstance() : freqSeg_;
    }
    /**
     * <pre>
     *频率范围及点数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySegmentOrBuilder getFreqSegOrBuilder() {
      return getFreqSeg();
    }

    public static final int OVER_THRESHOLD_HITS_FIELD_NUMBER = 2;
    private zb.dcts.scenario.spectrum.Spectrum.SpectrumLine overThresholdHits_;
    /**
     * <pre>
     *超限命中次数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
     * @return Whether the overThresholdHits field is set.
     */
    @java.lang.Override
    public boolean hasOverThresholdHits() {
      return overThresholdHits_ != null;
    }
    /**
     * <pre>
     *超限命中次数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
     * @return The overThresholdHits.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine getOverThresholdHits() {
      return overThresholdHits_ == null ? zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.getDefaultInstance() : overThresholdHits_;
    }
    /**
     * <pre>
     *超限命中次数
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder getOverThresholdHitsOrBuilder() {
      return getOverThresholdHits();
    }

    public static final int RAW_SPECTRUM_LINES_FIELD_NUMBER = 3;
    private java.util.List<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine> rawSpectrumLines_;
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine> getRawSpectrumLinesList() {
      return rawSpectrumLines_;
    }
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder> 
        getRawSpectrumLinesOrBuilderList() {
      return rawSpectrumLines_;
    }
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    @java.lang.Override
    public int getRawSpectrumLinesCount() {
      return rawSpectrumLines_.size();
    }
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine getRawSpectrumLines(int index) {
      return rawSpectrumLines_.get(index);
    }
    /**
     * <pre>
     *积累的频谱线
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder getRawSpectrumLinesOrBuilder(
        int index) {
      return rawSpectrumLines_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (freqSeg_ != null) {
        output.writeMessage(1, getFreqSeg());
      }
      if (overThresholdHits_ != null) {
        output.writeMessage(2, getOverThresholdHits());
      }
      for (int i = 0; i < rawSpectrumLines_.size(); i++) {
        output.writeMessage(3, rawSpectrumLines_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freqSeg_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFreqSeg());
      }
      if (overThresholdHits_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOverThresholdHits());
      }
      for (int i = 0; i < rawSpectrumLines_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, rawSpectrumLines_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.RawBody)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.RawBody other = (zb.dcts.scenario.detection.Detection.RawBody) obj;

      if (hasFreqSeg() != other.hasFreqSeg()) return false;
      if (hasFreqSeg()) {
        if (!getFreqSeg()
            .equals(other.getFreqSeg())) return false;
      }
      if (hasOverThresholdHits() != other.hasOverThresholdHits()) return false;
      if (hasOverThresholdHits()) {
        if (!getOverThresholdHits()
            .equals(other.getOverThresholdHits())) return false;
      }
      if (!getRawSpectrumLinesList()
          .equals(other.getRawSpectrumLinesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFreqSeg()) {
        hash = (37 * hash) + FREQ_SEG_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSeg().hashCode();
      }
      if (hasOverThresholdHits()) {
        hash = (37 * hash) + OVER_THRESHOLD_HITS_FIELD_NUMBER;
        hash = (53 * hash) + getOverThresholdHits().hashCode();
      }
      if (getRawSpectrumLinesCount() > 0) {
        hash = (37 * hash) + RAW_SPECTRUM_LINES_FIELD_NUMBER;
        hash = (53 * hash) + getRawSpectrumLinesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.RawBody parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.RawBody prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.RawBody}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.RawBody)
        zb.dcts.scenario.detection.Detection.RawBodyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawBody_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawBody_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.RawBody.class, zb.dcts.scenario.detection.Detection.RawBody.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.RawBody.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRawSpectrumLinesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (freqSegBuilder_ == null) {
          freqSeg_ = null;
        } else {
          freqSeg_ = null;
          freqSegBuilder_ = null;
        }
        if (overThresholdHitsBuilder_ == null) {
          overThresholdHits_ = null;
        } else {
          overThresholdHits_ = null;
          overThresholdHitsBuilder_ = null;
        }
        if (rawSpectrumLinesBuilder_ == null) {
          rawSpectrumLines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rawSpectrumLinesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawBody_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.RawBody getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.RawBody.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.RawBody build() {
        zb.dcts.scenario.detection.Detection.RawBody result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.RawBody buildPartial() {
        zb.dcts.scenario.detection.Detection.RawBody result = new zb.dcts.scenario.detection.Detection.RawBody(this);
        int from_bitField0_ = bitField0_;
        if (freqSegBuilder_ == null) {
          result.freqSeg_ = freqSeg_;
        } else {
          result.freqSeg_ = freqSegBuilder_.build();
        }
        if (overThresholdHitsBuilder_ == null) {
          result.overThresholdHits_ = overThresholdHits_;
        } else {
          result.overThresholdHits_ = overThresholdHitsBuilder_.build();
        }
        if (rawSpectrumLinesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rawSpectrumLines_ = java.util.Collections.unmodifiableList(rawSpectrumLines_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rawSpectrumLines_ = rawSpectrumLines_;
        } else {
          result.rawSpectrumLines_ = rawSpectrumLinesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.RawBody) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.RawBody)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.RawBody other) {
        if (other == zb.dcts.scenario.detection.Detection.RawBody.getDefaultInstance()) return this;
        if (other.hasFreqSeg()) {
          mergeFreqSeg(other.getFreqSeg());
        }
        if (other.hasOverThresholdHits()) {
          mergeOverThresholdHits(other.getOverThresholdHits());
        }
        if (rawSpectrumLinesBuilder_ == null) {
          if (!other.rawSpectrumLines_.isEmpty()) {
            if (rawSpectrumLines_.isEmpty()) {
              rawSpectrumLines_ = other.rawSpectrumLines_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRawSpectrumLinesIsMutable();
              rawSpectrumLines_.addAll(other.rawSpectrumLines_);
            }
            onChanged();
          }
        } else {
          if (!other.rawSpectrumLines_.isEmpty()) {
            if (rawSpectrumLinesBuilder_.isEmpty()) {
              rawSpectrumLinesBuilder_.dispose();
              rawSpectrumLinesBuilder_ = null;
              rawSpectrumLines_ = other.rawSpectrumLines_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rawSpectrumLinesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRawSpectrumLinesFieldBuilder() : null;
            } else {
              rawSpectrumLinesBuilder_.addAllMessages(other.rawSpectrumLines_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.RawBody parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.RawBody) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySegment freqSeg_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySegment, zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySegmentOrBuilder> freqSegBuilder_;
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       * @return Whether the freqSeg field is set.
       */
      public boolean hasFreqSeg() {
        return freqSegBuilder_ != null || freqSeg_ != null;
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       * @return The freqSeg.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySegment getFreqSeg() {
        if (freqSegBuilder_ == null) {
          return freqSeg_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.getDefaultInstance() : freqSeg_;
        } else {
          return freqSegBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       */
      public Builder setFreqSeg(zb.dcts.scenario.spectrum.Spectrum.FrequencySegment value) {
        if (freqSegBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqSeg_ = value;
          onChanged();
        } else {
          freqSegBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       */
      public Builder setFreqSeg(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.Builder builderForValue) {
        if (freqSegBuilder_ == null) {
          freqSeg_ = builderForValue.build();
          onChanged();
        } else {
          freqSegBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       */
      public Builder mergeFreqSeg(zb.dcts.scenario.spectrum.Spectrum.FrequencySegment value) {
        if (freqSegBuilder_ == null) {
          if (freqSeg_ != null) {
            freqSeg_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.newBuilder(freqSeg_).mergeFrom(value).buildPartial();
          } else {
            freqSeg_ = value;
          }
          onChanged();
        } else {
          freqSegBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       */
      public Builder clearFreqSeg() {
        if (freqSegBuilder_ == null) {
          freqSeg_ = null;
          onChanged();
        } else {
          freqSeg_ = null;
          freqSegBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.Builder getFreqSegBuilder() {
        
        onChanged();
        return getFreqSegFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySegmentOrBuilder getFreqSegOrBuilder() {
        if (freqSegBuilder_ != null) {
          return freqSegBuilder_.getMessageOrBuilder();
        } else {
          return freqSeg_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.getDefaultInstance() : freqSeg_;
        }
      }
      /**
       * <pre>
       *频率范围及点数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySegment freq_seg = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySegment, zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySegmentOrBuilder> 
          getFreqSegFieldBuilder() {
        if (freqSegBuilder_ == null) {
          freqSegBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySegment, zb.dcts.scenario.spectrum.Spectrum.FrequencySegment.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySegmentOrBuilder>(
                  getFreqSeg(),
                  getParentForChildren(),
                  isClean());
          freqSeg_ = null;
        }
        return freqSegBuilder_;
      }

      private zb.dcts.scenario.spectrum.Spectrum.SpectrumLine overThresholdHits_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SpectrumLine, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder> overThresholdHitsBuilder_;
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       * @return Whether the overThresholdHits field is set.
       */
      public boolean hasOverThresholdHits() {
        return overThresholdHitsBuilder_ != null || overThresholdHits_ != null;
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       * @return The overThresholdHits.
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine getOverThresholdHits() {
        if (overThresholdHitsBuilder_ == null) {
          return overThresholdHits_ == null ? zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.getDefaultInstance() : overThresholdHits_;
        } else {
          return overThresholdHitsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       */
      public Builder setOverThresholdHits(zb.dcts.scenario.spectrum.Spectrum.SpectrumLine value) {
        if (overThresholdHitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          overThresholdHits_ = value;
          onChanged();
        } else {
          overThresholdHitsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       */
      public Builder setOverThresholdHits(
          zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder builderForValue) {
        if (overThresholdHitsBuilder_ == null) {
          overThresholdHits_ = builderForValue.build();
          onChanged();
        } else {
          overThresholdHitsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       */
      public Builder mergeOverThresholdHits(zb.dcts.scenario.spectrum.Spectrum.SpectrumLine value) {
        if (overThresholdHitsBuilder_ == null) {
          if (overThresholdHits_ != null) {
            overThresholdHits_ =
              zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.newBuilder(overThresholdHits_).mergeFrom(value).buildPartial();
          } else {
            overThresholdHits_ = value;
          }
          onChanged();
        } else {
          overThresholdHitsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       */
      public Builder clearOverThresholdHits() {
        if (overThresholdHitsBuilder_ == null) {
          overThresholdHits_ = null;
          onChanged();
        } else {
          overThresholdHits_ = null;
          overThresholdHitsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder getOverThresholdHitsBuilder() {
        
        onChanged();
        return getOverThresholdHitsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder getOverThresholdHitsOrBuilder() {
        if (overThresholdHitsBuilder_ != null) {
          return overThresholdHitsBuilder_.getMessageOrBuilder();
        } else {
          return overThresholdHits_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.getDefaultInstance() : overThresholdHits_;
        }
      }
      /**
       * <pre>
       *超限命中次数
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.SpectrumLine over_threshold_hits = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SpectrumLine, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder> 
          getOverThresholdHitsFieldBuilder() {
        if (overThresholdHitsBuilder_ == null) {
          overThresholdHitsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.SpectrumLine, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder>(
                  getOverThresholdHits(),
                  getParentForChildren(),
                  isClean());
          overThresholdHits_ = null;
        }
        return overThresholdHitsBuilder_;
      }

      private java.util.List<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine> rawSpectrumLines_ =
        java.util.Collections.emptyList();
      private void ensureRawSpectrumLinesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rawSpectrumLines_ = new java.util.ArrayList<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine>(rawSpectrumLines_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SpectrumLine, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder> rawSpectrumLinesBuilder_;

      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public java.util.List<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine> getRawSpectrumLinesList() {
        if (rawSpectrumLinesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rawSpectrumLines_);
        } else {
          return rawSpectrumLinesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public int getRawSpectrumLinesCount() {
        if (rawSpectrumLinesBuilder_ == null) {
          return rawSpectrumLines_.size();
        } else {
          return rawSpectrumLinesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine getRawSpectrumLines(int index) {
        if (rawSpectrumLinesBuilder_ == null) {
          return rawSpectrumLines_.get(index);
        } else {
          return rawSpectrumLinesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder setRawSpectrumLines(
          int index, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine value) {
        if (rawSpectrumLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRawSpectrumLinesIsMutable();
          rawSpectrumLines_.set(index, value);
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder setRawSpectrumLines(
          int index, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder builderForValue) {
        if (rawSpectrumLinesBuilder_ == null) {
          ensureRawSpectrumLinesIsMutable();
          rawSpectrumLines_.set(index, builderForValue.build());
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder addRawSpectrumLines(zb.dcts.scenario.spectrum.Spectrum.SpectrumLine value) {
        if (rawSpectrumLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRawSpectrumLinesIsMutable();
          rawSpectrumLines_.add(value);
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder addRawSpectrumLines(
          int index, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine value) {
        if (rawSpectrumLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRawSpectrumLinesIsMutable();
          rawSpectrumLines_.add(index, value);
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder addRawSpectrumLines(
          zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder builderForValue) {
        if (rawSpectrumLinesBuilder_ == null) {
          ensureRawSpectrumLinesIsMutable();
          rawSpectrumLines_.add(builderForValue.build());
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder addRawSpectrumLines(
          int index, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder builderForValue) {
        if (rawSpectrumLinesBuilder_ == null) {
          ensureRawSpectrumLinesIsMutable();
          rawSpectrumLines_.add(index, builderForValue.build());
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder addAllRawSpectrumLines(
          java.lang.Iterable<? extends zb.dcts.scenario.spectrum.Spectrum.SpectrumLine> values) {
        if (rawSpectrumLinesBuilder_ == null) {
          ensureRawSpectrumLinesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rawSpectrumLines_);
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder clearRawSpectrumLines() {
        if (rawSpectrumLinesBuilder_ == null) {
          rawSpectrumLines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public Builder removeRawSpectrumLines(int index) {
        if (rawSpectrumLinesBuilder_ == null) {
          ensureRawSpectrumLinesIsMutable();
          rawSpectrumLines_.remove(index);
          onChanged();
        } else {
          rawSpectrumLinesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder getRawSpectrumLinesBuilder(
          int index) {
        return getRawSpectrumLinesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder getRawSpectrumLinesOrBuilder(
          int index) {
        if (rawSpectrumLinesBuilder_ == null) {
          return rawSpectrumLines_.get(index);  } else {
          return rawSpectrumLinesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder> 
           getRawSpectrumLinesOrBuilderList() {
        if (rawSpectrumLinesBuilder_ != null) {
          return rawSpectrumLinesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rawSpectrumLines_);
        }
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder addRawSpectrumLinesBuilder() {
        return getRawSpectrumLinesFieldBuilder().addBuilder(
            zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.getDefaultInstance());
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder addRawSpectrumLinesBuilder(
          int index) {
        return getRawSpectrumLinesFieldBuilder().addBuilder(
            index, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.getDefaultInstance());
      }
      /**
       * <pre>
       *积累的频谱线
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.spectrum.SpectrumLine raw_spectrum_lines = 3;</code>
       */
      public java.util.List<zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder> 
           getRawSpectrumLinesBuilderList() {
        return getRawSpectrumLinesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.SpectrumLine, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder> 
          getRawSpectrumLinesFieldBuilder() {
        if (rawSpectrumLinesBuilder_ == null) {
          rawSpectrumLinesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.SpectrumLine, zb.dcts.scenario.spectrum.Spectrum.SpectrumLine.Builder, zb.dcts.scenario.spectrum.Spectrum.SpectrumLineOrBuilder>(
                  rawSpectrumLines_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rawSpectrumLines_ = null;
        }
        return rawSpectrumLinesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.RawBody)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.RawBody)
    private static final zb.dcts.scenario.detection.Detection.RawBody DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.RawBody();
    }

    public static zb.dcts.scenario.detection.Detection.RawBody getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RawBody>
        PARSER = new com.google.protobuf.AbstractParser<RawBody>() {
      @java.lang.Override
      public RawBody parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RawBody(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RawBody> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawBody> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.RawBody getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RawDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.RawData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return The header.
     */
    zb.dcts.scenario.detection.Detection.Header getHeader();
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
     * @return Whether the body field is set.
     */
    boolean hasBody();
    /**
     * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
     * @return The body.
     */
    zb.dcts.scenario.detection.Detection.RawBody getBody();
    /**
     * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.RawBodyOrBuilder getBodyOrBuilder();

    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    java.util.List<zb.dcts.Dcts.IRange> 
        getSignalSegmentsList();
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    zb.dcts.Dcts.IRange getSignalSegments(int index);
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    int getSignalSegmentsCount();
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    java.util.List<? extends zb.dcts.Dcts.IRangeOrBuilder> 
        getSignalSegmentsOrBuilderList();
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    zb.dcts.Dcts.IRangeOrBuilder getSignalSegmentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.detection.RawData}
   */
  public static final class RawData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.RawData)
      RawDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RawData.newBuilder() to construct.
    private RawData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RawData() {
      signalSegments_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RawData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RawData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.detection.Detection.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(zb.dcts.scenario.detection.Detection.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.scenario.detection.Detection.RawBody.Builder subBuilder = null;
              if (body_ != null) {
                subBuilder = body_.toBuilder();
              }
              body_ = input.readMessage(zb.dcts.scenario.detection.Detection.RawBody.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(body_);
                body_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signalSegments_ = new java.util.ArrayList<zb.dcts.Dcts.IRange>();
                mutable_bitField0_ |= 0x00000001;
              }
              signalSegments_.add(
                  input.readMessage(zb.dcts.Dcts.IRange.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signalSegments_ = java.util.Collections.unmodifiableList(signalSegments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.RawData.class, zb.dcts.scenario.detection.Detection.RawData.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.detection.Detection.Header header_;
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.Header getHeader() {
      return header_ == null ? zb.dcts.scenario.detection.Detection.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int BODY_FIELD_NUMBER = 2;
    private zb.dcts.scenario.detection.Detection.RawBody body_;
    /**
     * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
     * @return Whether the body field is set.
     */
    @java.lang.Override
    public boolean hasBody() {
      return body_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
     * @return The body.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.RawBody getBody() {
      return body_ == null ? zb.dcts.scenario.detection.Detection.RawBody.getDefaultInstance() : body_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.RawBodyOrBuilder getBodyOrBuilder() {
      return getBody();
    }

    public static final int SIGNAL_SEGMENTS_FIELD_NUMBER = 3;
    private java.util.List<zb.dcts.Dcts.IRange> signalSegments_;
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.Dcts.IRange> getSignalSegmentsList() {
      return signalSegments_;
    }
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.Dcts.IRangeOrBuilder> 
        getSignalSegmentsOrBuilderList() {
      return signalSegments_;
    }
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    @java.lang.Override
    public int getSignalSegmentsCount() {
      return signalSegments_.size();
    }
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.IRange getSignalSegments(int index) {
      return signalSegments_.get(index);
    }
    /**
     * <pre>
     *信号片段，闭开区间
     * </pre>
     *
     * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.IRangeOrBuilder getSignalSegmentsOrBuilder(
        int index) {
      return signalSegments_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (body_ != null) {
        output.writeMessage(2, getBody());
      }
      for (int i = 0; i < signalSegments_.size(); i++) {
        output.writeMessage(3, signalSegments_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (body_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBody());
      }
      for (int i = 0; i < signalSegments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, signalSegments_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.RawData)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.RawData other = (zb.dcts.scenario.detection.Detection.RawData) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (hasBody() != other.hasBody()) return false;
      if (hasBody()) {
        if (!getBody()
            .equals(other.getBody())) return false;
      }
      if (!getSignalSegmentsList()
          .equals(other.getSignalSegmentsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasBody()) {
        hash = (37 * hash) + BODY_FIELD_NUMBER;
        hash = (53 * hash) + getBody().hashCode();
      }
      if (getSignalSegmentsCount() > 0) {
        hash = (37 * hash) + SIGNAL_SEGMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getSignalSegmentsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.RawData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.RawData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.detection.RawData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.RawData)
        zb.dcts.scenario.detection.Detection.RawDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.RawData.class, zb.dcts.scenario.detection.Detection.RawData.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.RawData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignalSegmentsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (bodyBuilder_ == null) {
          body_ = null;
        } else {
          body_ = null;
          bodyBuilder_ = null;
        }
        if (signalSegmentsBuilder_ == null) {
          signalSegments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signalSegmentsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_RawData_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.RawData getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.RawData.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.RawData build() {
        zb.dcts.scenario.detection.Detection.RawData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.RawData buildPartial() {
        zb.dcts.scenario.detection.Detection.RawData result = new zb.dcts.scenario.detection.Detection.RawData(this);
        int from_bitField0_ = bitField0_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (bodyBuilder_ == null) {
          result.body_ = body_;
        } else {
          result.body_ = bodyBuilder_.build();
        }
        if (signalSegmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            signalSegments_ = java.util.Collections.unmodifiableList(signalSegments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signalSegments_ = signalSegments_;
        } else {
          result.signalSegments_ = signalSegmentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.RawData) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.RawData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.RawData other) {
        if (other == zb.dcts.scenario.detection.Detection.RawData.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasBody()) {
          mergeBody(other.getBody());
        }
        if (signalSegmentsBuilder_ == null) {
          if (!other.signalSegments_.isEmpty()) {
            if (signalSegments_.isEmpty()) {
              signalSegments_ = other.signalSegments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignalSegmentsIsMutable();
              signalSegments_.addAll(other.signalSegments_);
            }
            onChanged();
          }
        } else {
          if (!other.signalSegments_.isEmpty()) {
            if (signalSegmentsBuilder_.isEmpty()) {
              signalSegmentsBuilder_.dispose();
              signalSegmentsBuilder_ = null;
              signalSegments_ = other.signalSegments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signalSegmentsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignalSegmentsFieldBuilder() : null;
            } else {
              signalSegmentsBuilder_.addAllMessages(other.signalSegments_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.RawData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.RawData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.scenario.detection.Detection.Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.Header, zb.dcts.scenario.detection.Detection.Header.Builder, zb.dcts.scenario.detection.Detection.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       * @return The header.
       */
      public zb.dcts.scenario.detection.Detection.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? zb.dcts.scenario.detection.Detection.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder setHeader(zb.dcts.scenario.detection.Detection.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder setHeader(
          zb.dcts.scenario.detection.Detection.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder mergeHeader(zb.dcts.scenario.detection.Detection.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              zb.dcts.scenario.detection.Detection.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              zb.dcts.scenario.detection.Detection.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.Header, zb.dcts.scenario.detection.Detection.Header.Builder, zb.dcts.scenario.detection.Detection.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.Header, zb.dcts.scenario.detection.Detection.Header.Builder, zb.dcts.scenario.detection.Detection.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.RawBody body_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.RawBody, zb.dcts.scenario.detection.Detection.RawBody.Builder, zb.dcts.scenario.detection.Detection.RawBodyOrBuilder> bodyBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       * @return Whether the body field is set.
       */
      public boolean hasBody() {
        return bodyBuilder_ != null || body_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       * @return The body.
       */
      public zb.dcts.scenario.detection.Detection.RawBody getBody() {
        if (bodyBuilder_ == null) {
          return body_ == null ? zb.dcts.scenario.detection.Detection.RawBody.getDefaultInstance() : body_;
        } else {
          return bodyBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       */
      public Builder setBody(zb.dcts.scenario.detection.Detection.RawBody value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          body_ = value;
          onChanged();
        } else {
          bodyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       */
      public Builder setBody(
          zb.dcts.scenario.detection.Detection.RawBody.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          body_ = builderForValue.build();
          onChanged();
        } else {
          bodyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       */
      public Builder mergeBody(zb.dcts.scenario.detection.Detection.RawBody value) {
        if (bodyBuilder_ == null) {
          if (body_ != null) {
            body_ =
              zb.dcts.scenario.detection.Detection.RawBody.newBuilder(body_).mergeFrom(value).buildPartial();
          } else {
            body_ = value;
          }
          onChanged();
        } else {
          bodyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       */
      public Builder clearBody() {
        if (bodyBuilder_ == null) {
          body_ = null;
          onChanged();
        } else {
          body_ = null;
          bodyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.RawBody.Builder getBodyBuilder() {
        
        onChanged();
        return getBodyFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.RawBodyOrBuilder getBodyOrBuilder() {
        if (bodyBuilder_ != null) {
          return bodyBuilder_.getMessageOrBuilder();
        } else {
          return body_ == null ?
              zb.dcts.scenario.detection.Detection.RawBody.getDefaultInstance() : body_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.RawBody body = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.RawBody, zb.dcts.scenario.detection.Detection.RawBody.Builder, zb.dcts.scenario.detection.Detection.RawBodyOrBuilder> 
          getBodyFieldBuilder() {
        if (bodyBuilder_ == null) {
          bodyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.RawBody, zb.dcts.scenario.detection.Detection.RawBody.Builder, zb.dcts.scenario.detection.Detection.RawBodyOrBuilder>(
                  getBody(),
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        return bodyBuilder_;
      }

      private java.util.List<zb.dcts.Dcts.IRange> signalSegments_ =
        java.util.Collections.emptyList();
      private void ensureSignalSegmentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signalSegments_ = new java.util.ArrayList<zb.dcts.Dcts.IRange>(signalSegments_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.Dcts.IRange, zb.dcts.Dcts.IRange.Builder, zb.dcts.Dcts.IRangeOrBuilder> signalSegmentsBuilder_;

      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public java.util.List<zb.dcts.Dcts.IRange> getSignalSegmentsList() {
        if (signalSegmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signalSegments_);
        } else {
          return signalSegmentsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public int getSignalSegmentsCount() {
        if (signalSegmentsBuilder_ == null) {
          return signalSegments_.size();
        } else {
          return signalSegmentsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public zb.dcts.Dcts.IRange getSignalSegments(int index) {
        if (signalSegmentsBuilder_ == null) {
          return signalSegments_.get(index);
        } else {
          return signalSegmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder setSignalSegments(
          int index, zb.dcts.Dcts.IRange value) {
        if (signalSegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalSegmentsIsMutable();
          signalSegments_.set(index, value);
          onChanged();
        } else {
          signalSegmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder setSignalSegments(
          int index, zb.dcts.Dcts.IRange.Builder builderForValue) {
        if (signalSegmentsBuilder_ == null) {
          ensureSignalSegmentsIsMutable();
          signalSegments_.set(index, builderForValue.build());
          onChanged();
        } else {
          signalSegmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder addSignalSegments(zb.dcts.Dcts.IRange value) {
        if (signalSegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalSegmentsIsMutable();
          signalSegments_.add(value);
          onChanged();
        } else {
          signalSegmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder addSignalSegments(
          int index, zb.dcts.Dcts.IRange value) {
        if (signalSegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalSegmentsIsMutable();
          signalSegments_.add(index, value);
          onChanged();
        } else {
          signalSegmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder addSignalSegments(
          zb.dcts.Dcts.IRange.Builder builderForValue) {
        if (signalSegmentsBuilder_ == null) {
          ensureSignalSegmentsIsMutable();
          signalSegments_.add(builderForValue.build());
          onChanged();
        } else {
          signalSegmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder addSignalSegments(
          int index, zb.dcts.Dcts.IRange.Builder builderForValue) {
        if (signalSegmentsBuilder_ == null) {
          ensureSignalSegmentsIsMutable();
          signalSegments_.add(index, builderForValue.build());
          onChanged();
        } else {
          signalSegmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder addAllSignalSegments(
          java.lang.Iterable<? extends zb.dcts.Dcts.IRange> values) {
        if (signalSegmentsBuilder_ == null) {
          ensureSignalSegmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signalSegments_);
          onChanged();
        } else {
          signalSegmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder clearSignalSegments() {
        if (signalSegmentsBuilder_ == null) {
          signalSegments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signalSegmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public Builder removeSignalSegments(int index) {
        if (signalSegmentsBuilder_ == null) {
          ensureSignalSegmentsIsMutable();
          signalSegments_.remove(index);
          onChanged();
        } else {
          signalSegmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public zb.dcts.Dcts.IRange.Builder getSignalSegmentsBuilder(
          int index) {
        return getSignalSegmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public zb.dcts.Dcts.IRangeOrBuilder getSignalSegmentsOrBuilder(
          int index) {
        if (signalSegmentsBuilder_ == null) {
          return signalSegments_.get(index);  } else {
          return signalSegmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public java.util.List<? extends zb.dcts.Dcts.IRangeOrBuilder> 
           getSignalSegmentsOrBuilderList() {
        if (signalSegmentsBuilder_ != null) {
          return signalSegmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signalSegments_);
        }
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public zb.dcts.Dcts.IRange.Builder addSignalSegmentsBuilder() {
        return getSignalSegmentsFieldBuilder().addBuilder(
            zb.dcts.Dcts.IRange.getDefaultInstance());
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public zb.dcts.Dcts.IRange.Builder addSignalSegmentsBuilder(
          int index) {
        return getSignalSegmentsFieldBuilder().addBuilder(
            index, zb.dcts.Dcts.IRange.getDefaultInstance());
      }
      /**
       * <pre>
       *信号片段，闭开区间
       * </pre>
       *
       * <code>repeated .zb.dcts.IRange signal_segments = 3;</code>
       */
      public java.util.List<zb.dcts.Dcts.IRange.Builder> 
           getSignalSegmentsBuilderList() {
        return getSignalSegmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.Dcts.IRange, zb.dcts.Dcts.IRange.Builder, zb.dcts.Dcts.IRangeOrBuilder> 
          getSignalSegmentsFieldBuilder() {
        if (signalSegmentsBuilder_ == null) {
          signalSegmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.Dcts.IRange, zb.dcts.Dcts.IRange.Builder, zb.dcts.Dcts.IRangeOrBuilder>(
                  signalSegments_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          signalSegments_ = null;
        }
        return signalSegmentsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.RawData)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.RawData)
    private static final zb.dcts.scenario.detection.Detection.RawData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.RawData();
    }

    public static zb.dcts.scenario.detection.Detection.RawData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RawData>
        PARSER = new com.google.protobuf.AbstractParser<RawData>() {
      @java.lang.Override
      public RawData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RawData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RawData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.RawData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceDetectResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.DeviceDetectResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return The header.
     */
    zb.dcts.scenario.detection.Detection.Header getHeader();
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     *当前上报周期内的信号列表
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
     * @return Whether the fixSignalList field is set.
     */
    boolean hasFixSignalList();
    /**
     * <pre>
     *当前上报周期内的信号列表
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
     * @return The fixSignalList.
     */
    zb.dcts.scenario.detection.Detection.FixSignalList getFixSignalList();
    /**
     * <pre>
     *当前上报周期内的信号列表
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
     */
    zb.dcts.scenario.detection.Detection.FixSignalListOrBuilder getFixSignalListOrBuilder();

    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
     * @return Whether the hopSignalList field is set.
     */
    boolean hasHopSignalList();
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
     * @return The hopSignalList.
     */
    zb.dcts.scenario.detection.Detection.HopSignalList getHopSignalList();
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalListOrBuilder getHopSignalListOrBuilder();

    /**
     * <pre>
     *信号时频图样本
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
     * @return Whether the signalSampleList field is set.
     */
    boolean hasSignalSampleList();
    /**
     * <pre>
     *信号时频图样本
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
     * @return The signalSampleList.
     */
    zb.dcts.scenario.detection.Detection.SignalSampleList getSignalSampleList();
    /**
     * <pre>
     *信号时频图样本
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalSampleListOrBuilder getSignalSampleListOrBuilder();
  }
  /**
   * <pre>
   *设备端周期性上报的检测结果
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.DeviceDetectResult}
   */
  public static final class DeviceDetectResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.DeviceDetectResult)
      DeviceDetectResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceDetectResult.newBuilder() to construct.
    private DeviceDetectResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceDetectResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeviceDetectResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceDetectResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.detection.Detection.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(zb.dcts.scenario.detection.Detection.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.scenario.detection.Detection.FixSignalList.Builder subBuilder = null;
              if (fixSignalList_ != null) {
                subBuilder = fixSignalList_.toBuilder();
              }
              fixSignalList_ = input.readMessage(zb.dcts.scenario.detection.Detection.FixSignalList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fixSignalList_);
                fixSignalList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.scenario.detection.Detection.HopSignalList.Builder subBuilder = null;
              if (hopSignalList_ != null) {
                subBuilder = hopSignalList_.toBuilder();
              }
              hopSignalList_ = input.readMessage(zb.dcts.scenario.detection.Detection.HopSignalList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hopSignalList_);
                hopSignalList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              zb.dcts.scenario.detection.Detection.SignalSampleList.Builder subBuilder = null;
              if (signalSampleList_ != null) {
                subBuilder = signalSampleList_.toBuilder();
              }
              signalSampleList_ = input.readMessage(zb.dcts.scenario.detection.Detection.SignalSampleList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signalSampleList_);
                signalSampleList_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DeviceDetectResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DeviceDetectResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.DeviceDetectResult.class, zb.dcts.scenario.detection.Detection.DeviceDetectResult.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.detection.Detection.Header header_;
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.Header getHeader() {
      return header_ == null ? zb.dcts.scenario.detection.Detection.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int FIX_SIGNAL_LIST_FIELD_NUMBER = 3;
    private zb.dcts.scenario.detection.Detection.FixSignalList fixSignalList_;
    /**
     * <pre>
     *当前上报周期内的信号列表
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
     * @return Whether the fixSignalList field is set.
     */
    @java.lang.Override
    public boolean hasFixSignalList() {
      return fixSignalList_ != null;
    }
    /**
     * <pre>
     *当前上报周期内的信号列表
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
     * @return The fixSignalList.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.FixSignalList getFixSignalList() {
      return fixSignalList_ == null ? zb.dcts.scenario.detection.Detection.FixSignalList.getDefaultInstance() : fixSignalList_;
    }
    /**
     * <pre>
     *当前上报周期内的信号列表
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.FixSignalListOrBuilder getFixSignalListOrBuilder() {
      return getFixSignalList();
    }

    public static final int HOP_SIGNAL_LIST_FIELD_NUMBER = 4;
    private zb.dcts.scenario.detection.Detection.HopSignalList hopSignalList_;
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
     * @return Whether the hopSignalList field is set.
     */
    @java.lang.Override
    public boolean hasHopSignalList() {
      return hopSignalList_ != null;
    }
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
     * @return The hopSignalList.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalList getHopSignalList() {
      return hopSignalList_ == null ? zb.dcts.scenario.detection.Detection.HopSignalList.getDefaultInstance() : hopSignalList_;
    }
    /**
     * <pre>
     *跳频信号检测结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalListOrBuilder getHopSignalListOrBuilder() {
      return getHopSignalList();
    }

    public static final int SIGNAL_SAMPLE_LIST_FIELD_NUMBER = 5;
    private zb.dcts.scenario.detection.Detection.SignalSampleList signalSampleList_;
    /**
     * <pre>
     *信号时频图样本
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
     * @return Whether the signalSampleList field is set.
     */
    @java.lang.Override
    public boolean hasSignalSampleList() {
      return signalSampleList_ != null;
    }
    /**
     * <pre>
     *信号时频图样本
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
     * @return The signalSampleList.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSampleList getSignalSampleList() {
      return signalSampleList_ == null ? zb.dcts.scenario.detection.Detection.SignalSampleList.getDefaultInstance() : signalSampleList_;
    }
    /**
     * <pre>
     *信号时频图样本
     * </pre>
     *
     * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalSampleListOrBuilder getSignalSampleListOrBuilder() {
      return getSignalSampleList();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (fixSignalList_ != null) {
        output.writeMessage(3, getFixSignalList());
      }
      if (hopSignalList_ != null) {
        output.writeMessage(4, getHopSignalList());
      }
      if (signalSampleList_ != null) {
        output.writeMessage(5, getSignalSampleList());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (fixSignalList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFixSignalList());
      }
      if (hopSignalList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHopSignalList());
      }
      if (signalSampleList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSignalSampleList());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.DeviceDetectResult)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.DeviceDetectResult other = (zb.dcts.scenario.detection.Detection.DeviceDetectResult) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (hasFixSignalList() != other.hasFixSignalList()) return false;
      if (hasFixSignalList()) {
        if (!getFixSignalList()
            .equals(other.getFixSignalList())) return false;
      }
      if (hasHopSignalList() != other.hasHopSignalList()) return false;
      if (hasHopSignalList()) {
        if (!getHopSignalList()
            .equals(other.getHopSignalList())) return false;
      }
      if (hasSignalSampleList() != other.hasSignalSampleList()) return false;
      if (hasSignalSampleList()) {
        if (!getSignalSampleList()
            .equals(other.getSignalSampleList())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasFixSignalList()) {
        hash = (37 * hash) + FIX_SIGNAL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getFixSignalList().hashCode();
      }
      if (hasHopSignalList()) {
        hash = (37 * hash) + HOP_SIGNAL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getHopSignalList().hashCode();
      }
      if (hasSignalSampleList()) {
        hash = (37 * hash) + SIGNAL_SAMPLE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getSignalSampleList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.DeviceDetectResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *设备端周期性上报的检测结果
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.DeviceDetectResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.DeviceDetectResult)
        zb.dcts.scenario.detection.Detection.DeviceDetectResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DeviceDetectResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DeviceDetectResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.DeviceDetectResult.class, zb.dcts.scenario.detection.Detection.DeviceDetectResult.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.DeviceDetectResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (fixSignalListBuilder_ == null) {
          fixSignalList_ = null;
        } else {
          fixSignalList_ = null;
          fixSignalListBuilder_ = null;
        }
        if (hopSignalListBuilder_ == null) {
          hopSignalList_ = null;
        } else {
          hopSignalList_ = null;
          hopSignalListBuilder_ = null;
        }
        if (signalSampleListBuilder_ == null) {
          signalSampleList_ = null;
        } else {
          signalSampleList_ = null;
          signalSampleListBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_DeviceDetectResult_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DeviceDetectResult getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.DeviceDetectResult.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DeviceDetectResult build() {
        zb.dcts.scenario.detection.Detection.DeviceDetectResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.DeviceDetectResult buildPartial() {
        zb.dcts.scenario.detection.Detection.DeviceDetectResult result = new zb.dcts.scenario.detection.Detection.DeviceDetectResult(this);
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (fixSignalListBuilder_ == null) {
          result.fixSignalList_ = fixSignalList_;
        } else {
          result.fixSignalList_ = fixSignalListBuilder_.build();
        }
        if (hopSignalListBuilder_ == null) {
          result.hopSignalList_ = hopSignalList_;
        } else {
          result.hopSignalList_ = hopSignalListBuilder_.build();
        }
        if (signalSampleListBuilder_ == null) {
          result.signalSampleList_ = signalSampleList_;
        } else {
          result.signalSampleList_ = signalSampleListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.DeviceDetectResult) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.DeviceDetectResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.DeviceDetectResult other) {
        if (other == zb.dcts.scenario.detection.Detection.DeviceDetectResult.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasFixSignalList()) {
          mergeFixSignalList(other.getFixSignalList());
        }
        if (other.hasHopSignalList()) {
          mergeHopSignalList(other.getHopSignalList());
        }
        if (other.hasSignalSampleList()) {
          mergeSignalSampleList(other.getSignalSampleList());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.DeviceDetectResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.DeviceDetectResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.detection.Detection.Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.Header, zb.dcts.scenario.detection.Detection.Header.Builder, zb.dcts.scenario.detection.Detection.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       * @return The header.
       */
      public zb.dcts.scenario.detection.Detection.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? zb.dcts.scenario.detection.Detection.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder setHeader(zb.dcts.scenario.detection.Detection.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder setHeader(
          zb.dcts.scenario.detection.Detection.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder mergeHeader(zb.dcts.scenario.detection.Detection.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              zb.dcts.scenario.detection.Detection.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              zb.dcts.scenario.detection.Detection.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.Header, zb.dcts.scenario.detection.Detection.Header.Builder, zb.dcts.scenario.detection.Detection.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.Header, zb.dcts.scenario.detection.Detection.Header.Builder, zb.dcts.scenario.detection.Detection.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.FixSignalList fixSignalList_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.FixSignalList, zb.dcts.scenario.detection.Detection.FixSignalList.Builder, zb.dcts.scenario.detection.Detection.FixSignalListOrBuilder> fixSignalListBuilder_;
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       * @return Whether the fixSignalList field is set.
       */
      public boolean hasFixSignalList() {
        return fixSignalListBuilder_ != null || fixSignalList_ != null;
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       * @return The fixSignalList.
       */
      public zb.dcts.scenario.detection.Detection.FixSignalList getFixSignalList() {
        if (fixSignalListBuilder_ == null) {
          return fixSignalList_ == null ? zb.dcts.scenario.detection.Detection.FixSignalList.getDefaultInstance() : fixSignalList_;
        } else {
          return fixSignalListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       */
      public Builder setFixSignalList(zb.dcts.scenario.detection.Detection.FixSignalList value) {
        if (fixSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixSignalList_ = value;
          onChanged();
        } else {
          fixSignalListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       */
      public Builder setFixSignalList(
          zb.dcts.scenario.detection.Detection.FixSignalList.Builder builderForValue) {
        if (fixSignalListBuilder_ == null) {
          fixSignalList_ = builderForValue.build();
          onChanged();
        } else {
          fixSignalListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       */
      public Builder mergeFixSignalList(zb.dcts.scenario.detection.Detection.FixSignalList value) {
        if (fixSignalListBuilder_ == null) {
          if (fixSignalList_ != null) {
            fixSignalList_ =
              zb.dcts.scenario.detection.Detection.FixSignalList.newBuilder(fixSignalList_).mergeFrom(value).buildPartial();
          } else {
            fixSignalList_ = value;
          }
          onChanged();
        } else {
          fixSignalListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       */
      public Builder clearFixSignalList() {
        if (fixSignalListBuilder_ == null) {
          fixSignalList_ = null;
          onChanged();
        } else {
          fixSignalList_ = null;
          fixSignalListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.FixSignalList.Builder getFixSignalListBuilder() {
        
        onChanged();
        return getFixSignalListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       */
      public zb.dcts.scenario.detection.Detection.FixSignalListOrBuilder getFixSignalListOrBuilder() {
        if (fixSignalListBuilder_ != null) {
          return fixSignalListBuilder_.getMessageOrBuilder();
        } else {
          return fixSignalList_ == null ?
              zb.dcts.scenario.detection.Detection.FixSignalList.getDefaultInstance() : fixSignalList_;
        }
      }
      /**
       * <pre>
       *当前上报周期内的信号列表
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.FixSignalList fix_signal_list = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.FixSignalList, zb.dcts.scenario.detection.Detection.FixSignalList.Builder, zb.dcts.scenario.detection.Detection.FixSignalListOrBuilder> 
          getFixSignalListFieldBuilder() {
        if (fixSignalListBuilder_ == null) {
          fixSignalListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.FixSignalList, zb.dcts.scenario.detection.Detection.FixSignalList.Builder, zb.dcts.scenario.detection.Detection.FixSignalListOrBuilder>(
                  getFixSignalList(),
                  getParentForChildren(),
                  isClean());
          fixSignalList_ = null;
        }
        return fixSignalListBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.HopSignalList hopSignalList_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalList, zb.dcts.scenario.detection.Detection.HopSignalList.Builder, zb.dcts.scenario.detection.Detection.HopSignalListOrBuilder> hopSignalListBuilder_;
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       * @return Whether the hopSignalList field is set.
       */
      public boolean hasHopSignalList() {
        return hopSignalListBuilder_ != null || hopSignalList_ != null;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       * @return The hopSignalList.
       */
      public zb.dcts.scenario.detection.Detection.HopSignalList getHopSignalList() {
        if (hopSignalListBuilder_ == null) {
          return hopSignalList_ == null ? zb.dcts.scenario.detection.Detection.HopSignalList.getDefaultInstance() : hopSignalList_;
        } else {
          return hopSignalListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       */
      public Builder setHopSignalList(zb.dcts.scenario.detection.Detection.HopSignalList value) {
        if (hopSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hopSignalList_ = value;
          onChanged();
        } else {
          hopSignalListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       */
      public Builder setHopSignalList(
          zb.dcts.scenario.detection.Detection.HopSignalList.Builder builderForValue) {
        if (hopSignalListBuilder_ == null) {
          hopSignalList_ = builderForValue.build();
          onChanged();
        } else {
          hopSignalListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       */
      public Builder mergeHopSignalList(zb.dcts.scenario.detection.Detection.HopSignalList value) {
        if (hopSignalListBuilder_ == null) {
          if (hopSignalList_ != null) {
            hopSignalList_ =
              zb.dcts.scenario.detection.Detection.HopSignalList.newBuilder(hopSignalList_).mergeFrom(value).buildPartial();
          } else {
            hopSignalList_ = value;
          }
          onChanged();
        } else {
          hopSignalListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       */
      public Builder clearHopSignalList() {
        if (hopSignalListBuilder_ == null) {
          hopSignalList_ = null;
          onChanged();
        } else {
          hopSignalList_ = null;
          hopSignalListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalList.Builder getHopSignalListBuilder() {
        
        onChanged();
        return getHopSignalListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalListOrBuilder getHopSignalListOrBuilder() {
        if (hopSignalListBuilder_ != null) {
          return hopSignalListBuilder_.getMessageOrBuilder();
        } else {
          return hopSignalList_ == null ?
              zb.dcts.scenario.detection.Detection.HopSignalList.getDefaultInstance() : hopSignalList_;
        }
      }
      /**
       * <pre>
       *跳频信号检测结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.HopSignalList hop_signal_list = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalList, zb.dcts.scenario.detection.Detection.HopSignalList.Builder, zb.dcts.scenario.detection.Detection.HopSignalListOrBuilder> 
          getHopSignalListFieldBuilder() {
        if (hopSignalListBuilder_ == null) {
          hopSignalListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HopSignalList, zb.dcts.scenario.detection.Detection.HopSignalList.Builder, zb.dcts.scenario.detection.Detection.HopSignalListOrBuilder>(
                  getHopSignalList(),
                  getParentForChildren(),
                  isClean());
          hopSignalList_ = null;
        }
        return hopSignalListBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.SignalSampleList signalSampleList_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSampleList, zb.dcts.scenario.detection.Detection.SignalSampleList.Builder, zb.dcts.scenario.detection.Detection.SignalSampleListOrBuilder> signalSampleListBuilder_;
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       * @return Whether the signalSampleList field is set.
       */
      public boolean hasSignalSampleList() {
        return signalSampleListBuilder_ != null || signalSampleList_ != null;
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       * @return The signalSampleList.
       */
      public zb.dcts.scenario.detection.Detection.SignalSampleList getSignalSampleList() {
        if (signalSampleListBuilder_ == null) {
          return signalSampleList_ == null ? zb.dcts.scenario.detection.Detection.SignalSampleList.getDefaultInstance() : signalSampleList_;
        } else {
          return signalSampleListBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       */
      public Builder setSignalSampleList(zb.dcts.scenario.detection.Detection.SignalSampleList value) {
        if (signalSampleListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signalSampleList_ = value;
          onChanged();
        } else {
          signalSampleListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       */
      public Builder setSignalSampleList(
          zb.dcts.scenario.detection.Detection.SignalSampleList.Builder builderForValue) {
        if (signalSampleListBuilder_ == null) {
          signalSampleList_ = builderForValue.build();
          onChanged();
        } else {
          signalSampleListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       */
      public Builder mergeSignalSampleList(zb.dcts.scenario.detection.Detection.SignalSampleList value) {
        if (signalSampleListBuilder_ == null) {
          if (signalSampleList_ != null) {
            signalSampleList_ =
              zb.dcts.scenario.detection.Detection.SignalSampleList.newBuilder(signalSampleList_).mergeFrom(value).buildPartial();
          } else {
            signalSampleList_ = value;
          }
          onChanged();
        } else {
          signalSampleListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       */
      public Builder clearSignalSampleList() {
        if (signalSampleListBuilder_ == null) {
          signalSampleList_ = null;
          onChanged();
        } else {
          signalSampleList_ = null;
          signalSampleListBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSampleList.Builder getSignalSampleListBuilder() {
        
        onChanged();
        return getSignalSampleListFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalSampleListOrBuilder getSignalSampleListOrBuilder() {
        if (signalSampleListBuilder_ != null) {
          return signalSampleListBuilder_.getMessageOrBuilder();
        } else {
          return signalSampleList_ == null ?
              zb.dcts.scenario.detection.Detection.SignalSampleList.getDefaultInstance() : signalSampleList_;
        }
      }
      /**
       * <pre>
       *信号时频图样本
       * </pre>
       *
       * <code>.zb.dcts.scenario.detection.SignalSampleList signal_sample_list = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalSampleList, zb.dcts.scenario.detection.Detection.SignalSampleList.Builder, zb.dcts.scenario.detection.Detection.SignalSampleListOrBuilder> 
          getSignalSampleListFieldBuilder() {
        if (signalSampleListBuilder_ == null) {
          signalSampleListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalSampleList, zb.dcts.scenario.detection.Detection.SignalSampleList.Builder, zb.dcts.scenario.detection.Detection.SignalSampleListOrBuilder>(
                  getSignalSampleList(),
                  getParentForChildren(),
                  isClean());
          signalSampleList_ = null;
        }
        return signalSampleListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.DeviceDetectResult)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.DeviceDetectResult)
    private static final zb.dcts.scenario.detection.Detection.DeviceDetectResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.DeviceDetectResult();
    }

    public static zb.dcts.scenario.detection.Detection.DeviceDetectResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceDetectResult>
        PARSER = new com.google.protobuf.AbstractParser<DeviceDetectResult>() {
      @java.lang.Override
      public DeviceDetectResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceDetectResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeviceDetectResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceDetectResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.DeviceDetectResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalLayerSurveyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.detection.SignalLayerSurvey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return Whether the resultFrom field is set.
     */
    boolean hasResultFrom();
    /**
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return The resultFrom.
     */
    zb.dcts.source.Source.SourceId getResultFrom();
    /**
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     */
    zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
     * @return Whether the timeStamp field is set.
     */
    boolean hasTimeStamp();
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
     * @return The timeStamp.
     */
    zb.dcts.Dcts.Timestamp getTimeStamp();
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
     */
    zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder();

    /**
     * <pre>
     *测向点的位置
     * </pre>
     *
     * <code>.zb.dcts.Position position = 3;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <pre>
     *测向点的位置
     * </pre>
     *
     * <code>.zb.dcts.Position position = 3;</code>
     * @return The position.
     */
    zb.dcts.Dcts.Position getPosition();
    /**
     * <pre>
     *测向点的位置
     * </pre>
     *
     * <code>.zb.dcts.Position position = 3;</code>
     */
    zb.dcts.Dcts.PositionOrBuilder getPositionOrBuilder();

    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> 
        getFixSignalListList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigest getFixSignalList(int index);
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    int getFixSignalListCount();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
        getFixSignalListOrBuilderList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getFixSignalListOrBuilder(
        int index);

    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> 
        getHopSignalListList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalList(int index);
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    int getHopSignalListCount();
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
        getHopSignalListOrBuilderList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalListOrBuilder(
        int index);
  }
  /**
   * <pre>
   *信号层面的测量报告
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.detection.SignalLayerSurvey}
   */
  public static final class SignalLayerSurvey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.detection.SignalLayerSurvey)
      SignalLayerSurveyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalLayerSurvey.newBuilder() to construct.
    private SignalLayerSurvey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalLayerSurvey() {
      fixSignalList_ = java.util.Collections.emptyList();
      hopSignalList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalLayerSurvey();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalLayerSurvey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.source.Source.SourceId.Builder subBuilder = null;
              if (resultFrom_ != null) {
                subBuilder = resultFrom_.toBuilder();
              }
              resultFrom_ = input.readMessage(zb.dcts.source.Source.SourceId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resultFrom_);
                resultFrom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.Dcts.Timestamp.Builder subBuilder = null;
              if (timeStamp_ != null) {
                subBuilder = timeStamp_.toBuilder();
              }
              timeStamp_ = input.readMessage(zb.dcts.Dcts.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeStamp_);
                timeStamp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.Dcts.Position.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(zb.dcts.Dcts.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fixSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalDigest>();
                mutable_bitField0_ |= 0x00000001;
              }
              fixSignalList_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.SignalDigest.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                hopSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalCluster>();
                mutable_bitField0_ |= 0x00000002;
              }
              hopSignalList_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.HopSignalCluster.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fixSignalList_ = java.util.Collections.unmodifiableList(fixSignalList_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          hopSignalList_ = java.util.Collections.unmodifiableList(hopSignalList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.detection.Detection.SignalLayerSurvey.class, zb.dcts.scenario.detection.Detection.SignalLayerSurvey.Builder.class);
    }

    public static final int RESULT_FROM_FIELD_NUMBER = 1;
    private zb.dcts.source.Source.SourceId resultFrom_;
    /**
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return Whether the resultFrom field is set.
     */
    @java.lang.Override
    public boolean hasResultFrom() {
      return resultFrom_ != null;
    }
    /**
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     * @return The resultFrom.
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceId getResultFrom() {
      return resultFrom_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
    }
    /**
     * <code>.zb.dcts.source.SourceId result_from = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder() {
      return getResultFrom();
    }

    public static final int TIME_STAMP_FIELD_NUMBER = 2;
    private zb.dcts.Dcts.Timestamp timeStamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
     * @return Whether the timeStamp field is set.
     */
    @java.lang.Override
    public boolean hasTimeStamp() {
      return timeStamp_ != null;
    }
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
     * @return The timeStamp.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Timestamp getTimeStamp() {
      return timeStamp_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
    }
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder() {
      return getTimeStamp();
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private zb.dcts.Dcts.Position position_;
    /**
     * <pre>
     *测向点的位置
     * </pre>
     *
     * <code>.zb.dcts.Position position = 3;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <pre>
     *测向点的位置
     * </pre>
     *
     * <code>.zb.dcts.Position position = 3;</code>
     * @return The position.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Position getPosition() {
      return position_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : position_;
    }
    /**
     * <pre>
     *测向点的位置
     * </pre>
     *
     * <code>.zb.dcts.Position position = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.PositionOrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int FIX_SIGNAL_LIST_FIELD_NUMBER = 4;
    private java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> fixSignalList_;
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> getFixSignalListList() {
      return fixSignalList_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
        getFixSignalListOrBuilderList() {
      return fixSignalList_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    @java.lang.Override
    public int getFixSignalListCount() {
      return fixSignalList_.size();
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigest getFixSignalList(int index) {
      return fixSignalList_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getFixSignalListOrBuilder(
        int index) {
      return fixSignalList_.get(index);
    }

    public static final int HOP_SIGNAL_LIST_FIELD_NUMBER = 5;
    private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> hopSignalList_;
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> getHopSignalListList() {
      return hopSignalList_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
        getHopSignalListOrBuilderList() {
      return hopSignalList_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    @java.lang.Override
    public int getHopSignalListCount() {
      return hopSignalList_.size();
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalList(int index) {
      return hopSignalList_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalListOrBuilder(
        int index) {
      return hopSignalList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (resultFrom_ != null) {
        output.writeMessage(1, getResultFrom());
      }
      if (timeStamp_ != null) {
        output.writeMessage(2, getTimeStamp());
      }
      if (position_ != null) {
        output.writeMessage(3, getPosition());
      }
      for (int i = 0; i < fixSignalList_.size(); i++) {
        output.writeMessage(4, fixSignalList_.get(i));
      }
      for (int i = 0; i < hopSignalList_.size(); i++) {
        output.writeMessage(5, hopSignalList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (resultFrom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResultFrom());
      }
      if (timeStamp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTimeStamp());
      }
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPosition());
      }
      for (int i = 0; i < fixSignalList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, fixSignalList_.get(i));
      }
      for (int i = 0; i < hopSignalList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, hopSignalList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.detection.Detection.SignalLayerSurvey)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.detection.Detection.SignalLayerSurvey other = (zb.dcts.scenario.detection.Detection.SignalLayerSurvey) obj;

      if (hasResultFrom() != other.hasResultFrom()) return false;
      if (hasResultFrom()) {
        if (!getResultFrom()
            .equals(other.getResultFrom())) return false;
      }
      if (hasTimeStamp() != other.hasTimeStamp()) return false;
      if (hasTimeStamp()) {
        if (!getTimeStamp()
            .equals(other.getTimeStamp())) return false;
      }
      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (!getFixSignalListList()
          .equals(other.getFixSignalListList())) return false;
      if (!getHopSignalListList()
          .equals(other.getHopSignalListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResultFrom()) {
        hash = (37 * hash) + RESULT_FROM_FIELD_NUMBER;
        hash = (53 * hash) + getResultFrom().hashCode();
      }
      if (hasTimeStamp()) {
        hash = (37 * hash) + TIME_STAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimeStamp().hashCode();
      }
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      if (getFixSignalListCount() > 0) {
        hash = (37 * hash) + FIX_SIGNAL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getFixSignalListList().hashCode();
      }
      if (getHopSignalListCount() > 0) {
        hash = (37 * hash) + HOP_SIGNAL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getHopSignalListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.detection.Detection.SignalLayerSurvey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *信号层面的测量报告
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.detection.SignalLayerSurvey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.detection.SignalLayerSurvey)
        zb.dcts.scenario.detection.Detection.SignalLayerSurveyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.detection.Detection.SignalLayerSurvey.class, zb.dcts.scenario.detection.Detection.SignalLayerSurvey.Builder.class);
      }

      // Construct using zb.dcts.scenario.detection.Detection.SignalLayerSurvey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFixSignalListFieldBuilder();
          getHopSignalListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resultFromBuilder_ == null) {
          resultFrom_ = null;
        } else {
          resultFrom_ = null;
          resultFromBuilder_ = null;
        }
        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
        } else {
          timeStamp_ = null;
          timeStampBuilder_ = null;
        }
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        if (fixSignalListBuilder_ == null) {
          fixSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fixSignalListBuilder_.clear();
        }
        if (hopSignalListBuilder_ == null) {
          hopSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          hopSignalListBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.detection.Detection.internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalLayerSurvey getDefaultInstanceForType() {
        return zb.dcts.scenario.detection.Detection.SignalLayerSurvey.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalLayerSurvey build() {
        zb.dcts.scenario.detection.Detection.SignalLayerSurvey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.detection.Detection.SignalLayerSurvey buildPartial() {
        zb.dcts.scenario.detection.Detection.SignalLayerSurvey result = new zb.dcts.scenario.detection.Detection.SignalLayerSurvey(this);
        int from_bitField0_ = bitField0_;
        if (resultFromBuilder_ == null) {
          result.resultFrom_ = resultFrom_;
        } else {
          result.resultFrom_ = resultFromBuilder_.build();
        }
        if (timeStampBuilder_ == null) {
          result.timeStamp_ = timeStamp_;
        } else {
          result.timeStamp_ = timeStampBuilder_.build();
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (fixSignalListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fixSignalList_ = java.util.Collections.unmodifiableList(fixSignalList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fixSignalList_ = fixSignalList_;
        } else {
          result.fixSignalList_ = fixSignalListBuilder_.build();
        }
        if (hopSignalListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            hopSignalList_ = java.util.Collections.unmodifiableList(hopSignalList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.hopSignalList_ = hopSignalList_;
        } else {
          result.hopSignalList_ = hopSignalListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.detection.Detection.SignalLayerSurvey) {
          return mergeFrom((zb.dcts.scenario.detection.Detection.SignalLayerSurvey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.detection.Detection.SignalLayerSurvey other) {
        if (other == zb.dcts.scenario.detection.Detection.SignalLayerSurvey.getDefaultInstance()) return this;
        if (other.hasResultFrom()) {
          mergeResultFrom(other.getResultFrom());
        }
        if (other.hasTimeStamp()) {
          mergeTimeStamp(other.getTimeStamp());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (fixSignalListBuilder_ == null) {
          if (!other.fixSignalList_.isEmpty()) {
            if (fixSignalList_.isEmpty()) {
              fixSignalList_ = other.fixSignalList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFixSignalListIsMutable();
              fixSignalList_.addAll(other.fixSignalList_);
            }
            onChanged();
          }
        } else {
          if (!other.fixSignalList_.isEmpty()) {
            if (fixSignalListBuilder_.isEmpty()) {
              fixSignalListBuilder_.dispose();
              fixSignalListBuilder_ = null;
              fixSignalList_ = other.fixSignalList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fixSignalListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFixSignalListFieldBuilder() : null;
            } else {
              fixSignalListBuilder_.addAllMessages(other.fixSignalList_);
            }
          }
        }
        if (hopSignalListBuilder_ == null) {
          if (!other.hopSignalList_.isEmpty()) {
            if (hopSignalList_.isEmpty()) {
              hopSignalList_ = other.hopSignalList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHopSignalListIsMutable();
              hopSignalList_.addAll(other.hopSignalList_);
            }
            onChanged();
          }
        } else {
          if (!other.hopSignalList_.isEmpty()) {
            if (hopSignalListBuilder_.isEmpty()) {
              hopSignalListBuilder_.dispose();
              hopSignalListBuilder_ = null;
              hopSignalList_ = other.hopSignalList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              hopSignalListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHopSignalListFieldBuilder() : null;
            } else {
              hopSignalListBuilder_.addAllMessages(other.hopSignalList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.detection.Detection.SignalLayerSurvey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.detection.Detection.SignalLayerSurvey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.source.Source.SourceId resultFrom_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> resultFromBuilder_;
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return Whether the resultFrom field is set.
       */
      public boolean hasResultFrom() {
        return resultFromBuilder_ != null || resultFrom_ != null;
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return The resultFrom.
       */
      public zb.dcts.source.Source.SourceId getResultFrom() {
        if (resultFromBuilder_ == null) {
          return resultFrom_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
        } else {
          return resultFromBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder setResultFrom(zb.dcts.source.Source.SourceId value) {
        if (resultFromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resultFrom_ = value;
          onChanged();
        } else {
          resultFromBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder setResultFrom(
          zb.dcts.source.Source.SourceId.Builder builderForValue) {
        if (resultFromBuilder_ == null) {
          resultFrom_ = builderForValue.build();
          onChanged();
        } else {
          resultFromBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder mergeResultFrom(zb.dcts.source.Source.SourceId value) {
        if (resultFromBuilder_ == null) {
          if (resultFrom_ != null) {
            resultFrom_ =
              zb.dcts.source.Source.SourceId.newBuilder(resultFrom_).mergeFrom(value).buildPartial();
          } else {
            resultFrom_ = value;
          }
          onChanged();
        } else {
          resultFromBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public Builder clearResultFrom() {
        if (resultFromBuilder_ == null) {
          resultFrom_ = null;
          onChanged();
        } else {
          resultFrom_ = null;
          resultFromBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public zb.dcts.source.Source.SourceId.Builder getResultFromBuilder() {
        
        onChanged();
        return getResultFromFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      public zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder() {
        if (resultFromBuilder_ != null) {
          return resultFromBuilder_.getMessageOrBuilder();
        } else {
          return resultFrom_ == null ?
              zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
        }
      }
      /**
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> 
          getResultFromFieldBuilder() {
        if (resultFromBuilder_ == null) {
          resultFromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder>(
                  getResultFrom(),
                  getParentForChildren(),
                  isClean());
          resultFrom_ = null;
        }
        return resultFromBuilder_;
      }

      private zb.dcts.Dcts.Timestamp timeStamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> timeStampBuilder_;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       * @return Whether the timeStamp field is set.
       */
      public boolean hasTimeStamp() {
        return timeStampBuilder_ != null || timeStamp_ != null;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       * @return The timeStamp.
       */
      public zb.dcts.Dcts.Timestamp getTimeStamp() {
        if (timeStampBuilder_ == null) {
          return timeStamp_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
        } else {
          return timeStampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       */
      public Builder setTimeStamp(zb.dcts.Dcts.Timestamp value) {
        if (timeStampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeStamp_ = value;
          onChanged();
        } else {
          timeStampBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       */
      public Builder setTimeStamp(
          zb.dcts.Dcts.Timestamp.Builder builderForValue) {
        if (timeStampBuilder_ == null) {
          timeStamp_ = builderForValue.build();
          onChanged();
        } else {
          timeStampBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       */
      public Builder mergeTimeStamp(zb.dcts.Dcts.Timestamp value) {
        if (timeStampBuilder_ == null) {
          if (timeStamp_ != null) {
            timeStamp_ =
              zb.dcts.Dcts.Timestamp.newBuilder(timeStamp_).mergeFrom(value).buildPartial();
          } else {
            timeStamp_ = value;
          }
          onChanged();
        } else {
          timeStampBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       */
      public Builder clearTimeStamp() {
        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
          onChanged();
        } else {
          timeStamp_ = null;
          timeStampBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       */
      public zb.dcts.Dcts.Timestamp.Builder getTimeStampBuilder() {
        
        onChanged();
        return getTimeStampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       */
      public zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder() {
        if (timeStampBuilder_ != null) {
          return timeStampBuilder_.getMessageOrBuilder();
        } else {
          return timeStamp_ == null ?
              zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
        }
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> 
          getTimeStampFieldBuilder() {
        if (timeStampBuilder_ == null) {
          timeStampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder>(
                  getTimeStamp(),
                  getParentForChildren(),
                  isClean());
          timeStamp_ = null;
        }
        return timeStampBuilder_;
      }

      private zb.dcts.Dcts.Position position_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> positionBuilder_;
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       * @return The position.
       */
      public zb.dcts.Dcts.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       */
      public Builder setPosition(zb.dcts.Dcts.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       */
      public Builder setPosition(
          zb.dcts.Dcts.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       */
      public Builder mergePosition(zb.dcts.Dcts.Position value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              zb.dcts.Dcts.Position.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       */
      public zb.dcts.Dcts.Position.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       */
      public zb.dcts.Dcts.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              zb.dcts.Dcts.Position.getDefaultInstance() : position_;
        }
      }
      /**
       * <pre>
       *测向点的位置
       * </pre>
       *
       * <code>.zb.dcts.Position position = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> fixSignalList_ =
        java.util.Collections.emptyList();
      private void ensureFixSignalListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fixSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalDigest>(fixSignalList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> fixSignalListBuilder_;

      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> getFixSignalListList() {
        if (fixSignalListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fixSignalList_);
        } else {
          return fixSignalListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public int getFixSignalListCount() {
        if (fixSignalListBuilder_ == null) {
          return fixSignalList_.size();
        } else {
          return fixSignalListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest getFixSignalList(int index) {
        if (fixSignalListBuilder_ == null) {
          return fixSignalList_.get(index);
        } else {
          return fixSignalListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder setFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (fixSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalListIsMutable();
          fixSignalList_.set(index, value);
          onChanged();
        } else {
          fixSignalListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder setFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.set(index, builderForValue.build());
          onChanged();
        } else {
          fixSignalListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder addFixSignalList(zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (fixSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalListIsMutable();
          fixSignalList_.add(value);
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder addFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (fixSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixSignalListIsMutable();
          fixSignalList_.add(index, value);
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder addFixSignalList(
          zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.add(builderForValue.build());
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder addFixSignalList(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.add(index, builderForValue.build());
          onChanged();
        } else {
          fixSignalListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder addAllFixSignalList(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.SignalDigest> values) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fixSignalList_);
          onChanged();
        } else {
          fixSignalListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder clearFixSignalList() {
        if (fixSignalListBuilder_ == null) {
          fixSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fixSignalListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public Builder removeFixSignalList(int index) {
        if (fixSignalListBuilder_ == null) {
          ensureFixSignalListIsMutable();
          fixSignalList_.remove(index);
          onChanged();
        } else {
          fixSignalListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder getFixSignalListBuilder(
          int index) {
        return getFixSignalListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getFixSignalListOrBuilder(
          int index) {
        if (fixSignalListBuilder_ == null) {
          return fixSignalList_.get(index);  } else {
          return fixSignalListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
           getFixSignalListOrBuilderList() {
        if (fixSignalListBuilder_ != null) {
          return fixSignalListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fixSignalList_);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder addFixSignalListBuilder() {
        return getFixSignalListFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder addFixSignalListBuilder(
          int index) {
        return getFixSignalListFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest fix_signal_list = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest.Builder> 
           getFixSignalListBuilderList() {
        return getFixSignalListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
          getFixSignalListFieldBuilder() {
        if (fixSignalListBuilder_ == null) {
          fixSignalListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder>(
                  fixSignalList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fixSignalList_ = null;
        }
        return fixSignalListBuilder_;
      }

      private java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> hopSignalList_ =
        java.util.Collections.emptyList();
      private void ensureHopSignalListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          hopSignalList_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.HopSignalCluster>(hopSignalList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> hopSignalListBuilder_;

      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster> getHopSignalListList() {
        if (hopSignalListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hopSignalList_);
        } else {
          return hopSignalListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public int getHopSignalListCount() {
        if (hopSignalListBuilder_ == null) {
          return hopSignalList_.size();
        } else {
          return hopSignalListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster getHopSignalList(int index) {
        if (hopSignalListBuilder_ == null) {
          return hopSignalList_.get(index);
        } else {
          return hopSignalListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder setHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalListIsMutable();
          hopSignalList_.set(index, value);
          onChanged();
        } else {
          hopSignalListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder setHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.set(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder addHopSignalList(zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalListIsMutable();
          hopSignalList_.add(value);
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder addHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster value) {
        if (hopSignalListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHopSignalListIsMutable();
          hopSignalList_.add(index, value);
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder addHopSignalList(
          zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.add(builderForValue.build());
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder addHopSignalList(
          int index, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder builderForValue) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.add(index, builderForValue.build());
          onChanged();
        } else {
          hopSignalListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder addAllHopSignalList(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.HopSignalCluster> values) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hopSignalList_);
          onChanged();
        } else {
          hopSignalListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder clearHopSignalList() {
        if (hopSignalListBuilder_ == null) {
          hopSignalList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          hopSignalListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public Builder removeHopSignalList(int index) {
        if (hopSignalListBuilder_ == null) {
          ensureHopSignalListIsMutable();
          hopSignalList_.remove(index);
          onChanged();
        } else {
          hopSignalListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder getHopSignalListBuilder(
          int index) {
        return getHopSignalListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder getHopSignalListOrBuilder(
          int index) {
        if (hopSignalListBuilder_ == null) {
          return hopSignalList_.get(index);  } else {
          return hopSignalListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
           getHopSignalListOrBuilderList() {
        if (hopSignalListBuilder_ != null) {
          return hopSignalListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hopSignalList_);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder addHopSignalListBuilder() {
        return getHopSignalListFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder addHopSignalListBuilder(
          int index) {
        return getHopSignalListFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.HopSignalCluster.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.HopSignalCluster hop_signal_list = 5;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder> 
           getHopSignalListBuilderList() {
        return getHopSignalListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder> 
          getHopSignalListFieldBuilder() {
        if (hopSignalListBuilder_ == null) {
          hopSignalListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.HopSignalCluster, zb.dcts.scenario.detection.Detection.HopSignalCluster.Builder, zb.dcts.scenario.detection.Detection.HopSignalClusterOrBuilder>(
                  hopSignalList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          hopSignalList_ = null;
        }
        return hopSignalListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.detection.SignalLayerSurvey)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalLayerSurvey)
    private static final zb.dcts.scenario.detection.Detection.SignalLayerSurvey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.detection.Detection.SignalLayerSurvey();
    }

    public static zb.dcts.scenario.detection.Detection.SignalLayerSurvey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalLayerSurvey>
        PARSER = new com.google.protobuf.AbstractParser<SignalLayerSurvey>() {
      @java.lang.Override
      public SignalLayerSurvey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalLayerSurvey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalLayerSurvey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalLayerSurvey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalLayerSurvey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_ThresholdSector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_ThresholdSector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_UserThresholdParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_UserThresholdParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_ThresholdTrace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_ThresholdTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_FreqSpanFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_FreqSpanFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalDetectParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalDetectParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_DetectionParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_DetectionParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalFeature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalFeature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalDigest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalDigest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalSegment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalSegment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_HopSignalDigest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_HopSignalDigest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_HopSignalCluster_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_HopSignalCluster_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_FixSignalList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_FixSignalList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_HopSignalList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_HopSignalList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_DetectionRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_DetectionRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_AutoGatheringParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_AutoGatheringParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_ManualGatheringParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_ManualGatheringParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalSampleList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalSampleList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_RawBody_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_RawBody_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_RawData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_RawData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_DeviceDetectResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_DeviceDetectResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030scenario/detection.proto\022\032zb.dcts.scen" +
      "ario.detection\032\ndcts.proto\032\023source/sourc" +
      "e.proto\032\027scenario/spectrum.proto\032\027scenar" +
      "io/scenario.proto\"]\n\017ThresholdSector\022;\n\t" +
      "freq_span\030\001 \001(\0132(.zb.dcts.scenario.spect" +
      "rum.FrequencySpan\022\r\n\005level\030\002 \001(\002\"R\n\022User" +
      "ThresholdParam\022<\n\007sectors\030\001 \003(\0132+.zb.dct" +
      "s.scenario.detection.ThresholdSector\"`\n\025" +
      "HistoryThresholdParam\022\037\n\004span\030\001 \001(\0132\021.zb" +
      ".dcts.TimeSpan\022\026\n\016max_load_count\030\003 \001(\005\022\016" +
      "\n\006offset\030\004 \001(\002\"\332\001\n\026AdaptiveThresholdPara" +
      "m\022\025\n\raverage_count\030\001 \001(\005\022X\n\016partition_mo" +
      "de\030\002 \001(\0162@.zb.dcts.scenario.detection.Ad" +
      "aptiveThresholdParam.PartitionMode\022\016\n\006of" +
      "fset\030\003 \001(\002\"?\n\rPartitionMode\022\017\n\013PM_STANDA" +
      "RD\020\000\022\020\n\014PM_AGGRESIVE\020\001\022\013\n\007PM_FAST\020\002\"\225\001\n\031" +
      "NeighborVarThresholdParam\022\034\n\024noise_varia" +
      "nce_scale\030\001 \001(\002\022\032\n\022noise_max_variance\030\002 " +
      "\001(\002\022\016\n\006offset\030\003 \001(\002\022\030\n\020lookup_freq_span\030" +
      "\004 \001(\001\022\024\n\014smooth_range\030\005 \001(\005\"\377\003\n\024EnergyDe" +
      "tectionParam\022?\n\014active_types\030\001 \003(\0162).zb." +
      "dcts.scenario.detection.ThresholdType\022I\n" +
      "\005logic\030\002 \001(\0162:.zb.dcts.scenario.detectio" +
      "n.EnergyDetectionParam.LogicType\022L\n\021hist" +
      "ory_threshold\030\005 \001(\01321.zb.dcts.scenario.d" +
      "etection.HistoryThresholdParam\022F\n\016user_t" +
      "hreshold\030\006 \001(\0132..zb.dcts.scenario.detect" +
      "ion.UserThresholdParam\022N\n\022adaptive_thres" +
      "hold\030\007 \001(\01322.zb.dcts.scenario.detection." +
      "AdaptiveThresholdParam\022Q\n\022neighbor_thres" +
      "hold\030\t \001(\01325.zb.dcts.scenario.detection." +
      "NeighborVarThresholdParam\"\"\n\tLogicType\022\n" +
      "\n\006LT_AND\020\000\022\t\n\005LT_OR\020\001\"b\n\016ThresholdTrace\022" +
      "7\n\004type\030\001 \001(\0162).zb.dcts.scenario.detecti" +
      "on.ThresholdType\022\027\n\017threshold_trace\030\002 \003(" +
      "\002\"N\n\016FreqSpanFilter\022<\n\nfreq_spans\030\001 \003(\0132" +
      "(.zb.dcts.scenario.spectrum.FrequencySpa" +
      "n\"\220\001\n\027SignalSegmentationParam\022$\n\034freq_ce" +
      "nter_jitter_tolerance\030\001 \001(\002\022\"\n\032freq_bord" +
      "er_blur_tolerance\030\002 \001(\002\022\017\n\007min_rss\030\003 \001(\002" +
      "\022\032\n\022time_gap_tolerance\030\004 \001(\005\"\262\001\n\025HopSign" +
      "alClusterParam\022\014\n\004name\030\001 \001(\t\022A\n\017frequenc" +
      "y_range\030\002 \001(\0132(.zb.dcts.scenario.spectru" +
      "m.FrequencySpan\022)\n\020band_width_range\030\003 \001(" +
      "\0132\017.zb.dcts.DRange\022\035\n\025freq_jitter_tolera" +
      "nce\030\004 \001(\002\"i\n\027HopSignalDetectionParam\022N\n\023" +
      "hop_signal_clusters\030\001 \003(\01321.zb.dcts.scen" +
      "ario.detection.HopSignalClusterParam\"\203\002\n" +
      "\021SignalDetectParam\022>\n\nwhite_list\030\001 \001(\0132*" +
      ".zb.dcts.scenario.detection.FreqSpanFilt" +
      "er\022U\n\030signal_segmenation_param\030\002 \001(\01323.z" +
      "b.dcts.scenario.detection.SignalSegmenta" +
      "tionParam\022W\n\032hop_signal_detection_param\030" +
      "\003 \001(\01323.zb.dcts.scenario.detection.HopSi" +
      "gnalDetectionParam\"\304\001\n\016DetectionParam\022\027\n" +
      "\017result_interval\030\001 \001(\005\022M\n\023energy_detect_" +
      "param\030\002 \001(\01320.zb.dcts.scenario.detection" +
      ".EnergyDetectionParam\022J\n\023signal_detect_p" +
      "aram\030\003 \001(\0132-.zb.dcts.scenario.detection." +
      "SignalDetectParam\"\263\001\n\rSignalFeature\022\027\n\017s" +
      "equence_number\030\001 \001(\005\022:\n\013signal_band\030\002 \001(" +
      "\0132%.zb.dcts.scenario.spectrum.SignalBand" +
      "\022(\n\tamplitude\030\004 \001(\0132\025.zb.dcts.StatisticV" +
      "al\022#\n\004hits\030\005 \001(\0132\025.zb.dcts.StatisticVal\"" +
      "\355\002\n\014SignalDigest\022\n\n\002id\030\001 \001(\t\022<\n\010activity" +
      "\030\002 \001(\0162*.zb.dcts.scenario.detection.Sign" +
      "alActivity\022*\n\013center_freq\030\003 \001(\0132\025.zb.dct" +
      "s.StatisticVal\022)\n\nband_width\030\004 \001(\0132\025.zb." +
      "dcts.StatisticVal\022(\n\tamplitude\030\005 \001(\0132\025.z" +
      "b.dcts.StatisticVal\022)\n\016emit_time_span\030\006 " +
      "\001(\0132\021.zb.dcts.TimeSpan\022\024\n\014num_features\030\007" +
      " \001(\005\022$\n\016dir_of_arrival\030\t \001(\0132\014.zb.dcts.D" +
      "OA\022\026\n\016classification\030\n \001(\t\022\023\n\013descriptio" +
      "n\030\013 \001(\t\"\215\001\n\rSignalSegment\0228\n\006digest\030\001 \001(" +
      "\0132(.zb.dcts.scenario.detection.SignalDig" +
      "est\022B\n\017feature_details\030\002 \003(\0132).zb.dcts.s" +
      "cenario.detection.SignalFeature\"\250\001\n\017HopS" +
      "ignalDigest\022*\n\013center_freq\030\001 \001(\0132\025.zb.dc" +
      "ts.StatisticVal\022)\n\nband_width\030\002 \001(\0132\025.zb" +
      ".dcts.StatisticVal\022(\n\tamplitude\030\003 \001(\0132\025." +
      "zb.dcts.StatisticVal\022\024\n\014num_features\030\005 \001" +
      "(\005\"\310\001\n\020HopSignalCluster\022\014\n\004name\030\001 \001(\t\022<\n" +
      "\010activity\030\002 \001(\0162*.zb.dcts.scenario.detec" +
      "tion.SignalActivity\022)\n\016emit_time_span\030\003 " +
      "\001(\0132\021.zb.dcts.TimeSpan\022=\n\010freq_set\030\004 \003(\013" +
      "2+.zb.dcts.scenario.detection.HopSignalD" +
      "igest\"O\n\rFixSignalList\022>\n\013fix_signals\030\001 " +
      "\003(\0132).zb.dcts.scenario.detection.SignalS" +
      "egment\"Z\n\rHopSignalList\022I\n\023hop_signal_cl" +
      "usters\030\001 \003(\0132,.zb.dcts.scenario.detectio" +
      "n.HopSignalCluster\"\214\001\n\020DetectionRequest\022" +
      "3\n\tresponser\030\001 \001(\0132 .zb.dcts.scenario.Sc" +
      "enarioTaskId\022C\n\017detection_param\030\002 \001(\0132*." +
      "zb.dcts.scenario.detection.DetectionPara" +
      "m\"J\n\022AutoGatheringParam\022\031\n\021time_span_in_" +
      "msec\030\001 \001(\005\022\031\n\021signal_candidates\030\002 \003(\t\"z\n" +
      "\024ManualGatheringParam\022\n\n\002id\030\001 \001(\t\022\031\n\021tim" +
      "e_span_in_msec\030\002 \001(\005\022;\n\tfreq_span\030\003 \001(\0132" +
      "(.zb.dcts.scenario.spectrum.FrequencySpa" +
      "n\"\355\001\n\026SignalGatheringRequest\0223\n\tresponse" +
      "r\030\001 \001(\0132 .zb.dcts.scenario.ScenarioTaskI" +
      "d\022L\n\024auto_gathering_param\030\002 \001(\0132..zb.dct" +
      "s.scenario.detection.AutoGatheringParam\022" +
      "P\n\026manual_gathering_param\030\003 \001(\01320.zb.dct" +
      "s.scenario.detection.ManualGatheringPara" +
      "m\"Z\n\014SignalSample\022\n\n\002id\030\001 \001(\t\022>\n\014sample_" +
      "block\030\002 \001(\0132(.zb.dcts.scenario.spectrum." +
      "SpectrumBlock\"M\n\020SignalSampleList\0229\n\007sam" +
      "ples\030\001 \003(\0132(.zb.dcts.scenario.detection." +
      "SignalSample\"\212\002\n\027SignalTableQueryRequest" +
      "\0223\n\tresponser\030\001 \001(\0132 .zb.dcts.scenario.S" +
      "cenarioTaskId\022-\n\013data_source\030\002 \001(\0132\030.zb." +
      "dcts.source.SourceId\022&\n\014activiy_mask\030\003 \001" +
      "(\0132\020.zb.dcts.Integer\022<\n\nfreq_range\030\004 \001(\013" +
      "2(.zb.dcts.scenario.spectrum.FrequencySp" +
      "an\022%\n\ntime_range\030\005 \001(\0132\021.zb.dcts.TimeSpa" +
      "n\"\262\002\n\030SignalTableQueryResponse\022-\n\013data_s" +
      "ource\030\001 \001(\0132\030.zb.dcts.source.SourceId\022\022\n" +
      "\nnum_sweeps\030\002 \001(\005\022\023\n\013num_detects\030\003 \001(\005\022\031" +
      "\n\021num_total_signals\030\004 \001(\005\022\031\n\021num_query_s" +
      "ignals\030\005 \001(\005\022A\n\017fix_signal_list\030\007 \003(\0132(." +
      "zb.dcts.scenario.detection.SignalDigest\022" +
      "E\n\017hop_signal_list\030\010 \003(\0132,.zb.dcts.scena" +
      "rio.detection.HopSignalCluster\"\267\001\n\006Heade" +
      "r\022-\n\013result_from\030\001 \001(\0132\030.zb.dcts.source." +
      "SourceId\022\027\n\017sequence_number\030\003 \001(\r\022\023\n\013swe" +
      "ep_count\030\004 \001(\r\022$\n\ttime_span\030\005 \001(\0132\021.zb.d" +
      "cts.TimeSpan\022*\n\017device_position\030\006 \001(\0132\021." +
      "zb.dcts.Position\"\323\001\n\007RawBody\022=\n\010freq_seg" +
      "\030\001 \001(\0132+.zb.dcts.scenario.spectrum.Frequ" +
      "encySegment\022D\n\023over_threshold_hits\030\002 \001(\013" +
      "2\'.zb.dcts.scenario.spectrum.SpectrumLin" +
      "e\022C\n\022raw_spectrum_lines\030\003 \003(\0132\'.zb.dcts." +
      "scenario.spectrum.SpectrumLine\"\232\001\n\007RawDa" +
      "ta\0222\n\006header\030\001 \001(\0132\".zb.dcts.scenario.de" +
      "tection.Header\0221\n\004body\030\002 \001(\0132#.zb.dcts.s" +
      "cenario.detection.RawBody\022(\n\017signal_segm" +
      "ents\030\003 \003(\0132\017.zb.dcts.IRange\"\232\002\n\022DeviceDe" +
      "tectResult\0222\n\006header\030\001 \001(\0132\".zb.dcts.sce" +
      "nario.detection.Header\022B\n\017fix_signal_lis" +
      "t\030\003 \001(\0132).zb.dcts.scenario.detection.Fix" +
      "SignalList\022B\n\017hop_signal_list\030\004 \001(\0132).zb" +
      ".dcts.scenario.detection.HopSignalList\022H" +
      "\n\022signal_sample_list\030\005 \001(\0132,.zb.dcts.sce" +
      "nario.detection.SignalSampleList\"\231\002\n\021Sig" +
      "nalLayerSurvey\022-\n\013result_from\030\001 \001(\0132\030.zb" +
      ".dcts.source.SourceId\022&\n\ntime_stamp\030\002 \001(" +
      "\0132\022.zb.dcts.Timestamp\022#\n\010position\030\003 \001(\0132" +
      "\021.zb.dcts.Position\022A\n\017fix_signal_list\030\004 " +
      "\003(\0132(.zb.dcts.scenario.detection.SignalD" +
      "igest\022E\n\017hop_signal_list\030\005 \003(\0132,.zb.dcts" +
      ".scenario.detection.HopSignalCluster*I\n\r" +
      "ThresholdType\022\013\n\007HISTORY\020\000\022\017\n\013USER_DEFIN" +
      "E\020\001\022\014\n\010ADAPTIVE\020\002\022\014\n\010NEIGHBOR\020\003*Q\n\016Signa" +
      "lActivity\022\013\n\007UNKNOWN\020\000\022\n\n\006ACTIVE\020\001\022\014\n\010IN" +
      "ACTIVE\020\002\022\013\n\007DECAYED\020\004\022\013\n\007REMOVED\020\010b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          zb.dcts.Dcts.getDescriptor(),
          zb.dcts.source.Source.getDescriptor(),
          zb.dcts.scenario.spectrum.Spectrum.getDescriptor(),
          zb.dcts.scenario.Scenario.getDescriptor(),
        });
    internal_static_zb_dcts_scenario_detection_ThresholdSector_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zb_dcts_scenario_detection_ThresholdSector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_ThresholdSector_descriptor,
        new java.lang.String[] { "FreqSpan", "Level", });
    internal_static_zb_dcts_scenario_detection_UserThresholdParam_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zb_dcts_scenario_detection_UserThresholdParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_UserThresholdParam_descriptor,
        new java.lang.String[] { "Sectors", });
    internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_HistoryThresholdParam_descriptor,
        new java.lang.String[] { "Span", "MaxLoadCount", "Offset", });
    internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_AdaptiveThresholdParam_descriptor,
        new java.lang.String[] { "AverageCount", "PartitionMode", "Offset", });
    internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_NeighborVarThresholdParam_descriptor,
        new java.lang.String[] { "NoiseVarianceScale", "NoiseMaxVariance", "Offset", "LookupFreqSpan", "SmoothRange", });
    internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_EnergyDetectionParam_descriptor,
        new java.lang.String[] { "ActiveTypes", "Logic", "HistoryThreshold", "UserThreshold", "AdaptiveThreshold", "NeighborThreshold", });
    internal_static_zb_dcts_scenario_detection_ThresholdTrace_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_zb_dcts_scenario_detection_ThresholdTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_ThresholdTrace_descriptor,
        new java.lang.String[] { "Type", "ThresholdTrace", });
    internal_static_zb_dcts_scenario_detection_FreqSpanFilter_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_zb_dcts_scenario_detection_FreqSpanFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_FreqSpanFilter_descriptor,
        new java.lang.String[] { "FreqSpans", });
    internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalSegmentationParam_descriptor,
        new java.lang.String[] { "FreqCenterJitterTolerance", "FreqBorderBlurTolerance", "MinRss", "TimeGapTolerance", });
    internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_HopSignalClusterParam_descriptor,
        new java.lang.String[] { "Name", "FrequencyRange", "BandWidthRange", "FreqJitterTolerance", });
    internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_HopSignalDetectionParam_descriptor,
        new java.lang.String[] { "HopSignalClusters", });
    internal_static_zb_dcts_scenario_detection_SignalDetectParam_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_zb_dcts_scenario_detection_SignalDetectParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalDetectParam_descriptor,
        new java.lang.String[] { "WhiteList", "SignalSegmenationParam", "HopSignalDetectionParam", });
    internal_static_zb_dcts_scenario_detection_DetectionParam_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_zb_dcts_scenario_detection_DetectionParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_DetectionParam_descriptor,
        new java.lang.String[] { "ResultInterval", "EnergyDetectParam", "SignalDetectParam", });
    internal_static_zb_dcts_scenario_detection_SignalFeature_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_zb_dcts_scenario_detection_SignalFeature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalFeature_descriptor,
        new java.lang.String[] { "SequenceNumber", "SignalBand", "Amplitude", "Hits", });
    internal_static_zb_dcts_scenario_detection_SignalDigest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_zb_dcts_scenario_detection_SignalDigest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalDigest_descriptor,
        new java.lang.String[] { "Id", "Activity", "CenterFreq", "BandWidth", "Amplitude", "EmitTimeSpan", "NumFeatures", "DirOfArrival", "Classification", "Description", });
    internal_static_zb_dcts_scenario_detection_SignalSegment_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_zb_dcts_scenario_detection_SignalSegment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalSegment_descriptor,
        new java.lang.String[] { "Digest", "FeatureDetails", });
    internal_static_zb_dcts_scenario_detection_HopSignalDigest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_zb_dcts_scenario_detection_HopSignalDigest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_HopSignalDigest_descriptor,
        new java.lang.String[] { "CenterFreq", "BandWidth", "Amplitude", "NumFeatures", });
    internal_static_zb_dcts_scenario_detection_HopSignalCluster_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_zb_dcts_scenario_detection_HopSignalCluster_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_HopSignalCluster_descriptor,
        new java.lang.String[] { "Name", "Activity", "EmitTimeSpan", "FreqSet", });
    internal_static_zb_dcts_scenario_detection_FixSignalList_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_zb_dcts_scenario_detection_FixSignalList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_FixSignalList_descriptor,
        new java.lang.String[] { "FixSignals", });
    internal_static_zb_dcts_scenario_detection_HopSignalList_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_zb_dcts_scenario_detection_HopSignalList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_HopSignalList_descriptor,
        new java.lang.String[] { "HopSignalClusters", });
    internal_static_zb_dcts_scenario_detection_DetectionRequest_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_zb_dcts_scenario_detection_DetectionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_DetectionRequest_descriptor,
        new java.lang.String[] { "Responser", "DetectionParam", });
    internal_static_zb_dcts_scenario_detection_AutoGatheringParam_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_zb_dcts_scenario_detection_AutoGatheringParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_AutoGatheringParam_descriptor,
        new java.lang.String[] { "TimeSpanInMsec", "SignalCandidates", });
    internal_static_zb_dcts_scenario_detection_ManualGatheringParam_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_zb_dcts_scenario_detection_ManualGatheringParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_ManualGatheringParam_descriptor,
        new java.lang.String[] { "Id", "TimeSpanInMsec", "FreqSpan", });
    internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalGatheringRequest_descriptor,
        new java.lang.String[] { "Responser", "AutoGatheringParam", "ManualGatheringParam", });
    internal_static_zb_dcts_scenario_detection_SignalSample_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_zb_dcts_scenario_detection_SignalSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalSample_descriptor,
        new java.lang.String[] { "Id", "SampleBlock", });
    internal_static_zb_dcts_scenario_detection_SignalSampleList_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_zb_dcts_scenario_detection_SignalSampleList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalSampleList_descriptor,
        new java.lang.String[] { "Samples", });
    internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalTableQueryRequest_descriptor,
        new java.lang.String[] { "Responser", "DataSource", "ActiviyMask", "FreqRange", "TimeRange", });
    internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalTableQueryResponse_descriptor,
        new java.lang.String[] { "DataSource", "NumSweeps", "NumDetects", "NumTotalSignals", "NumQuerySignals", "FixSignalList", "HopSignalList", });
    internal_static_zb_dcts_scenario_detection_Header_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_zb_dcts_scenario_detection_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_Header_descriptor,
        new java.lang.String[] { "ResultFrom", "SequenceNumber", "SweepCount", "TimeSpan", "DevicePosition", });
    internal_static_zb_dcts_scenario_detection_RawBody_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_zb_dcts_scenario_detection_RawBody_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_RawBody_descriptor,
        new java.lang.String[] { "FreqSeg", "OverThresholdHits", "RawSpectrumLines", });
    internal_static_zb_dcts_scenario_detection_RawData_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_zb_dcts_scenario_detection_RawData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_RawData_descriptor,
        new java.lang.String[] { "Header", "Body", "SignalSegments", });
    internal_static_zb_dcts_scenario_detection_DeviceDetectResult_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_zb_dcts_scenario_detection_DeviceDetectResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_DeviceDetectResult_descriptor,
        new java.lang.String[] { "Header", "FixSignalList", "HopSignalList", "SignalSampleList", });
    internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_detection_SignalLayerSurvey_descriptor,
        new java.lang.String[] { "ResultFrom", "TimeStamp", "Position", "FixSignalList", "HopSignalList", });
    zb.dcts.Dcts.getDescriptor();
    zb.dcts.source.Source.getDescriptor();
    zb.dcts.scenario.spectrum.Spectrum.getDescriptor();
    zb.dcts.scenario.Scenario.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
