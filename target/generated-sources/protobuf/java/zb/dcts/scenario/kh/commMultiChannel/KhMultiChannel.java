// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/kh/KhMultiChannel.proto

package zb.dcts.scenario.kh.commMultiChannel;

public final class KhMultiChannel {
  private KhMultiChannel() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code zb.dcts.scenario.kh.commMultiChannel.ParamIndex}
   */
  public enum ParamIndex
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID = 0;</code>
     */
    INVALID(0),
    /**
     * <pre>
     *修改窄带通路参数
     * </pre>
     *
     * <code>NB_PARAM = 126;</code>
     */
    NB_PARAM(126),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>INVALID = 0;</code>
     */
    public static final int INVALID_VALUE = 0;
    /**
     * <pre>
     *修改窄带通路参数
     * </pre>
     *
     * <code>NB_PARAM = 126;</code>
     */
    public static final int NB_PARAM_VALUE = 126;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParamIndex valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ParamIndex forNumber(int value) {
      switch (value) {
        case 0: return INVALID;
        case 126: return NB_PARAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ParamIndex>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ParamIndex> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ParamIndex>() {
            public ParamIndex findValueByNumber(int number) {
              return ParamIndex.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.getDescriptor().getEnumTypes().get(0);
    }

    private static final ParamIndex[] VALUES = values();

    public static ParamIndex valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ParamIndex(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.scenario.kh.commMultiChannel.ParamIndex)
  }

  public interface MultiSourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.commMultiChannel.MultiSource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.source.SourceId id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>.zb.dcts.source.SourceId id = 1;</code>
     * @return The id.
     */
    zb.dcts.source.Source.SourceId getId();
    /**
     * <code>.zb.dcts.source.SourceId id = 1;</code>
     */
    zb.dcts.source.Source.SourceIdOrBuilder getIdOrBuilder();

    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */
    int getParamsCount();
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */
    boolean containsParams(
        java.lang.String key);
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getParams();
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getParamsMap();
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */

    java.lang.String getParamsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */

    java.lang.String getParamsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.MultiSource}
   */
  public static final class MultiSource extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.commMultiChannel.MultiSource)
      MultiSourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiSource.newBuilder() to construct.
    private MultiSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiSource() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiSource();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiSource(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.source.Source.SourceId.Builder subBuilder = null;
              if (id_ != null) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(zb.dcts.source.Source.SourceId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                params_ = com.google.protobuf.MapField.newMapField(
                    ParamsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              params__ = input.readMessage(
                  ParamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              params_.getMutableMap().put(
                  params__.getKey(), params__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetParams();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private zb.dcts.source.Source.SourceId id_;
    /**
     * <code>.zb.dcts.source.SourceId id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <code>.zb.dcts.source.SourceId id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceId getId() {
      return id_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : id_;
    }
    /**
     * <code>.zb.dcts.source.SourceId id = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.source.Source.SourceIdOrBuilder getIdOrBuilder() {
      return getId();
    }

    public static final int PARAMS_FIELD_NUMBER = 6;
    private static final class ParamsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_ParamsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> params_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetParams() {
      if (params_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParamsDefaultEntryHolder.defaultEntry);
      }
      return params_;
    }

    public int getParamsCount() {
      return internalGetParams().getMap().size();
    }
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */

    @java.lang.Override
    public boolean containsParams(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetParams().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getParams() {
      return getParamsMap();
    }
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getParamsMap() {
      return internalGetParams().getMap();
    }
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */
    @java.lang.Override

    public java.lang.String getParamsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetParams().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *其它可选参数，例如文件路径或网络地址等
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 6;</code>
     */
    @java.lang.Override

    public java.lang.String getParamsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetParams().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != null) {
        output.writeMessage(1, getId());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetParams(),
          ParamsDefaultEntryHolder.defaultEntry,
          6);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetParams().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        params__ = ParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, params__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource other = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (!internalGetParams().equals(
          other.internalGetParams())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (!internalGetParams().getMap().isEmpty()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetParams().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.MultiSource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.commMultiChannel.MultiSource)
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetParams();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableParams();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          id_ = null;
          idBuilder_ = null;
        }
        internalGetMutableParams().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource build() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource buildPartial() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource result = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource(this);
        int from_bitField0_ = bitField0_;
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        result.params_ = internalGetParams();
        result.params_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource) {
          return mergeFrom((zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource other) {
        if (other == zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        internalGetMutableParams().mergeFrom(
            other.internalGetParams());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.source.Source.SourceId id_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> idBuilder_;
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return idBuilder_ != null || id_ != null;
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       * @return The id.
       */
      public zb.dcts.source.Source.SourceId getId() {
        if (idBuilder_ == null) {
          return id_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       */
      public Builder setId(zb.dcts.source.Source.SourceId value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       */
      public Builder setId(
          zb.dcts.source.Source.SourceId.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       */
      public Builder mergeId(zb.dcts.source.Source.SourceId value) {
        if (idBuilder_ == null) {
          if (id_ != null) {
            id_ =
              zb.dcts.source.Source.SourceId.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          id_ = null;
          idBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       */
      public zb.dcts.source.Source.SourceId.Builder getIdBuilder() {
        
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       */
      public zb.dcts.source.Source.SourceIdOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              zb.dcts.source.Source.SourceId.getDefaultInstance() : id_;
        }
      }
      /**
       * <code>.zb.dcts.source.SourceId id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> params_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetParams() {
        if (params_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        return params_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableParams() {
        onChanged();;
        if (params_ == null) {
          params_ = com.google.protobuf.MapField.newMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        if (!params_.isMutable()) {
          params_ = params_.copy();
        }
        return params_;
      }

      public int getParamsCount() {
        return internalGetParams().getMap().size();
      }
      /**
       * <pre>
       *其它可选参数，例如文件路径或网络地址等
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 6;</code>
       */

      @java.lang.Override
      public boolean containsParams(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetParams().getMap().containsKey(key);
      }
      /**
       * Use {@link #getParamsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getParams() {
        return getParamsMap();
      }
      /**
       * <pre>
       *其它可选参数，例如文件路径或网络地址等
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 6;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getParamsMap() {
        return internalGetParams().getMap();
      }
      /**
       * <pre>
       *其它可选参数，例如文件路径或网络地址等
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 6;</code>
       */
      @java.lang.Override

      public java.lang.String getParamsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetParams().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *其它可选参数，例如文件路径或网络地址等
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 6;</code>
       */
      @java.lang.Override

      public java.lang.String getParamsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetParams().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearParams() {
        internalGetMutableParams().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *其它可选参数，例如文件路径或网络地址等
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 6;</code>
       */

      public Builder removeParams(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableParams().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableParams() {
        return internalGetMutableParams().getMutableMap();
      }
      /**
       * <pre>
       *其它可选参数，例如文件路径或网络地址等
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 6;</code>
       */
      public Builder putParams(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableParams().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *其它可选参数，例如文件路径或网络地址等
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 6;</code>
       */

      public Builder putAllParams(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableParams().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.commMultiChannel.MultiSource)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.MultiSource)
    private static final zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource();
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiSource>
        PARSER = new com.google.protobuf.AbstractParser<MultiSource>() {
      @java.lang.Override
      public MultiSource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiSource(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiSource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiSource> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiTaskStartRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return Whether the scenario field is set.
     */
    boolean hasScenario();
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return The scenario.
     */
    zb.dcts.scenario.Scenario.ScenarioId getScenario();
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     */
    zb.dcts.scenario.Scenario.ScenarioIdOrBuilder getScenarioOrBuilder();

    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
     * @return Whether the sourceParam field is set.
     */
    boolean hasSourceParam();
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
     * @return The sourceParam.
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource getSourceParam();
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSourceOrBuilder getSourceParamOrBuilder();

    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
     * @return Whether the acqParam field is set.
     */
    boolean hasAcqParam();
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
     * @return The acqParam.
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam getAcqParam();
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParamOrBuilder getAcqParamOrBuilder();

    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
     * @return Whether the detectionParam field is set.
     */
    boolean hasDetectionParam();
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
     * @return The detectionParam.
     */
    zb.dcts.scenario.detection.Detection.DetectionParam getDetectionParam();
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
     */
    zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder getDetectionParamOrBuilder();
  }
  /**
   * <pre>
   *启动请求
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest}
   */
  public static final class MultiTaskStartRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest)
      MultiTaskStartRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiTaskStartRequest.newBuilder() to construct.
    private MultiTaskStartRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiTaskStartRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiTaskStartRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiTaskStartRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.Scenario.ScenarioId.Builder subBuilder = null;
              if (scenario_ != null) {
                subBuilder = scenario_.toBuilder();
              }
              scenario_ = input.readMessage(zb.dcts.scenario.Scenario.ScenarioId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(scenario_);
                scenario_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder subBuilder = null;
              if (sourceParam_ != null) {
                subBuilder = sourceParam_.toBuilder();
              }
              sourceParam_ = input.readMessage(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceParam_);
                sourceParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.Builder subBuilder = null;
              if (acqParam_ != null) {
                subBuilder = acqParam_.toBuilder();
              }
              acqParam_ = input.readMessage(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(acqParam_);
                acqParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.scenario.detection.Detection.DetectionParam.Builder subBuilder = null;
              if (detectionParam_ != null) {
                subBuilder = detectionParam_.toBuilder();
              }
              detectionParam_ = input.readMessage(zb.dcts.scenario.detection.Detection.DetectionParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(detectionParam_);
                detectionParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest.Builder.class);
    }

    public static final int SCENARIO_FIELD_NUMBER = 1;
    private zb.dcts.scenario.Scenario.ScenarioId scenario_;
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return Whether the scenario field is set.
     */
    @java.lang.Override
    public boolean hasScenario() {
      return scenario_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return The scenario.
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioId getScenario() {
      return scenario_ == null ? zb.dcts.scenario.Scenario.ScenarioId.getDefaultInstance() : scenario_;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioIdOrBuilder getScenarioOrBuilder() {
      return getScenario();
    }

    public static final int SOURCE_PARAM_FIELD_NUMBER = 2;
    private zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource sourceParam_;
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
     * @return Whether the sourceParam field is set.
     */
    @java.lang.Override
    public boolean hasSourceParam() {
      return sourceParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
     * @return The sourceParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource getSourceParam() {
      return sourceParam_ == null ? zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.getDefaultInstance() : sourceParam_;
    }
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSourceOrBuilder getSourceParamOrBuilder() {
      return getSourceParam();
    }

    public static final int ACQ_PARAM_FIELD_NUMBER = 3;
    private zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam acqParam_;
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
     * @return Whether the acqParam field is set.
     */
    @java.lang.Override
    public boolean hasAcqParam() {
      return acqParam_ != null;
    }
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
     * @return The acqParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam getAcqParam() {
      return acqParam_ == null ? zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.getDefaultInstance() : acqParam_;
    }
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParamOrBuilder getAcqParamOrBuilder() {
      return getAcqParam();
    }

    public static final int DETECTION_PARAM_FIELD_NUMBER = 4;
    private zb.dcts.scenario.detection.Detection.DetectionParam detectionParam_;
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
     * @return Whether the detectionParam field is set.
     */
    @java.lang.Override
    public boolean hasDetectionParam() {
      return detectionParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
     * @return The detectionParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.DetectionParam getDetectionParam() {
      return detectionParam_ == null ? zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance() : detectionParam_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder getDetectionParamOrBuilder() {
      return getDetectionParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (scenario_ != null) {
        output.writeMessage(1, getScenario());
      }
      if (sourceParam_ != null) {
        output.writeMessage(2, getSourceParam());
      }
      if (acqParam_ != null) {
        output.writeMessage(3, getAcqParam());
      }
      if (detectionParam_ != null) {
        output.writeMessage(4, getDetectionParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (scenario_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getScenario());
      }
      if (sourceParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSourceParam());
      }
      if (acqParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAcqParam());
      }
      if (detectionParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDetectionParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest other = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest) obj;

      if (hasScenario() != other.hasScenario()) return false;
      if (hasScenario()) {
        if (!getScenario()
            .equals(other.getScenario())) return false;
      }
      if (hasSourceParam() != other.hasSourceParam()) return false;
      if (hasSourceParam()) {
        if (!getSourceParam()
            .equals(other.getSourceParam())) return false;
      }
      if (hasAcqParam() != other.hasAcqParam()) return false;
      if (hasAcqParam()) {
        if (!getAcqParam()
            .equals(other.getAcqParam())) return false;
      }
      if (hasDetectionParam() != other.hasDetectionParam()) return false;
      if (hasDetectionParam()) {
        if (!getDetectionParam()
            .equals(other.getDetectionParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasScenario()) {
        hash = (37 * hash) + SCENARIO_FIELD_NUMBER;
        hash = (53 * hash) + getScenario().hashCode();
      }
      if (hasSourceParam()) {
        hash = (37 * hash) + SOURCE_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getSourceParam().hashCode();
      }
      if (hasAcqParam()) {
        hash = (37 * hash) + ACQ_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getAcqParam().hashCode();
      }
      if (hasDetectionParam()) {
        hash = (37 * hash) + DETECTION_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getDetectionParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *启动请求
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest)
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (scenarioBuilder_ == null) {
          scenario_ = null;
        } else {
          scenario_ = null;
          scenarioBuilder_ = null;
        }
        if (sourceParamBuilder_ == null) {
          sourceParam_ = null;
        } else {
          sourceParam_ = null;
          sourceParamBuilder_ = null;
        }
        if (acqParamBuilder_ == null) {
          acqParam_ = null;
        } else {
          acqParam_ = null;
          acqParamBuilder_ = null;
        }
        if (detectionParamBuilder_ == null) {
          detectionParam_ = null;
        } else {
          detectionParam_ = null;
          detectionParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest build() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest buildPartial() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest result = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest(this);
        if (scenarioBuilder_ == null) {
          result.scenario_ = scenario_;
        } else {
          result.scenario_ = scenarioBuilder_.build();
        }
        if (sourceParamBuilder_ == null) {
          result.sourceParam_ = sourceParam_;
        } else {
          result.sourceParam_ = sourceParamBuilder_.build();
        }
        if (acqParamBuilder_ == null) {
          result.acqParam_ = acqParam_;
        } else {
          result.acqParam_ = acqParamBuilder_.build();
        }
        if (detectionParamBuilder_ == null) {
          result.detectionParam_ = detectionParam_;
        } else {
          result.detectionParam_ = detectionParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest) {
          return mergeFrom((zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest other) {
        if (other == zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest.getDefaultInstance()) return this;
        if (other.hasScenario()) {
          mergeScenario(other.getScenario());
        }
        if (other.hasSourceParam()) {
          mergeSourceParam(other.getSourceParam());
        }
        if (other.hasAcqParam()) {
          mergeAcqParam(other.getAcqParam());
        }
        if (other.hasDetectionParam()) {
          mergeDetectionParam(other.getDetectionParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.Scenario.ScenarioId scenario_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioId, zb.dcts.scenario.Scenario.ScenarioId.Builder, zb.dcts.scenario.Scenario.ScenarioIdOrBuilder> scenarioBuilder_;
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       * @return Whether the scenario field is set.
       */
      public boolean hasScenario() {
        return scenarioBuilder_ != null || scenario_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       * @return The scenario.
       */
      public zb.dcts.scenario.Scenario.ScenarioId getScenario() {
        if (scenarioBuilder_ == null) {
          return scenario_ == null ? zb.dcts.scenario.Scenario.ScenarioId.getDefaultInstance() : scenario_;
        } else {
          return scenarioBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder setScenario(zb.dcts.scenario.Scenario.ScenarioId value) {
        if (scenarioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scenario_ = value;
          onChanged();
        } else {
          scenarioBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder setScenario(
          zb.dcts.scenario.Scenario.ScenarioId.Builder builderForValue) {
        if (scenarioBuilder_ == null) {
          scenario_ = builderForValue.build();
          onChanged();
        } else {
          scenarioBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder mergeScenario(zb.dcts.scenario.Scenario.ScenarioId value) {
        if (scenarioBuilder_ == null) {
          if (scenario_ != null) {
            scenario_ =
              zb.dcts.scenario.Scenario.ScenarioId.newBuilder(scenario_).mergeFrom(value).buildPartial();
          } else {
            scenario_ = value;
          }
          onChanged();
        } else {
          scenarioBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder clearScenario() {
        if (scenarioBuilder_ == null) {
          scenario_ = null;
          onChanged();
        } else {
          scenario_ = null;
          scenarioBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioId.Builder getScenarioBuilder() {
        
        onChanged();
        return getScenarioFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioIdOrBuilder getScenarioOrBuilder() {
        if (scenarioBuilder_ != null) {
          return scenarioBuilder_.getMessageOrBuilder();
        } else {
          return scenario_ == null ?
              zb.dcts.scenario.Scenario.ScenarioId.getDefaultInstance() : scenario_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioId, zb.dcts.scenario.Scenario.ScenarioId.Builder, zb.dcts.scenario.Scenario.ScenarioIdOrBuilder> 
          getScenarioFieldBuilder() {
        if (scenarioBuilder_ == null) {
          scenarioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.Scenario.ScenarioId, zb.dcts.scenario.Scenario.ScenarioId.Builder, zb.dcts.scenario.Scenario.ScenarioIdOrBuilder>(
                  getScenario(),
                  getParentForChildren(),
                  isClean());
          scenario_ = null;
        }
        return scenarioBuilder_;
      }

      private zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource sourceParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSourceOrBuilder> sourceParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       * @return Whether the sourceParam field is set.
       */
      public boolean hasSourceParam() {
        return sourceParamBuilder_ != null || sourceParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       * @return The sourceParam.
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource getSourceParam() {
        if (sourceParamBuilder_ == null) {
          return sourceParam_ == null ? zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.getDefaultInstance() : sourceParam_;
        } else {
          return sourceParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       */
      public Builder setSourceParam(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource value) {
        if (sourceParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceParam_ = value;
          onChanged();
        } else {
          sourceParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       */
      public Builder setSourceParam(
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder builderForValue) {
        if (sourceParamBuilder_ == null) {
          sourceParam_ = builderForValue.build();
          onChanged();
        } else {
          sourceParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       */
      public Builder mergeSourceParam(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource value) {
        if (sourceParamBuilder_ == null) {
          if (sourceParam_ != null) {
            sourceParam_ =
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.newBuilder(sourceParam_).mergeFrom(value).buildPartial();
          } else {
            sourceParam_ = value;
          }
          onChanged();
        } else {
          sourceParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       */
      public Builder clearSourceParam() {
        if (sourceParamBuilder_ == null) {
          sourceParam_ = null;
          onChanged();
        } else {
          sourceParam_ = null;
          sourceParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder getSourceParamBuilder() {
        
        onChanged();
        return getSourceParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSourceOrBuilder getSourceParamOrBuilder() {
        if (sourceParamBuilder_ != null) {
          return sourceParamBuilder_.getMessageOrBuilder();
        } else {
          return sourceParam_ == null ?
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.getDefaultInstance() : sourceParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiSource source_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSourceOrBuilder> 
          getSourceParamFieldBuilder() {
        if (sourceParamBuilder_ == null) {
          sourceParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSource.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiSourceOrBuilder>(
                  getSourceParam(),
                  getParentForChildren(),
                  isClean());
          sourceParam_ = null;
        }
        return sourceParamBuilder_;
      }

      private zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam acqParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParamOrBuilder> acqParamBuilder_;
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       * @return Whether the acqParam field is set.
       */
      public boolean hasAcqParam() {
        return acqParamBuilder_ != null || acqParam_ != null;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       * @return The acqParam.
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam getAcqParam() {
        if (acqParamBuilder_ == null) {
          return acqParam_ == null ? zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.getDefaultInstance() : acqParam_;
        } else {
          return acqParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       */
      public Builder setAcqParam(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam value) {
        if (acqParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acqParam_ = value;
          onChanged();
        } else {
          acqParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       */
      public Builder setAcqParam(
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.Builder builderForValue) {
        if (acqParamBuilder_ == null) {
          acqParam_ = builderForValue.build();
          onChanged();
        } else {
          acqParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       */
      public Builder mergeAcqParam(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam value) {
        if (acqParamBuilder_ == null) {
          if (acqParam_ != null) {
            acqParam_ =
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.newBuilder(acqParam_).mergeFrom(value).buildPartial();
          } else {
            acqParam_ = value;
          }
          onChanged();
        } else {
          acqParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       */
      public Builder clearAcqParam() {
        if (acqParamBuilder_ == null) {
          acqParam_ = null;
          onChanged();
        } else {
          acqParam_ = null;
          acqParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.Builder getAcqParamBuilder() {
        
        onChanged();
        return getAcqParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParamOrBuilder getAcqParamOrBuilder() {
        if (acqParamBuilder_ != null) {
          return acqParamBuilder_.getMessageOrBuilder();
        } else {
          return acqParam_ == null ?
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.getDefaultInstance() : acqParam_;
        }
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam acq_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParamOrBuilder> 
          getAcqParamFieldBuilder() {
        if (acqParamBuilder_ == null) {
          acqParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParam.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.MultiAcqParamOrBuilder>(
                  getAcqParam(),
                  getParentForChildren(),
                  isClean());
          acqParam_ = null;
        }
        return acqParamBuilder_;
      }

      private zb.dcts.scenario.detection.Detection.DetectionParam detectionParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.DetectionParam, zb.dcts.scenario.detection.Detection.DetectionParam.Builder, zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder> detectionParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       * @return Whether the detectionParam field is set.
       */
      public boolean hasDetectionParam() {
        return detectionParamBuilder_ != null || detectionParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       * @return The detectionParam.
       */
      public zb.dcts.scenario.detection.Detection.DetectionParam getDetectionParam() {
        if (detectionParamBuilder_ == null) {
          return detectionParam_ == null ? zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance() : detectionParam_;
        } else {
          return detectionParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       */
      public Builder setDetectionParam(zb.dcts.scenario.detection.Detection.DetectionParam value) {
        if (detectionParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          detectionParam_ = value;
          onChanged();
        } else {
          detectionParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       */
      public Builder setDetectionParam(
          zb.dcts.scenario.detection.Detection.DetectionParam.Builder builderForValue) {
        if (detectionParamBuilder_ == null) {
          detectionParam_ = builderForValue.build();
          onChanged();
        } else {
          detectionParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       */
      public Builder mergeDetectionParam(zb.dcts.scenario.detection.Detection.DetectionParam value) {
        if (detectionParamBuilder_ == null) {
          if (detectionParam_ != null) {
            detectionParam_ =
              zb.dcts.scenario.detection.Detection.DetectionParam.newBuilder(detectionParam_).mergeFrom(value).buildPartial();
          } else {
            detectionParam_ = value;
          }
          onChanged();
        } else {
          detectionParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       */
      public Builder clearDetectionParam() {
        if (detectionParamBuilder_ == null) {
          detectionParam_ = null;
          onChanged();
        } else {
          detectionParam_ = null;
          detectionParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.DetectionParam.Builder getDetectionParamBuilder() {
        
        onChanged();
        return getDetectionParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       */
      public zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder getDetectionParamOrBuilder() {
        if (detectionParamBuilder_ != null) {
          return detectionParamBuilder_.getMessageOrBuilder();
        } else {
          return detectionParam_ == null ?
              zb.dcts.scenario.detection.Detection.DetectionParam.getDefaultInstance() : detectionParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.DetectionParam detection_param = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.DetectionParam, zb.dcts.scenario.detection.Detection.DetectionParam.Builder, zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder> 
          getDetectionParamFieldBuilder() {
        if (detectionParamBuilder_ == null) {
          detectionParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.DetectionParam, zb.dcts.scenario.detection.Detection.DetectionParam.Builder, zb.dcts.scenario.detection.Detection.DetectionParamOrBuilder>(
                  getDetectionParam(),
                  getParentForChildren(),
                  isClean());
          detectionParam_ = null;
        }
        return detectionParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest)
    private static final zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest();
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiTaskStartRequest>
        PARSER = new com.google.protobuf.AbstractParser<MultiTaskStartRequest>() {
      @java.lang.Override
      public MultiTaskStartRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiTaskStartRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiTaskStartRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiTaskStartRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiTaskStartRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NarrowChannelDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *通道号（0-15）
     * </pre>
     *
     * <code>int32 channel_id = 2;</code>
     * @return The channelId.
     */
    int getChannelId();

    /**
     * <pre>
     *中心频率
     * </pre>
     *
     * <code>double cent_freq = 4;</code>
     * @return The centFreq.
     */
    double getCentFreq();

    /**
     * <pre>
     *IQ采样率 单位为Hz
     * </pre>
     *
     * <code>double samp_rate = 6;</code>
     * @return The sampRate.
     */
    double getSampRate();

    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
     * @return Whether the timeStamp field is set.
     */
    boolean hasTimeStamp();
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
     * @return The timeStamp.
     */
    zb.dcts.Dcts.Timestamp getTimeStamp();
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
     */
    zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder();

    /**
     * <pre>
     *I路数据
     * </pre>
     *
     * <code>repeated float data_i = 8;</code>
     * @return A list containing the dataI.
     */
    java.util.List<java.lang.Float> getDataIList();
    /**
     * <pre>
     *I路数据
     * </pre>
     *
     * <code>repeated float data_i = 8;</code>
     * @return The count of dataI.
     */
    int getDataICount();
    /**
     * <pre>
     *I路数据
     * </pre>
     *
     * <code>repeated float data_i = 8;</code>
     * @param index The index of the element to return.
     * @return The dataI at the given index.
     */
    float getDataI(int index);

    /**
     * <pre>
     *Q路数据
     * </pre>
     *
     * <code>repeated float data_q = 9;</code>
     * @return A list containing the dataQ.
     */
    java.util.List<java.lang.Float> getDataQList();
    /**
     * <pre>
     *Q路数据
     * </pre>
     *
     * <code>repeated float data_q = 9;</code>
     * @return The count of dataQ.
     */
    int getDataQCount();
    /**
     * <pre>
     *Q路数据
     * </pre>
     *
     * <code>repeated float data_q = 9;</code>
     * @param index The index of the element to return.
     * @return The dataQ at the given index.
     */
    float getDataQ(int index);

    /**
     * <pre>
     *频谱数据
     * </pre>
     *
     * <code>repeated float spectrum = 11;</code>
     * @return A list containing the spectrum.
     */
    java.util.List<java.lang.Float> getSpectrumList();
    /**
     * <pre>
     *频谱数据
     * </pre>
     *
     * <code>repeated float spectrum = 11;</code>
     * @return The count of spectrum.
     */
    int getSpectrumCount();
    /**
     * <pre>
     *频谱数据
     * </pre>
     *
     * <code>repeated float spectrum = 11;</code>
     * @param index The index of the element to return.
     * @return The spectrum at the given index.
     */
    float getSpectrum(int index);

    /**
     * <pre>
     *音频结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
     * @return Whether the channelAudio field is set.
     */
    boolean hasChannelAudio();
    /**
     * <pre>
     *音频结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
     * @return The channelAudio.
     */
    zb.dcts.scenario.FFP.Demodulate.ChannelAudio getChannelAudio();
    /**
     * <pre>
     *音频结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
     */
    zb.dcts.scenario.FFP.Demodulate.ChannelAudioOrBuilder getChannelAudioOrBuilder();
  }
  /**
   * <pre>
   *窄带通路数据
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData}
   */
  public static final class NarrowChannelData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData)
      NarrowChannelDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NarrowChannelData.newBuilder() to construct.
    private NarrowChannelData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NarrowChannelData() {
      dataI_ = emptyFloatList();
      dataQ_ = emptyFloatList();
      spectrum_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NarrowChannelData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NarrowChannelData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {

              channelId_ = input.readInt32();
              break;
            }
            case 33: {

              centFreq_ = input.readDouble();
              break;
            }
            case 49: {

              sampRate_ = input.readDouble();
              break;
            }
            case 58: {
              zb.dcts.Dcts.Timestamp.Builder subBuilder = null;
              if (timeStamp_ != null) {
                subBuilder = timeStamp_.toBuilder();
              }
              timeStamp_ = input.readMessage(zb.dcts.Dcts.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeStamp_);
                timeStamp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 69: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dataI_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              dataI_.addFloat(input.readFloat());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                dataI_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dataI_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                dataQ_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              dataQ_.addFloat(input.readFloat());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                dataQ_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                dataQ_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                spectrum_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              spectrum_.addFloat(input.readFloat());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                spectrum_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                spectrum_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 98: {
              zb.dcts.scenario.FFP.Demodulate.ChannelAudio.Builder subBuilder = null;
              if (channelAudio_ != null) {
                subBuilder = channelAudio_.toBuilder();
              }
              channelAudio_ = input.readMessage(zb.dcts.scenario.FFP.Demodulate.ChannelAudio.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(channelAudio_);
                channelAudio_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dataI_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          dataQ_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          spectrum_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder.class);
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private int channelId_;
    /**
     * <pre>
     *通道号（0-15）
     * </pre>
     *
     * <code>int32 channel_id = 2;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }

    public static final int CENT_FREQ_FIELD_NUMBER = 4;
    private double centFreq_;
    /**
     * <pre>
     *中心频率
     * </pre>
     *
     * <code>double cent_freq = 4;</code>
     * @return The centFreq.
     */
    @java.lang.Override
    public double getCentFreq() {
      return centFreq_;
    }

    public static final int SAMP_RATE_FIELD_NUMBER = 6;
    private double sampRate_;
    /**
     * <pre>
     *IQ采样率 单位为Hz
     * </pre>
     *
     * <code>double samp_rate = 6;</code>
     * @return The sampRate.
     */
    @java.lang.Override
    public double getSampRate() {
      return sampRate_;
    }

    public static final int TIME_STAMP_FIELD_NUMBER = 7;
    private zb.dcts.Dcts.Timestamp timeStamp_;
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
     * @return Whether the timeStamp field is set.
     */
    @java.lang.Override
    public boolean hasTimeStamp() {
      return timeStamp_ != null;
    }
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
     * @return The timeStamp.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Timestamp getTimeStamp() {
      return timeStamp_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
    }
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder() {
      return getTimeStamp();
    }

    public static final int DATA_I_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.FloatList dataI_;
    /**
     * <pre>
     *I路数据
     * </pre>
     *
     * <code>repeated float data_i = 8;</code>
     * @return A list containing the dataI.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getDataIList() {
      return dataI_;
    }
    /**
     * <pre>
     *I路数据
     * </pre>
     *
     * <code>repeated float data_i = 8;</code>
     * @return The count of dataI.
     */
    public int getDataICount() {
      return dataI_.size();
    }
    /**
     * <pre>
     *I路数据
     * </pre>
     *
     * <code>repeated float data_i = 8;</code>
     * @param index The index of the element to return.
     * @return The dataI at the given index.
     */
    public float getDataI(int index) {
      return dataI_.getFloat(index);
    }
    private int dataIMemoizedSerializedSize = -1;

    public static final int DATA_Q_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.FloatList dataQ_;
    /**
     * <pre>
     *Q路数据
     * </pre>
     *
     * <code>repeated float data_q = 9;</code>
     * @return A list containing the dataQ.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getDataQList() {
      return dataQ_;
    }
    /**
     * <pre>
     *Q路数据
     * </pre>
     *
     * <code>repeated float data_q = 9;</code>
     * @return The count of dataQ.
     */
    public int getDataQCount() {
      return dataQ_.size();
    }
    /**
     * <pre>
     *Q路数据
     * </pre>
     *
     * <code>repeated float data_q = 9;</code>
     * @param index The index of the element to return.
     * @return The dataQ at the given index.
     */
    public float getDataQ(int index) {
      return dataQ_.getFloat(index);
    }
    private int dataQMemoizedSerializedSize = -1;

    public static final int SPECTRUM_FIELD_NUMBER = 11;
    private com.google.protobuf.Internal.FloatList spectrum_;
    /**
     * <pre>
     *频谱数据
     * </pre>
     *
     * <code>repeated float spectrum = 11;</code>
     * @return A list containing the spectrum.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getSpectrumList() {
      return spectrum_;
    }
    /**
     * <pre>
     *频谱数据
     * </pre>
     *
     * <code>repeated float spectrum = 11;</code>
     * @return The count of spectrum.
     */
    public int getSpectrumCount() {
      return spectrum_.size();
    }
    /**
     * <pre>
     *频谱数据
     * </pre>
     *
     * <code>repeated float spectrum = 11;</code>
     * @param index The index of the element to return.
     * @return The spectrum at the given index.
     */
    public float getSpectrum(int index) {
      return spectrum_.getFloat(index);
    }
    private int spectrumMemoizedSerializedSize = -1;

    public static final int CHANNEL_AUDIO_FIELD_NUMBER = 12;
    private zb.dcts.scenario.FFP.Demodulate.ChannelAudio channelAudio_;
    /**
     * <pre>
     *音频结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
     * @return Whether the channelAudio field is set.
     */
    @java.lang.Override
    public boolean hasChannelAudio() {
      return channelAudio_ != null;
    }
    /**
     * <pre>
     *音频结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
     * @return The channelAudio.
     */
    @java.lang.Override
    public zb.dcts.scenario.FFP.Demodulate.ChannelAudio getChannelAudio() {
      return channelAudio_ == null ? zb.dcts.scenario.FFP.Demodulate.ChannelAudio.getDefaultInstance() : channelAudio_;
    }
    /**
     * <pre>
     *音频结果
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.FFP.Demodulate.ChannelAudioOrBuilder getChannelAudioOrBuilder() {
      return getChannelAudio();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (channelId_ != 0) {
        output.writeInt32(2, channelId_);
      }
      if (centFreq_ != 0D) {
        output.writeDouble(4, centFreq_);
      }
      if (sampRate_ != 0D) {
        output.writeDouble(6, sampRate_);
      }
      if (timeStamp_ != null) {
        output.writeMessage(7, getTimeStamp());
      }
      if (getDataIList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(dataIMemoizedSerializedSize);
      }
      for (int i = 0; i < dataI_.size(); i++) {
        output.writeFloatNoTag(dataI_.getFloat(i));
      }
      if (getDataQList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(dataQMemoizedSerializedSize);
      }
      for (int i = 0; i < dataQ_.size(); i++) {
        output.writeFloatNoTag(dataQ_.getFloat(i));
      }
      if (getSpectrumList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(spectrumMemoizedSerializedSize);
      }
      for (int i = 0; i < spectrum_.size(); i++) {
        output.writeFloatNoTag(spectrum_.getFloat(i));
      }
      if (channelAudio_ != null) {
        output.writeMessage(12, getChannelAudio());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (channelId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channelId_);
      }
      if (centFreq_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, centFreq_);
      }
      if (sampRate_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, sampRate_);
      }
      if (timeStamp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getTimeStamp());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getDataIList().size();
        size += dataSize;
        if (!getDataIList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dataIMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getDataQList().size();
        size += dataSize;
        if (!getDataQList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dataQMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSpectrumList().size();
        size += dataSize;
        if (!getSpectrumList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        spectrumMemoizedSerializedSize = dataSize;
      }
      if (channelAudio_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getChannelAudio());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData other = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData) obj;

      if (getChannelId()
          != other.getChannelId()) return false;
      if (java.lang.Double.doubleToLongBits(getCentFreq())
          != java.lang.Double.doubleToLongBits(
              other.getCentFreq())) return false;
      if (java.lang.Double.doubleToLongBits(getSampRate())
          != java.lang.Double.doubleToLongBits(
              other.getSampRate())) return false;
      if (hasTimeStamp() != other.hasTimeStamp()) return false;
      if (hasTimeStamp()) {
        if (!getTimeStamp()
            .equals(other.getTimeStamp())) return false;
      }
      if (!getDataIList()
          .equals(other.getDataIList())) return false;
      if (!getDataQList()
          .equals(other.getDataQList())) return false;
      if (!getSpectrumList()
          .equals(other.getSpectrumList())) return false;
      if (hasChannelAudio() != other.hasChannelAudio()) return false;
      if (hasChannelAudio()) {
        if (!getChannelAudio()
            .equals(other.getChannelAudio())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getChannelId();
      hash = (37 * hash) + CENT_FREQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCentFreq()));
      hash = (37 * hash) + SAMP_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSampRate()));
      if (hasTimeStamp()) {
        hash = (37 * hash) + TIME_STAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimeStamp().hashCode();
      }
      if (getDataICount() > 0) {
        hash = (37 * hash) + DATA_I_FIELD_NUMBER;
        hash = (53 * hash) + getDataIList().hashCode();
      }
      if (getDataQCount() > 0) {
        hash = (37 * hash) + DATA_Q_FIELD_NUMBER;
        hash = (53 * hash) + getDataQList().hashCode();
      }
      if (getSpectrumCount() > 0) {
        hash = (37 * hash) + SPECTRUM_FIELD_NUMBER;
        hash = (53 * hash) + getSpectrumList().hashCode();
      }
      if (hasChannelAudio()) {
        hash = (37 * hash) + CHANNEL_AUDIO_FIELD_NUMBER;
        hash = (53 * hash) + getChannelAudio().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *窄带通路数据
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData)
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        channelId_ = 0;

        centFreq_ = 0D;

        sampRate_ = 0D;

        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
        } else {
          timeStamp_ = null;
          timeStampBuilder_ = null;
        }
        dataI_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        dataQ_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        spectrum_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (channelAudioBuilder_ == null) {
          channelAudio_ = null;
        } else {
          channelAudio_ = null;
          channelAudioBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData build() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData buildPartial() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData result = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData(this);
        int from_bitField0_ = bitField0_;
        result.channelId_ = channelId_;
        result.centFreq_ = centFreq_;
        result.sampRate_ = sampRate_;
        if (timeStampBuilder_ == null) {
          result.timeStamp_ = timeStamp_;
        } else {
          result.timeStamp_ = timeStampBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          dataI_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dataI_ = dataI_;
        if (((bitField0_ & 0x00000002) != 0)) {
          dataQ_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dataQ_ = dataQ_;
        if (((bitField0_ & 0x00000004) != 0)) {
          spectrum_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.spectrum_ = spectrum_;
        if (channelAudioBuilder_ == null) {
          result.channelAudio_ = channelAudio_;
        } else {
          result.channelAudio_ = channelAudioBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData) {
          return mergeFrom((zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData other) {
        if (other == zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.getDefaultInstance()) return this;
        if (other.getChannelId() != 0) {
          setChannelId(other.getChannelId());
        }
        if (other.getCentFreq() != 0D) {
          setCentFreq(other.getCentFreq());
        }
        if (other.getSampRate() != 0D) {
          setSampRate(other.getSampRate());
        }
        if (other.hasTimeStamp()) {
          mergeTimeStamp(other.getTimeStamp());
        }
        if (!other.dataI_.isEmpty()) {
          if (dataI_.isEmpty()) {
            dataI_ = other.dataI_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDataIIsMutable();
            dataI_.addAll(other.dataI_);
          }
          onChanged();
        }
        if (!other.dataQ_.isEmpty()) {
          if (dataQ_.isEmpty()) {
            dataQ_ = other.dataQ_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDataQIsMutable();
            dataQ_.addAll(other.dataQ_);
          }
          onChanged();
        }
        if (!other.spectrum_.isEmpty()) {
          if (spectrum_.isEmpty()) {
            spectrum_ = other.spectrum_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSpectrumIsMutable();
            spectrum_.addAll(other.spectrum_);
          }
          onChanged();
        }
        if (other.hasChannelAudio()) {
          mergeChannelAudio(other.getChannelAudio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int channelId_ ;
      /**
       * <pre>
       *通道号（0-15）
       * </pre>
       *
       * <code>int32 channel_id = 2;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <pre>
       *通道号（0-15）
       * </pre>
       *
       * <code>int32 channel_id = 2;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(int value) {
        
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通道号（0-15）
       * </pre>
       *
       * <code>int32 channel_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        
        channelId_ = 0;
        onChanged();
        return this;
      }

      private double centFreq_ ;
      /**
       * <pre>
       *中心频率
       * </pre>
       *
       * <code>double cent_freq = 4;</code>
       * @return The centFreq.
       */
      @java.lang.Override
      public double getCentFreq() {
        return centFreq_;
      }
      /**
       * <pre>
       *中心频率
       * </pre>
       *
       * <code>double cent_freq = 4;</code>
       * @param value The centFreq to set.
       * @return This builder for chaining.
       */
      public Builder setCentFreq(double value) {
        
        centFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中心频率
       * </pre>
       *
       * <code>double cent_freq = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCentFreq() {
        
        centFreq_ = 0D;
        onChanged();
        return this;
      }

      private double sampRate_ ;
      /**
       * <pre>
       *IQ采样率 单位为Hz
       * </pre>
       *
       * <code>double samp_rate = 6;</code>
       * @return The sampRate.
       */
      @java.lang.Override
      public double getSampRate() {
        return sampRate_;
      }
      /**
       * <pre>
       *IQ采样率 单位为Hz
       * </pre>
       *
       * <code>double samp_rate = 6;</code>
       * @param value The sampRate to set.
       * @return This builder for chaining.
       */
      public Builder setSampRate(double value) {
        
        sampRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IQ采样率 单位为Hz
       * </pre>
       *
       * <code>double samp_rate = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampRate() {
        
        sampRate_ = 0D;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.Timestamp timeStamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> timeStampBuilder_;
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       * @return Whether the timeStamp field is set.
       */
      public boolean hasTimeStamp() {
        return timeStampBuilder_ != null || timeStamp_ != null;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       * @return The timeStamp.
       */
      public zb.dcts.Dcts.Timestamp getTimeStamp() {
        if (timeStampBuilder_ == null) {
          return timeStamp_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
        } else {
          return timeStampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       */
      public Builder setTimeStamp(zb.dcts.Dcts.Timestamp value) {
        if (timeStampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeStamp_ = value;
          onChanged();
        } else {
          timeStampBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       */
      public Builder setTimeStamp(
          zb.dcts.Dcts.Timestamp.Builder builderForValue) {
        if (timeStampBuilder_ == null) {
          timeStamp_ = builderForValue.build();
          onChanged();
        } else {
          timeStampBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       */
      public Builder mergeTimeStamp(zb.dcts.Dcts.Timestamp value) {
        if (timeStampBuilder_ == null) {
          if (timeStamp_ != null) {
            timeStamp_ =
              zb.dcts.Dcts.Timestamp.newBuilder(timeStamp_).mergeFrom(value).buildPartial();
          } else {
            timeStamp_ = value;
          }
          onChanged();
        } else {
          timeStampBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       */
      public Builder clearTimeStamp() {
        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
          onChanged();
        } else {
          timeStamp_ = null;
          timeStampBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       */
      public zb.dcts.Dcts.Timestamp.Builder getTimeStampBuilder() {
        
        onChanged();
        return getTimeStampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       */
      public zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder() {
        if (timeStampBuilder_ != null) {
          return timeStampBuilder_.getMessageOrBuilder();
        } else {
          return timeStamp_ == null ?
              zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
        }
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp time_stamp = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> 
          getTimeStampFieldBuilder() {
        if (timeStampBuilder_ == null) {
          timeStampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder>(
                  getTimeStamp(),
                  getParentForChildren(),
                  isClean());
          timeStamp_ = null;
        }
        return timeStampBuilder_;
      }

      private com.google.protobuf.Internal.FloatList dataI_ = emptyFloatList();
      private void ensureDataIIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dataI_ = mutableCopy(dataI_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *I路数据
       * </pre>
       *
       * <code>repeated float data_i = 8;</code>
       * @return A list containing the dataI.
       */
      public java.util.List<java.lang.Float>
          getDataIList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dataI_) : dataI_;
      }
      /**
       * <pre>
       *I路数据
       * </pre>
       *
       * <code>repeated float data_i = 8;</code>
       * @return The count of dataI.
       */
      public int getDataICount() {
        return dataI_.size();
      }
      /**
       * <pre>
       *I路数据
       * </pre>
       *
       * <code>repeated float data_i = 8;</code>
       * @param index The index of the element to return.
       * @return The dataI at the given index.
       */
      public float getDataI(int index) {
        return dataI_.getFloat(index);
      }
      /**
       * <pre>
       *I路数据
       * </pre>
       *
       * <code>repeated float data_i = 8;</code>
       * @param index The index to set the value at.
       * @param value The dataI to set.
       * @return This builder for chaining.
       */
      public Builder setDataI(
          int index, float value) {
        ensureDataIIsMutable();
        dataI_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *I路数据
       * </pre>
       *
       * <code>repeated float data_i = 8;</code>
       * @param value The dataI to add.
       * @return This builder for chaining.
       */
      public Builder addDataI(float value) {
        ensureDataIIsMutable();
        dataI_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *I路数据
       * </pre>
       *
       * <code>repeated float data_i = 8;</code>
       * @param values The dataI to add.
       * @return This builder for chaining.
       */
      public Builder addAllDataI(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureDataIIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataI_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *I路数据
       * </pre>
       *
       * <code>repeated float data_i = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataI() {
        dataI_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList dataQ_ = emptyFloatList();
      private void ensureDataQIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          dataQ_ = mutableCopy(dataQ_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *Q路数据
       * </pre>
       *
       * <code>repeated float data_q = 9;</code>
       * @return A list containing the dataQ.
       */
      public java.util.List<java.lang.Float>
          getDataQList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(dataQ_) : dataQ_;
      }
      /**
       * <pre>
       *Q路数据
       * </pre>
       *
       * <code>repeated float data_q = 9;</code>
       * @return The count of dataQ.
       */
      public int getDataQCount() {
        return dataQ_.size();
      }
      /**
       * <pre>
       *Q路数据
       * </pre>
       *
       * <code>repeated float data_q = 9;</code>
       * @param index The index of the element to return.
       * @return The dataQ at the given index.
       */
      public float getDataQ(int index) {
        return dataQ_.getFloat(index);
      }
      /**
       * <pre>
       *Q路数据
       * </pre>
       *
       * <code>repeated float data_q = 9;</code>
       * @param index The index to set the value at.
       * @param value The dataQ to set.
       * @return This builder for chaining.
       */
      public Builder setDataQ(
          int index, float value) {
        ensureDataQIsMutable();
        dataQ_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Q路数据
       * </pre>
       *
       * <code>repeated float data_q = 9;</code>
       * @param value The dataQ to add.
       * @return This builder for chaining.
       */
      public Builder addDataQ(float value) {
        ensureDataQIsMutable();
        dataQ_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Q路数据
       * </pre>
       *
       * <code>repeated float data_q = 9;</code>
       * @param values The dataQ to add.
       * @return This builder for chaining.
       */
      public Builder addAllDataQ(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureDataQIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataQ_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Q路数据
       * </pre>
       *
       * <code>repeated float data_q = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataQ() {
        dataQ_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList spectrum_ = emptyFloatList();
      private void ensureSpectrumIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          spectrum_ = mutableCopy(spectrum_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *频谱数据
       * </pre>
       *
       * <code>repeated float spectrum = 11;</code>
       * @return A list containing the spectrum.
       */
      public java.util.List<java.lang.Float>
          getSpectrumList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(spectrum_) : spectrum_;
      }
      /**
       * <pre>
       *频谱数据
       * </pre>
       *
       * <code>repeated float spectrum = 11;</code>
       * @return The count of spectrum.
       */
      public int getSpectrumCount() {
        return spectrum_.size();
      }
      /**
       * <pre>
       *频谱数据
       * </pre>
       *
       * <code>repeated float spectrum = 11;</code>
       * @param index The index of the element to return.
       * @return The spectrum at the given index.
       */
      public float getSpectrum(int index) {
        return spectrum_.getFloat(index);
      }
      /**
       * <pre>
       *频谱数据
       * </pre>
       *
       * <code>repeated float spectrum = 11;</code>
       * @param index The index to set the value at.
       * @param value The spectrum to set.
       * @return This builder for chaining.
       */
      public Builder setSpectrum(
          int index, float value) {
        ensureSpectrumIsMutable();
        spectrum_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频谱数据
       * </pre>
       *
       * <code>repeated float spectrum = 11;</code>
       * @param value The spectrum to add.
       * @return This builder for chaining.
       */
      public Builder addSpectrum(float value) {
        ensureSpectrumIsMutable();
        spectrum_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频谱数据
       * </pre>
       *
       * <code>repeated float spectrum = 11;</code>
       * @param values The spectrum to add.
       * @return This builder for chaining.
       */
      public Builder addAllSpectrum(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureSpectrumIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, spectrum_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频谱数据
       * </pre>
       *
       * <code>repeated float spectrum = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpectrum() {
        spectrum_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private zb.dcts.scenario.FFP.Demodulate.ChannelAudio channelAudio_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.FFP.Demodulate.ChannelAudio, zb.dcts.scenario.FFP.Demodulate.ChannelAudio.Builder, zb.dcts.scenario.FFP.Demodulate.ChannelAudioOrBuilder> channelAudioBuilder_;
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       * @return Whether the channelAudio field is set.
       */
      public boolean hasChannelAudio() {
        return channelAudioBuilder_ != null || channelAudio_ != null;
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       * @return The channelAudio.
       */
      public zb.dcts.scenario.FFP.Demodulate.ChannelAudio getChannelAudio() {
        if (channelAudioBuilder_ == null) {
          return channelAudio_ == null ? zb.dcts.scenario.FFP.Demodulate.ChannelAudio.getDefaultInstance() : channelAudio_;
        } else {
          return channelAudioBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       */
      public Builder setChannelAudio(zb.dcts.scenario.FFP.Demodulate.ChannelAudio value) {
        if (channelAudioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          channelAudio_ = value;
          onChanged();
        } else {
          channelAudioBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       */
      public Builder setChannelAudio(
          zb.dcts.scenario.FFP.Demodulate.ChannelAudio.Builder builderForValue) {
        if (channelAudioBuilder_ == null) {
          channelAudio_ = builderForValue.build();
          onChanged();
        } else {
          channelAudioBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       */
      public Builder mergeChannelAudio(zb.dcts.scenario.FFP.Demodulate.ChannelAudio value) {
        if (channelAudioBuilder_ == null) {
          if (channelAudio_ != null) {
            channelAudio_ =
              zb.dcts.scenario.FFP.Demodulate.ChannelAudio.newBuilder(channelAudio_).mergeFrom(value).buildPartial();
          } else {
            channelAudio_ = value;
          }
          onChanged();
        } else {
          channelAudioBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       */
      public Builder clearChannelAudio() {
        if (channelAudioBuilder_ == null) {
          channelAudio_ = null;
          onChanged();
        } else {
          channelAudio_ = null;
          channelAudioBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       */
      public zb.dcts.scenario.FFP.Demodulate.ChannelAudio.Builder getChannelAudioBuilder() {
        
        onChanged();
        return getChannelAudioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       */
      public zb.dcts.scenario.FFP.Demodulate.ChannelAudioOrBuilder getChannelAudioOrBuilder() {
        if (channelAudioBuilder_ != null) {
          return channelAudioBuilder_.getMessageOrBuilder();
        } else {
          return channelAudio_ == null ?
              zb.dcts.scenario.FFP.Demodulate.ChannelAudio.getDefaultInstance() : channelAudio_;
        }
      }
      /**
       * <pre>
       *音频结果
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ChannelAudio channel_audio = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.FFP.Demodulate.ChannelAudio, zb.dcts.scenario.FFP.Demodulate.ChannelAudio.Builder, zb.dcts.scenario.FFP.Demodulate.ChannelAudioOrBuilder> 
          getChannelAudioFieldBuilder() {
        if (channelAudioBuilder_ == null) {
          channelAudioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.FFP.Demodulate.ChannelAudio, zb.dcts.scenario.FFP.Demodulate.ChannelAudio.Builder, zb.dcts.scenario.FFP.Demodulate.ChannelAudioOrBuilder>(
                  getChannelAudio(),
                  getParentForChildren(),
                  isClean());
          channelAudio_ = null;
        }
        return channelAudioBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData)
    private static final zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData();
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NarrowChannelData>
        PARSER = new com.google.protobuf.AbstractParser<NarrowChannelData>() {
      @java.lang.Override
      public NarrowChannelData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NarrowChannelData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NarrowChannelData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NarrowChannelData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.commMultiChannel.MultiResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
     * @return The header.
     */
    zb.dcts.scenario.spectrum.Spectrum.Header getHeader();
    /**
     * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
     * @return The status.
     */
    zb.dcts.source.kh.KhContext.OperationStatus getStatus();
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
     */
    zb.dcts.source.kh.KhContext.OperationStatusOrBuilder getStatusOrBuilder();

    /**
     * <pre>
     *宽带全景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
     * @return Whether the panoramaView field is set.
     */
    boolean hasPanoramaView();
    /**
     * <pre>
     *宽带全景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
     * @return The panoramaView.
     */
    zb.dcts.scenario.spectrum.Spectrum.View getPanoramaView();
    /**
     * <pre>
     *宽带全景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder getPanoramaViewOrBuilder();

    /**
     * <pre>
     *宽带近景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
     * @return Whether the closeshotView field is set.
     */
    boolean hasCloseshotView();
    /**
     * <pre>
     *宽带近景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
     * @return The closeshotView.
     */
    zb.dcts.scenario.spectrum.Spectrum.View getCloseshotView();
    /**
     * <pre>
     *宽带近景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder getCloseshotViewOrBuilder();

    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData> 
        getChannelDataList();
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData getChannelData(int index);
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    int getChannelDataCount();
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    java.util.List<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder> 
        getChannelDataOrBuilderList();
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder getChannelDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   *最终结果
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.MultiResult}
   */
  public static final class MultiResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.commMultiChannel.MultiResult)
      MultiResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiResult.newBuilder() to construct.
    private MultiResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiResult() {
      channelData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.spectrum.Spectrum.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.source.kh.KhContext.OperationStatus.Builder subBuilder = null;
              if (status_ != null) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(zb.dcts.source.kh.KhContext.OperationStatus.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.scenario.spectrum.Spectrum.View.Builder subBuilder = null;
              if (panoramaView_ != null) {
                subBuilder = panoramaView_.toBuilder();
              }
              panoramaView_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.View.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(panoramaView_);
                panoramaView_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.scenario.spectrum.Spectrum.View.Builder subBuilder = null;
              if (closeshotView_ != null) {
                subBuilder = closeshotView_.toBuilder();
              }
              closeshotView_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.View.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(closeshotView_);
                closeshotView_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                channelData_ = new java.util.ArrayList<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData>();
                mutable_bitField0_ |= 0x00000001;
              }
              channelData_.add(
                  input.readMessage(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          channelData_ = java.util.Collections.unmodifiableList(channelData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.spectrum.Spectrum.Header header_;
    /**
     * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.Header getHeader() {
      return header_ == null ? zb.dcts.scenario.spectrum.Spectrum.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private zb.dcts.source.kh.KhContext.OperationStatus status_;
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return status_ != null;
    }
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
     * @return The status.
     */
    @java.lang.Override
    public zb.dcts.source.kh.KhContext.OperationStatus getStatus() {
      return status_ == null ? zb.dcts.source.kh.KhContext.OperationStatus.getDefaultInstance() : status_;
    }
    /**
     * <pre>
     *任务状态
     * </pre>
     *
     * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.source.kh.KhContext.OperationStatusOrBuilder getStatusOrBuilder() {
      return getStatus();
    }

    public static final int PANORAMA_VIEW_FIELD_NUMBER = 3;
    private zb.dcts.scenario.spectrum.Spectrum.View panoramaView_;
    /**
     * <pre>
     *宽带全景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
     * @return Whether the panoramaView field is set.
     */
    @java.lang.Override
    public boolean hasPanoramaView() {
      return panoramaView_ != null;
    }
    /**
     * <pre>
     *宽带全景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
     * @return The panoramaView.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.View getPanoramaView() {
      return panoramaView_ == null ? zb.dcts.scenario.spectrum.Spectrum.View.getDefaultInstance() : panoramaView_;
    }
    /**
     * <pre>
     *宽带全景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder getPanoramaViewOrBuilder() {
      return getPanoramaView();
    }

    public static final int CLOSESHOT_VIEW_FIELD_NUMBER = 4;
    private zb.dcts.scenario.spectrum.Spectrum.View closeshotView_;
    /**
     * <pre>
     *宽带近景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
     * @return Whether the closeshotView field is set.
     */
    @java.lang.Override
    public boolean hasCloseshotView() {
      return closeshotView_ != null;
    }
    /**
     * <pre>
     *宽带近景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
     * @return The closeshotView.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.View getCloseshotView() {
      return closeshotView_ == null ? zb.dcts.scenario.spectrum.Spectrum.View.getDefaultInstance() : closeshotView_;
    }
    /**
     * <pre>
     *宽带近景视角的数据
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder getCloseshotViewOrBuilder() {
      return getCloseshotView();
    }

    public static final int CHANNEL_DATA_FIELD_NUMBER = 5;
    private java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData> channelData_;
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData> getChannelDataList() {
      return channelData_;
    }
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder> 
        getChannelDataOrBuilderList() {
      return channelData_;
    }
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    @java.lang.Override
    public int getChannelDataCount() {
      return channelData_.size();
    }
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData getChannelData(int index) {
      return channelData_.get(index);
    }
    /**
     * <pre>
     *多通道窄带数据
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder getChannelDataOrBuilder(
        int index) {
      return channelData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (status_ != null) {
        output.writeMessage(2, getStatus());
      }
      if (panoramaView_ != null) {
        output.writeMessage(3, getPanoramaView());
      }
      if (closeshotView_ != null) {
        output.writeMessage(4, getCloseshotView());
      }
      for (int i = 0; i < channelData_.size(); i++) {
        output.writeMessage(5, channelData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (status_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStatus());
      }
      if (panoramaView_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPanoramaView());
      }
      if (closeshotView_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCloseshotView());
      }
      for (int i = 0; i < channelData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, channelData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult other = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (hasPanoramaView() != other.hasPanoramaView()) return false;
      if (hasPanoramaView()) {
        if (!getPanoramaView()
            .equals(other.getPanoramaView())) return false;
      }
      if (hasCloseshotView() != other.hasCloseshotView()) return false;
      if (hasCloseshotView()) {
        if (!getCloseshotView()
            .equals(other.getCloseshotView())) return false;
      }
      if (!getChannelDataList()
          .equals(other.getChannelDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      if (hasPanoramaView()) {
        hash = (37 * hash) + PANORAMA_VIEW_FIELD_NUMBER;
        hash = (53 * hash) + getPanoramaView().hashCode();
      }
      if (hasCloseshotView()) {
        hash = (37 * hash) + CLOSESHOT_VIEW_FIELD_NUMBER;
        hash = (53 * hash) + getCloseshotView().hashCode();
      }
      if (getChannelDataCount() > 0) {
        hash = (37 * hash) + CHANNEL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getChannelDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *最终结果
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.MultiResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.commMultiChannel.MultiResult)
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChannelDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        if (statusBuilder_ == null) {
          status_ = null;
        } else {
          status_ = null;
          statusBuilder_ = null;
        }
        if (panoramaViewBuilder_ == null) {
          panoramaView_ = null;
        } else {
          panoramaView_ = null;
          panoramaViewBuilder_ = null;
        }
        if (closeshotViewBuilder_ == null) {
          closeshotView_ = null;
        } else {
          closeshotView_ = null;
          closeshotViewBuilder_ = null;
        }
        if (channelDataBuilder_ == null) {
          channelData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          channelDataBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult build() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult buildPartial() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult result = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult(this);
        int from_bitField0_ = bitField0_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (statusBuilder_ == null) {
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        if (panoramaViewBuilder_ == null) {
          result.panoramaView_ = panoramaView_;
        } else {
          result.panoramaView_ = panoramaViewBuilder_.build();
        }
        if (closeshotViewBuilder_ == null) {
          result.closeshotView_ = closeshotView_;
        } else {
          result.closeshotView_ = closeshotViewBuilder_.build();
        }
        if (channelDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            channelData_ = java.util.Collections.unmodifiableList(channelData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.channelData_ = channelData_;
        } else {
          result.channelData_ = channelDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult) {
          return mergeFrom((zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult other) {
        if (other == zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (other.hasPanoramaView()) {
          mergePanoramaView(other.getPanoramaView());
        }
        if (other.hasCloseshotView()) {
          mergeCloseshotView(other.getCloseshotView());
        }
        if (channelDataBuilder_ == null) {
          if (!other.channelData_.isEmpty()) {
            if (channelData_.isEmpty()) {
              channelData_ = other.channelData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChannelDataIsMutable();
              channelData_.addAll(other.channelData_);
            }
            onChanged();
          }
        } else {
          if (!other.channelData_.isEmpty()) {
            if (channelDataBuilder_.isEmpty()) {
              channelDataBuilder_.dispose();
              channelDataBuilder_ = null;
              channelData_ = other.channelData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              channelDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChannelDataFieldBuilder() : null;
            } else {
              channelDataBuilder_.addAllMessages(other.channelData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.scenario.spectrum.Spectrum.Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.Header, zb.dcts.scenario.spectrum.Spectrum.Header.Builder, zb.dcts.scenario.spectrum.Spectrum.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       * @return The header.
       */
      public zb.dcts.scenario.spectrum.Spectrum.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? zb.dcts.scenario.spectrum.Spectrum.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       */
      public Builder setHeader(zb.dcts.scenario.spectrum.Spectrum.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       */
      public Builder setHeader(
          zb.dcts.scenario.spectrum.Spectrum.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       */
      public Builder mergeHeader(zb.dcts.scenario.spectrum.Spectrum.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              zb.dcts.scenario.spectrum.Spectrum.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.spectrum.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.Header, zb.dcts.scenario.spectrum.Spectrum.Header.Builder, zb.dcts.scenario.spectrum.Spectrum.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.Header, zb.dcts.scenario.spectrum.Spectrum.Header.Builder, zb.dcts.scenario.spectrum.Spectrum.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private zb.dcts.source.kh.KhContext.OperationStatus status_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.kh.KhContext.OperationStatus, zb.dcts.source.kh.KhContext.OperationStatus.Builder, zb.dcts.source.kh.KhContext.OperationStatusOrBuilder> statusBuilder_;
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return statusBuilder_ != null || status_ != null;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       * @return The status.
       */
      public zb.dcts.source.kh.KhContext.OperationStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? zb.dcts.source.kh.KhContext.OperationStatus.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       */
      public Builder setStatus(zb.dcts.source.kh.KhContext.OperationStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       */
      public Builder setStatus(
          zb.dcts.source.kh.KhContext.OperationStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       */
      public Builder mergeStatus(zb.dcts.source.kh.KhContext.OperationStatus value) {
        if (statusBuilder_ == null) {
          if (status_ != null) {
            status_ =
              zb.dcts.source.kh.KhContext.OperationStatus.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = null;
          onChanged();
        } else {
          status_ = null;
          statusBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       */
      public zb.dcts.source.kh.KhContext.OperationStatus.Builder getStatusBuilder() {
        
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       */
      public zb.dcts.source.kh.KhContext.OperationStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              zb.dcts.source.kh.KhContext.OperationStatus.getDefaultInstance() : status_;
        }
      }
      /**
       * <pre>
       *任务状态
       * </pre>
       *
       * <code>.zb.dcts.source.kh.OperationStatus status = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.source.kh.KhContext.OperationStatus, zb.dcts.source.kh.KhContext.OperationStatus.Builder, zb.dcts.source.kh.KhContext.OperationStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.source.kh.KhContext.OperationStatus, zb.dcts.source.kh.KhContext.OperationStatus.Builder, zb.dcts.source.kh.KhContext.OperationStatusOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      private zb.dcts.scenario.spectrum.Spectrum.View panoramaView_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.View, zb.dcts.scenario.spectrum.Spectrum.View.Builder, zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder> panoramaViewBuilder_;
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       * @return Whether the panoramaView field is set.
       */
      public boolean hasPanoramaView() {
        return panoramaViewBuilder_ != null || panoramaView_ != null;
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       * @return The panoramaView.
       */
      public zb.dcts.scenario.spectrum.Spectrum.View getPanoramaView() {
        if (panoramaViewBuilder_ == null) {
          return panoramaView_ == null ? zb.dcts.scenario.spectrum.Spectrum.View.getDefaultInstance() : panoramaView_;
        } else {
          return panoramaViewBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       */
      public Builder setPanoramaView(zb.dcts.scenario.spectrum.Spectrum.View value) {
        if (panoramaViewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          panoramaView_ = value;
          onChanged();
        } else {
          panoramaViewBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       */
      public Builder setPanoramaView(
          zb.dcts.scenario.spectrum.Spectrum.View.Builder builderForValue) {
        if (panoramaViewBuilder_ == null) {
          panoramaView_ = builderForValue.build();
          onChanged();
        } else {
          panoramaViewBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       */
      public Builder mergePanoramaView(zb.dcts.scenario.spectrum.Spectrum.View value) {
        if (panoramaViewBuilder_ == null) {
          if (panoramaView_ != null) {
            panoramaView_ =
              zb.dcts.scenario.spectrum.Spectrum.View.newBuilder(panoramaView_).mergeFrom(value).buildPartial();
          } else {
            panoramaView_ = value;
          }
          onChanged();
        } else {
          panoramaViewBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       */
      public Builder clearPanoramaView() {
        if (panoramaViewBuilder_ == null) {
          panoramaView_ = null;
          onChanged();
        } else {
          panoramaView_ = null;
          panoramaViewBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.View.Builder getPanoramaViewBuilder() {
        
        onChanged();
        return getPanoramaViewFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder getPanoramaViewOrBuilder() {
        if (panoramaViewBuilder_ != null) {
          return panoramaViewBuilder_.getMessageOrBuilder();
        } else {
          return panoramaView_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.View.getDefaultInstance() : panoramaView_;
        }
      }
      /**
       * <pre>
       *宽带全景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View panorama_view = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.View, zb.dcts.scenario.spectrum.Spectrum.View.Builder, zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder> 
          getPanoramaViewFieldBuilder() {
        if (panoramaViewBuilder_ == null) {
          panoramaViewBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.View, zb.dcts.scenario.spectrum.Spectrum.View.Builder, zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder>(
                  getPanoramaView(),
                  getParentForChildren(),
                  isClean());
          panoramaView_ = null;
        }
        return panoramaViewBuilder_;
      }

      private zb.dcts.scenario.spectrum.Spectrum.View closeshotView_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.View, zb.dcts.scenario.spectrum.Spectrum.View.Builder, zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder> closeshotViewBuilder_;
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       * @return Whether the closeshotView field is set.
       */
      public boolean hasCloseshotView() {
        return closeshotViewBuilder_ != null || closeshotView_ != null;
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       * @return The closeshotView.
       */
      public zb.dcts.scenario.spectrum.Spectrum.View getCloseshotView() {
        if (closeshotViewBuilder_ == null) {
          return closeshotView_ == null ? zb.dcts.scenario.spectrum.Spectrum.View.getDefaultInstance() : closeshotView_;
        } else {
          return closeshotViewBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       */
      public Builder setCloseshotView(zb.dcts.scenario.spectrum.Spectrum.View value) {
        if (closeshotViewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          closeshotView_ = value;
          onChanged();
        } else {
          closeshotViewBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       */
      public Builder setCloseshotView(
          zb.dcts.scenario.spectrum.Spectrum.View.Builder builderForValue) {
        if (closeshotViewBuilder_ == null) {
          closeshotView_ = builderForValue.build();
          onChanged();
        } else {
          closeshotViewBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       */
      public Builder mergeCloseshotView(zb.dcts.scenario.spectrum.Spectrum.View value) {
        if (closeshotViewBuilder_ == null) {
          if (closeshotView_ != null) {
            closeshotView_ =
              zb.dcts.scenario.spectrum.Spectrum.View.newBuilder(closeshotView_).mergeFrom(value).buildPartial();
          } else {
            closeshotView_ = value;
          }
          onChanged();
        } else {
          closeshotViewBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       */
      public Builder clearCloseshotView() {
        if (closeshotViewBuilder_ == null) {
          closeshotView_ = null;
          onChanged();
        } else {
          closeshotView_ = null;
          closeshotViewBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.View.Builder getCloseshotViewBuilder() {
        
        onChanged();
        return getCloseshotViewFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder getCloseshotViewOrBuilder() {
        if (closeshotViewBuilder_ != null) {
          return closeshotViewBuilder_.getMessageOrBuilder();
        } else {
          return closeshotView_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.View.getDefaultInstance() : closeshotView_;
        }
      }
      /**
       * <pre>
       *宽带近景视角的数据
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.View closeshot_view = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.View, zb.dcts.scenario.spectrum.Spectrum.View.Builder, zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder> 
          getCloseshotViewFieldBuilder() {
        if (closeshotViewBuilder_ == null) {
          closeshotViewBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.View, zb.dcts.scenario.spectrum.Spectrum.View.Builder, zb.dcts.scenario.spectrum.Spectrum.ViewOrBuilder>(
                  getCloseshotView(),
                  getParentForChildren(),
                  isClean());
          closeshotView_ = null;
        }
        return closeshotViewBuilder_;
      }

      private java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData> channelData_ =
        java.util.Collections.emptyList();
      private void ensureChannelDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          channelData_ = new java.util.ArrayList<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData>(channelData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder> channelDataBuilder_;

      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData> getChannelDataList() {
        if (channelDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channelData_);
        } else {
          return channelDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public int getChannelDataCount() {
        if (channelDataBuilder_ == null) {
          return channelData_.size();
        } else {
          return channelDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData getChannelData(int index) {
        if (channelDataBuilder_ == null) {
          return channelData_.get(index);
        } else {
          return channelDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder setChannelData(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData value) {
        if (channelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelDataIsMutable();
          channelData_.set(index, value);
          onChanged();
        } else {
          channelDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder setChannelData(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder builderForValue) {
        if (channelDataBuilder_ == null) {
          ensureChannelDataIsMutable();
          channelData_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder addChannelData(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData value) {
        if (channelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelDataIsMutable();
          channelData_.add(value);
          onChanged();
        } else {
          channelDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder addChannelData(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData value) {
        if (channelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelDataIsMutable();
          channelData_.add(index, value);
          onChanged();
        } else {
          channelDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder addChannelData(
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder builderForValue) {
        if (channelDataBuilder_ == null) {
          ensureChannelDataIsMutable();
          channelData_.add(builderForValue.build());
          onChanged();
        } else {
          channelDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder addChannelData(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder builderForValue) {
        if (channelDataBuilder_ == null) {
          ensureChannelDataIsMutable();
          channelData_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder addAllChannelData(
          java.lang.Iterable<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData> values) {
        if (channelDataBuilder_ == null) {
          ensureChannelDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelData_);
          onChanged();
        } else {
          channelDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder clearChannelData() {
        if (channelDataBuilder_ == null) {
          channelData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          channelDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public Builder removeChannelData(int index) {
        if (channelDataBuilder_ == null) {
          ensureChannelDataIsMutable();
          channelData_.remove(index);
          onChanged();
        } else {
          channelDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder getChannelDataBuilder(
          int index) {
        return getChannelDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder getChannelDataOrBuilder(
          int index) {
        if (channelDataBuilder_ == null) {
          return channelData_.get(index);  } else {
          return channelDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder> 
           getChannelDataOrBuilderList() {
        if (channelDataBuilder_ != null) {
          return channelDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channelData_);
        }
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder addChannelDataBuilder() {
        return getChannelDataFieldBuilder().addBuilder(
            zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.getDefaultInstance());
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder addChannelDataBuilder(
          int index) {
        return getChannelDataFieldBuilder().addBuilder(
            index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.getDefaultInstance());
      }
      /**
       * <pre>
       *多通道窄带数据
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData channel_data = 5;</code>
       */
      public java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder> 
           getChannelDataBuilderList() {
        return getChannelDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder> 
          getChannelDataFieldBuilder() {
        if (channelDataBuilder_ == null) {
          channelDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelData.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.NarrowChannelDataOrBuilder>(
                  channelData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          channelData_ = null;
        }
        return channelDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.commMultiChannel.MultiResult)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.MultiResult)
    private static final zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult();
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiResult>
        PARSER = new com.google.protobuf.AbstractParser<MultiResult>() {
      @java.lang.Override
      public MultiResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.MultiResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChannelChangeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    boolean hasResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    zb.dcts.scenario.Scenario.ScenarioTaskId getResponser();
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder();

    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
     * @return The enum numeric value on the wire for index.
     */
    int getIndexValue();
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
     * @return The index.
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex getIndex();

    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel> 
        getChannelsList();
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel getChannels(int index);
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    int getChannelsCount();
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    java.util.List<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder> 
        getChannelsOrBuilderList();
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder getChannelsOrBuilder(
        int index);
  }
  /**
   * <pre>
   *通道修改请求
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest}
   */
  public static final class ChannelChangeRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest)
      ChannelChangeRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChannelChangeRequest.newBuilder() to construct.
    private ChannelChangeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChannelChangeRequest() {
      index_ = 0;
      channels_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChannelChangeRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChannelChangeRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.Scenario.ScenarioTaskId.Builder subBuilder = null;
              if (responser_ != null) {
                subBuilder = responser_.toBuilder();
              }
              responser_ = input.readMessage(zb.dcts.scenario.Scenario.ScenarioTaskId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(responser_);
                responser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              index_ = rawValue;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                channels_ = new java.util.ArrayList<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel>();
                mutable_bitField0_ |= 0x00000001;
              }
              channels_.add(
                  input.readMessage(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          channels_ = java.util.Collections.unmodifiableList(channels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest.Builder.class);
    }

    public static final int RESPONSER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return Whether the responser field is set.
     */
    @java.lang.Override
    public boolean hasResponser() {
      return responser_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     * @return The responser.
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
      return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
      return getResponser();
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
     * @return The enum numeric value on the wire for index.
     */
    @java.lang.Override public int getIndexValue() {
      return index_;
    }
    /**
     * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
     * @return The index.
     */
    @java.lang.Override public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex getIndex() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex result = zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex.valueOf(index_);
      return result == null ? zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex.UNRECOGNIZED : result;
    }

    public static final int CHANNELS_FIELD_NUMBER = 4;
    private java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel> channels_;
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel> getChannelsList() {
      return channels_;
    }
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder> 
        getChannelsOrBuilderList() {
      return channels_;
    }
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    @java.lang.Override
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel getChannels(int index) {
      return channels_.get(index);
    }
    /**
     * <pre>
     *窄通道的工作参数
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder getChannelsOrBuilder(
        int index) {
      return channels_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responser_ != null) {
        output.writeMessage(1, getResponser());
      }
      if (index_ != zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex.INVALID.getNumber()) {
        output.writeEnum(2, index_);
      }
      for (int i = 0; i < channels_.size(); i++) {
        output.writeMessage(4, channels_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponser());
      }
      if (index_ != zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex.INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, index_);
      }
      for (int i = 0; i < channels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, channels_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest other = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest) obj;

      if (hasResponser() != other.hasResponser()) return false;
      if (hasResponser()) {
        if (!getResponser()
            .equals(other.getResponser())) return false;
      }
      if (index_ != other.index_) return false;
      if (!getChannelsList()
          .equals(other.getChannelsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponser()) {
        hash = (37 * hash) + RESPONSER_FIELD_NUMBER;
        hash = (53 * hash) + getResponser().hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + index_;
      if (getChannelsCount() > 0) {
        hash = (37 * hash) + CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *通道修改请求
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest)
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest.class, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChannelsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (responserBuilder_ == null) {
          responser_ = null;
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }
        index_ = 0;

        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest build() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest buildPartial() {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest result = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest(this);
        int from_bitField0_ = bitField0_;
        if (responserBuilder_ == null) {
          result.responser_ = responser_;
        } else {
          result.responser_ = responserBuilder_.build();
        }
        result.index_ = index_;
        if (channelsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            channels_ = java.util.Collections.unmodifiableList(channels_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.channels_ = channels_;
        } else {
          result.channels_ = channelsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest) {
          return mergeFrom((zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest other) {
        if (other == zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest.getDefaultInstance()) return this;
        if (other.hasResponser()) {
          mergeResponser(other.getResponser());
        }
        if (other.index_ != 0) {
          setIndexValue(other.getIndexValue());
        }
        if (channelsBuilder_ == null) {
          if (!other.channels_.isEmpty()) {
            if (channels_.isEmpty()) {
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChannelsIsMutable();
              channels_.addAll(other.channels_);
            }
            onChanged();
          }
        } else {
          if (!other.channels_.isEmpty()) {
            if (channelsBuilder_.isEmpty()) {
              channelsBuilder_.dispose();
              channelsBuilder_ = null;
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
              channelsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChannelsFieldBuilder() : null;
            } else {
              channelsBuilder_.addAllMessages(other.channels_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.scenario.Scenario.ScenarioTaskId responser_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> responserBuilder_;
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return Whether the responser field is set.
       */
      public boolean hasResponser() {
        return responserBuilder_ != null || responser_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       * @return The responser.
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId getResponser() {
        if (responserBuilder_ == null) {
          return responser_ == null ? zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        } else {
          return responserBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responser_ = value;
          onChanged();
        } else {
          responserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder setResponser(
          zb.dcts.scenario.Scenario.ScenarioTaskId.Builder builderForValue) {
        if (responserBuilder_ == null) {
          responser_ = builderForValue.build();
          onChanged();
        } else {
          responserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder mergeResponser(zb.dcts.scenario.Scenario.ScenarioTaskId value) {
        if (responserBuilder_ == null) {
          if (responser_ != null) {
            responser_ =
              zb.dcts.scenario.Scenario.ScenarioTaskId.newBuilder(responser_).mergeFrom(value).buildPartial();
          } else {
            responser_ = value;
          }
          onChanged();
        } else {
          responserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public Builder clearResponser() {
        if (responserBuilder_ == null) {
          responser_ = null;
          onChanged();
        } else {
          responser_ = null;
          responserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskId.Builder getResponserBuilder() {
        
        onChanged();
        return getResponserFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder getResponserOrBuilder() {
        if (responserBuilder_ != null) {
          return responserBuilder_.getMessageOrBuilder();
        } else {
          return responser_ == null ?
              zb.dcts.scenario.Scenario.ScenarioTaskId.getDefaultInstance() : responser_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioTaskId responser = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder> 
          getResponserFieldBuilder() {
        if (responserBuilder_ == null) {
          responserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.Scenario.ScenarioTaskId, zb.dcts.scenario.Scenario.ScenarioTaskId.Builder, zb.dcts.scenario.Scenario.ScenarioTaskIdOrBuilder>(
                  getResponser(),
                  getParentForChildren(),
                  isClean());
          responser_ = null;
        }
        return responserBuilder_;
      }

      private int index_ = 0;
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
       * @return The enum numeric value on the wire for index.
       */
      @java.lang.Override public int getIndexValue() {
        return index_;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
       * @param value The enum numeric value on the wire for index to set.
       * @return This builder for chaining.
       */
      public Builder setIndexValue(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
       * @return The index.
       */
      @java.lang.Override
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex getIndex() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex result = zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex.valueOf(index_);
        return result == null ? zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex.UNRECOGNIZED : result;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ParamIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        index_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commMultiChannel.ParamIndex index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel> channels_ =
        java.util.Collections.emptyList();
      private void ensureChannelsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          channels_ = new java.util.ArrayList<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel>(channels_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder> channelsBuilder_;

      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel> getChannelsList() {
        if (channelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channels_);
        } else {
          return channelsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public int getChannelsCount() {
        if (channelsBuilder_ == null) {
          return channels_.size();
        } else {
          return channelsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel getChannels(int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);
        } else {
          return channelsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder setChannels(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.set(index, value);
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder setChannels(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder addChannels(zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder addChannels(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(index, value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder addChannels(
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder addChannels(
          int index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder addAllChannels(
          java.lang.Iterable<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel> values) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channels_);
          onChanged();
        } else {
          channelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder clearChannels() {
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public Builder removeChannels(int index) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.remove(index);
          onChanged();
        } else {
          channelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder getChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder getChannelsOrBuilder(
          int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);  } else {
          return channelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder> 
           getChannelsOrBuilderList() {
        if (channelsBuilder_ != null) {
          return channelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channels_);
        }
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder addChannelsBuilder() {
        return getChannelsFieldBuilder().addBuilder(
            zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.getDefaultInstance());
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder addChannelsBuilder(
          int index) {
        return getChannelsFieldBuilder().addBuilder(
            index, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.getDefaultInstance());
      }
      /**
       * <pre>
       *窄通道的工作参数
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.commMultiChannel.NarrowChannel channels = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder> 
           getChannelsBuilderList() {
        return getChannelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder> 
          getChannelsFieldBuilder() {
        if (channelsBuilder_ == null) {
          channelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannel.Builder, zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.NarrowChannelOrBuilder>(
                  channels_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          channels_ = null;
        }
        return channelsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest)
    private static final zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest();
    }

    public static zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChannelChangeRequest>
        PARSER = new com.google.protobuf.AbstractParser<ChannelChangeRequest>() {
      @java.lang.Override
      public ChannelChangeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChannelChangeRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChannelChangeRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChannelChangeRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.commMultiChannel.KhMultiChannel.ChannelChangeRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_ParamsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_ParamsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n scenario/kh/KhMultiChannel.proto\022$zb.d" +
      "cts.scenario.kh.commMultiChannel\032\ndcts.p" +
      "roto\032\023source/source.proto\032\031source/kh/KhC" +
      "ontext.proto\032\027scenario/scenario.proto\032\027s" +
      "cenario/spectrum.proto\032\030scenario/detecti" +
      "on.proto\032#scenario/kh/KhMultiChannelAcq." +
      "proto\032\035scenario/FFP/demodulate.proto\"\261\001\n" +
      "\013MultiSource\022$\n\002id\030\001 \001(\0132\030.zb.dcts.sourc" +
      "e.SourceId\022M\n\006params\030\006 \003(\0132=.zb.dcts.sce" +
      "nario.kh.commMultiChannel.MultiSource.Pa" +
      "ramsEntry\032-\n\013ParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n" +
      "\005value\030\002 \001(\t:\0028\001\"\235\002\n\025MultiTaskStartReque" +
      "st\022.\n\010scenario\030\001 \001(\0132\034.zb.dcts.scenario." +
      "ScenarioId\022G\n\014source_param\030\002 \001(\01321.zb.dc" +
      "ts.scenario.kh.commMultiChannel.MultiSou" +
      "rce\022F\n\tacq_param\030\003 \001(\01323.zb.dcts.scenari" +
      "o.kh.commMultiChannel.MultiAcqParam\022C\n\017d" +
      "etection_param\030\004 \001(\0132*.zb.dcts.scenario." +
      "detection.DetectionParam\"\342\001\n\021NarrowChann" +
      "elData\022\022\n\nchannel_id\030\002 \001(\005\022\021\n\tcent_freq\030" +
      "\004 \001(\001\022\021\n\tsamp_rate\030\006 \001(\001\022&\n\ntime_stamp\030\007" +
      " \001(\0132\022.zb.dcts.Timestamp\022\016\n\006data_i\030\010 \003(\002" +
      "\022\016\n\006data_q\030\t \003(\002\022\020\n\010spectrum\030\013 \003(\002\0229\n\rch" +
      "annel_audio\030\014 \001(\0132\".zb.dcts.scenario.FFP" +
      ".ChannelAudio\"\264\002\n\013MultiResult\0221\n\006header\030" +
      "\001 \001(\0132!.zb.dcts.scenario.spectrum.Header" +
      "\0222\n\006status\030\002 \001(\0132\".zb.dcts.source.kh.Ope" +
      "rationStatus\0226\n\rpanorama_view\030\003 \001(\0132\037.zb" +
      ".dcts.scenario.spectrum.View\0227\n\016closesho" +
      "t_view\030\004 \001(\0132\037.zb.dcts.scenario.spectrum" +
      ".View\022M\n\014channel_data\030\005 \003(\01327.zb.dcts.sc" +
      "enario.kh.commMultiChannel.NarrowChannel" +
      "Data\"\323\001\n\024ChannelChangeRequest\0223\n\trespons" +
      "er\030\001 \001(\0132 .zb.dcts.scenario.ScenarioTask" +
      "Id\022?\n\005index\030\002 \001(\01620.zb.dcts.scenario.kh." +
      "commMultiChannel.ParamIndex\022E\n\010channels\030" +
      "\004 \003(\01323.zb.dcts.scenario.kh.commMultiCha" +
      "nnel.NarrowChannel*\'\n\nParamIndex\022\013\n\007INVA" +
      "LID\020\000\022\014\n\010NB_PARAM\020~2\332\013\n\023MultiChannelServ" +
      "ice\022k\n\tStartTask\022;.zb.dcts.scenario.kh.c" +
      "ommMultiChannel.MultiTaskStartRequest\032\037." +
      "zb.dcts.scenario.ScenarioReply\"\000\022d\n\tGetR" +
      "esult\022 .zb.dcts.scenario.ScenarioTaskId\032" +
      "1.zb.dcts.scenario.kh.commMultiChannel.M" +
      "ultiResult\"\0000\001\022l\n\013ChangeParam\022:.zb.dcts." +
      "scenario.kh.commMultiChannel.ChannelChan" +
      "geRequest\032\037.zb.dcts.scenario.ScenarioRep" +
      "ly\"\000\022O\n\010StopTask\022 .zb.dcts.scenario.Scen" +
      "arioTaskId\032\037.zb.dcts.scenario.ScenarioRe" +
      "ply\"\000\022Y\n\nOpenZoomIn\022(.zb.dcts.scenario.s" +
      "pectrum.ZoomInRequest\032\037.zb.dcts.scenario" +
      ".ScenarioReply\"\000\022R\n\013CloseZoomIn\022 .zb.dct" +
      "s.scenario.ScenarioTaskId\032\037.zb.dcts.scen" +
      "ario.ScenarioReply\"\000\022]\n\014OpenDataHold\022*.z" +
      "b.dcts.scenario.spectrum.DataHoldRequest" +
      "\032\037.zb.dcts.scenario.ScenarioReply\"\000\022^\n\rR" +
      "esetDataHold\022*.zb.dcts.scenario.spectrum" +
      ".DataHoldRequest\032\037.zb.dcts.scenario.Scen" +
      "arioReply\"\000\022^\n\rCloseDataHold\022*.zb.dcts.s" +
      "cenario.spectrum.DataHoldRequest\032\037.zb.dc" +
      "ts.scenario.ScenarioReply\"\000\022`\n\rOpenDetec" +
      "tion\022,.zb.dcts.scenario.detection.Detect" +
      "ionRequest\032\037.zb.dcts.scenario.ScenarioRe" +
      "ply\"\000\022U\n\016CloseDetection\022 .zb.dcts.scenar" +
      "io.ScenarioTaskId\032\037.zb.dcts.scenario.Sce" +
      "narioReply\"\000\022\177\n\020QuerySignalTable\0223.zb.dc" +
      "ts.scenario.detection.SignalTableQueryRe" +
      "quest\0324.zb.dcts.scenario.detection.Signa" +
      "lTableQueryResponse\"\000\022W\n\020ClearSignalTabl" +
      "e\022 .zb.dcts.scenario.ScenarioTaskId\032\037.zb" +
      ".dcts.scenario.ScenarioReply\"\000\022h\n\017Signal" +
      "Gathering\0222.zb.dcts.scenario.detection.S" +
      "ignalGatheringRequest\032\037.zb.dcts.scenario" +
      ".ScenarioReply\"\000\022f\n\022GetGatheringResult\022 " +
      ".zb.dcts.scenario.ScenarioTaskId\032,.zb.dc" +
      "ts.scenario.detection.SignalSampleList\"\000" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          zb.dcts.Dcts.getDescriptor(),
          zb.dcts.source.Source.getDescriptor(),
          zb.dcts.source.kh.KhContext.getDescriptor(),
          zb.dcts.scenario.Scenario.getDescriptor(),
          zb.dcts.scenario.spectrum.Spectrum.getDescriptor(),
          zb.dcts.scenario.detection.Detection.getDescriptor(),
          zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.getDescriptor(),
          zb.dcts.scenario.FFP.Demodulate.getDescriptor(),
        });
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_descriptor,
        new java.lang.String[] { "Id", "Params", });
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_ParamsEntry_descriptor =
      internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_descriptor.getNestedTypes().get(0);
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_ParamsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiSource_ParamsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiTaskStartRequest_descriptor,
        new java.lang.String[] { "Scenario", "SourceParam", "AcqParam", "DetectionParam", });
    internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_commMultiChannel_NarrowChannelData_descriptor,
        new java.lang.String[] { "ChannelId", "CentFreq", "SampRate", "TimeStamp", "DataI", "DataQ", "Spectrum", "ChannelAudio", });
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_commMultiChannel_MultiResult_descriptor,
        new java.lang.String[] { "Header", "Status", "PanoramaView", "CloseshotView", "ChannelData", });
    internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_commMultiChannel_ChannelChangeRequest_descriptor,
        new java.lang.String[] { "Responser", "Index", "Channels", });
    zb.dcts.Dcts.getDescriptor();
    zb.dcts.source.Source.getDescriptor();
    zb.dcts.source.kh.KhContext.getDescriptor();
    zb.dcts.scenario.Scenario.getDescriptor();
    zb.dcts.scenario.spectrum.Spectrum.getDescriptor();
    zb.dcts.scenario.detection.Detection.getDescriptor();
    zb.dcts.scenario.kh.commMultiChannel.KhMultiChannelAcq.getDescriptor();
    zb.dcts.scenario.FFP.Demodulate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
