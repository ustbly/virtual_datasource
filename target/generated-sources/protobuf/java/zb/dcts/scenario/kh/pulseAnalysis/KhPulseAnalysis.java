// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/kh/KhPulseAnalysis.proto

package zb.dcts.scenario.kh.pulseAnalysis;

public final class KhPulseAnalysis {
  private KhPulseAnalysis() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *电平参考
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.scenario.kh.pulseAnalysis.LevelMode}
   */
  public enum LevelMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *峰值电平
     * </pre>
     *
     * <code>PEAK = 0;</code>
     */
    PEAK(0),
    /**
     * <pre>
     *噪底电平
     * </pre>
     *
     * <code>NOISE = 1;</code>
     */
    NOISE(1),
    /**
     * <pre>
     *绝对电平
     * </pre>
     *
     * <code>ABS = 2;</code>
     */
    ABS(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *峰值电平
     * </pre>
     *
     * <code>PEAK = 0;</code>
     */
    public static final int PEAK_VALUE = 0;
    /**
     * <pre>
     *噪底电平
     * </pre>
     *
     * <code>NOISE = 1;</code>
     */
    public static final int NOISE_VALUE = 1;
    /**
     * <pre>
     *绝对电平
     * </pre>
     *
     * <code>ABS = 2;</code>
     */
    public static final int ABS_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LevelMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LevelMode forNumber(int value) {
      switch (value) {
        case 0: return PEAK;
        case 1: return NOISE;
        case 2: return ABS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LevelMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LevelMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LevelMode>() {
            public LevelMode findValueByNumber(int number) {
              return LevelMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.getDescriptor().getEnumTypes().get(0);
    }

    private static final LevelMode[] VALUES = values();

    public static LevelMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LevelMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.scenario.kh.pulseAnalysis.LevelMode)
  }

  /**
   * <pre>
   *修改参数索引
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.scenario.kh.pulseAnalysis.ParamIndex}
   */
  public enum ParamIndex
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *分析参数
     * </pre>
     *
     * <code>ANALYSIS_PARAM = 0;</code>
     */
    ANALYSIS_PARAM(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *分析参数
     * </pre>
     *
     * <code>ANALYSIS_PARAM = 0;</code>
     */
    public static final int ANALYSIS_PARAM_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParamIndex valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ParamIndex forNumber(int value) {
      switch (value) {
        case 0: return ANALYSIS_PARAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ParamIndex>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ParamIndex> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ParamIndex>() {
            public ParamIndex findValueByNumber(int number) {
              return ParamIndex.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.getDescriptor().getEnumTypes().get(1);
    }

    private static final ParamIndex[] VALUES = values();

    public static ParamIndex valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ParamIndex(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.scenario.kh.pulseAnalysis.ParamIndex)
  }

  public interface AnalysisParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *最大限定脉宽 ...分析参数
     * </pre>
     *
     * <code>double maxwidth = 4;</code>
     * @return The maxwidth.
     */
    double getMaxwidth();

    /**
     * <pre>
     *最小限定脉宽
     * </pre>
     *
     * <code>double minwidth = 5;</code>
     * @return The minwidth.
     */
    double getMinwidth();

    /**
     * <pre>
     *脉冲幅度比对类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
     * @return The enum numeric value on the wire for lvlmode.
     */
    int getLvlmodeValue();
    /**
     * <pre>
     *脉冲幅度比对类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
     * @return The lvlmode.
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode getLvlmode();

    /**
     * <pre>
     *用户提供的比对幅度值
     * </pre>
     *
     * <code>float lvldata = 7;</code>
     * @return The lvldata.
     */
    float getLvldata();

    /**
     * <pre>
     *最大脉冲计数
     * </pre>
     *
     * <code>int32 maxpulse_count = 8;</code>
     * @return The maxpulseCount.
     */
    int getMaxpulseCount();

    /**
     * <pre>
     *直方图Bins
     * </pre>
     *
     * <code>uint32 histogrambins = 9;</code>
     * @return The histogrambins.
     */
    int getHistogrambins();

    /**
     * <pre>
     *瞬时分析脉冲的起始时间（us）
     * </pre>
     *
     * <code>double start_time = 10;</code>
     * @return The startTime.
     */
    double getStartTime();

    /**
     * <pre>
     *瞬时分析脉冲的停止时间
     * </pre>
     *
     * <code>double stop_time = 11;</code>
     * @return The stopTime.
     */
    double getStopTime();
  }
  /**
   * <pre>
   *脉冲分析参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam}
   */
  public static final class AnalysisParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam)
      AnalysisParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AnalysisParam.newBuilder() to construct.
    private AnalysisParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnalysisParam() {
      lvlmode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AnalysisParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AnalysisParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 33: {

              maxwidth_ = input.readDouble();
              break;
            }
            case 41: {

              minwidth_ = input.readDouble();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              lvlmode_ = rawValue;
              break;
            }
            case 61: {

              lvldata_ = input.readFloat();
              break;
            }
            case 64: {

              maxpulseCount_ = input.readInt32();
              break;
            }
            case 72: {

              histogrambins_ = input.readUInt32();
              break;
            }
            case 81: {

              startTime_ = input.readDouble();
              break;
            }
            case 89: {

              stopTime_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder.class);
    }

    public static final int MAXWIDTH_FIELD_NUMBER = 4;
    private double maxwidth_;
    /**
     * <pre>
     *最大限定脉宽 ...分析参数
     * </pre>
     *
     * <code>double maxwidth = 4;</code>
     * @return The maxwidth.
     */
    @java.lang.Override
    public double getMaxwidth() {
      return maxwidth_;
    }

    public static final int MINWIDTH_FIELD_NUMBER = 5;
    private double minwidth_;
    /**
     * <pre>
     *最小限定脉宽
     * </pre>
     *
     * <code>double minwidth = 5;</code>
     * @return The minwidth.
     */
    @java.lang.Override
    public double getMinwidth() {
      return minwidth_;
    }

    public static final int LVLMODE_FIELD_NUMBER = 6;
    private int lvlmode_;
    /**
     * <pre>
     *脉冲幅度比对类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
     * @return The enum numeric value on the wire for lvlmode.
     */
    @java.lang.Override public int getLvlmodeValue() {
      return lvlmode_;
    }
    /**
     * <pre>
     *脉冲幅度比对类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
     * @return The lvlmode.
     */
    @java.lang.Override public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode getLvlmode() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode result = zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode.valueOf(lvlmode_);
      return result == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode.UNRECOGNIZED : result;
    }

    public static final int LVLDATA_FIELD_NUMBER = 7;
    private float lvldata_;
    /**
     * <pre>
     *用户提供的比对幅度值
     * </pre>
     *
     * <code>float lvldata = 7;</code>
     * @return The lvldata.
     */
    @java.lang.Override
    public float getLvldata() {
      return lvldata_;
    }

    public static final int MAXPULSE_COUNT_FIELD_NUMBER = 8;
    private int maxpulseCount_;
    /**
     * <pre>
     *最大脉冲计数
     * </pre>
     *
     * <code>int32 maxpulse_count = 8;</code>
     * @return The maxpulseCount.
     */
    @java.lang.Override
    public int getMaxpulseCount() {
      return maxpulseCount_;
    }

    public static final int HISTOGRAMBINS_FIELD_NUMBER = 9;
    private int histogrambins_;
    /**
     * <pre>
     *直方图Bins
     * </pre>
     *
     * <code>uint32 histogrambins = 9;</code>
     * @return The histogrambins.
     */
    @java.lang.Override
    public int getHistogrambins() {
      return histogrambins_;
    }

    public static final int START_TIME_FIELD_NUMBER = 10;
    private double startTime_;
    /**
     * <pre>
     *瞬时分析脉冲的起始时间（us）
     * </pre>
     *
     * <code>double start_time = 10;</code>
     * @return The startTime.
     */
    @java.lang.Override
    public double getStartTime() {
      return startTime_;
    }

    public static final int STOP_TIME_FIELD_NUMBER = 11;
    private double stopTime_;
    /**
     * <pre>
     *瞬时分析脉冲的停止时间
     * </pre>
     *
     * <code>double stop_time = 11;</code>
     * @return The stopTime.
     */
    @java.lang.Override
    public double getStopTime() {
      return stopTime_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxwidth_ != 0D) {
        output.writeDouble(4, maxwidth_);
      }
      if (minwidth_ != 0D) {
        output.writeDouble(5, minwidth_);
      }
      if (lvlmode_ != zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode.PEAK.getNumber()) {
        output.writeEnum(6, lvlmode_);
      }
      if (lvldata_ != 0F) {
        output.writeFloat(7, lvldata_);
      }
      if (maxpulseCount_ != 0) {
        output.writeInt32(8, maxpulseCount_);
      }
      if (histogrambins_ != 0) {
        output.writeUInt32(9, histogrambins_);
      }
      if (startTime_ != 0D) {
        output.writeDouble(10, startTime_);
      }
      if (stopTime_ != 0D) {
        output.writeDouble(11, stopTime_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxwidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, maxwidth_);
      }
      if (minwidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, minwidth_);
      }
      if (lvlmode_ != zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode.PEAK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, lvlmode_);
      }
      if (lvldata_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, lvldata_);
      }
      if (maxpulseCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, maxpulseCount_);
      }
      if (histogrambins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, histogrambins_);
      }
      if (startTime_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, startTime_);
      }
      if (stopTime_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, stopTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam other = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam) obj;

      if (java.lang.Double.doubleToLongBits(getMaxwidth())
          != java.lang.Double.doubleToLongBits(
              other.getMaxwidth())) return false;
      if (java.lang.Double.doubleToLongBits(getMinwidth())
          != java.lang.Double.doubleToLongBits(
              other.getMinwidth())) return false;
      if (lvlmode_ != other.lvlmode_) return false;
      if (java.lang.Float.floatToIntBits(getLvldata())
          != java.lang.Float.floatToIntBits(
              other.getLvldata())) return false;
      if (getMaxpulseCount()
          != other.getMaxpulseCount()) return false;
      if (getHistogrambins()
          != other.getHistogrambins()) return false;
      if (java.lang.Double.doubleToLongBits(getStartTime())
          != java.lang.Double.doubleToLongBits(
              other.getStartTime())) return false;
      if (java.lang.Double.doubleToLongBits(getStopTime())
          != java.lang.Double.doubleToLongBits(
              other.getStopTime())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAXWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxwidth()));
      hash = (37 * hash) + MINWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinwidth()));
      hash = (37 * hash) + LVLMODE_FIELD_NUMBER;
      hash = (53 * hash) + lvlmode_;
      hash = (37 * hash) + LVLDATA_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLvldata());
      hash = (37 * hash) + MAXPULSE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxpulseCount();
      hash = (37 * hash) + HISTOGRAMBINS_FIELD_NUMBER;
      hash = (53 * hash) + getHistogrambins();
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getStartTime()));
      hash = (37 * hash) + STOP_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getStopTime()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *脉冲分析参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam)
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxwidth_ = 0D;

        minwidth_ = 0D;

        lvlmode_ = 0;

        lvldata_ = 0F;

        maxpulseCount_ = 0;

        histogrambins_ = 0;

        startTime_ = 0D;

        stopTime_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam build() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam buildPartial() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam result = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam(this);
        result.maxwidth_ = maxwidth_;
        result.minwidth_ = minwidth_;
        result.lvlmode_ = lvlmode_;
        result.lvldata_ = lvldata_;
        result.maxpulseCount_ = maxpulseCount_;
        result.histogrambins_ = histogrambins_;
        result.startTime_ = startTime_;
        result.stopTime_ = stopTime_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam) {
          return mergeFrom((zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam other) {
        if (other == zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance()) return this;
        if (other.getMaxwidth() != 0D) {
          setMaxwidth(other.getMaxwidth());
        }
        if (other.getMinwidth() != 0D) {
          setMinwidth(other.getMinwidth());
        }
        if (other.lvlmode_ != 0) {
          setLvlmodeValue(other.getLvlmodeValue());
        }
        if (other.getLvldata() != 0F) {
          setLvldata(other.getLvldata());
        }
        if (other.getMaxpulseCount() != 0) {
          setMaxpulseCount(other.getMaxpulseCount());
        }
        if (other.getHistogrambins() != 0) {
          setHistogrambins(other.getHistogrambins());
        }
        if (other.getStartTime() != 0D) {
          setStartTime(other.getStartTime());
        }
        if (other.getStopTime() != 0D) {
          setStopTime(other.getStopTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double maxwidth_ ;
      /**
       * <pre>
       *最大限定脉宽 ...分析参数
       * </pre>
       *
       * <code>double maxwidth = 4;</code>
       * @return The maxwidth.
       */
      @java.lang.Override
      public double getMaxwidth() {
        return maxwidth_;
      }
      /**
       * <pre>
       *最大限定脉宽 ...分析参数
       * </pre>
       *
       * <code>double maxwidth = 4;</code>
       * @param value The maxwidth to set.
       * @return This builder for chaining.
       */
      public Builder setMaxwidth(double value) {
        
        maxwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大限定脉宽 ...分析参数
       * </pre>
       *
       * <code>double maxwidth = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxwidth() {
        
        maxwidth_ = 0D;
        onChanged();
        return this;
      }

      private double minwidth_ ;
      /**
       * <pre>
       *最小限定脉宽
       * </pre>
       *
       * <code>double minwidth = 5;</code>
       * @return The minwidth.
       */
      @java.lang.Override
      public double getMinwidth() {
        return minwidth_;
      }
      /**
       * <pre>
       *最小限定脉宽
       * </pre>
       *
       * <code>double minwidth = 5;</code>
       * @param value The minwidth to set.
       * @return This builder for chaining.
       */
      public Builder setMinwidth(double value) {
        
        minwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最小限定脉宽
       * </pre>
       *
       * <code>double minwidth = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinwidth() {
        
        minwidth_ = 0D;
        onChanged();
        return this;
      }

      private int lvlmode_ = 0;
      /**
       * <pre>
       *脉冲幅度比对类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
       * @return The enum numeric value on the wire for lvlmode.
       */
      @java.lang.Override public int getLvlmodeValue() {
        return lvlmode_;
      }
      /**
       * <pre>
       *脉冲幅度比对类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
       * @param value The enum numeric value on the wire for lvlmode to set.
       * @return This builder for chaining.
       */
      public Builder setLvlmodeValue(int value) {
        
        lvlmode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *脉冲幅度比对类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
       * @return The lvlmode.
       */
      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode getLvlmode() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode result = zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode.valueOf(lvlmode_);
        return result == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *脉冲幅度比对类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
       * @param value The lvlmode to set.
       * @return This builder for chaining.
       */
      public Builder setLvlmode(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.LevelMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        lvlmode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *脉冲幅度比对类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.LevelMode lvlmode = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLvlmode() {
        
        lvlmode_ = 0;
        onChanged();
        return this;
      }

      private float lvldata_ ;
      /**
       * <pre>
       *用户提供的比对幅度值
       * </pre>
       *
       * <code>float lvldata = 7;</code>
       * @return The lvldata.
       */
      @java.lang.Override
      public float getLvldata() {
        return lvldata_;
      }
      /**
       * <pre>
       *用户提供的比对幅度值
       * </pre>
       *
       * <code>float lvldata = 7;</code>
       * @param value The lvldata to set.
       * @return This builder for chaining.
       */
      public Builder setLvldata(float value) {
        
        lvldata_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户提供的比对幅度值
       * </pre>
       *
       * <code>float lvldata = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLvldata() {
        
        lvldata_ = 0F;
        onChanged();
        return this;
      }

      private int maxpulseCount_ ;
      /**
       * <pre>
       *最大脉冲计数
       * </pre>
       *
       * <code>int32 maxpulse_count = 8;</code>
       * @return The maxpulseCount.
       */
      @java.lang.Override
      public int getMaxpulseCount() {
        return maxpulseCount_;
      }
      /**
       * <pre>
       *最大脉冲计数
       * </pre>
       *
       * <code>int32 maxpulse_count = 8;</code>
       * @param value The maxpulseCount to set.
       * @return This builder for chaining.
       */
      public Builder setMaxpulseCount(int value) {
        
        maxpulseCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大脉冲计数
       * </pre>
       *
       * <code>int32 maxpulse_count = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxpulseCount() {
        
        maxpulseCount_ = 0;
        onChanged();
        return this;
      }

      private int histogrambins_ ;
      /**
       * <pre>
       *直方图Bins
       * </pre>
       *
       * <code>uint32 histogrambins = 9;</code>
       * @return The histogrambins.
       */
      @java.lang.Override
      public int getHistogrambins() {
        return histogrambins_;
      }
      /**
       * <pre>
       *直方图Bins
       * </pre>
       *
       * <code>uint32 histogrambins = 9;</code>
       * @param value The histogrambins to set.
       * @return This builder for chaining.
       */
      public Builder setHistogrambins(int value) {
        
        histogrambins_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *直方图Bins
       * </pre>
       *
       * <code>uint32 histogrambins = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearHistogrambins() {
        
        histogrambins_ = 0;
        onChanged();
        return this;
      }

      private double startTime_ ;
      /**
       * <pre>
       *瞬时分析脉冲的起始时间（us）
       * </pre>
       *
       * <code>double start_time = 10;</code>
       * @return The startTime.
       */
      @java.lang.Override
      public double getStartTime() {
        return startTime_;
      }
      /**
       * <pre>
       *瞬时分析脉冲的起始时间（us）
       * </pre>
       *
       * <code>double start_time = 10;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(double value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时分析脉冲的起始时间（us）
       * </pre>
       *
       * <code>double start_time = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        
        startTime_ = 0D;
        onChanged();
        return this;
      }

      private double stopTime_ ;
      /**
       * <pre>
       *瞬时分析脉冲的停止时间
       * </pre>
       *
       * <code>double stop_time = 11;</code>
       * @return The stopTime.
       */
      @java.lang.Override
      public double getStopTime() {
        return stopTime_;
      }
      /**
       * <pre>
       *瞬时分析脉冲的停止时间
       * </pre>
       *
       * <code>double stop_time = 11;</code>
       * @param value The stopTime to set.
       * @return This builder for chaining.
       */
      public Builder setStopTime(double value) {
        
        stopTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时分析脉冲的停止时间
       * </pre>
       *
       * <code>double stop_time = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearStopTime() {
        
        stopTime_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam)
    private static final zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam();
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalysisParam>
        PARSER = new com.google.protobuf.AbstractParser<AnalysisParam>() {
      @java.lang.Override
      public AnalysisParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AnalysisParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalysisParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalysisParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommPulseAnalysisTaskRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.pulseAnalysis.CommPulseAnalysisTaskRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return Whether the scenario field is set.
     */
    boolean hasScenario();
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return The scenario.
     */
    zb.dcts.scenario.Scenario.ScenarioId getScenario();
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     */
    zb.dcts.scenario.Scenario.ScenarioIdOrBuilder getScenarioOrBuilder();

    /**
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
     * @return Whether the sourceParam field is set.
     */
    boolean hasSourceParam();
    /**
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
     * @return The sourceParam.
     */
    zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource getSourceParam();
    /**
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
     */
    zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSourceOrBuilder getSourceParamOrBuilder();

    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
     * @return Whether the acqParam field is set.
     */
    boolean hasAcqParam();
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
     * @return The acqParam.
     */
    zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam getAcqParam();
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
     */
    zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParamOrBuilder getAcqParamOrBuilder();

    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
     * @return Whether the analysisParam field is set.
     */
    boolean hasAnalysisParam();
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
     * @return The analysisParam.
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getAnalysisParam();
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder getAnalysisParamOrBuilder();
  }
  /**
   * <pre>
   *任务请求
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.CommPulseAnalysisTaskRequest}
   */
  public static final class CommPulseAnalysisTaskRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.pulseAnalysis.CommPulseAnalysisTaskRequest)
      CommPulseAnalysisTaskRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommPulseAnalysisTaskRequest.newBuilder() to construct.
    private CommPulseAnalysisTaskRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommPulseAnalysisTaskRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommPulseAnalysisTaskRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommPulseAnalysisTaskRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.Scenario.ScenarioId.Builder subBuilder = null;
              if (scenario_ != null) {
                subBuilder = scenario_.toBuilder();
              }
              scenario_ = input.readMessage(zb.dcts.scenario.Scenario.ScenarioId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(scenario_);
                scenario_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.Builder subBuilder = null;
              if (sourceParam_ != null) {
                subBuilder = sourceParam_.toBuilder();
              }
              sourceParam_ = input.readMessage(zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceParam_);
                sourceParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.Builder subBuilder = null;
              if (acqParam_ != null) {
                subBuilder = acqParam_.toBuilder();
              }
              acqParam_ = input.readMessage(zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(acqParam_);
                acqParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder subBuilder = null;
              if (analysisParam_ != null) {
                subBuilder = analysisParam_.toBuilder();
              }
              analysisParam_ = input.readMessage(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(analysisParam_);
                analysisParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest.Builder.class);
    }

    public static final int SCENARIO_FIELD_NUMBER = 1;
    private zb.dcts.scenario.Scenario.ScenarioId scenario_;
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return Whether the scenario field is set.
     */
    @java.lang.Override
    public boolean hasScenario() {
      return scenario_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     * @return The scenario.
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioId getScenario() {
      return scenario_ == null ? zb.dcts.scenario.Scenario.ScenarioId.getDefaultInstance() : scenario_;
    }
    /**
     * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.ScenarioIdOrBuilder getScenarioOrBuilder() {
      return getScenario();
    }

    public static final int SOURCE_PARAM_FIELD_NUMBER = 2;
    private zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource sourceParam_;
    /**
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
     * @return Whether the sourceParam field is set.
     */
    @java.lang.Override
    public boolean hasSourceParam() {
      return sourceParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
     * @return The sourceParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource getSourceParam() {
      return sourceParam_ == null ? zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.getDefaultInstance() : sourceParam_;
    }
    /**
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSourceOrBuilder getSourceParamOrBuilder() {
      return getSourceParam();
    }

    public static final int ACQ_PARAM_FIELD_NUMBER = 3;
    private zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam acqParam_;
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
     * @return Whether the acqParam field is set.
     */
    @java.lang.Override
    public boolean hasAcqParam() {
      return acqParam_ != null;
    }
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
     * @return The acqParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam getAcqParam() {
      return acqParam_ == null ? zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.getDefaultInstance() : acqParam_;
    }
    /**
     * <pre>
     *采集参数
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParamOrBuilder getAcqParamOrBuilder() {
      return getAcqParam();
    }

    public static final int ANALYSIS_PARAM_FIELD_NUMBER = 4;
    private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam analysisParam_;
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
     * @return Whether the analysisParam field is set.
     */
    @java.lang.Override
    public boolean hasAnalysisParam() {
      return analysisParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
     * @return The analysisParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getAnalysisParam() {
      return analysisParam_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance() : analysisParam_;
    }
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder getAnalysisParamOrBuilder() {
      return getAnalysisParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (scenario_ != null) {
        output.writeMessage(1, getScenario());
      }
      if (sourceParam_ != null) {
        output.writeMessage(2, getSourceParam());
      }
      if (acqParam_ != null) {
        output.writeMessage(3, getAcqParam());
      }
      if (analysisParam_ != null) {
        output.writeMessage(4, getAnalysisParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (scenario_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getScenario());
      }
      if (sourceParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSourceParam());
      }
      if (acqParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAcqParam());
      }
      if (analysisParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAnalysisParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest other = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest) obj;

      if (hasScenario() != other.hasScenario()) return false;
      if (hasScenario()) {
        if (!getScenario()
            .equals(other.getScenario())) return false;
      }
      if (hasSourceParam() != other.hasSourceParam()) return false;
      if (hasSourceParam()) {
        if (!getSourceParam()
            .equals(other.getSourceParam())) return false;
      }
      if (hasAcqParam() != other.hasAcqParam()) return false;
      if (hasAcqParam()) {
        if (!getAcqParam()
            .equals(other.getAcqParam())) return false;
      }
      if (hasAnalysisParam() != other.hasAnalysisParam()) return false;
      if (hasAnalysisParam()) {
        if (!getAnalysisParam()
            .equals(other.getAnalysisParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasScenario()) {
        hash = (37 * hash) + SCENARIO_FIELD_NUMBER;
        hash = (53 * hash) + getScenario().hashCode();
      }
      if (hasSourceParam()) {
        hash = (37 * hash) + SOURCE_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getSourceParam().hashCode();
      }
      if (hasAcqParam()) {
        hash = (37 * hash) + ACQ_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getAcqParam().hashCode();
      }
      if (hasAnalysisParam()) {
        hash = (37 * hash) + ANALYSIS_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getAnalysisParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *任务请求
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.CommPulseAnalysisTaskRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.pulseAnalysis.CommPulseAnalysisTaskRequest)
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (scenarioBuilder_ == null) {
          scenario_ = null;
        } else {
          scenario_ = null;
          scenarioBuilder_ = null;
        }
        if (sourceParamBuilder_ == null) {
          sourceParam_ = null;
        } else {
          sourceParam_ = null;
          sourceParamBuilder_ = null;
        }
        if (acqParamBuilder_ == null) {
          acqParam_ = null;
        } else {
          acqParam_ = null;
          acqParamBuilder_ = null;
        }
        if (analysisParamBuilder_ == null) {
          analysisParam_ = null;
        } else {
          analysisParam_ = null;
          analysisParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest build() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest buildPartial() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest result = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest(this);
        if (scenarioBuilder_ == null) {
          result.scenario_ = scenario_;
        } else {
          result.scenario_ = scenarioBuilder_.build();
        }
        if (sourceParamBuilder_ == null) {
          result.sourceParam_ = sourceParam_;
        } else {
          result.sourceParam_ = sourceParamBuilder_.build();
        }
        if (acqParamBuilder_ == null) {
          result.acqParam_ = acqParam_;
        } else {
          result.acqParam_ = acqParamBuilder_.build();
        }
        if (analysisParamBuilder_ == null) {
          result.analysisParam_ = analysisParam_;
        } else {
          result.analysisParam_ = analysisParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest) {
          return mergeFrom((zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest other) {
        if (other == zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest.getDefaultInstance()) return this;
        if (other.hasScenario()) {
          mergeScenario(other.getScenario());
        }
        if (other.hasSourceParam()) {
          mergeSourceParam(other.getSourceParam());
        }
        if (other.hasAcqParam()) {
          mergeAcqParam(other.getAcqParam());
        }
        if (other.hasAnalysisParam()) {
          mergeAnalysisParam(other.getAnalysisParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.Scenario.ScenarioId scenario_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioId, zb.dcts.scenario.Scenario.ScenarioId.Builder, zb.dcts.scenario.Scenario.ScenarioIdOrBuilder> scenarioBuilder_;
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       * @return Whether the scenario field is set.
       */
      public boolean hasScenario() {
        return scenarioBuilder_ != null || scenario_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       * @return The scenario.
       */
      public zb.dcts.scenario.Scenario.ScenarioId getScenario() {
        if (scenarioBuilder_ == null) {
          return scenario_ == null ? zb.dcts.scenario.Scenario.ScenarioId.getDefaultInstance() : scenario_;
        } else {
          return scenarioBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder setScenario(zb.dcts.scenario.Scenario.ScenarioId value) {
        if (scenarioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scenario_ = value;
          onChanged();
        } else {
          scenarioBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder setScenario(
          zb.dcts.scenario.Scenario.ScenarioId.Builder builderForValue) {
        if (scenarioBuilder_ == null) {
          scenario_ = builderForValue.build();
          onChanged();
        } else {
          scenarioBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder mergeScenario(zb.dcts.scenario.Scenario.ScenarioId value) {
        if (scenarioBuilder_ == null) {
          if (scenario_ != null) {
            scenario_ =
              zb.dcts.scenario.Scenario.ScenarioId.newBuilder(scenario_).mergeFrom(value).buildPartial();
          } else {
            scenario_ = value;
          }
          onChanged();
        } else {
          scenarioBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public Builder clearScenario() {
        if (scenarioBuilder_ == null) {
          scenario_ = null;
          onChanged();
        } else {
          scenario_ = null;
          scenarioBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioId.Builder getScenarioBuilder() {
        
        onChanged();
        return getScenarioFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      public zb.dcts.scenario.Scenario.ScenarioIdOrBuilder getScenarioOrBuilder() {
        if (scenarioBuilder_ != null) {
          return scenarioBuilder_.getMessageOrBuilder();
        } else {
          return scenario_ == null ?
              zb.dcts.scenario.Scenario.ScenarioId.getDefaultInstance() : scenario_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.ScenarioId scenario = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.ScenarioId, zb.dcts.scenario.Scenario.ScenarioId.Builder, zb.dcts.scenario.Scenario.ScenarioIdOrBuilder> 
          getScenarioFieldBuilder() {
        if (scenarioBuilder_ == null) {
          scenarioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.Scenario.ScenarioId, zb.dcts.scenario.Scenario.ScenarioId.Builder, zb.dcts.scenario.Scenario.ScenarioIdOrBuilder>(
                  getScenario(),
                  getParentForChildren(),
                  isClean());
          scenario_ = null;
        }
        return scenarioBuilder_;
      }

      private zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource sourceParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.Builder, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSourceOrBuilder> sourceParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       * @return Whether the sourceParam field is set.
       */
      public boolean hasSourceParam() {
        return sourceParamBuilder_ != null || sourceParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       * @return The sourceParam.
       */
      public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource getSourceParam() {
        if (sourceParamBuilder_ == null) {
          return sourceParam_ == null ? zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.getDefaultInstance() : sourceParam_;
        } else {
          return sourceParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       */
      public Builder setSourceParam(zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource value) {
        if (sourceParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceParam_ = value;
          onChanged();
        } else {
          sourceParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       */
      public Builder setSourceParam(
          zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.Builder builderForValue) {
        if (sourceParamBuilder_ == null) {
          sourceParam_ = builderForValue.build();
          onChanged();
        } else {
          sourceParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       */
      public Builder mergeSourceParam(zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource value) {
        if (sourceParamBuilder_ == null) {
          if (sourceParam_ != null) {
            sourceParam_ =
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.newBuilder(sourceParam_).mergeFrom(value).buildPartial();
          } else {
            sourceParam_ = value;
          }
          onChanged();
        } else {
          sourceParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       */
      public Builder clearSourceParam() {
        if (sourceParamBuilder_ == null) {
          sourceParam_ = null;
          onChanged();
        } else {
          sourceParam_ = null;
          sourceParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       */
      public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.Builder getSourceParamBuilder() {
        
        onChanged();
        return getSourceParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       */
      public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSourceOrBuilder getSourceParamOrBuilder() {
        if (sourceParamBuilder_ != null) {
          return sourceParamBuilder_.getMessageOrBuilder();
        } else {
          return sourceParam_ == null ?
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.getDefaultInstance() : sourceParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcqSource source_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.Builder, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSourceOrBuilder> 
          getSourceParamFieldBuilder() {
        if (sourceParamBuilder_ == null) {
          sourceParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSource.Builder, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcqSourceOrBuilder>(
                  getSourceParam(),
                  getParentForChildren(),
                  isClean());
          sourceParam_ = null;
        }
        return sourceParamBuilder_;
      }

      private zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam acqParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.Builder, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParamOrBuilder> acqParamBuilder_;
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       * @return Whether the acqParam field is set.
       */
      public boolean hasAcqParam() {
        return acqParamBuilder_ != null || acqParam_ != null;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       * @return The acqParam.
       */
      public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam getAcqParam() {
        if (acqParamBuilder_ == null) {
          return acqParam_ == null ? zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.getDefaultInstance() : acqParam_;
        } else {
          return acqParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       */
      public Builder setAcqParam(zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam value) {
        if (acqParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acqParam_ = value;
          onChanged();
        } else {
          acqParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       */
      public Builder setAcqParam(
          zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.Builder builderForValue) {
        if (acqParamBuilder_ == null) {
          acqParam_ = builderForValue.build();
          onChanged();
        } else {
          acqParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       */
      public Builder mergeAcqParam(zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam value) {
        if (acqParamBuilder_ == null) {
          if (acqParam_ != null) {
            acqParam_ =
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.newBuilder(acqParam_).mergeFrom(value).buildPartial();
          } else {
            acqParam_ = value;
          }
          onChanged();
        } else {
          acqParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       */
      public Builder clearAcqParam() {
        if (acqParamBuilder_ == null) {
          acqParam_ = null;
          onChanged();
        } else {
          acqParam_ = null;
          acqParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       */
      public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.Builder getAcqParamBuilder() {
        
        onChanged();
        return getAcqParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       */
      public zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParamOrBuilder getAcqParamOrBuilder() {
        if (acqParamBuilder_ != null) {
          return acqParamBuilder_.getMessageOrBuilder();
        } else {
          return acqParam_ == null ?
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.getDefaultInstance() : acqParam_;
        }
      }
      /**
       * <pre>
       *采集参数
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.commIqData.CommIQAcquireParam acq_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.Builder, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParamOrBuilder> 
          getAcqParamFieldBuilder() {
        if (acqParamBuilder_ == null) {
          acqParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParam.Builder, zb.dcts.scenario.kh.commIqData.KhIQDataAcq.CommIQAcquireParamOrBuilder>(
                  getAcqParam(),
                  getParentForChildren(),
                  isClean());
          acqParam_ = null;
        }
        return acqParamBuilder_;
      }

      private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam analysisParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder> analysisParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       * @return Whether the analysisParam field is set.
       */
      public boolean hasAnalysisParam() {
        return analysisParamBuilder_ != null || analysisParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       * @return The analysisParam.
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getAnalysisParam() {
        if (analysisParamBuilder_ == null) {
          return analysisParam_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance() : analysisParam_;
        } else {
          return analysisParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       */
      public Builder setAnalysisParam(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam value) {
        if (analysisParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          analysisParam_ = value;
          onChanged();
        } else {
          analysisParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       */
      public Builder setAnalysisParam(
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder builderForValue) {
        if (analysisParamBuilder_ == null) {
          analysisParam_ = builderForValue.build();
          onChanged();
        } else {
          analysisParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       */
      public Builder mergeAnalysisParam(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam value) {
        if (analysisParamBuilder_ == null) {
          if (analysisParam_ != null) {
            analysisParam_ =
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.newBuilder(analysisParam_).mergeFrom(value).buildPartial();
          } else {
            analysisParam_ = value;
          }
          onChanged();
        } else {
          analysisParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       */
      public Builder clearAnalysisParam() {
        if (analysisParamBuilder_ == null) {
          analysisParam_ = null;
          onChanged();
        } else {
          analysisParam_ = null;
          analysisParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder getAnalysisParamBuilder() {
        
        onChanged();
        return getAnalysisParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder getAnalysisParamOrBuilder() {
        if (analysisParamBuilder_ != null) {
          return analysisParamBuilder_.getMessageOrBuilder();
        } else {
          return analysisParam_ == null ?
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance() : analysisParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder> 
          getAnalysisParamFieldBuilder() {
        if (analysisParamBuilder_ == null) {
          analysisParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder>(
                  getAnalysisParam(),
                  getParentForChildren(),
                  isClean());
          analysisParam_ = null;
        }
        return analysisParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.pulseAnalysis.CommPulseAnalysisTaskRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.pulseAnalysis.CommPulseAnalysisTaskRequest)
    private static final zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest();
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommPulseAnalysisTaskRequest>
        PARSER = new com.google.protobuf.AbstractParser<CommPulseAnalysisTaskRequest>() {
      @java.lang.Override
      public CommPulseAnalysisTaskRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommPulseAnalysisTaskRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommPulseAnalysisTaskRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommPulseAnalysisTaskRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseAnalysisTaskRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChangePulseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.pulseAnalysis.ChangePulseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
     * @return Whether the taskId field is set.
     */
    boolean hasTaskId();
    /**
     * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
     * @return The taskId.
     */
    zb.dcts.scenario.Scenario.TaskId getTaskId();
    /**
     * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
     */
    zb.dcts.scenario.Scenario.TaskIdOrBuilder getTaskIdOrBuilder();

    /**
     * <pre>
     *修改参数索引。
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
     * @return The enum numeric value on the wire for paramIndex.
     */
    int getParamIndexValue();
    /**
     * <pre>
     *修改参数索引。
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
     * @return The paramIndex.
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex getParamIndex();

    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
     * @return Whether the analysisParam field is set.
     */
    boolean hasAnalysisParam();
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
     * @return The analysisParam.
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getAnalysisParam();
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder getAnalysisParamOrBuilder();
  }
  /**
   * <pre>
   *修改请求参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.ChangePulseRequest}
   */
  public static final class ChangePulseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.pulseAnalysis.ChangePulseRequest)
      ChangePulseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChangePulseRequest.newBuilder() to construct.
    private ChangePulseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChangePulseRequest() {
      paramIndex_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChangePulseRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChangePulseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.Scenario.TaskId.Builder subBuilder = null;
              if (taskId_ != null) {
                subBuilder = taskId_.toBuilder();
              }
              taskId_ = input.readMessage(zb.dcts.scenario.Scenario.TaskId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskId_);
                taskId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              paramIndex_ = rawValue;
              break;
            }
            case 26: {
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder subBuilder = null;
              if (analysisParam_ != null) {
                subBuilder = analysisParam_.toBuilder();
              }
              analysisParam_ = input.readMessage(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(analysisParam_);
                analysisParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest.Builder.class);
    }

    public static final int TASK_ID_FIELD_NUMBER = 1;
    private zb.dcts.scenario.Scenario.TaskId taskId_;
    /**
     * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
     * @return Whether the taskId field is set.
     */
    @java.lang.Override
    public boolean hasTaskId() {
      return taskId_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
     * @return The taskId.
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.TaskId getTaskId() {
      return taskId_ == null ? zb.dcts.scenario.Scenario.TaskId.getDefaultInstance() : taskId_;
    }
    /**
     * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.Scenario.TaskIdOrBuilder getTaskIdOrBuilder() {
      return getTaskId();
    }

    public static final int PARAM_INDEX_FIELD_NUMBER = 2;
    private int paramIndex_;
    /**
     * <pre>
     *修改参数索引。
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
     * @return The enum numeric value on the wire for paramIndex.
     */
    @java.lang.Override public int getParamIndexValue() {
      return paramIndex_;
    }
    /**
     * <pre>
     *修改参数索引。
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
     * @return The paramIndex.
     */
    @java.lang.Override public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex getParamIndex() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex result = zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex.valueOf(paramIndex_);
      return result == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex.UNRECOGNIZED : result;
    }

    public static final int ANALYSIS_PARAM_FIELD_NUMBER = 3;
    private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam analysisParam_;
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
     * @return Whether the analysisParam field is set.
     */
    @java.lang.Override
    public boolean hasAnalysisParam() {
      return analysisParam_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
     * @return The analysisParam.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getAnalysisParam() {
      return analysisParam_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance() : analysisParam_;
    }
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder getAnalysisParamOrBuilder() {
      return getAnalysisParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (taskId_ != null) {
        output.writeMessage(1, getTaskId());
      }
      if (paramIndex_ != zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex.ANALYSIS_PARAM.getNumber()) {
        output.writeEnum(2, paramIndex_);
      }
      if (analysisParam_ != null) {
        output.writeMessage(3, getAnalysisParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (taskId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTaskId());
      }
      if (paramIndex_ != zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex.ANALYSIS_PARAM.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, paramIndex_);
      }
      if (analysisParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAnalysisParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest other = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest) obj;

      if (hasTaskId() != other.hasTaskId()) return false;
      if (hasTaskId()) {
        if (!getTaskId()
            .equals(other.getTaskId())) return false;
      }
      if (paramIndex_ != other.paramIndex_) return false;
      if (hasAnalysisParam() != other.hasAnalysisParam()) return false;
      if (hasAnalysisParam()) {
        if (!getAnalysisParam()
            .equals(other.getAnalysisParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTaskId()) {
        hash = (37 * hash) + TASK_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTaskId().hashCode();
      }
      hash = (37 * hash) + PARAM_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + paramIndex_;
      if (hasAnalysisParam()) {
        hash = (37 * hash) + ANALYSIS_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getAnalysisParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *修改请求参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.ChangePulseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.pulseAnalysis.ChangePulseRequest)
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (taskIdBuilder_ == null) {
          taskId_ = null;
        } else {
          taskId_ = null;
          taskIdBuilder_ = null;
        }
        paramIndex_ = 0;

        if (analysisParamBuilder_ == null) {
          analysisParam_ = null;
        } else {
          analysisParam_ = null;
          analysisParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest build() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest buildPartial() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest result = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest(this);
        if (taskIdBuilder_ == null) {
          result.taskId_ = taskId_;
        } else {
          result.taskId_ = taskIdBuilder_.build();
        }
        result.paramIndex_ = paramIndex_;
        if (analysisParamBuilder_ == null) {
          result.analysisParam_ = analysisParam_;
        } else {
          result.analysisParam_ = analysisParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest) {
          return mergeFrom((zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest other) {
        if (other == zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest.getDefaultInstance()) return this;
        if (other.hasTaskId()) {
          mergeTaskId(other.getTaskId());
        }
        if (other.paramIndex_ != 0) {
          setParamIndexValue(other.getParamIndexValue());
        }
        if (other.hasAnalysisParam()) {
          mergeAnalysisParam(other.getAnalysisParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.Scenario.TaskId taskId_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.TaskId, zb.dcts.scenario.Scenario.TaskId.Builder, zb.dcts.scenario.Scenario.TaskIdOrBuilder> taskIdBuilder_;
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       * @return Whether the taskId field is set.
       */
      public boolean hasTaskId() {
        return taskIdBuilder_ != null || taskId_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       * @return The taskId.
       */
      public zb.dcts.scenario.Scenario.TaskId getTaskId() {
        if (taskIdBuilder_ == null) {
          return taskId_ == null ? zb.dcts.scenario.Scenario.TaskId.getDefaultInstance() : taskId_;
        } else {
          return taskIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       */
      public Builder setTaskId(zb.dcts.scenario.Scenario.TaskId value) {
        if (taskIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskId_ = value;
          onChanged();
        } else {
          taskIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       */
      public Builder setTaskId(
          zb.dcts.scenario.Scenario.TaskId.Builder builderForValue) {
        if (taskIdBuilder_ == null) {
          taskId_ = builderForValue.build();
          onChanged();
        } else {
          taskIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       */
      public Builder mergeTaskId(zb.dcts.scenario.Scenario.TaskId value) {
        if (taskIdBuilder_ == null) {
          if (taskId_ != null) {
            taskId_ =
              zb.dcts.scenario.Scenario.TaskId.newBuilder(taskId_).mergeFrom(value).buildPartial();
          } else {
            taskId_ = value;
          }
          onChanged();
        } else {
          taskIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       */
      public Builder clearTaskId() {
        if (taskIdBuilder_ == null) {
          taskId_ = null;
          onChanged();
        } else {
          taskId_ = null;
          taskIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       */
      public zb.dcts.scenario.Scenario.TaskId.Builder getTaskIdBuilder() {
        
        onChanged();
        return getTaskIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       */
      public zb.dcts.scenario.Scenario.TaskIdOrBuilder getTaskIdOrBuilder() {
        if (taskIdBuilder_ != null) {
          return taskIdBuilder_.getMessageOrBuilder();
        } else {
          return taskId_ == null ?
              zb.dcts.scenario.Scenario.TaskId.getDefaultInstance() : taskId_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.TaskId task_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.Scenario.TaskId, zb.dcts.scenario.Scenario.TaskId.Builder, zb.dcts.scenario.Scenario.TaskIdOrBuilder> 
          getTaskIdFieldBuilder() {
        if (taskIdBuilder_ == null) {
          taskIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.Scenario.TaskId, zb.dcts.scenario.Scenario.TaskId.Builder, zb.dcts.scenario.Scenario.TaskIdOrBuilder>(
                  getTaskId(),
                  getParentForChildren(),
                  isClean());
          taskId_ = null;
        }
        return taskIdBuilder_;
      }

      private int paramIndex_ = 0;
      /**
       * <pre>
       *修改参数索引。
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
       * @return The enum numeric value on the wire for paramIndex.
       */
      @java.lang.Override public int getParamIndexValue() {
        return paramIndex_;
      }
      /**
       * <pre>
       *修改参数索引。
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
       * @param value The enum numeric value on the wire for paramIndex to set.
       * @return This builder for chaining.
       */
      public Builder setParamIndexValue(int value) {
        
        paramIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *修改参数索引。
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
       * @return The paramIndex.
       */
      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex getParamIndex() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex result = zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex.valueOf(paramIndex_);
        return result == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *修改参数索引。
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
       * @param value The paramIndex to set.
       * @return This builder for chaining.
       */
      public Builder setParamIndex(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ParamIndex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        paramIndex_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *修改参数索引。
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.ParamIndex param_index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearParamIndex() {
        
        paramIndex_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam analysisParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder> analysisParamBuilder_;
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       * @return Whether the analysisParam field is set.
       */
      public boolean hasAnalysisParam() {
        return analysisParamBuilder_ != null || analysisParam_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       * @return The analysisParam.
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam getAnalysisParam() {
        if (analysisParamBuilder_ == null) {
          return analysisParam_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance() : analysisParam_;
        } else {
          return analysisParamBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       */
      public Builder setAnalysisParam(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam value) {
        if (analysisParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          analysisParam_ = value;
          onChanged();
        } else {
          analysisParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       */
      public Builder setAnalysisParam(
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder builderForValue) {
        if (analysisParamBuilder_ == null) {
          analysisParam_ = builderForValue.build();
          onChanged();
        } else {
          analysisParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       */
      public Builder mergeAnalysisParam(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam value) {
        if (analysisParamBuilder_ == null) {
          if (analysisParam_ != null) {
            analysisParam_ =
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.newBuilder(analysisParam_).mergeFrom(value).buildPartial();
          } else {
            analysisParam_ = value;
          }
          onChanged();
        } else {
          analysisParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       */
      public Builder clearAnalysisParam() {
        if (analysisParamBuilder_ == null) {
          analysisParam_ = null;
          onChanged();
        } else {
          analysisParam_ = null;
          analysisParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder getAnalysisParamBuilder() {
        
        onChanged();
        return getAnalysisParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder getAnalysisParamOrBuilder() {
        if (analysisParamBuilder_ != null) {
          return analysisParamBuilder_.getMessageOrBuilder();
        } else {
          return analysisParam_ == null ?
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.getDefaultInstance() : analysisParam_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.AnalysisParam analysis_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder> 
          getAnalysisParamFieldBuilder() {
        if (analysisParamBuilder_ == null) {
          analysisParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParam.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.AnalysisParamOrBuilder>(
                  getAnalysisParam(),
                  getParentForChildren(),
                  isClean());
          analysisParam_ = null;
        }
        return analysisParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.pulseAnalysis.ChangePulseRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.pulseAnalysis.ChangePulseRequest)
    private static final zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest();
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChangePulseRequest>
        PARSER = new com.google.protobuf.AbstractParser<ChangePulseRequest>() {
      @java.lang.Override
      public ChangePulseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChangePulseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChangePulseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChangePulseRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.ChangePulseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PulseParamsAnalysisResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *峰值功率
     * </pre>
     *
     * <code>float peakPower = 1;</code>
     * @return The peakPower.
     */
    float getPeakPower();

    /**
     * <pre>
     *最小功率
     * </pre>
     *
     * <code>float minPower = 2;</code>
     * @return The minPower.
     */
    float getMinPower();

    /**
     * <pre>
     *平均功率
     * </pre>
     *
     * <code>float avgOnPower = 3;</code>
     * @return The avgOnPower.
     */
    float getAvgOnPower();

    /**
     * <pre>
     *上升时间
     * </pre>
     *
     * <code>double riseTime = 4;</code>
     * @return The riseTime.
     */
    double getRiseTime();

    /**
     * <pre>
     *下降时间     
     * </pre>
     *
     * <code>double fallTime = 5;</code>
     * @return The fallTime.
     */
    double getFallTime();

    /**
     * <pre>
     *脉冲宽度 
     * </pre>
     *
     * <code>double PW = 6;</code>
     * @return The pW.
     */
    double getPW();

    /**
     * <pre>
     *脉冲重复间隔
     * </pre>
     *
     * <code>double PRI = 7;</code>
     * @return The pRI.
     */
    double getPRI();

    /**
     * <pre>
     *脉冲到达时刻
     * </pre>
     *
     * <code>uint64 TOA = 8;</code>
     * @return The tOA.
     */
    long getTOA();
  }
  /**
   * <pre>
   *脉冲参数分析结果
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult}
   */
  public static final class PulseParamsAnalysisResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult)
      PulseParamsAnalysisResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PulseParamsAnalysisResult.newBuilder() to construct.
    private PulseParamsAnalysisResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PulseParamsAnalysisResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PulseParamsAnalysisResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PulseParamsAnalysisResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              peakPower_ = input.readFloat();
              break;
            }
            case 21: {

              minPower_ = input.readFloat();
              break;
            }
            case 29: {

              avgOnPower_ = input.readFloat();
              break;
            }
            case 33: {

              riseTime_ = input.readDouble();
              break;
            }
            case 41: {

              fallTime_ = input.readDouble();
              break;
            }
            case 49: {

              pW_ = input.readDouble();
              break;
            }
            case 57: {

              pRI_ = input.readDouble();
              break;
            }
            case 64: {

              tOA_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder.class);
    }

    public static final int PEAKPOWER_FIELD_NUMBER = 1;
    private float peakPower_;
    /**
     * <pre>
     *峰值功率
     * </pre>
     *
     * <code>float peakPower = 1;</code>
     * @return The peakPower.
     */
    @java.lang.Override
    public float getPeakPower() {
      return peakPower_;
    }

    public static final int MINPOWER_FIELD_NUMBER = 2;
    private float minPower_;
    /**
     * <pre>
     *最小功率
     * </pre>
     *
     * <code>float minPower = 2;</code>
     * @return The minPower.
     */
    @java.lang.Override
    public float getMinPower() {
      return minPower_;
    }

    public static final int AVGONPOWER_FIELD_NUMBER = 3;
    private float avgOnPower_;
    /**
     * <pre>
     *平均功率
     * </pre>
     *
     * <code>float avgOnPower = 3;</code>
     * @return The avgOnPower.
     */
    @java.lang.Override
    public float getAvgOnPower() {
      return avgOnPower_;
    }

    public static final int RISETIME_FIELD_NUMBER = 4;
    private double riseTime_;
    /**
     * <pre>
     *上升时间
     * </pre>
     *
     * <code>double riseTime = 4;</code>
     * @return The riseTime.
     */
    @java.lang.Override
    public double getRiseTime() {
      return riseTime_;
    }

    public static final int FALLTIME_FIELD_NUMBER = 5;
    private double fallTime_;
    /**
     * <pre>
     *下降时间     
     * </pre>
     *
     * <code>double fallTime = 5;</code>
     * @return The fallTime.
     */
    @java.lang.Override
    public double getFallTime() {
      return fallTime_;
    }

    public static final int PW_FIELD_NUMBER = 6;
    private double pW_;
    /**
     * <pre>
     *脉冲宽度 
     * </pre>
     *
     * <code>double PW = 6;</code>
     * @return The pW.
     */
    @java.lang.Override
    public double getPW() {
      return pW_;
    }

    public static final int PRI_FIELD_NUMBER = 7;
    private double pRI_;
    /**
     * <pre>
     *脉冲重复间隔
     * </pre>
     *
     * <code>double PRI = 7;</code>
     * @return The pRI.
     */
    @java.lang.Override
    public double getPRI() {
      return pRI_;
    }

    public static final int TOA_FIELD_NUMBER = 8;
    private long tOA_;
    /**
     * <pre>
     *脉冲到达时刻
     * </pre>
     *
     * <code>uint64 TOA = 8;</code>
     * @return The tOA.
     */
    @java.lang.Override
    public long getTOA() {
      return tOA_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (peakPower_ != 0F) {
        output.writeFloat(1, peakPower_);
      }
      if (minPower_ != 0F) {
        output.writeFloat(2, minPower_);
      }
      if (avgOnPower_ != 0F) {
        output.writeFloat(3, avgOnPower_);
      }
      if (riseTime_ != 0D) {
        output.writeDouble(4, riseTime_);
      }
      if (fallTime_ != 0D) {
        output.writeDouble(5, fallTime_);
      }
      if (pW_ != 0D) {
        output.writeDouble(6, pW_);
      }
      if (pRI_ != 0D) {
        output.writeDouble(7, pRI_);
      }
      if (tOA_ != 0L) {
        output.writeUInt64(8, tOA_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (peakPower_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, peakPower_);
      }
      if (minPower_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minPower_);
      }
      if (avgOnPower_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, avgOnPower_);
      }
      if (riseTime_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, riseTime_);
      }
      if (fallTime_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, fallTime_);
      }
      if (pW_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, pW_);
      }
      if (pRI_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, pRI_);
      }
      if (tOA_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, tOA_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult other = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult) obj;

      if (java.lang.Float.floatToIntBits(getPeakPower())
          != java.lang.Float.floatToIntBits(
              other.getPeakPower())) return false;
      if (java.lang.Float.floatToIntBits(getMinPower())
          != java.lang.Float.floatToIntBits(
              other.getMinPower())) return false;
      if (java.lang.Float.floatToIntBits(getAvgOnPower())
          != java.lang.Float.floatToIntBits(
              other.getAvgOnPower())) return false;
      if (java.lang.Double.doubleToLongBits(getRiseTime())
          != java.lang.Double.doubleToLongBits(
              other.getRiseTime())) return false;
      if (java.lang.Double.doubleToLongBits(getFallTime())
          != java.lang.Double.doubleToLongBits(
              other.getFallTime())) return false;
      if (java.lang.Double.doubleToLongBits(getPW())
          != java.lang.Double.doubleToLongBits(
              other.getPW())) return false;
      if (java.lang.Double.doubleToLongBits(getPRI())
          != java.lang.Double.doubleToLongBits(
              other.getPRI())) return false;
      if (getTOA()
          != other.getTOA()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PEAKPOWER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPeakPower());
      hash = (37 * hash) + MINPOWER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinPower());
      hash = (37 * hash) + AVGONPOWER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAvgOnPower());
      hash = (37 * hash) + RISETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRiseTime()));
      hash = (37 * hash) + FALLTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFallTime()));
      hash = (37 * hash) + PW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPW()));
      hash = (37 * hash) + PRI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPRI()));
      hash = (37 * hash) + TOA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTOA());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *脉冲参数分析结果
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult)
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        peakPower_ = 0F;

        minPower_ = 0F;

        avgOnPower_ = 0F;

        riseTime_ = 0D;

        fallTime_ = 0D;

        pW_ = 0D;

        pRI_ = 0D;

        tOA_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult build() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult buildPartial() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult result = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult(this);
        result.peakPower_ = peakPower_;
        result.minPower_ = minPower_;
        result.avgOnPower_ = avgOnPower_;
        result.riseTime_ = riseTime_;
        result.fallTime_ = fallTime_;
        result.pW_ = pW_;
        result.pRI_ = pRI_;
        result.tOA_ = tOA_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult) {
          return mergeFrom((zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult other) {
        if (other == zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.getDefaultInstance()) return this;
        if (other.getPeakPower() != 0F) {
          setPeakPower(other.getPeakPower());
        }
        if (other.getMinPower() != 0F) {
          setMinPower(other.getMinPower());
        }
        if (other.getAvgOnPower() != 0F) {
          setAvgOnPower(other.getAvgOnPower());
        }
        if (other.getRiseTime() != 0D) {
          setRiseTime(other.getRiseTime());
        }
        if (other.getFallTime() != 0D) {
          setFallTime(other.getFallTime());
        }
        if (other.getPW() != 0D) {
          setPW(other.getPW());
        }
        if (other.getPRI() != 0D) {
          setPRI(other.getPRI());
        }
        if (other.getTOA() != 0L) {
          setTOA(other.getTOA());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float peakPower_ ;
      /**
       * <pre>
       *峰值功率
       * </pre>
       *
       * <code>float peakPower = 1;</code>
       * @return The peakPower.
       */
      @java.lang.Override
      public float getPeakPower() {
        return peakPower_;
      }
      /**
       * <pre>
       *峰值功率
       * </pre>
       *
       * <code>float peakPower = 1;</code>
       * @param value The peakPower to set.
       * @return This builder for chaining.
       */
      public Builder setPeakPower(float value) {
        
        peakPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *峰值功率
       * </pre>
       *
       * <code>float peakPower = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeakPower() {
        
        peakPower_ = 0F;
        onChanged();
        return this;
      }

      private float minPower_ ;
      /**
       * <pre>
       *最小功率
       * </pre>
       *
       * <code>float minPower = 2;</code>
       * @return The minPower.
       */
      @java.lang.Override
      public float getMinPower() {
        return minPower_;
      }
      /**
       * <pre>
       *最小功率
       * </pre>
       *
       * <code>float minPower = 2;</code>
       * @param value The minPower to set.
       * @return This builder for chaining.
       */
      public Builder setMinPower(float value) {
        
        minPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最小功率
       * </pre>
       *
       * <code>float minPower = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinPower() {
        
        minPower_ = 0F;
        onChanged();
        return this;
      }

      private float avgOnPower_ ;
      /**
       * <pre>
       *平均功率
       * </pre>
       *
       * <code>float avgOnPower = 3;</code>
       * @return The avgOnPower.
       */
      @java.lang.Override
      public float getAvgOnPower() {
        return avgOnPower_;
      }
      /**
       * <pre>
       *平均功率
       * </pre>
       *
       * <code>float avgOnPower = 3;</code>
       * @param value The avgOnPower to set.
       * @return This builder for chaining.
       */
      public Builder setAvgOnPower(float value) {
        
        avgOnPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *平均功率
       * </pre>
       *
       * <code>float avgOnPower = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvgOnPower() {
        
        avgOnPower_ = 0F;
        onChanged();
        return this;
      }

      private double riseTime_ ;
      /**
       * <pre>
       *上升时间
       * </pre>
       *
       * <code>double riseTime = 4;</code>
       * @return The riseTime.
       */
      @java.lang.Override
      public double getRiseTime() {
        return riseTime_;
      }
      /**
       * <pre>
       *上升时间
       * </pre>
       *
       * <code>double riseTime = 4;</code>
       * @param value The riseTime to set.
       * @return This builder for chaining.
       */
      public Builder setRiseTime(double value) {
        
        riseTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上升时间
       * </pre>
       *
       * <code>double riseTime = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRiseTime() {
        
        riseTime_ = 0D;
        onChanged();
        return this;
      }

      private double fallTime_ ;
      /**
       * <pre>
       *下降时间     
       * </pre>
       *
       * <code>double fallTime = 5;</code>
       * @return The fallTime.
       */
      @java.lang.Override
      public double getFallTime() {
        return fallTime_;
      }
      /**
       * <pre>
       *下降时间     
       * </pre>
       *
       * <code>double fallTime = 5;</code>
       * @param value The fallTime to set.
       * @return This builder for chaining.
       */
      public Builder setFallTime(double value) {
        
        fallTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *下降时间     
       * </pre>
       *
       * <code>double fallTime = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFallTime() {
        
        fallTime_ = 0D;
        onChanged();
        return this;
      }

      private double pW_ ;
      /**
       * <pre>
       *脉冲宽度 
       * </pre>
       *
       * <code>double PW = 6;</code>
       * @return The pW.
       */
      @java.lang.Override
      public double getPW() {
        return pW_;
      }
      /**
       * <pre>
       *脉冲宽度 
       * </pre>
       *
       * <code>double PW = 6;</code>
       * @param value The pW to set.
       * @return This builder for chaining.
       */
      public Builder setPW(double value) {
        
        pW_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *脉冲宽度 
       * </pre>
       *
       * <code>double PW = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPW() {
        
        pW_ = 0D;
        onChanged();
        return this;
      }

      private double pRI_ ;
      /**
       * <pre>
       *脉冲重复间隔
       * </pre>
       *
       * <code>double PRI = 7;</code>
       * @return The pRI.
       */
      @java.lang.Override
      public double getPRI() {
        return pRI_;
      }
      /**
       * <pre>
       *脉冲重复间隔
       * </pre>
       *
       * <code>double PRI = 7;</code>
       * @param value The pRI to set.
       * @return This builder for chaining.
       */
      public Builder setPRI(double value) {
        
        pRI_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *脉冲重复间隔
       * </pre>
       *
       * <code>double PRI = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPRI() {
        
        pRI_ = 0D;
        onChanged();
        return this;
      }

      private long tOA_ ;
      /**
       * <pre>
       *脉冲到达时刻
       * </pre>
       *
       * <code>uint64 TOA = 8;</code>
       * @return The tOA.
       */
      @java.lang.Override
      public long getTOA() {
        return tOA_;
      }
      /**
       * <pre>
       *脉冲到达时刻
       * </pre>
       *
       * <code>uint64 TOA = 8;</code>
       * @param value The tOA to set.
       * @return This builder for chaining.
       */
      public Builder setTOA(long value) {
        
        tOA_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *脉冲到达时刻
       * </pre>
       *
       * <code>uint64 TOA = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTOA() {
        
        tOA_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult)
    private static final zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult();
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PulseParamsAnalysisResult>
        PARSER = new com.google.protobuf.AbstractParser<PulseParamsAnalysisResult>() {
      @java.lang.Override
      public PulseParamsAnalysisResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PulseParamsAnalysisResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PulseParamsAnalysisResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PulseParamsAnalysisResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PulseTransientAnalysisDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *瞬时幅度数据
     * </pre>
     *
     * <code>repeated float amplitude = 1;</code>
     * @return A list containing the amplitude.
     */
    java.util.List<java.lang.Float> getAmplitudeList();
    /**
     * <pre>
     *瞬时幅度数据
     * </pre>
     *
     * <code>repeated float amplitude = 1;</code>
     * @return The count of amplitude.
     */
    int getAmplitudeCount();
    /**
     * <pre>
     *瞬时幅度数据
     * </pre>
     *
     * <code>repeated float amplitude = 1;</code>
     * @param index The index of the element to return.
     * @return The amplitude at the given index.
     */
    float getAmplitude(int index);

    /**
     * <pre>
     *瞬时相位数据
     * </pre>
     *
     * <code>repeated float phase = 2;</code>
     * @return A list containing the phase.
     */
    java.util.List<java.lang.Float> getPhaseList();
    /**
     * <pre>
     *瞬时相位数据
     * </pre>
     *
     * <code>repeated float phase = 2;</code>
     * @return The count of phase.
     */
    int getPhaseCount();
    /**
     * <pre>
     *瞬时相位数据
     * </pre>
     *
     * <code>repeated float phase = 2;</code>
     * @param index The index of the element to return.
     * @return The phase at the given index.
     */
    float getPhase(int index);

    /**
     * <pre>
     *瞬时频率数据
     * </pre>
     *
     * <code>repeated float frequency = 3;</code>
     * @return A list containing the frequency.
     */
    java.util.List<java.lang.Float> getFrequencyList();
    /**
     * <pre>
     *瞬时频率数据
     * </pre>
     *
     * <code>repeated float frequency = 3;</code>
     * @return The count of frequency.
     */
    int getFrequencyCount();
    /**
     * <pre>
     *瞬时频率数据
     * </pre>
     *
     * <code>repeated float frequency = 3;</code>
     * @param index The index of the element to return.
     * @return The frequency at the given index.
     */
    float getFrequency(int index);

    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    java.util.List<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult> 
        getParamsResultList();
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult getParamsResult(int index);
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    int getParamsResultCount();
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    java.util.List<? extends zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder> 
        getParamsResultOrBuilderList();
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder getParamsResultOrBuilder(
        int index);
  }
  /**
   * <pre>
   *脉冲瞬时分析数据
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData}
   */
  public static final class PulseTransientAnalysisData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData)
      PulseTransientAnalysisDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PulseTransientAnalysisData.newBuilder() to construct.
    private PulseTransientAnalysisData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PulseTransientAnalysisData() {
      amplitude_ = emptyFloatList();
      phase_ = emptyFloatList();
      frequency_ = emptyFloatList();
      paramsResult_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PulseTransientAnalysisData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PulseTransientAnalysisData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                amplitude_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              amplitude_.addFloat(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                amplitude_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                amplitude_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                phase_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              phase_.addFloat(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                phase_ = newFloatList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                phase_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                frequency_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              frequency_.addFloat(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                frequency_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                frequency_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                paramsResult_ = new java.util.ArrayList<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult>();
                mutable_bitField0_ |= 0x00000008;
              }
              paramsResult_.add(
                  input.readMessage(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          amplitude_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          phase_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          frequency_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          paramsResult_ = java.util.Collections.unmodifiableList(paramsResult_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder.class);
    }

    public static final int AMPLITUDE_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.FloatList amplitude_;
    /**
     * <pre>
     *瞬时幅度数据
     * </pre>
     *
     * <code>repeated float amplitude = 1;</code>
     * @return A list containing the amplitude.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getAmplitudeList() {
      return amplitude_;
    }
    /**
     * <pre>
     *瞬时幅度数据
     * </pre>
     *
     * <code>repeated float amplitude = 1;</code>
     * @return The count of amplitude.
     */
    public int getAmplitudeCount() {
      return amplitude_.size();
    }
    /**
     * <pre>
     *瞬时幅度数据
     * </pre>
     *
     * <code>repeated float amplitude = 1;</code>
     * @param index The index of the element to return.
     * @return The amplitude at the given index.
     */
    public float getAmplitude(int index) {
      return amplitude_.getFloat(index);
    }
    private int amplitudeMemoizedSerializedSize = -1;

    public static final int PHASE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.FloatList phase_;
    /**
     * <pre>
     *瞬时相位数据
     * </pre>
     *
     * <code>repeated float phase = 2;</code>
     * @return A list containing the phase.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getPhaseList() {
      return phase_;
    }
    /**
     * <pre>
     *瞬时相位数据
     * </pre>
     *
     * <code>repeated float phase = 2;</code>
     * @return The count of phase.
     */
    public int getPhaseCount() {
      return phase_.size();
    }
    /**
     * <pre>
     *瞬时相位数据
     * </pre>
     *
     * <code>repeated float phase = 2;</code>
     * @param index The index of the element to return.
     * @return The phase at the given index.
     */
    public float getPhase(int index) {
      return phase_.getFloat(index);
    }
    private int phaseMemoizedSerializedSize = -1;

    public static final int FREQUENCY_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList frequency_;
    /**
     * <pre>
     *瞬时频率数据
     * </pre>
     *
     * <code>repeated float frequency = 3;</code>
     * @return A list containing the frequency.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getFrequencyList() {
      return frequency_;
    }
    /**
     * <pre>
     *瞬时频率数据
     * </pre>
     *
     * <code>repeated float frequency = 3;</code>
     * @return The count of frequency.
     */
    public int getFrequencyCount() {
      return frequency_.size();
    }
    /**
     * <pre>
     *瞬时频率数据
     * </pre>
     *
     * <code>repeated float frequency = 3;</code>
     * @param index The index of the element to return.
     * @return The frequency at the given index.
     */
    public float getFrequency(int index) {
      return frequency_.getFloat(index);
    }
    private int frequencyMemoizedSerializedSize = -1;

    public static final int PARAMSRESULT_FIELD_NUMBER = 4;
    private java.util.List<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult> paramsResult_;
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult> getParamsResultList() {
      return paramsResult_;
    }
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder> 
        getParamsResultOrBuilderList() {
      return paramsResult_;
    }
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    @java.lang.Override
    public int getParamsResultCount() {
      return paramsResult_.size();
    }
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult getParamsResult(int index) {
      return paramsResult_.get(index);
    }
    /**
     * <pre>
     *脉冲参数结果。
     * </pre>
     *
     * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder getParamsResultOrBuilder(
        int index) {
      return paramsResult_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getAmplitudeList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(amplitudeMemoizedSerializedSize);
      }
      for (int i = 0; i < amplitude_.size(); i++) {
        output.writeFloatNoTag(amplitude_.getFloat(i));
      }
      if (getPhaseList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(phaseMemoizedSerializedSize);
      }
      for (int i = 0; i < phase_.size(); i++) {
        output.writeFloatNoTag(phase_.getFloat(i));
      }
      if (getFrequencyList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(frequencyMemoizedSerializedSize);
      }
      for (int i = 0; i < frequency_.size(); i++) {
        output.writeFloatNoTag(frequency_.getFloat(i));
      }
      for (int i = 0; i < paramsResult_.size(); i++) {
        output.writeMessage(4, paramsResult_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getAmplitudeList().size();
        size += dataSize;
        if (!getAmplitudeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        amplitudeMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPhaseList().size();
        size += dataSize;
        if (!getPhaseList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        phaseMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFrequencyList().size();
        size += dataSize;
        if (!getFrequencyList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        frequencyMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < paramsResult_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, paramsResult_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData other = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData) obj;

      if (!getAmplitudeList()
          .equals(other.getAmplitudeList())) return false;
      if (!getPhaseList()
          .equals(other.getPhaseList())) return false;
      if (!getFrequencyList()
          .equals(other.getFrequencyList())) return false;
      if (!getParamsResultList()
          .equals(other.getParamsResultList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAmplitudeCount() > 0) {
        hash = (37 * hash) + AMPLITUDE_FIELD_NUMBER;
        hash = (53 * hash) + getAmplitudeList().hashCode();
      }
      if (getPhaseCount() > 0) {
        hash = (37 * hash) + PHASE_FIELD_NUMBER;
        hash = (53 * hash) + getPhaseList().hashCode();
      }
      if (getFrequencyCount() > 0) {
        hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
        hash = (53 * hash) + getFrequencyList().hashCode();
      }
      if (getParamsResultCount() > 0) {
        hash = (37 * hash) + PARAMSRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getParamsResultList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *脉冲瞬时分析数据
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData)
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getParamsResultFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        amplitude_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        phase_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        frequency_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (paramsResultBuilder_ == null) {
          paramsResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          paramsResultBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData build() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData buildPartial() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData result = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          amplitude_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.amplitude_ = amplitude_;
        if (((bitField0_ & 0x00000002) != 0)) {
          phase_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.phase_ = phase_;
        if (((bitField0_ & 0x00000004) != 0)) {
          frequency_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.frequency_ = frequency_;
        if (paramsResultBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            paramsResult_ = java.util.Collections.unmodifiableList(paramsResult_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.paramsResult_ = paramsResult_;
        } else {
          result.paramsResult_ = paramsResultBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData) {
          return mergeFrom((zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData other) {
        if (other == zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.getDefaultInstance()) return this;
        if (!other.amplitude_.isEmpty()) {
          if (amplitude_.isEmpty()) {
            amplitude_ = other.amplitude_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAmplitudeIsMutable();
            amplitude_.addAll(other.amplitude_);
          }
          onChanged();
        }
        if (!other.phase_.isEmpty()) {
          if (phase_.isEmpty()) {
            phase_ = other.phase_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePhaseIsMutable();
            phase_.addAll(other.phase_);
          }
          onChanged();
        }
        if (!other.frequency_.isEmpty()) {
          if (frequency_.isEmpty()) {
            frequency_ = other.frequency_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFrequencyIsMutable();
            frequency_.addAll(other.frequency_);
          }
          onChanged();
        }
        if (paramsResultBuilder_ == null) {
          if (!other.paramsResult_.isEmpty()) {
            if (paramsResult_.isEmpty()) {
              paramsResult_ = other.paramsResult_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureParamsResultIsMutable();
              paramsResult_.addAll(other.paramsResult_);
            }
            onChanged();
          }
        } else {
          if (!other.paramsResult_.isEmpty()) {
            if (paramsResultBuilder_.isEmpty()) {
              paramsResultBuilder_.dispose();
              paramsResultBuilder_ = null;
              paramsResult_ = other.paramsResult_;
              bitField0_ = (bitField0_ & ~0x00000008);
              paramsResultBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParamsResultFieldBuilder() : null;
            } else {
              paramsResultBuilder_.addAllMessages(other.paramsResult_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.FloatList amplitude_ = emptyFloatList();
      private void ensureAmplitudeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          amplitude_ = mutableCopy(amplitude_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *瞬时幅度数据
       * </pre>
       *
       * <code>repeated float amplitude = 1;</code>
       * @return A list containing the amplitude.
       */
      public java.util.List<java.lang.Float>
          getAmplitudeList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(amplitude_) : amplitude_;
      }
      /**
       * <pre>
       *瞬时幅度数据
       * </pre>
       *
       * <code>repeated float amplitude = 1;</code>
       * @return The count of amplitude.
       */
      public int getAmplitudeCount() {
        return amplitude_.size();
      }
      /**
       * <pre>
       *瞬时幅度数据
       * </pre>
       *
       * <code>repeated float amplitude = 1;</code>
       * @param index The index of the element to return.
       * @return The amplitude at the given index.
       */
      public float getAmplitude(int index) {
        return amplitude_.getFloat(index);
      }
      /**
       * <pre>
       *瞬时幅度数据
       * </pre>
       *
       * <code>repeated float amplitude = 1;</code>
       * @param index The index to set the value at.
       * @param value The amplitude to set.
       * @return This builder for chaining.
       */
      public Builder setAmplitude(
          int index, float value) {
        ensureAmplitudeIsMutable();
        amplitude_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时幅度数据
       * </pre>
       *
       * <code>repeated float amplitude = 1;</code>
       * @param value The amplitude to add.
       * @return This builder for chaining.
       */
      public Builder addAmplitude(float value) {
        ensureAmplitudeIsMutable();
        amplitude_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时幅度数据
       * </pre>
       *
       * <code>repeated float amplitude = 1;</code>
       * @param values The amplitude to add.
       * @return This builder for chaining.
       */
      public Builder addAllAmplitude(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureAmplitudeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, amplitude_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时幅度数据
       * </pre>
       *
       * <code>repeated float amplitude = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmplitude() {
        amplitude_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList phase_ = emptyFloatList();
      private void ensurePhaseIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          phase_ = mutableCopy(phase_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *瞬时相位数据
       * </pre>
       *
       * <code>repeated float phase = 2;</code>
       * @return A list containing the phase.
       */
      public java.util.List<java.lang.Float>
          getPhaseList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(phase_) : phase_;
      }
      /**
       * <pre>
       *瞬时相位数据
       * </pre>
       *
       * <code>repeated float phase = 2;</code>
       * @return The count of phase.
       */
      public int getPhaseCount() {
        return phase_.size();
      }
      /**
       * <pre>
       *瞬时相位数据
       * </pre>
       *
       * <code>repeated float phase = 2;</code>
       * @param index The index of the element to return.
       * @return The phase at the given index.
       */
      public float getPhase(int index) {
        return phase_.getFloat(index);
      }
      /**
       * <pre>
       *瞬时相位数据
       * </pre>
       *
       * <code>repeated float phase = 2;</code>
       * @param index The index to set the value at.
       * @param value The phase to set.
       * @return This builder for chaining.
       */
      public Builder setPhase(
          int index, float value) {
        ensurePhaseIsMutable();
        phase_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时相位数据
       * </pre>
       *
       * <code>repeated float phase = 2;</code>
       * @param value The phase to add.
       * @return This builder for chaining.
       */
      public Builder addPhase(float value) {
        ensurePhaseIsMutable();
        phase_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时相位数据
       * </pre>
       *
       * <code>repeated float phase = 2;</code>
       * @param values The phase to add.
       * @return This builder for chaining.
       */
      public Builder addAllPhase(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensurePhaseIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, phase_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时相位数据
       * </pre>
       *
       * <code>repeated float phase = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhase() {
        phase_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList frequency_ = emptyFloatList();
      private void ensureFrequencyIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          frequency_ = mutableCopy(frequency_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *瞬时频率数据
       * </pre>
       *
       * <code>repeated float frequency = 3;</code>
       * @return A list containing the frequency.
       */
      public java.util.List<java.lang.Float>
          getFrequencyList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(frequency_) : frequency_;
      }
      /**
       * <pre>
       *瞬时频率数据
       * </pre>
       *
       * <code>repeated float frequency = 3;</code>
       * @return The count of frequency.
       */
      public int getFrequencyCount() {
        return frequency_.size();
      }
      /**
       * <pre>
       *瞬时频率数据
       * </pre>
       *
       * <code>repeated float frequency = 3;</code>
       * @param index The index of the element to return.
       * @return The frequency at the given index.
       */
      public float getFrequency(int index) {
        return frequency_.getFloat(index);
      }
      /**
       * <pre>
       *瞬时频率数据
       * </pre>
       *
       * <code>repeated float frequency = 3;</code>
       * @param index The index to set the value at.
       * @param value The frequency to set.
       * @return This builder for chaining.
       */
      public Builder setFrequency(
          int index, float value) {
        ensureFrequencyIsMutable();
        frequency_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时频率数据
       * </pre>
       *
       * <code>repeated float frequency = 3;</code>
       * @param value The frequency to add.
       * @return This builder for chaining.
       */
      public Builder addFrequency(float value) {
        ensureFrequencyIsMutable();
        frequency_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时频率数据
       * </pre>
       *
       * <code>repeated float frequency = 3;</code>
       * @param values The frequency to add.
       * @return This builder for chaining.
       */
      public Builder addAllFrequency(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFrequencyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, frequency_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *瞬时频率数据
       * </pre>
       *
       * <code>repeated float frequency = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrequency() {
        frequency_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult> paramsResult_ =
        java.util.Collections.emptyList();
      private void ensureParamsResultIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          paramsResult_ = new java.util.ArrayList<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult>(paramsResult_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder> paramsResultBuilder_;

      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult> getParamsResultList() {
        if (paramsResultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(paramsResult_);
        } else {
          return paramsResultBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public int getParamsResultCount() {
        if (paramsResultBuilder_ == null) {
          return paramsResult_.size();
        } else {
          return paramsResultBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult getParamsResult(int index) {
        if (paramsResultBuilder_ == null) {
          return paramsResult_.get(index);
        } else {
          return paramsResultBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder setParamsResult(
          int index, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult value) {
        if (paramsResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsResultIsMutable();
          paramsResult_.set(index, value);
          onChanged();
        } else {
          paramsResultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder setParamsResult(
          int index, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder builderForValue) {
        if (paramsResultBuilder_ == null) {
          ensureParamsResultIsMutable();
          paramsResult_.set(index, builderForValue.build());
          onChanged();
        } else {
          paramsResultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder addParamsResult(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult value) {
        if (paramsResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsResultIsMutable();
          paramsResult_.add(value);
          onChanged();
        } else {
          paramsResultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder addParamsResult(
          int index, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult value) {
        if (paramsResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsResultIsMutable();
          paramsResult_.add(index, value);
          onChanged();
        } else {
          paramsResultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder addParamsResult(
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder builderForValue) {
        if (paramsResultBuilder_ == null) {
          ensureParamsResultIsMutable();
          paramsResult_.add(builderForValue.build());
          onChanged();
        } else {
          paramsResultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder addParamsResult(
          int index, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder builderForValue) {
        if (paramsResultBuilder_ == null) {
          ensureParamsResultIsMutable();
          paramsResult_.add(index, builderForValue.build());
          onChanged();
        } else {
          paramsResultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder addAllParamsResult(
          java.lang.Iterable<? extends zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult> values) {
        if (paramsResultBuilder_ == null) {
          ensureParamsResultIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, paramsResult_);
          onChanged();
        } else {
          paramsResultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder clearParamsResult() {
        if (paramsResultBuilder_ == null) {
          paramsResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          paramsResultBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public Builder removeParamsResult(int index) {
        if (paramsResultBuilder_ == null) {
          ensureParamsResultIsMutable();
          paramsResult_.remove(index);
          onChanged();
        } else {
          paramsResultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder getParamsResultBuilder(
          int index) {
        return getParamsResultFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder getParamsResultOrBuilder(
          int index) {
        if (paramsResultBuilder_ == null) {
          return paramsResult_.get(index);  } else {
          return paramsResultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder> 
           getParamsResultOrBuilderList() {
        if (paramsResultBuilder_ != null) {
          return paramsResultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(paramsResult_);
        }
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder addParamsResultBuilder() {
        return getParamsResultFieldBuilder().addBuilder(
            zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.getDefaultInstance());
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder addParamsResultBuilder(
          int index) {
        return getParamsResultFieldBuilder().addBuilder(
            index, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.getDefaultInstance());
      }
      /**
       * <pre>
       *脉冲参数结果。
       * </pre>
       *
       * <code>repeated .zb.dcts.scenario.kh.pulseAnalysis.PulseParamsAnalysisResult paramsResult = 4;</code>
       */
      public java.util.List<zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder> 
           getParamsResultBuilderList() {
        return getParamsResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder> 
          getParamsResultFieldBuilder() {
        if (paramsResultBuilder_ == null) {
          paramsResultBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResult.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseParamsAnalysisResultOrBuilder>(
                  paramsResult_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          paramsResult_ = null;
        }
        return paramsResultBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData)
    private static final zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData();
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PulseTransientAnalysisData>
        PARSER = new com.google.protobuf.AbstractParser<PulseTransientAnalysisData>() {
      @java.lang.Override
      public PulseTransientAnalysisData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PulseTransientAnalysisData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PulseTransientAnalysisData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PulseTransientAnalysisData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommPulseResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
     * @return The header.
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header getHeader();
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     *IQ数据; 
     * </pre>
     *
     * <code>repeated float raw_trace = 2;</code>
     * @return A list containing the rawTrace.
     */
    java.util.List<java.lang.Float> getRawTraceList();
    /**
     * <pre>
     *IQ数据; 
     * </pre>
     *
     * <code>repeated float raw_trace = 2;</code>
     * @return The count of rawTrace.
     */
    int getRawTraceCount();
    /**
     * <pre>
     *IQ数据; 
     * </pre>
     *
     * <code>repeated float raw_trace = 2;</code>
     * @param index The index of the element to return.
     * @return The rawTrace at the given index.
     */
    float getRawTrace(int index);

    /**
     * <pre>
     *瞬时分析结果数据，脉冲参数分析
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
     * @return Whether the transientData field is set.
     */
    boolean hasTransientData();
    /**
     * <pre>
     *瞬时分析结果数据，脉冲参数分析
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
     * @return The transientData.
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData getTransientData();
    /**
     * <pre>
     *瞬时分析结果数据，脉冲参数分析
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
     */
    zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisDataOrBuilder getTransientDataOrBuilder();
  }
  /**
   * <pre>
   *设备数据
   * </pre>
   *
   * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult}
   */
  public static final class CommPulseResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult)
      CommPulseResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommPulseResult.newBuilder() to construct.
    private CommPulseResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommPulseResult() {
      rawTrace_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommPulseResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommPulseResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder subBuilder = null;
              if (header_ != null) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }

              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rawTrace_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              rawTrace_.addFloat(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                rawTrace_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                rawTrace_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder subBuilder = null;
              if (transientData_ != null) {
                subBuilder = transientData_.toBuilder();
              }
              transientData_ = input.readMessage(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transientData_);
                transientData_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rawTrace_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Builder.class);
    }

    public interface HeaderOrBuilder extends
        // @@protoc_insertion_point(interface_extends:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return Whether the resultFrom field is set.
       */
      boolean hasResultFrom();
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return The resultFrom.
       */
      zb.dcts.source.Source.SourceId getResultFrom();
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder();

      /**
       * <pre>
       *顺序号，每个任务执行者维护自身的顺序号
       * </pre>
       *
       * <code>uint32 sequence_number = 2;</code>
       * @return The sequenceNumber.
       */
      int getSequenceNumber();

      /**
       * <pre>
       *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       * @return Whether the timeSpan field is set.
       */
      boolean hasTimeSpan();
      /**
       * <pre>
       *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       * @return The timeSpan.
       */
      zb.dcts.Dcts.TimeSpan getTimeSpan();
      /**
       * <pre>
       *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 4;</code>
       * @return Whether the devicePosition field is set.
       */
      boolean hasDevicePosition();
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 4;</code>
       * @return The devicePosition.
       */
      zb.dcts.Dcts.Position getDevicePosition();
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 4;</code>
       */
      zb.dcts.Dcts.PositionOrBuilder getDevicePositionOrBuilder();
    }
    /**
     * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header}
     */
    public static final class Header extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header)
        HeaderOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Header.newBuilder() to construct.
      private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Header() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Header();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Header(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                zb.dcts.source.Source.SourceId.Builder subBuilder = null;
                if (resultFrom_ != null) {
                  subBuilder = resultFrom_.toBuilder();
                }
                resultFrom_ = input.readMessage(zb.dcts.source.Source.SourceId.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(resultFrom_);
                  resultFrom_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {

                sequenceNumber_ = input.readUInt32();
                break;
              }
              case 26: {
                zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
                if (timeSpan_ != null) {
                  subBuilder = timeSpan_.toBuilder();
                }
                timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(timeSpan_);
                  timeSpan_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                zb.dcts.Dcts.Position.Builder subBuilder = null;
                if (devicePosition_ != null) {
                  subBuilder = devicePosition_.toBuilder();
                }
                devicePosition_ = input.readMessage(zb.dcts.Dcts.Position.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(devicePosition_);
                  devicePosition_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder.class);
      }

      public static final int RESULT_FROM_FIELD_NUMBER = 1;
      private zb.dcts.source.Source.SourceId resultFrom_;
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return Whether the resultFrom field is set.
       */
      @java.lang.Override
      public boolean hasResultFrom() {
        return resultFrom_ != null;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       * @return The resultFrom.
       */
      @java.lang.Override
      public zb.dcts.source.Source.SourceId getResultFrom() {
        return resultFrom_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
      }
      /**
       * <pre>
       *数据来源
       * </pre>
       *
       * <code>.zb.dcts.source.SourceId result_from = 1;</code>
       */
      @java.lang.Override
      public zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder() {
        return getResultFrom();
      }

      public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 2;
      private int sequenceNumber_;
      /**
       * <pre>
       *顺序号，每个任务执行者维护自身的顺序号
       * </pre>
       *
       * <code>uint32 sequence_number = 2;</code>
       * @return The sequenceNumber.
       */
      @java.lang.Override
      public int getSequenceNumber() {
        return sequenceNumber_;
      }

      public static final int TIME_SPAN_FIELD_NUMBER = 3;
      private zb.dcts.Dcts.TimeSpan timeSpan_;
      /**
       * <pre>
       *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       * @return Whether the timeSpan field is set.
       */
      @java.lang.Override
      public boolean hasTimeSpan() {
        return timeSpan_ != null;
      }
      /**
       * <pre>
       *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       * @return The timeSpan.
       */
      @java.lang.Override
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
      }
      /**
       * <pre>
       *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      @java.lang.Override
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        return getTimeSpan();
      }

      public static final int DEVICE_POSITION_FIELD_NUMBER = 4;
      private zb.dcts.Dcts.Position devicePosition_;
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 4;</code>
       * @return Whether the devicePosition field is set.
       */
      @java.lang.Override
      public boolean hasDevicePosition() {
        return devicePosition_ != null;
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 4;</code>
       * @return The devicePosition.
       */
      @java.lang.Override
      public zb.dcts.Dcts.Position getDevicePosition() {
        return devicePosition_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : devicePosition_;
      }
      /**
       * <pre>
       *设备位置
       * </pre>
       *
       * <code>.zb.dcts.Position device_position = 4;</code>
       */
      @java.lang.Override
      public zb.dcts.Dcts.PositionOrBuilder getDevicePositionOrBuilder() {
        return getDevicePosition();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (resultFrom_ != null) {
          output.writeMessage(1, getResultFrom());
        }
        if (sequenceNumber_ != 0) {
          output.writeUInt32(2, sequenceNumber_);
        }
        if (timeSpan_ != null) {
          output.writeMessage(3, getTimeSpan());
        }
        if (devicePosition_ != null) {
          output.writeMessage(4, getDevicePosition());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (resultFrom_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getResultFrom());
        }
        if (sequenceNumber_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, sequenceNumber_);
        }
        if (timeSpan_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getTimeSpan());
        }
        if (devicePosition_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getDevicePosition());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header)) {
          return super.equals(obj);
        }
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header other = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header) obj;

        if (hasResultFrom() != other.hasResultFrom()) return false;
        if (hasResultFrom()) {
          if (!getResultFrom()
              .equals(other.getResultFrom())) return false;
        }
        if (getSequenceNumber()
            != other.getSequenceNumber()) return false;
        if (hasTimeSpan() != other.hasTimeSpan()) return false;
        if (hasTimeSpan()) {
          if (!getTimeSpan()
              .equals(other.getTimeSpan())) return false;
        }
        if (hasDevicePosition() != other.hasDevicePosition()) return false;
        if (hasDevicePosition()) {
          if (!getDevicePosition()
              .equals(other.getDevicePosition())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasResultFrom()) {
          hash = (37 * hash) + RESULT_FROM_FIELD_NUMBER;
          hash = (53 * hash) + getResultFrom().hashCode();
        }
        hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceNumber();
        if (hasTimeSpan()) {
          hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
          hash = (53 * hash) + getTimeSpan().hashCode();
        }
        if (hasDevicePosition()) {
          hash = (37 * hash) + DEVICE_POSITION_FIELD_NUMBER;
          hash = (53 * hash) + getDevicePosition().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header)
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.HeaderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder.class);
        }

        // Construct using zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (resultFromBuilder_ == null) {
            resultFrom_ = null;
          } else {
            resultFrom_ = null;
            resultFromBuilder_ = null;
          }
          sequenceNumber_ = 0;

          if (timeSpanBuilder_ == null) {
            timeSpan_ = null;
          } else {
            timeSpan_ = null;
            timeSpanBuilder_ = null;
          }
          if (devicePositionBuilder_ == null) {
            devicePosition_ = null;
          } else {
            devicePosition_ = null;
            devicePositionBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_descriptor;
        }

        @java.lang.Override
        public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header getDefaultInstanceForType() {
          return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.getDefaultInstance();
        }

        @java.lang.Override
        public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header build() {
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header buildPartial() {
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header result = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header(this);
          if (resultFromBuilder_ == null) {
            result.resultFrom_ = resultFrom_;
          } else {
            result.resultFrom_ = resultFromBuilder_.build();
          }
          result.sequenceNumber_ = sequenceNumber_;
          if (timeSpanBuilder_ == null) {
            result.timeSpan_ = timeSpan_;
          } else {
            result.timeSpan_ = timeSpanBuilder_.build();
          }
          if (devicePositionBuilder_ == null) {
            result.devicePosition_ = devicePosition_;
          } else {
            result.devicePosition_ = devicePositionBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header) {
            return mergeFrom((zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header other) {
          if (other == zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.getDefaultInstance()) return this;
          if (other.hasResultFrom()) {
            mergeResultFrom(other.getResultFrom());
          }
          if (other.getSequenceNumber() != 0) {
            setSequenceNumber(other.getSequenceNumber());
          }
          if (other.hasTimeSpan()) {
            mergeTimeSpan(other.getTimeSpan());
          }
          if (other.hasDevicePosition()) {
            mergeDevicePosition(other.getDevicePosition());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private zb.dcts.source.Source.SourceId resultFrom_;
        private com.google.protobuf.SingleFieldBuilderV3<
            zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> resultFromBuilder_;
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         * @return Whether the resultFrom field is set.
         */
        public boolean hasResultFrom() {
          return resultFromBuilder_ != null || resultFrom_ != null;
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         * @return The resultFrom.
         */
        public zb.dcts.source.Source.SourceId getResultFrom() {
          if (resultFromBuilder_ == null) {
            return resultFrom_ == null ? zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
          } else {
            return resultFromBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         */
        public Builder setResultFrom(zb.dcts.source.Source.SourceId value) {
          if (resultFromBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            resultFrom_ = value;
            onChanged();
          } else {
            resultFromBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         */
        public Builder setResultFrom(
            zb.dcts.source.Source.SourceId.Builder builderForValue) {
          if (resultFromBuilder_ == null) {
            resultFrom_ = builderForValue.build();
            onChanged();
          } else {
            resultFromBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         */
        public Builder mergeResultFrom(zb.dcts.source.Source.SourceId value) {
          if (resultFromBuilder_ == null) {
            if (resultFrom_ != null) {
              resultFrom_ =
                zb.dcts.source.Source.SourceId.newBuilder(resultFrom_).mergeFrom(value).buildPartial();
            } else {
              resultFrom_ = value;
            }
            onChanged();
          } else {
            resultFromBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         */
        public Builder clearResultFrom() {
          if (resultFromBuilder_ == null) {
            resultFrom_ = null;
            onChanged();
          } else {
            resultFrom_ = null;
            resultFromBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         */
        public zb.dcts.source.Source.SourceId.Builder getResultFromBuilder() {
          
          onChanged();
          return getResultFromFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         */
        public zb.dcts.source.Source.SourceIdOrBuilder getResultFromOrBuilder() {
          if (resultFromBuilder_ != null) {
            return resultFromBuilder_.getMessageOrBuilder();
          } else {
            return resultFrom_ == null ?
                zb.dcts.source.Source.SourceId.getDefaultInstance() : resultFrom_;
          }
        }
        /**
         * <pre>
         *数据来源
         * </pre>
         *
         * <code>.zb.dcts.source.SourceId result_from = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder> 
            getResultFromFieldBuilder() {
          if (resultFromBuilder_ == null) {
            resultFromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                zb.dcts.source.Source.SourceId, zb.dcts.source.Source.SourceId.Builder, zb.dcts.source.Source.SourceIdOrBuilder>(
                    getResultFrom(),
                    getParentForChildren(),
                    isClean());
            resultFrom_ = null;
          }
          return resultFromBuilder_;
        }

        private int sequenceNumber_ ;
        /**
         * <pre>
         *顺序号，每个任务执行者维护自身的顺序号
         * </pre>
         *
         * <code>uint32 sequence_number = 2;</code>
         * @return The sequenceNumber.
         */
        @java.lang.Override
        public int getSequenceNumber() {
          return sequenceNumber_;
        }
        /**
         * <pre>
         *顺序号，每个任务执行者维护自身的顺序号
         * </pre>
         *
         * <code>uint32 sequence_number = 2;</code>
         * @param value The sequenceNumber to set.
         * @return This builder for chaining.
         */
        public Builder setSequenceNumber(int value) {
          
          sequenceNumber_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *顺序号，每个任务执行者维护自身的顺序号
         * </pre>
         *
         * <code>uint32 sequence_number = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSequenceNumber() {
          
          sequenceNumber_ = 0;
          onChanged();
          return this;
        }

        private zb.dcts.Dcts.TimeSpan timeSpan_;
        private com.google.protobuf.SingleFieldBuilderV3<
            zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         * @return Whether the timeSpan field is set.
         */
        public boolean hasTimeSpan() {
          return timeSpanBuilder_ != null || timeSpan_ != null;
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         * @return The timeSpan.
         */
        public zb.dcts.Dcts.TimeSpan getTimeSpan() {
          if (timeSpanBuilder_ == null) {
            return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
          } else {
            return timeSpanBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         */
        public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
          if (timeSpanBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            timeSpan_ = value;
            onChanged();
          } else {
            timeSpanBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         */
        public Builder setTimeSpan(
            zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
          if (timeSpanBuilder_ == null) {
            timeSpan_ = builderForValue.build();
            onChanged();
          } else {
            timeSpanBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         */
        public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
          if (timeSpanBuilder_ == null) {
            if (timeSpan_ != null) {
              timeSpan_ =
                zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
            } else {
              timeSpan_ = value;
            }
            onChanged();
          } else {
            timeSpanBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         */
        public Builder clearTimeSpan() {
          if (timeSpanBuilder_ == null) {
            timeSpan_ = null;
            onChanged();
          } else {
            timeSpan_ = null;
            timeSpanBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         */
        public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
          
          onChanged();
          return getTimeSpanFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         */
        public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
          if (timeSpanBuilder_ != null) {
            return timeSpanBuilder_.getMessageOrBuilder();
          } else {
            return timeSpan_ == null ?
                zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
          }
        }
        /**
         * <pre>
         *当前上报周期内的首段和末端采集时刻（由设备提供的时间）
         * </pre>
         *
         * <code>.zb.dcts.TimeSpan time_span = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
            getTimeSpanFieldBuilder() {
          if (timeSpanBuilder_ == null) {
            timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                    getTimeSpan(),
                    getParentForChildren(),
                    isClean());
            timeSpan_ = null;
          }
          return timeSpanBuilder_;
        }

        private zb.dcts.Dcts.Position devicePosition_;
        private com.google.protobuf.SingleFieldBuilderV3<
            zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> devicePositionBuilder_;
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         * @return Whether the devicePosition field is set.
         */
        public boolean hasDevicePosition() {
          return devicePositionBuilder_ != null || devicePosition_ != null;
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         * @return The devicePosition.
         */
        public zb.dcts.Dcts.Position getDevicePosition() {
          if (devicePositionBuilder_ == null) {
            return devicePosition_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : devicePosition_;
          } else {
            return devicePositionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         */
        public Builder setDevicePosition(zb.dcts.Dcts.Position value) {
          if (devicePositionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            devicePosition_ = value;
            onChanged();
          } else {
            devicePositionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         */
        public Builder setDevicePosition(
            zb.dcts.Dcts.Position.Builder builderForValue) {
          if (devicePositionBuilder_ == null) {
            devicePosition_ = builderForValue.build();
            onChanged();
          } else {
            devicePositionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         */
        public Builder mergeDevicePosition(zb.dcts.Dcts.Position value) {
          if (devicePositionBuilder_ == null) {
            if (devicePosition_ != null) {
              devicePosition_ =
                zb.dcts.Dcts.Position.newBuilder(devicePosition_).mergeFrom(value).buildPartial();
            } else {
              devicePosition_ = value;
            }
            onChanged();
          } else {
            devicePositionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         */
        public Builder clearDevicePosition() {
          if (devicePositionBuilder_ == null) {
            devicePosition_ = null;
            onChanged();
          } else {
            devicePosition_ = null;
            devicePositionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         */
        public zb.dcts.Dcts.Position.Builder getDevicePositionBuilder() {
          
          onChanged();
          return getDevicePositionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         */
        public zb.dcts.Dcts.PositionOrBuilder getDevicePositionOrBuilder() {
          if (devicePositionBuilder_ != null) {
            return devicePositionBuilder_.getMessageOrBuilder();
          } else {
            return devicePosition_ == null ?
                zb.dcts.Dcts.Position.getDefaultInstance() : devicePosition_;
          }
        }
        /**
         * <pre>
         *设备位置
         * </pre>
         *
         * <code>.zb.dcts.Position device_position = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> 
            getDevicePositionFieldBuilder() {
          if (devicePositionBuilder_ == null) {
            devicePositionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder>(
                    getDevicePosition(),
                    getParentForChildren(),
                    isClean());
            devicePosition_ = null;
          }
          return devicePositionBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header)
      }

      // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header)
      private static final zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header();
      }

      public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Header>
          PARSER = new com.google.protobuf.AbstractParser<Header>() {
        @java.lang.Override
        public Header parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Header(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Header> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Header> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header header_;
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return header_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header getHeader() {
      return header_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.HeaderOrBuilder getHeaderOrBuilder() {
      return getHeader();
    }

    public static final int RAW_TRACE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.FloatList rawTrace_;
    /**
     * <pre>
     *IQ数据; 
     * </pre>
     *
     * <code>repeated float raw_trace = 2;</code>
     * @return A list containing the rawTrace.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getRawTraceList() {
      return rawTrace_;
    }
    /**
     * <pre>
     *IQ数据; 
     * </pre>
     *
     * <code>repeated float raw_trace = 2;</code>
     * @return The count of rawTrace.
     */
    public int getRawTraceCount() {
      return rawTrace_.size();
    }
    /**
     * <pre>
     *IQ数据; 
     * </pre>
     *
     * <code>repeated float raw_trace = 2;</code>
     * @param index The index of the element to return.
     * @return The rawTrace at the given index.
     */
    public float getRawTrace(int index) {
      return rawTrace_.getFloat(index);
    }
    private int rawTraceMemoizedSerializedSize = -1;

    public static final int TRANSIENT_DATA_FIELD_NUMBER = 3;
    private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData transientData_;
    /**
     * <pre>
     *瞬时分析结果数据，脉冲参数分析
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
     * @return Whether the transientData field is set.
     */
    @java.lang.Override
    public boolean hasTransientData() {
      return transientData_ != null;
    }
    /**
     * <pre>
     *瞬时分析结果数据，脉冲参数分析
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
     * @return The transientData.
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData getTransientData() {
      return transientData_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.getDefaultInstance() : transientData_;
    }
    /**
     * <pre>
     *瞬时分析结果数据，脉冲参数分析
     * </pre>
     *
     * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisDataOrBuilder getTransientDataOrBuilder() {
      return getTransientData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (header_ != null) {
        output.writeMessage(1, getHeader());
      }
      if (getRawTraceList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rawTraceMemoizedSerializedSize);
      }
      for (int i = 0; i < rawTrace_.size(); i++) {
        output.writeFloatNoTag(rawTrace_.getFloat(i));
      }
      if (transientData_ != null) {
        output.writeMessage(3, getTransientData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (header_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRawTraceList().size();
        size += dataSize;
        if (!getRawTraceList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rawTraceMemoizedSerializedSize = dataSize;
      }
      if (transientData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTransientData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult)) {
        return super.equals(obj);
      }
      zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult other = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (!getRawTraceList()
          .equals(other.getRawTraceList())) return false;
      if (hasTransientData() != other.hasTransientData()) return false;
      if (hasTransientData()) {
        if (!getTransientData()
            .equals(other.getTransientData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (getRawTraceCount() > 0) {
        hash = (37 * hash) + RAW_TRACE_FIELD_NUMBER;
        hash = (53 * hash) + getRawTraceList().hashCode();
      }
      if (hasTransientData()) {
        hash = (37 * hash) + TRANSIENT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTransientData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *设备数据
     * </pre>
     *
     * Protobuf type {@code zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult)
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.class, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Builder.class);
      }

      // Construct using zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          header_ = null;
          headerBuilder_ = null;
        }
        rawTrace_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (transientDataBuilder_ == null) {
          transientData_ = null;
        } else {
          transientData_ = null;
          transientDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_descriptor;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult getDefaultInstanceForType() {
        return zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult build() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult buildPartial() {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult result = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult(this);
        int from_bitField0_ = bitField0_;
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          rawTrace_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.rawTrace_ = rawTrace_;
        if (transientDataBuilder_ == null) {
          result.transientData_ = transientData_;
        } else {
          result.transientData_ = transientDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult) {
          return mergeFrom((zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult other) {
        if (other == zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (!other.rawTrace_.isEmpty()) {
          if (rawTrace_.isEmpty()) {
            rawTrace_ = other.rawTrace_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRawTraceIsMutable();
            rawTrace_.addAll(other.rawTrace_);
          }
          onChanged();
        }
        if (other.hasTransientData()) {
          mergeTransientData(other.getTransientData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return headerBuilder_ != null || header_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       * @return The header.
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       */
      public Builder setHeader(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       */
      public Builder setHeader(
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       */
      public Builder mergeHeader(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header value) {
        if (headerBuilder_ == null) {
          if (header_ != null) {
            header_ =
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          header_ = null;
          headerBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder getHeaderBuilder() {
        
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.Header.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private com.google.protobuf.Internal.FloatList rawTrace_ = emptyFloatList();
      private void ensureRawTraceIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rawTrace_ = mutableCopy(rawTrace_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *IQ数据; 
       * </pre>
       *
       * <code>repeated float raw_trace = 2;</code>
       * @return A list containing the rawTrace.
       */
      public java.util.List<java.lang.Float>
          getRawTraceList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(rawTrace_) : rawTrace_;
      }
      /**
       * <pre>
       *IQ数据; 
       * </pre>
       *
       * <code>repeated float raw_trace = 2;</code>
       * @return The count of rawTrace.
       */
      public int getRawTraceCount() {
        return rawTrace_.size();
      }
      /**
       * <pre>
       *IQ数据; 
       * </pre>
       *
       * <code>repeated float raw_trace = 2;</code>
       * @param index The index of the element to return.
       * @return The rawTrace at the given index.
       */
      public float getRawTrace(int index) {
        return rawTrace_.getFloat(index);
      }
      /**
       * <pre>
       *IQ数据; 
       * </pre>
       *
       * <code>repeated float raw_trace = 2;</code>
       * @param index The index to set the value at.
       * @param value The rawTrace to set.
       * @return This builder for chaining.
       */
      public Builder setRawTrace(
          int index, float value) {
        ensureRawTraceIsMutable();
        rawTrace_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IQ数据; 
       * </pre>
       *
       * <code>repeated float raw_trace = 2;</code>
       * @param value The rawTrace to add.
       * @return This builder for chaining.
       */
      public Builder addRawTrace(float value) {
        ensureRawTraceIsMutable();
        rawTrace_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IQ数据; 
       * </pre>
       *
       * <code>repeated float raw_trace = 2;</code>
       * @param values The rawTrace to add.
       * @return This builder for chaining.
       */
      public Builder addAllRawTrace(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureRawTraceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rawTrace_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IQ数据; 
       * </pre>
       *
       * <code>repeated float raw_trace = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawTrace() {
        rawTrace_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData transientData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisDataOrBuilder> transientDataBuilder_;
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       * @return Whether the transientData field is set.
       */
      public boolean hasTransientData() {
        return transientDataBuilder_ != null || transientData_ != null;
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       * @return The transientData.
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData getTransientData() {
        if (transientDataBuilder_ == null) {
          return transientData_ == null ? zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.getDefaultInstance() : transientData_;
        } else {
          return transientDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       */
      public Builder setTransientData(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData value) {
        if (transientDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transientData_ = value;
          onChanged();
        } else {
          transientDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       */
      public Builder setTransientData(
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder builderForValue) {
        if (transientDataBuilder_ == null) {
          transientData_ = builderForValue.build();
          onChanged();
        } else {
          transientDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       */
      public Builder mergeTransientData(zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData value) {
        if (transientDataBuilder_ == null) {
          if (transientData_ != null) {
            transientData_ =
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.newBuilder(transientData_).mergeFrom(value).buildPartial();
          } else {
            transientData_ = value;
          }
          onChanged();
        } else {
          transientDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       */
      public Builder clearTransientData() {
        if (transientDataBuilder_ == null) {
          transientData_ = null;
          onChanged();
        } else {
          transientData_ = null;
          transientDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder getTransientDataBuilder() {
        
        onChanged();
        return getTransientDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       */
      public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisDataOrBuilder getTransientDataOrBuilder() {
        if (transientDataBuilder_ != null) {
          return transientDataBuilder_.getMessageOrBuilder();
        } else {
          return transientData_ == null ?
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.getDefaultInstance() : transientData_;
        }
      }
      /**
       * <pre>
       *瞬时分析结果数据，脉冲参数分析
       * </pre>
       *
       * <code>.zb.dcts.scenario.kh.pulseAnalysis.PulseTransientAnalysisData transient_data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisDataOrBuilder> 
          getTransientDataFieldBuilder() {
        if (transientDataBuilder_ == null) {
          transientDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisData.Builder, zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.PulseTransientAnalysisDataOrBuilder>(
                  getTransientData(),
                  getParentForChildren(),
                  isClean());
          transientData_ = null;
        }
        return transientDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.pulseAnalysis.CommPulseResult)
    private static final zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult();
    }

    public static zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommPulseResult>
        PARSER = new com.google.protobuf.AbstractParser<CommPulseResult>() {
      @java.lang.Override
      public CommPulseResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommPulseResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommPulseResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommPulseResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.scenario.kh.pulseAnalysis.KhPulseAnalysis.CommPulseResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!scenario/kh/KhPulseAnalysis.proto\022!zb." +
      "dcts.scenario.kh.pulseAnalysis\032\ndcts.pro" +
      "to\032\023source/source.proto\032\027scenario/scenar" +
      "io.proto\032\035scenario/kh/KhIQDataAcq.proto\"" +
      "\331\001\n\rAnalysisParam\022\020\n\010maxwidth\030\004 \001(\001\022\020\n\010m" +
      "inwidth\030\005 \001(\001\022=\n\007lvlmode\030\006 \001(\0162,.zb.dcts" +
      ".scenario.kh.pulseAnalysis.LevelMode\022\017\n\007" +
      "lvldata\030\007 \001(\002\022\026\n\016maxpulse_count\030\010 \001(\005\022\025\n" +
      "\rhistogrambins\030\t \001(\r\022\022\n\nstart_time\030\n \001(\001" +
      "\022\021\n\tstop_time\030\013 \001(\001\"\246\002\n\034CommPulseAnalysi" +
      "sTaskRequest\022.\n\010scenario\030\001 \001(\0132\034.zb.dcts" +
      ".scenario.ScenarioId\022E\n\014source_param\030\002 \001" +
      "(\0132/.zb.dcts.scenario.kh.commIqData.Comm" +
      "IQAcqSource\022E\n\tacq_param\030\003 \001(\01322.zb.dcts" +
      ".scenario.kh.commIqData.CommIQAcquirePar" +
      "am\022H\n\016analysis_param\030\004 \001(\01320.zb.dcts.sce" +
      "nario.kh.pulseAnalysis.AnalysisParam\"\315\001\n" +
      "\022ChangePulseRequest\022)\n\007task_id\030\001 \001(\0132\030.z" +
      "b.dcts.scenario.TaskId\022B\n\013param_index\030\002 " +
      "\001(\0162-.zb.dcts.scenario.kh.pulseAnalysis." +
      "ParamIndex\022H\n\016analysis_param\030\003 \001(\01320.zb." +
      "dcts.scenario.kh.pulseAnalysis.AnalysisP" +
      "aram\"\236\001\n\031PulseParamsAnalysisResult\022\021\n\tpe" +
      "akPower\030\001 \001(\002\022\020\n\010minPower\030\002 \001(\002\022\022\n\navgOn" +
      "Power\030\003 \001(\002\022\020\n\010riseTime\030\004 \001(\001\022\020\n\010fallTim" +
      "e\030\005 \001(\001\022\n\n\002PW\030\006 \001(\001\022\013\n\003PRI\030\007 \001(\001\022\013\n\003TOA\030" +
      "\010 \001(\004\"\245\001\n\032PulseTransientAnalysisData\022\021\n\t" +
      "amplitude\030\001 \003(\002\022\r\n\005phase\030\002 \003(\002\022\021\n\tfreque" +
      "ncy\030\003 \003(\002\022R\n\014paramsResult\030\004 \003(\0132<.zb.dct" +
      "s.scenario.kh.pulseAnalysis.PulseParamsA" +
      "nalysisResult\"\353\002\n\017CommPulseResult\022I\n\006hea" +
      "der\030\001 \001(\01329.zb.dcts.scenario.kh.pulseAna" +
      "lysis.CommPulseResult.Header\022\021\n\traw_trac" +
      "e\030\002 \003(\002\022U\n\016transient_data\030\003 \001(\0132=.zb.dct" +
      "s.scenario.kh.pulseAnalysis.PulseTransie" +
      "ntAnalysisData\032\242\001\n\006Header\022-\n\013result_from" +
      "\030\001 \001(\0132\030.zb.dcts.source.SourceId\022\027\n\017sequ" +
      "ence_number\030\002 \001(\r\022$\n\ttime_span\030\003 \001(\0132\021.z" +
      "b.dcts.TimeSpan\022*\n\017device_position\030\004 \001(\013" +
      "2\021.zb.dcts.Position*)\n\tLevelMode\022\010\n\004PEAK" +
      "\020\000\022\t\n\005NOISE\020\001\022\007\n\003ABS\020\002* \n\nParamIndex\022\022\n\016" +
      "ANALYSIS_PARAM\020\0002\250\003\n\024PulseAnalysisServic" +
      "e\022o\n\tStartTask\022?.zb.dcts.scenario.kh.pul" +
      "seAnalysis.CommPulseAnalysisTaskRequest\032" +
      "\037.zb.dcts.scenario.ScenarioReply\"\000\022e\n\tGe" +
      "tResult\022 .zb.dcts.scenario.ScenarioTaskI" +
      "d\0322.zb.dcts.scenario.kh.pulseAnalysis.Co" +
      "mmPulseResult\"\0000\001\022g\n\013ChangeParam\0225.zb.dc" +
      "ts.scenario.kh.pulseAnalysis.ChangePulse" +
      "Request\032\037.zb.dcts.scenario.ScenarioReply" +
      "\"\000\022O\n\010StopTask\022 .zb.dcts.scenario.Scenar" +
      "ioTaskId\032\037.zb.dcts.scenario.ScenarioRepl" +
      "y\"\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          zb.dcts.Dcts.getDescriptor(),
          zb.dcts.source.Source.getDescriptor(),
          zb.dcts.scenario.Scenario.getDescriptor(),
          zb.dcts.scenario.kh.commIqData.KhIQDataAcq.getDescriptor(),
        });
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_pulseAnalysis_AnalysisParam_descriptor,
        new java.lang.String[] { "Maxwidth", "Minwidth", "Lvlmode", "Lvldata", "MaxpulseCount", "Histogrambins", "StartTime", "StopTime", });
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseAnalysisTaskRequest_descriptor,
        new java.lang.String[] { "Scenario", "SourceParam", "AcqParam", "AnalysisParam", });
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_pulseAnalysis_ChangePulseRequest_descriptor,
        new java.lang.String[] { "TaskId", "ParamIndex", "AnalysisParam", });
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseParamsAnalysisResult_descriptor,
        new java.lang.String[] { "PeakPower", "MinPower", "AvgOnPower", "RiseTime", "FallTime", "PW", "PRI", "TOA", });
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_pulseAnalysis_PulseTransientAnalysisData_descriptor,
        new java.lang.String[] { "Amplitude", "Phase", "Frequency", "ParamsResult", });
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_descriptor,
        new java.lang.String[] { "Header", "RawTrace", "TransientData", });
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_descriptor =
      internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_descriptor.getNestedTypes().get(0);
    internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_scenario_kh_pulseAnalysis_CommPulseResult_Header_descriptor,
        new java.lang.String[] { "ResultFrom", "SequenceNumber", "TimeSpan", "DevicePosition", });
    zb.dcts.Dcts.getDescriptor();
    zb.dcts.source.Source.getDescriptor();
    zb.dcts.scenario.Scenario.getDescriptor();
    zb.dcts.scenario.kh.commIqData.KhIQDataAcq.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
