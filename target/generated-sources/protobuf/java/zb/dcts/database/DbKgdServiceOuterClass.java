// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database/DbKgdService.proto

package zb.dcts.database;

public final class DbKgdServiceOuterClass {
  private DbKgdServiceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 请求类型
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.database.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *信号统计请求
     * </pre>
     *
     * <code>STAT = 0;</code>
     */
    STAT(0),
    /**
     * <pre>
     *时序关系分析请求
     * </pre>
     *
     * <code>TIME_SEQ = 1;</code>
     */
    TIME_SEQ(1),
    /**
     * <pre>
     *信号规律分析请求
     * </pre>
     *
     * <code>DISCIP = 2;</code>
     */
    DISCIP(2),
    /**
     * <pre>
     *异常信号查询请求
     * </pre>
     *
     * <code>ABNORMAL = 3;</code>
     */
    ABNORMAL(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *信号统计请求
     * </pre>
     *
     * <code>STAT = 0;</code>
     */
    public static final int STAT_VALUE = 0;
    /**
     * <pre>
     *时序关系分析请求
     * </pre>
     *
     * <code>TIME_SEQ = 1;</code>
     */
    public static final int TIME_SEQ_VALUE = 1;
    /**
     * <pre>
     *信号规律分析请求
     * </pre>
     *
     * <code>DISCIP = 2;</code>
     */
    public static final int DISCIP_VALUE = 2;
    /**
     * <pre>
     *异常信号查询请求
     * </pre>
     *
     * <code>ABNORMAL = 3;</code>
     */
    public static final int ABNORMAL_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RequestType forNumber(int value) {
      switch (value) {
        case 0: return STAT;
        case 1: return TIME_SEQ;
        case 2: return DISCIP;
        case 3: return ABNORMAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.database.RequestType)
  }

  /**
   * <pre>
   * 信号统计类型
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.database.SignalStatType}
   */
  public enum SignalStatType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *信号ID
     * </pre>
     *
     * <code>SIGNAL_ID = 0;</code>
     */
    SIGNAL_ID(0),
    /**
     * <pre>
     *信号方向
     * </pre>
     *
     * <code>DIRECTION = 1;</code>
     */
    DIRECTION(1),
    /**
     * <pre>
     *阵地
     * </pre>
     *
     * <code>CAMP = 2;</code>
     */
    CAMP(2),
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>SIGNAL_TYPE = 3;</code>
     */
    SIGNAL_TYPE(3),
    /**
     * <pre>
     *出现时间
     * </pre>
     *
     * <code>TIME = 4;</code>
     */
    TIME(4),
    /**
     * <pre>
     *频域
     * </pre>
     *
     * <code>FREQ = 5;</code>
     */
    FREQ(5),
    /**
     * <pre>
     *空域/区域
     * </pre>
     *
     * <code>AIRSPACE = 6;</code>
     */
    AIRSPACE(6),
    /**
     * <pre>
     *能量域
     * </pre>
     *
     * <code>POWER = 7;</code>
     */
    POWER(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *信号ID
     * </pre>
     *
     * <code>SIGNAL_ID = 0;</code>
     */
    public static final int SIGNAL_ID_VALUE = 0;
    /**
     * <pre>
     *信号方向
     * </pre>
     *
     * <code>DIRECTION = 1;</code>
     */
    public static final int DIRECTION_VALUE = 1;
    /**
     * <pre>
     *阵地
     * </pre>
     *
     * <code>CAMP = 2;</code>
     */
    public static final int CAMP_VALUE = 2;
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>SIGNAL_TYPE = 3;</code>
     */
    public static final int SIGNAL_TYPE_VALUE = 3;
    /**
     * <pre>
     *出现时间
     * </pre>
     *
     * <code>TIME = 4;</code>
     */
    public static final int TIME_VALUE = 4;
    /**
     * <pre>
     *频域
     * </pre>
     *
     * <code>FREQ = 5;</code>
     */
    public static final int FREQ_VALUE = 5;
    /**
     * <pre>
     *空域/区域
     * </pre>
     *
     * <code>AIRSPACE = 6;</code>
     */
    public static final int AIRSPACE_VALUE = 6;
    /**
     * <pre>
     *能量域
     * </pre>
     *
     * <code>POWER = 7;</code>
     */
    public static final int POWER_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SignalStatType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SignalStatType forNumber(int value) {
      switch (value) {
        case 0: return SIGNAL_ID;
        case 1: return DIRECTION;
        case 2: return CAMP;
        case 3: return SIGNAL_TYPE;
        case 4: return TIME;
        case 5: return FREQ;
        case 6: return AIRSPACE;
        case 7: return POWER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SignalStatType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SignalStatType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SignalStatType>() {
            public SignalStatType findValueByNumber(int number) {
              return SignalStatType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.getDescriptor().getEnumTypes().get(1);
    }

    private static final SignalStatType[] VALUES = values();

    public static SignalStatType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SignalStatType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.database.SignalStatType)
  }

  public interface SpectrumOccupancyResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SpectrumOccupancyResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    boolean hasTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    zb.dcts.Dcts.TimeSpan getTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> 
        getSignalDigestList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigest getSignalDigest(int index);
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    int getSignalDigestCount();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
        getSignalDigestOrBuilderList();
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getSignalDigestOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.database.SpectrumOccupancyResponse}
   */
  public static final class SpectrumOccupancyResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SpectrumOccupancyResponse)
      SpectrumOccupancyResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SpectrumOccupancyResponse.newBuilder() to construct.
    private SpectrumOccupancyResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpectrumOccupancyResponse() {
      signalDigest_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SpectrumOccupancyResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpectrumOccupancyResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeSpan_ != null) {
                subBuilder = timeSpan_.toBuilder();
              }
              timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSpan_);
                timeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signalDigest_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalDigest>();
                mutable_bitField0_ |= 0x00000001;
              }
              signalDigest_.add(
                  input.readMessage(zb.dcts.scenario.detection.Detection.SignalDigest.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signalDigest_ = java.util.Collections.unmodifiableList(signalDigest_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SpectrumOccupancyResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SpectrumOccupancyResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.class, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder.class);
    }

    public static final int TIME_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.TimeSpan timeSpan_;
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    @java.lang.Override
    public boolean hasTimeSpan() {
      return timeSpan_ != null;
    }
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeSpan() {
      return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
    }
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
      return getTimeSpan();
    }

    public static final int SIGNAL_DIGEST_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> signalDigest_;
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> getSignalDigestList() {
      return signalDigest_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
        getSignalDigestOrBuilderList() {
      return signalDigest_;
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    @java.lang.Override
    public int getSignalDigestCount() {
      return signalDigest_.size();
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigest getSignalDigest(int index) {
      return signalDigest_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getSignalDigestOrBuilder(
        int index) {
      return signalDigest_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeSpan_ != null) {
        output.writeMessage(1, getTimeSpan());
      }
      for (int i = 0; i < signalDigest_.size(); i++) {
        output.writeMessage(2, signalDigest_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimeSpan());
      }
      for (int i = 0; i < signalDigest_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, signalDigest_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse other = (zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse) obj;

      if (hasTimeSpan() != other.hasTimeSpan()) return false;
      if (hasTimeSpan()) {
        if (!getTimeSpan()
            .equals(other.getTimeSpan())) return false;
      }
      if (!getSignalDigestList()
          .equals(other.getSignalDigestList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeSpan()) {
        hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSpan().hashCode();
      }
      if (getSignalDigestCount() > 0) {
        hash = (37 * hash) + SIGNAL_DIGEST_FIELD_NUMBER;
        hash = (53 * hash) + getSignalDigestList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.SpectrumOccupancyResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SpectrumOccupancyResponse)
        zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SpectrumOccupancyResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SpectrumOccupancyResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.class, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignalDigestFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }
        if (signalDigestBuilder_ == null) {
          signalDigest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signalDigestBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SpectrumOccupancyResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse build() {
        zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse result = new zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse(this);
        int from_bitField0_ = bitField0_;
        if (timeSpanBuilder_ == null) {
          result.timeSpan_ = timeSpan_;
        } else {
          result.timeSpan_ = timeSpanBuilder_.build();
        }
        if (signalDigestBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            signalDigest_ = java.util.Collections.unmodifiableList(signalDigest_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signalDigest_ = signalDigest_;
        } else {
          result.signalDigest_ = signalDigestBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.getDefaultInstance()) return this;
        if (other.hasTimeSpan()) {
          mergeTimeSpan(other.getTimeSpan());
        }
        if (signalDigestBuilder_ == null) {
          if (!other.signalDigest_.isEmpty()) {
            if (signalDigest_.isEmpty()) {
              signalDigest_ = other.signalDigest_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignalDigestIsMutable();
              signalDigest_.addAll(other.signalDigest_);
            }
            onChanged();
          }
        } else {
          if (!other.signalDigest_.isEmpty()) {
            if (signalDigestBuilder_.isEmpty()) {
              signalDigestBuilder_.dispose();
              signalDigestBuilder_ = null;
              signalDigest_ = other.signalDigest_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signalDigestBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignalDigestFieldBuilder() : null;
            } else {
              signalDigestBuilder_.addAllMessages(other.signalDigest_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.Dcts.TimeSpan timeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return Whether the timeSpan field is set.
       */
      public boolean hasTimeSpan() {
        return timeSpanBuilder_ != null || timeSpan_ != null;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return The timeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        if (timeSpanBuilder_ == null) {
          return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        } else {
          return timeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSpan_ = value;
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = builderForValue.build();
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (timeSpan_ != null) {
            timeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
          } else {
            timeSpan_ = value;
          }
          onChanged();
        } else {
          timeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder clearTimeSpan() {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
          onChanged();
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
        
        onChanged();
        return getTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        if (timeSpanBuilder_ != null) {
          return timeSpanBuilder_.getMessageOrBuilder();
        } else {
          return timeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        }
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeSpanFieldBuilder() {
        if (timeSpanBuilder_ == null) {
          timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeSpan(),
                  getParentForChildren(),
                  isClean());
          timeSpan_ = null;
        }
        return timeSpanBuilder_;
      }

      private java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> signalDigest_ =
        java.util.Collections.emptyList();
      private void ensureSignalDigestIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signalDigest_ = new java.util.ArrayList<zb.dcts.scenario.detection.Detection.SignalDigest>(signalDigest_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> signalDigestBuilder_;

      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest> getSignalDigestList() {
        if (signalDigestBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signalDigest_);
        } else {
          return signalDigestBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public int getSignalDigestCount() {
        if (signalDigestBuilder_ == null) {
          return signalDigest_.size();
        } else {
          return signalDigestBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest getSignalDigest(int index) {
        if (signalDigestBuilder_ == null) {
          return signalDigest_.get(index);
        } else {
          return signalDigestBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder setSignalDigest(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (signalDigestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalDigestIsMutable();
          signalDigest_.set(index, value);
          onChanged();
        } else {
          signalDigestBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder setSignalDigest(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (signalDigestBuilder_ == null) {
          ensureSignalDigestIsMutable();
          signalDigest_.set(index, builderForValue.build());
          onChanged();
        } else {
          signalDigestBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder addSignalDigest(zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (signalDigestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalDigestIsMutable();
          signalDigest_.add(value);
          onChanged();
        } else {
          signalDigestBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder addSignalDigest(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (signalDigestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalDigestIsMutable();
          signalDigest_.add(index, value);
          onChanged();
        } else {
          signalDigestBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder addSignalDigest(
          zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (signalDigestBuilder_ == null) {
          ensureSignalDigestIsMutable();
          signalDigest_.add(builderForValue.build());
          onChanged();
        } else {
          signalDigestBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder addSignalDigest(
          int index, zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (signalDigestBuilder_ == null) {
          ensureSignalDigestIsMutable();
          signalDigest_.add(index, builderForValue.build());
          onChanged();
        } else {
          signalDigestBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder addAllSignalDigest(
          java.lang.Iterable<? extends zb.dcts.scenario.detection.Detection.SignalDigest> values) {
        if (signalDigestBuilder_ == null) {
          ensureSignalDigestIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signalDigest_);
          onChanged();
        } else {
          signalDigestBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder clearSignalDigest() {
        if (signalDigestBuilder_ == null) {
          signalDigest_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signalDigestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public Builder removeSignalDigest(int index) {
        if (signalDigestBuilder_ == null) {
          ensureSignalDigestIsMutable();
          signalDigest_.remove(index);
          onChanged();
        } else {
          signalDigestBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder getSignalDigestBuilder(
          int index) {
        return getSignalDigestFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getSignalDigestOrBuilder(
          int index) {
        if (signalDigestBuilder_ == null) {
          return signalDigest_.get(index);  } else {
          return signalDigestBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public java.util.List<? extends zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
           getSignalDigestOrBuilderList() {
        if (signalDigestBuilder_ != null) {
          return signalDigestBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signalDigest_);
        }
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder addSignalDigestBuilder() {
        return getSignalDigestFieldBuilder().addBuilder(
            zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder addSignalDigestBuilder(
          int index) {
        return getSignalDigestFieldBuilder().addBuilder(
            index, zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.scenario.detection.SignalDigest signal_digest = 2;</code>
       */
      public java.util.List<zb.dcts.scenario.detection.Detection.SignalDigest.Builder> 
           getSignalDigestBuilderList() {
        return getSignalDigestFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
          getSignalDigestFieldBuilder() {
        if (signalDigestBuilder_ == null) {
          signalDigestBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder>(
                  signalDigest_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          signalDigest_ = null;
        }
        return signalDigestBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SpectrumOccupancyResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SpectrumOccupancyResponse)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpectrumOccupancyResponse>
        PARSER = new com.google.protobuf.AbstractParser<SpectrumOccupancyResponse>() {
      @java.lang.Override
      public SpectrumOccupancyResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpectrumOccupancyResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpectrumOccupancyResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpectrumOccupancyResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalParamPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalParamPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double center_freq = 1;</code>
     * @return The centerFreq.
     */
    double getCenterFreq();

    /**
     * <code>double band_width = 2;</code>
     * @return The bandWidth.
     */
    double getBandWidth();

    /**
     * <code>double amplitude = 3;</code>
     * @return The amplitude.
     */
    double getAmplitude();

    /**
     * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
     * @return Whether the timeStamp field is set.
     */
    boolean hasTimeStamp();
    /**
     * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
     * @return The timeStamp.
     */
    zb.dcts.Dcts.Timestamp getTimeStamp();
    /**
     * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
     */
    zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder();
  }
  /**
   * Protobuf type {@code zb.dcts.database.SignalParamPoint}
   */
  public static final class SignalParamPoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalParamPoint)
      SignalParamPointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalParamPoint.newBuilder() to construct.
    private SignalParamPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalParamPoint() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalParamPoint();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalParamPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              centerFreq_ = input.readDouble();
              break;
            }
            case 17: {

              bandWidth_ = input.readDouble();
              break;
            }
            case 25: {

              amplitude_ = input.readDouble();
              break;
            }
            case 34: {
              zb.dcts.Dcts.Timestamp.Builder subBuilder = null;
              if (timeStamp_ != null) {
                subBuilder = timeStamp_.toBuilder();
              }
              timeStamp_ = input.readMessage(zb.dcts.Dcts.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeStamp_);
                timeStamp_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalParamPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalParamPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.class, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder.class);
    }

    public static final int CENTER_FREQ_FIELD_NUMBER = 1;
    private double centerFreq_;
    /**
     * <code>double center_freq = 1;</code>
     * @return The centerFreq.
     */
    @java.lang.Override
    public double getCenterFreq() {
      return centerFreq_;
    }

    public static final int BAND_WIDTH_FIELD_NUMBER = 2;
    private double bandWidth_;
    /**
     * <code>double band_width = 2;</code>
     * @return The bandWidth.
     */
    @java.lang.Override
    public double getBandWidth() {
      return bandWidth_;
    }

    public static final int AMPLITUDE_FIELD_NUMBER = 3;
    private double amplitude_;
    /**
     * <code>double amplitude = 3;</code>
     * @return The amplitude.
     */
    @java.lang.Override
    public double getAmplitude() {
      return amplitude_;
    }

    public static final int TIME_STAMP_FIELD_NUMBER = 4;
    private zb.dcts.Dcts.Timestamp timeStamp_;
    /**
     * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
     * @return Whether the timeStamp field is set.
     */
    @java.lang.Override
    public boolean hasTimeStamp() {
      return timeStamp_ != null;
    }
    /**
     * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
     * @return The timeStamp.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Timestamp getTimeStamp() {
      return timeStamp_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
    }
    /**
     * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder() {
      return getTimeStamp();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (centerFreq_ != 0D) {
        output.writeDouble(1, centerFreq_);
      }
      if (bandWidth_ != 0D) {
        output.writeDouble(2, bandWidth_);
      }
      if (amplitude_ != 0D) {
        output.writeDouble(3, amplitude_);
      }
      if (timeStamp_ != null) {
        output.writeMessage(4, getTimeStamp());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (centerFreq_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, centerFreq_);
      }
      if (bandWidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, bandWidth_);
      }
      if (amplitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, amplitude_);
      }
      if (timeStamp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTimeStamp());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint other = (zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint) obj;

      if (java.lang.Double.doubleToLongBits(getCenterFreq())
          != java.lang.Double.doubleToLongBits(
              other.getCenterFreq())) return false;
      if (java.lang.Double.doubleToLongBits(getBandWidth())
          != java.lang.Double.doubleToLongBits(
              other.getBandWidth())) return false;
      if (java.lang.Double.doubleToLongBits(getAmplitude())
          != java.lang.Double.doubleToLongBits(
              other.getAmplitude())) return false;
      if (hasTimeStamp() != other.hasTimeStamp()) return false;
      if (hasTimeStamp()) {
        if (!getTimeStamp()
            .equals(other.getTimeStamp())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CENTER_FREQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCenterFreq()));
      hash = (37 * hash) + BAND_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBandWidth()));
      hash = (37 * hash) + AMPLITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAmplitude()));
      if (hasTimeStamp()) {
        hash = (37 * hash) + TIME_STAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimeStamp().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.SignalParamPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalParamPoint)
        zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalParamPoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalParamPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.class, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        centerFreq_ = 0D;

        bandWidth_ = 0D;

        amplitude_ = 0D;

        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
        } else {
          timeStamp_ = null;
          timeStampBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalParamPoint_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint result = new zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint(this);
        result.centerFreq_ = centerFreq_;
        result.bandWidth_ = bandWidth_;
        result.amplitude_ = amplitude_;
        if (timeStampBuilder_ == null) {
          result.timeStamp_ = timeStamp_;
        } else {
          result.timeStamp_ = timeStampBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.getDefaultInstance()) return this;
        if (other.getCenterFreq() != 0D) {
          setCenterFreq(other.getCenterFreq());
        }
        if (other.getBandWidth() != 0D) {
          setBandWidth(other.getBandWidth());
        }
        if (other.getAmplitude() != 0D) {
          setAmplitude(other.getAmplitude());
        }
        if (other.hasTimeStamp()) {
          mergeTimeStamp(other.getTimeStamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double centerFreq_ ;
      /**
       * <code>double center_freq = 1;</code>
       * @return The centerFreq.
       */
      @java.lang.Override
      public double getCenterFreq() {
        return centerFreq_;
      }
      /**
       * <code>double center_freq = 1;</code>
       * @param value The centerFreq to set.
       * @return This builder for chaining.
       */
      public Builder setCenterFreq(double value) {
        
        centerFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double center_freq = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCenterFreq() {
        
        centerFreq_ = 0D;
        onChanged();
        return this;
      }

      private double bandWidth_ ;
      /**
       * <code>double band_width = 2;</code>
       * @return The bandWidth.
       */
      @java.lang.Override
      public double getBandWidth() {
        return bandWidth_;
      }
      /**
       * <code>double band_width = 2;</code>
       * @param value The bandWidth to set.
       * @return This builder for chaining.
       */
      public Builder setBandWidth(double value) {
        
        bandWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double band_width = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBandWidth() {
        
        bandWidth_ = 0D;
        onChanged();
        return this;
      }

      private double amplitude_ ;
      /**
       * <code>double amplitude = 3;</code>
       * @return The amplitude.
       */
      @java.lang.Override
      public double getAmplitude() {
        return amplitude_;
      }
      /**
       * <code>double amplitude = 3;</code>
       * @param value The amplitude to set.
       * @return This builder for chaining.
       */
      public Builder setAmplitude(double value) {
        
        amplitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double amplitude = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmplitude() {
        
        amplitude_ = 0D;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.Timestamp timeStamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> timeStampBuilder_;
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       * @return Whether the timeStamp field is set.
       */
      public boolean hasTimeStamp() {
        return timeStampBuilder_ != null || timeStamp_ != null;
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       * @return The timeStamp.
       */
      public zb.dcts.Dcts.Timestamp getTimeStamp() {
        if (timeStampBuilder_ == null) {
          return timeStamp_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
        } else {
          return timeStampBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       */
      public Builder setTimeStamp(zb.dcts.Dcts.Timestamp value) {
        if (timeStampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeStamp_ = value;
          onChanged();
        } else {
          timeStampBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       */
      public Builder setTimeStamp(
          zb.dcts.Dcts.Timestamp.Builder builderForValue) {
        if (timeStampBuilder_ == null) {
          timeStamp_ = builderForValue.build();
          onChanged();
        } else {
          timeStampBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       */
      public Builder mergeTimeStamp(zb.dcts.Dcts.Timestamp value) {
        if (timeStampBuilder_ == null) {
          if (timeStamp_ != null) {
            timeStamp_ =
              zb.dcts.Dcts.Timestamp.newBuilder(timeStamp_).mergeFrom(value).buildPartial();
          } else {
            timeStamp_ = value;
          }
          onChanged();
        } else {
          timeStampBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       */
      public Builder clearTimeStamp() {
        if (timeStampBuilder_ == null) {
          timeStamp_ = null;
          onChanged();
        } else {
          timeStamp_ = null;
          timeStampBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       */
      public zb.dcts.Dcts.Timestamp.Builder getTimeStampBuilder() {
        
        onChanged();
        return getTimeStampFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       */
      public zb.dcts.Dcts.TimestampOrBuilder getTimeStampOrBuilder() {
        if (timeStampBuilder_ != null) {
          return timeStampBuilder_.getMessageOrBuilder();
        } else {
          return timeStamp_ == null ?
              zb.dcts.Dcts.Timestamp.getDefaultInstance() : timeStamp_;
        }
      }
      /**
       * <code>.zb.dcts.Timestamp time_stamp = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> 
          getTimeStampFieldBuilder() {
        if (timeStampBuilder_ == null) {
          timeStampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder>(
                  getTimeStamp(),
                  getParentForChildren(),
                  isClean());
          timeStamp_ = null;
        }
        return timeStampBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalParamPoint)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalParamPoint)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalParamPoint>
        PARSER = new com.google.protobuf.AbstractParser<SignalParamPoint>() {
      @java.lang.Override
      public SignalParamPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalParamPoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalParamPoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalParamPoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalCurveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalCurve)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint> 
        getParamPointList();
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint getParamPoint(int index);
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    int getParamPointCount();
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder> 
        getParamPointOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder getParamPointOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.database.SignalCurve}
   */
  public static final class SignalCurve extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalCurve)
      SignalCurveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalCurve.newBuilder() to construct.
    private SignalCurve(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalCurve() {
      id_ = "";
      paramPoint_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalCurve();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalCurve(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                paramPoint_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint>();
                mutable_bitField0_ |= 0x00000001;
              }
              paramPoint_.add(
                  input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          paramPoint_ = java.util.Collections.unmodifiableList(paramPoint_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalCurve_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalCurve_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.class, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAM_POINT_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint> paramPoint_;
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint> getParamPointList() {
      return paramPoint_;
    }
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder> 
        getParamPointOrBuilderList() {
      return paramPoint_;
    }
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    @java.lang.Override
    public int getParamPointCount() {
      return paramPoint_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint getParamPoint(int index) {
      return paramPoint_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder getParamPointOrBuilder(
        int index) {
      return paramPoint_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      for (int i = 0; i < paramPoint_.size(); i++) {
        output.writeMessage(2, paramPoint_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      for (int i = 0; i < paramPoint_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, paramPoint_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalCurve)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalCurve other = (zb.dcts.database.DbKgdServiceOuterClass.SignalCurve) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getParamPointList()
          .equals(other.getParamPointList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getParamPointCount() > 0) {
        hash = (37 * hash) + PARAM_POINT_FIELD_NUMBER;
        hash = (53 * hash) + getParamPointList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalCurve prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.SignalCurve}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalCurve)
        zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalCurve_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalCurve_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.class, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getParamPointFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (paramPointBuilder_ == null) {
          paramPoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          paramPointBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalCurve_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalCurve result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalCurve result = new zb.dcts.database.DbKgdServiceOuterClass.SignalCurve(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (paramPointBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            paramPoint_ = java.util.Collections.unmodifiableList(paramPoint_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.paramPoint_ = paramPoint_;
        } else {
          result.paramPoint_ = paramPointBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalCurve) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalCurve)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalCurve other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (paramPointBuilder_ == null) {
          if (!other.paramPoint_.isEmpty()) {
            if (paramPoint_.isEmpty()) {
              paramPoint_ = other.paramPoint_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParamPointIsMutable();
              paramPoint_.addAll(other.paramPoint_);
            }
            onChanged();
          }
        } else {
          if (!other.paramPoint_.isEmpty()) {
            if (paramPointBuilder_.isEmpty()) {
              paramPointBuilder_.dispose();
              paramPointBuilder_ = null;
              paramPoint_ = other.paramPoint_;
              bitField0_ = (bitField0_ & ~0x00000001);
              paramPointBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParamPointFieldBuilder() : null;
            } else {
              paramPointBuilder_.addAllMessages(other.paramPoint_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalCurve parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalCurve) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint> paramPoint_ =
        java.util.Collections.emptyList();
      private void ensureParamPointIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          paramPoint_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint>(paramPoint_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder> paramPointBuilder_;

      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint> getParamPointList() {
        if (paramPointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(paramPoint_);
        } else {
          return paramPointBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public int getParamPointCount() {
        if (paramPointBuilder_ == null) {
          return paramPoint_.size();
        } else {
          return paramPointBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint getParamPoint(int index) {
        if (paramPointBuilder_ == null) {
          return paramPoint_.get(index);
        } else {
          return paramPointBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder setParamPoint(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint value) {
        if (paramPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamPointIsMutable();
          paramPoint_.set(index, value);
          onChanged();
        } else {
          paramPointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder setParamPoint(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder builderForValue) {
        if (paramPointBuilder_ == null) {
          ensureParamPointIsMutable();
          paramPoint_.set(index, builderForValue.build());
          onChanged();
        } else {
          paramPointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder addParamPoint(zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint value) {
        if (paramPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamPointIsMutable();
          paramPoint_.add(value);
          onChanged();
        } else {
          paramPointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder addParamPoint(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint value) {
        if (paramPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamPointIsMutable();
          paramPoint_.add(index, value);
          onChanged();
        } else {
          paramPointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder addParamPoint(
          zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder builderForValue) {
        if (paramPointBuilder_ == null) {
          ensureParamPointIsMutable();
          paramPoint_.add(builderForValue.build());
          onChanged();
        } else {
          paramPointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder addParamPoint(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder builderForValue) {
        if (paramPointBuilder_ == null) {
          ensureParamPointIsMutable();
          paramPoint_.add(index, builderForValue.build());
          onChanged();
        } else {
          paramPointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder addAllParamPoint(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint> values) {
        if (paramPointBuilder_ == null) {
          ensureParamPointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, paramPoint_);
          onChanged();
        } else {
          paramPointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder clearParamPoint() {
        if (paramPointBuilder_ == null) {
          paramPoint_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          paramPointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public Builder removeParamPoint(int index) {
        if (paramPointBuilder_ == null) {
          ensureParamPointIsMutable();
          paramPoint_.remove(index);
          onChanged();
        } else {
          paramPointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder getParamPointBuilder(
          int index) {
        return getParamPointFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder getParamPointOrBuilder(
          int index) {
        if (paramPointBuilder_ == null) {
          return paramPoint_.get(index);  } else {
          return paramPointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder> 
           getParamPointOrBuilderList() {
        if (paramPointBuilder_ != null) {
          return paramPointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(paramPoint_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder addParamPointBuilder() {
        return getParamPointFieldBuilder().addBuilder(
            zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder addParamPointBuilder(
          int index) {
        return getParamPointFieldBuilder().addBuilder(
            index, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.SignalParamPoint param_point = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder> 
           getParamPointBuilderList() {
        return getParamPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder> 
          getParamPointFieldBuilder() {
        if (paramPointBuilder_ == null) {
          paramPointBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPoint.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalParamPointOrBuilder>(
                  paramPoint_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          paramPoint_ = null;
        }
        return paramPointBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalCurve)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalCurve)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalCurve DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalCurve();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalCurve getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalCurve>
        PARSER = new com.google.protobuf.AbstractParser<SignalCurve>() {
      @java.lang.Override
      public SignalCurve parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalCurve(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalCurve> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalCurve> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalVariationResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalVariationResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    boolean hasTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    zb.dcts.Dcts.TimeSpan getTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve> 
        getSignalCurveList();
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalCurve getSignalCurve(int index);
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    int getSignalCurveCount();
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder> 
        getSignalCurveOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder getSignalCurveOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.database.SignalVariationResponse}
   */
  public static final class SignalVariationResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalVariationResponse)
      SignalVariationResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalVariationResponse.newBuilder() to construct.
    private SignalVariationResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalVariationResponse() {
      signalCurve_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalVariationResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalVariationResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeSpan_ != null) {
                subBuilder = timeSpan_.toBuilder();
              }
              timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSpan_);
                timeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signalCurve_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve>();
                mutable_bitField0_ |= 0x00000001;
              }
              signalCurve_.add(
                  input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signalCurve_ = java.util.Collections.unmodifiableList(signalCurve_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalVariationResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalVariationResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse.class, zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse.Builder.class);
    }

    public static final int TIME_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.TimeSpan timeSpan_;
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    @java.lang.Override
    public boolean hasTimeSpan() {
      return timeSpan_ != null;
    }
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeSpan() {
      return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
    }
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
      return getTimeSpan();
    }

    public static final int SIGNAL_CURVE_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve> signalCurve_;
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve> getSignalCurveList() {
      return signalCurve_;
    }
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder> 
        getSignalCurveOrBuilderList() {
      return signalCurve_;
    }
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    @java.lang.Override
    public int getSignalCurveCount() {
      return signalCurve_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve getSignalCurve(int index) {
      return signalCurve_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder getSignalCurveOrBuilder(
        int index) {
      return signalCurve_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeSpan_ != null) {
        output.writeMessage(1, getTimeSpan());
      }
      for (int i = 0; i < signalCurve_.size(); i++) {
        output.writeMessage(2, signalCurve_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimeSpan());
      }
      for (int i = 0; i < signalCurve_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, signalCurve_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse other = (zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse) obj;

      if (hasTimeSpan() != other.hasTimeSpan()) return false;
      if (hasTimeSpan()) {
        if (!getTimeSpan()
            .equals(other.getTimeSpan())) return false;
      }
      if (!getSignalCurveList()
          .equals(other.getSignalCurveList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeSpan()) {
        hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSpan().hashCode();
      }
      if (getSignalCurveCount() > 0) {
        hash = (37 * hash) + SIGNAL_CURVE_FIELD_NUMBER;
        hash = (53 * hash) + getSignalCurveList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.SignalVariationResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalVariationResponse)
        zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalVariationResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalVariationResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse.class, zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignalCurveFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }
        if (signalCurveBuilder_ == null) {
          signalCurve_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signalCurveBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalVariationResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse result = new zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse(this);
        int from_bitField0_ = bitField0_;
        if (timeSpanBuilder_ == null) {
          result.timeSpan_ = timeSpan_;
        } else {
          result.timeSpan_ = timeSpanBuilder_.build();
        }
        if (signalCurveBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            signalCurve_ = java.util.Collections.unmodifiableList(signalCurve_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signalCurve_ = signalCurve_;
        } else {
          result.signalCurve_ = signalCurveBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse.getDefaultInstance()) return this;
        if (other.hasTimeSpan()) {
          mergeTimeSpan(other.getTimeSpan());
        }
        if (signalCurveBuilder_ == null) {
          if (!other.signalCurve_.isEmpty()) {
            if (signalCurve_.isEmpty()) {
              signalCurve_ = other.signalCurve_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignalCurveIsMutable();
              signalCurve_.addAll(other.signalCurve_);
            }
            onChanged();
          }
        } else {
          if (!other.signalCurve_.isEmpty()) {
            if (signalCurveBuilder_.isEmpty()) {
              signalCurveBuilder_.dispose();
              signalCurveBuilder_ = null;
              signalCurve_ = other.signalCurve_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signalCurveBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignalCurveFieldBuilder() : null;
            } else {
              signalCurveBuilder_.addAllMessages(other.signalCurve_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.Dcts.TimeSpan timeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return Whether the timeSpan field is set.
       */
      public boolean hasTimeSpan() {
        return timeSpanBuilder_ != null || timeSpan_ != null;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return The timeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        if (timeSpanBuilder_ == null) {
          return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        } else {
          return timeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSpan_ = value;
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = builderForValue.build();
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (timeSpan_ != null) {
            timeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
          } else {
            timeSpan_ = value;
          }
          onChanged();
        } else {
          timeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder clearTimeSpan() {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
          onChanged();
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
        
        onChanged();
        return getTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        if (timeSpanBuilder_ != null) {
          return timeSpanBuilder_.getMessageOrBuilder();
        } else {
          return timeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        }
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeSpanFieldBuilder() {
        if (timeSpanBuilder_ == null) {
          timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeSpan(),
                  getParentForChildren(),
                  isClean());
          timeSpan_ = null;
        }
        return timeSpanBuilder_;
      }

      private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve> signalCurve_ =
        java.util.Collections.emptyList();
      private void ensureSignalCurveIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signalCurve_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve>(signalCurve_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalCurve, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder> signalCurveBuilder_;

      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve> getSignalCurveList() {
        if (signalCurveBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signalCurve_);
        } else {
          return signalCurveBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public int getSignalCurveCount() {
        if (signalCurveBuilder_ == null) {
          return signalCurve_.size();
        } else {
          return signalCurveBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve getSignalCurve(int index) {
        if (signalCurveBuilder_ == null) {
          return signalCurve_.get(index);
        } else {
          return signalCurveBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder setSignalCurve(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve value) {
        if (signalCurveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalCurveIsMutable();
          signalCurve_.set(index, value);
          onChanged();
        } else {
          signalCurveBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder setSignalCurve(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder builderForValue) {
        if (signalCurveBuilder_ == null) {
          ensureSignalCurveIsMutable();
          signalCurve_.set(index, builderForValue.build());
          onChanged();
        } else {
          signalCurveBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder addSignalCurve(zb.dcts.database.DbKgdServiceOuterClass.SignalCurve value) {
        if (signalCurveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalCurveIsMutable();
          signalCurve_.add(value);
          onChanged();
        } else {
          signalCurveBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder addSignalCurve(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve value) {
        if (signalCurveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalCurveIsMutable();
          signalCurve_.add(index, value);
          onChanged();
        } else {
          signalCurveBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder addSignalCurve(
          zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder builderForValue) {
        if (signalCurveBuilder_ == null) {
          ensureSignalCurveIsMutable();
          signalCurve_.add(builderForValue.build());
          onChanged();
        } else {
          signalCurveBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder addSignalCurve(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder builderForValue) {
        if (signalCurveBuilder_ == null) {
          ensureSignalCurveIsMutable();
          signalCurve_.add(index, builderForValue.build());
          onChanged();
        } else {
          signalCurveBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder addAllSignalCurve(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalCurve> values) {
        if (signalCurveBuilder_ == null) {
          ensureSignalCurveIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signalCurve_);
          onChanged();
        } else {
          signalCurveBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder clearSignalCurve() {
        if (signalCurveBuilder_ == null) {
          signalCurve_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signalCurveBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public Builder removeSignalCurve(int index) {
        if (signalCurveBuilder_ == null) {
          ensureSignalCurveIsMutable();
          signalCurve_.remove(index);
          onChanged();
        } else {
          signalCurveBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder getSignalCurveBuilder(
          int index) {
        return getSignalCurveFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder getSignalCurveOrBuilder(
          int index) {
        if (signalCurveBuilder_ == null) {
          return signalCurve_.get(index);  } else {
          return signalCurveBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder> 
           getSignalCurveOrBuilderList() {
        if (signalCurveBuilder_ != null) {
          return signalCurveBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signalCurve_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder addSignalCurveBuilder() {
        return getSignalCurveFieldBuilder().addBuilder(
            zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder addSignalCurveBuilder(
          int index) {
        return getSignalCurveFieldBuilder().addBuilder(
            index, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.SignalCurve signal_curve = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder> 
           getSignalCurveBuilderList() {
        return getSignalCurveFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalCurve, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder> 
          getSignalCurveFieldBuilder() {
        if (signalCurveBuilder_ == null) {
          signalCurveBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.SignalCurve, zb.dcts.database.DbKgdServiceOuterClass.SignalCurve.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalCurveOrBuilder>(
                  signalCurve_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          signalCurve_ = null;
        }
        return signalCurveBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalVariationResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalVariationResponse)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalVariationResponse>
        PARSER = new com.google.protobuf.AbstractParser<SignalVariationResponse>() {
      @java.lang.Override
      public SignalVariationResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalVariationResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalVariationResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalVariationResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalVariationResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalTypeDescriptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalTypeDescription)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>uint32 cnt = 2;</code>
     * @return The cnt.
     */
    int getCnt();
  }
  /**
   * Protobuf type {@code zb.dcts.database.SignalTypeDescription}
   */
  public static final class SignalTypeDescription extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalTypeDescription)
      SignalTypeDescriptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalTypeDescription.newBuilder() to construct.
    private SignalTypeDescription(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalTypeDescription() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalTypeDescription();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalTypeDescription(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              cnt_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeDescription_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeDescription_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CNT_FIELD_NUMBER = 2;
    private int cnt_;
    /**
     * <code>uint32 cnt = 2;</code>
     * @return The cnt.
     */
    @java.lang.Override
    public int getCnt() {
      return cnt_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (cnt_ != 0) {
        output.writeUInt32(2, cnt_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (cnt_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, cnt_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription other = (zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getCnt()
          != other.getCnt()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CNT_FIELD_NUMBER;
      hash = (53 * hash) + getCnt();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.SignalTypeDescription}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalTypeDescription)
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeDescription_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeDescription_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        cnt_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeDescription_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription result = new zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription(this);
        result.name_ = name_;
        result.cnt_ = cnt_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getCnt() != 0) {
          setCnt(other.getCnt());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int cnt_ ;
      /**
       * <code>uint32 cnt = 2;</code>
       * @return The cnt.
       */
      @java.lang.Override
      public int getCnt() {
        return cnt_;
      }
      /**
       * <code>uint32 cnt = 2;</code>
       * @param value The cnt to set.
       * @return This builder for chaining.
       */
      public Builder setCnt(int value) {
        
        cnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 cnt = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCnt() {
        
        cnt_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalTypeDescription)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalTypeDescription)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalTypeDescription>
        PARSER = new com.google.protobuf.AbstractParser<SignalTypeDescription>() {
      @java.lang.Override
      public SignalTypeDescription parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalTypeDescription(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalTypeDescription> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalTypeDescription> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalTypesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalTypesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    boolean hasTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    zb.dcts.Dcts.TimeSpan getTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription> 
        getTypeDescriptionList();
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription getTypeDescription(int index);
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    int getTypeDescriptionCount();
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder> 
        getTypeDescriptionOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder getTypeDescriptionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.database.SignalTypesResponse}
   */
  public static final class SignalTypesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalTypesResponse)
      SignalTypesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalTypesResponse.newBuilder() to construct.
    private SignalTypesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalTypesResponse() {
      typeDescription_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalTypesResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalTypesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeSpan_ != null) {
                subBuilder = timeSpan_.toBuilder();
              }
              timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSpan_);
                timeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                typeDescription_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription>();
                mutable_bitField0_ |= 0x00000001;
              }
              typeDescription_.add(
                  input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          typeDescription_ = java.util.Collections.unmodifiableList(typeDescription_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse.Builder.class);
    }

    public static final int TIME_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.TimeSpan timeSpan_;
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    @java.lang.Override
    public boolean hasTimeSpan() {
      return timeSpan_ != null;
    }
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeSpan() {
      return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
    }
    /**
     * <pre>
     *信号实际出现时间段
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
      return getTimeSpan();
    }

    public static final int TYPE_DESCRIPTION_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription> typeDescription_;
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription> getTypeDescriptionList() {
      return typeDescription_;
    }
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder> 
        getTypeDescriptionOrBuilderList() {
      return typeDescription_;
    }
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    @java.lang.Override
    public int getTypeDescriptionCount() {
      return typeDescription_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription getTypeDescription(int index) {
      return typeDescription_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder getTypeDescriptionOrBuilder(
        int index) {
      return typeDescription_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeSpan_ != null) {
        output.writeMessage(1, getTimeSpan());
      }
      for (int i = 0; i < typeDescription_.size(); i++) {
        output.writeMessage(2, typeDescription_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimeSpan());
      }
      for (int i = 0; i < typeDescription_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, typeDescription_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse other = (zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse) obj;

      if (hasTimeSpan() != other.hasTimeSpan()) return false;
      if (hasTimeSpan()) {
        if (!getTimeSpan()
            .equals(other.getTimeSpan())) return false;
      }
      if (!getTypeDescriptionList()
          .equals(other.getTypeDescriptionList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeSpan()) {
        hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSpan().hashCode();
      }
      if (getTypeDescriptionCount() > 0) {
        hash = (37 * hash) + TYPE_DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getTypeDescriptionList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.SignalTypesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalTypesResponse)
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTypeDescriptionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }
        if (typeDescriptionBuilder_ == null) {
          typeDescription_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          typeDescriptionBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypesResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse result = new zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse(this);
        int from_bitField0_ = bitField0_;
        if (timeSpanBuilder_ == null) {
          result.timeSpan_ = timeSpan_;
        } else {
          result.timeSpan_ = timeSpanBuilder_.build();
        }
        if (typeDescriptionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            typeDescription_ = java.util.Collections.unmodifiableList(typeDescription_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.typeDescription_ = typeDescription_;
        } else {
          result.typeDescription_ = typeDescriptionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse.getDefaultInstance()) return this;
        if (other.hasTimeSpan()) {
          mergeTimeSpan(other.getTimeSpan());
        }
        if (typeDescriptionBuilder_ == null) {
          if (!other.typeDescription_.isEmpty()) {
            if (typeDescription_.isEmpty()) {
              typeDescription_ = other.typeDescription_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypeDescriptionIsMutable();
              typeDescription_.addAll(other.typeDescription_);
            }
            onChanged();
          }
        } else {
          if (!other.typeDescription_.isEmpty()) {
            if (typeDescriptionBuilder_.isEmpty()) {
              typeDescriptionBuilder_.dispose();
              typeDescriptionBuilder_ = null;
              typeDescription_ = other.typeDescription_;
              bitField0_ = (bitField0_ & ~0x00000001);
              typeDescriptionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTypeDescriptionFieldBuilder() : null;
            } else {
              typeDescriptionBuilder_.addAllMessages(other.typeDescription_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.Dcts.TimeSpan timeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return Whether the timeSpan field is set.
       */
      public boolean hasTimeSpan() {
        return timeSpanBuilder_ != null || timeSpan_ != null;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return The timeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        if (timeSpanBuilder_ == null) {
          return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        } else {
          return timeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSpan_ = value;
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = builderForValue.build();
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (timeSpan_ != null) {
            timeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
          } else {
            timeSpan_ = value;
          }
          onChanged();
        } else {
          timeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder clearTimeSpan() {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
          onChanged();
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
        
        onChanged();
        return getTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        if (timeSpanBuilder_ != null) {
          return timeSpanBuilder_.getMessageOrBuilder();
        } else {
          return timeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        }
      }
      /**
       * <pre>
       *信号实际出现时间段
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeSpanFieldBuilder() {
        if (timeSpanBuilder_ == null) {
          timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeSpan(),
                  getParentForChildren(),
                  isClean());
          timeSpan_ = null;
        }
        return timeSpanBuilder_;
      }

      private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription> typeDescription_ =
        java.util.Collections.emptyList();
      private void ensureTypeDescriptionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          typeDescription_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription>(typeDescription_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder> typeDescriptionBuilder_;

      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription> getTypeDescriptionList() {
        if (typeDescriptionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(typeDescription_);
        } else {
          return typeDescriptionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public int getTypeDescriptionCount() {
        if (typeDescriptionBuilder_ == null) {
          return typeDescription_.size();
        } else {
          return typeDescriptionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription getTypeDescription(int index) {
        if (typeDescriptionBuilder_ == null) {
          return typeDescription_.get(index);
        } else {
          return typeDescriptionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder setTypeDescription(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription value) {
        if (typeDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeDescriptionIsMutable();
          typeDescription_.set(index, value);
          onChanged();
        } else {
          typeDescriptionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder setTypeDescription(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder builderForValue) {
        if (typeDescriptionBuilder_ == null) {
          ensureTypeDescriptionIsMutable();
          typeDescription_.set(index, builderForValue.build());
          onChanged();
        } else {
          typeDescriptionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder addTypeDescription(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription value) {
        if (typeDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeDescriptionIsMutable();
          typeDescription_.add(value);
          onChanged();
        } else {
          typeDescriptionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder addTypeDescription(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription value) {
        if (typeDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeDescriptionIsMutable();
          typeDescription_.add(index, value);
          onChanged();
        } else {
          typeDescriptionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder addTypeDescription(
          zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder builderForValue) {
        if (typeDescriptionBuilder_ == null) {
          ensureTypeDescriptionIsMutable();
          typeDescription_.add(builderForValue.build());
          onChanged();
        } else {
          typeDescriptionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder addTypeDescription(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder builderForValue) {
        if (typeDescriptionBuilder_ == null) {
          ensureTypeDescriptionIsMutable();
          typeDescription_.add(index, builderForValue.build());
          onChanged();
        } else {
          typeDescriptionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder addAllTypeDescription(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription> values) {
        if (typeDescriptionBuilder_ == null) {
          ensureTypeDescriptionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, typeDescription_);
          onChanged();
        } else {
          typeDescriptionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder clearTypeDescription() {
        if (typeDescriptionBuilder_ == null) {
          typeDescription_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          typeDescriptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public Builder removeTypeDescription(int index) {
        if (typeDescriptionBuilder_ == null) {
          ensureTypeDescriptionIsMutable();
          typeDescription_.remove(index);
          onChanged();
        } else {
          typeDescriptionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder getTypeDescriptionBuilder(
          int index) {
        return getTypeDescriptionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder getTypeDescriptionOrBuilder(
          int index) {
        if (typeDescriptionBuilder_ == null) {
          return typeDescription_.get(index);  } else {
          return typeDescriptionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder> 
           getTypeDescriptionOrBuilderList() {
        if (typeDescriptionBuilder_ != null) {
          return typeDescriptionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(typeDescription_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder addTypeDescriptionBuilder() {
        return getTypeDescriptionFieldBuilder().addBuilder(
            zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder addTypeDescriptionBuilder(
          int index) {
        return getTypeDescriptionFieldBuilder().addBuilder(
            index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.SignalTypeDescription type_description = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder> 
           getTypeDescriptionBuilderList() {
        return getTypeDescriptionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder> 
          getTypeDescriptionFieldBuilder() {
        if (typeDescriptionBuilder_ == null) {
          typeDescriptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescription.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeDescriptionOrBuilder>(
                  typeDescription_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          typeDescription_ = null;
        }
        return typeDescriptionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalTypesResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalTypesResponse)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalTypesResponse>
        PARSER = new com.google.protobuf.AbstractParser<SignalTypesResponse>() {
      @java.lang.Override
      public SignalTypesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalTypesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalTypesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalTypesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTypesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FreqChOccupancyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.FreqChOccupancy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 频道范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
     * @return Whether the freqChannel field is set.
     */
    boolean hasFreqChannel();
    /**
     * <pre>
     * 频道范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
     * @return The freqChannel.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqChannel();
    /**
     * <pre>
     * 频道范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqChannelOrBuilder();

    /**
     * <pre>
     *占用度
     * </pre>
     *
     * <code>float occupancy = 2;</code>
     * @return The occupancy.
     */
    float getOccupancy();
  }
  /**
   * Protobuf type {@code zb.dcts.database.FreqChOccupancy}
   */
  public static final class FreqChOccupancy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.FreqChOccupancy)
      FreqChOccupancyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FreqChOccupancy.newBuilder() to construct.
    private FreqChOccupancy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FreqChOccupancy() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FreqChOccupancy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FreqChOccupancy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (freqChannel_ != null) {
                subBuilder = freqChannel_.toBuilder();
              }
              freqChannel_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqChannel_);
                freqChannel_ = subBuilder.buildPartial();
              }

              break;
            }
            case 21: {

              occupancy_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqChOccupancy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqChOccupancy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.class, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder.class);
    }

    public static final int FREQ_CHANNEL_FIELD_NUMBER = 1;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqChannel_;
    /**
     * <pre>
     * 频道范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
     * @return Whether the freqChannel field is set.
     */
    @java.lang.Override
    public boolean hasFreqChannel() {
      return freqChannel_ != null;
    }
    /**
     * <pre>
     * 频道范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
     * @return The freqChannel.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqChannel() {
      return freqChannel_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqChannel_;
    }
    /**
     * <pre>
     * 频道范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqChannelOrBuilder() {
      return getFreqChannel();
    }

    public static final int OCCUPANCY_FIELD_NUMBER = 2;
    private float occupancy_;
    /**
     * <pre>
     *占用度
     * </pre>
     *
     * <code>float occupancy = 2;</code>
     * @return The occupancy.
     */
    @java.lang.Override
    public float getOccupancy() {
      return occupancy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (freqChannel_ != null) {
        output.writeMessage(1, getFreqChannel());
      }
      if (occupancy_ != 0F) {
        output.writeFloat(2, occupancy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freqChannel_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFreqChannel());
      }
      if (occupancy_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, occupancy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy other = (zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy) obj;

      if (hasFreqChannel() != other.hasFreqChannel()) return false;
      if (hasFreqChannel()) {
        if (!getFreqChannel()
            .equals(other.getFreqChannel())) return false;
      }
      if (java.lang.Float.floatToIntBits(getOccupancy())
          != java.lang.Float.floatToIntBits(
              other.getOccupancy())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFreqChannel()) {
        hash = (37 * hash) + FREQ_CHANNEL_FIELD_NUMBER;
        hash = (53 * hash) + getFreqChannel().hashCode();
      }
      hash = (37 * hash) + OCCUPANCY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOccupancy());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.FreqChOccupancy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.FreqChOccupancy)
        zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqChOccupancy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqChOccupancy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.class, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (freqChannelBuilder_ == null) {
          freqChannel_ = null;
        } else {
          freqChannel_ = null;
          freqChannelBuilder_ = null;
        }
        occupancy_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqChOccupancy_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy build() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy result = new zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy(this);
        if (freqChannelBuilder_ == null) {
          result.freqChannel_ = freqChannel_;
        } else {
          result.freqChannel_ = freqChannelBuilder_.build();
        }
        result.occupancy_ = occupancy_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.getDefaultInstance()) return this;
        if (other.hasFreqChannel()) {
          mergeFreqChannel(other.getFreqChannel());
        }
        if (other.getOccupancy() != 0F) {
          setOccupancy(other.getOccupancy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqChannel_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqChannelBuilder_;
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       * @return Whether the freqChannel field is set.
       */
      public boolean hasFreqChannel() {
        return freqChannelBuilder_ != null || freqChannel_ != null;
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       * @return The freqChannel.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqChannel() {
        if (freqChannelBuilder_ == null) {
          return freqChannel_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqChannel_;
        } else {
          return freqChannelBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       */
      public Builder setFreqChannel(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqChannel_ = value;
          onChanged();
        } else {
          freqChannelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       */
      public Builder setFreqChannel(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqChannelBuilder_ == null) {
          freqChannel_ = builderForValue.build();
          onChanged();
        } else {
          freqChannelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       */
      public Builder mergeFreqChannel(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqChannelBuilder_ == null) {
          if (freqChannel_ != null) {
            freqChannel_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(freqChannel_).mergeFrom(value).buildPartial();
          } else {
            freqChannel_ = value;
          }
          onChanged();
        } else {
          freqChannelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       */
      public Builder clearFreqChannel() {
        if (freqChannelBuilder_ == null) {
          freqChannel_ = null;
          onChanged();
        } else {
          freqChannel_ = null;
          freqChannelBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqChannelBuilder() {
        
        onChanged();
        return getFreqChannelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqChannelOrBuilder() {
        if (freqChannelBuilder_ != null) {
          return freqChannelBuilder_.getMessageOrBuilder();
        } else {
          return freqChannel_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqChannel_;
        }
      }
      /**
       * <pre>
       * 频道范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_channel = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqChannelFieldBuilder() {
        if (freqChannelBuilder_ == null) {
          freqChannelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFreqChannel(),
                  getParentForChildren(),
                  isClean());
          freqChannel_ = null;
        }
        return freqChannelBuilder_;
      }

      private float occupancy_ ;
      /**
       * <pre>
       *占用度
       * </pre>
       *
       * <code>float occupancy = 2;</code>
       * @return The occupancy.
       */
      @java.lang.Override
      public float getOccupancy() {
        return occupancy_;
      }
      /**
       * <pre>
       *占用度
       * </pre>
       *
       * <code>float occupancy = 2;</code>
       * @param value The occupancy to set.
       * @return This builder for chaining.
       */
      public Builder setOccupancy(float value) {
        
        occupancy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *占用度
       * </pre>
       *
       * <code>float occupancy = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOccupancy() {
        
        occupancy_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.FreqChOccupancy)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.FreqChOccupancy)
    private static final zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FreqChOccupancy>
        PARSER = new com.google.protobuf.AbstractParser<FreqChOccupancy>() {
      @java.lang.Override
      public FreqChOccupancy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FreqChOccupancy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FreqChOccupancy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FreqChOccupancy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FreqBandOccupancyResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.FreqBandOccupancyResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy> 
        getOccupancysList();
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy getOccupancys(int index);
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    int getOccupancysCount();
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder> 
        getOccupancysOrBuilderList();
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder getOccupancysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.database.FreqBandOccupancyResponse}
   */
  public static final class FreqBandOccupancyResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.FreqBandOccupancyResponse)
      FreqBandOccupancyResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FreqBandOccupancyResponse.newBuilder() to construct.
    private FreqBandOccupancyResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FreqBandOccupancyResponse() {
      occupancys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FreqBandOccupancyResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FreqBandOccupancyResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                occupancys_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy>();
                mutable_bitField0_ |= 0x00000001;
              }
              occupancys_.add(
                  input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          occupancys_ = java.util.Collections.unmodifiableList(occupancys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqBandOccupancyResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqBandOccupancyResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse.class, zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse.Builder.class);
    }

    public static final int OCCUPANCYS_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy> occupancys_;
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy> getOccupancysList() {
      return occupancys_;
    }
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder> 
        getOccupancysOrBuilderList() {
      return occupancys_;
    }
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    @java.lang.Override
    public int getOccupancysCount() {
      return occupancys_.size();
    }
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy getOccupancys(int index) {
      return occupancys_.get(index);
    }
    /**
     * <pre>
     *频道占用度
     * </pre>
     *
     * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder getOccupancysOrBuilder(
        int index) {
      return occupancys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < occupancys_.size(); i++) {
        output.writeMessage(1, occupancys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < occupancys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, occupancys_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse other = (zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse) obj;

      if (!getOccupancysList()
          .equals(other.getOccupancysList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOccupancysCount() > 0) {
        hash = (37 * hash) + OCCUPANCYS_FIELD_NUMBER;
        hash = (53 * hash) + getOccupancysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.FreqBandOccupancyResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.FreqBandOccupancyResponse)
        zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqBandOccupancyResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqBandOccupancyResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse.class, zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOccupancysFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (occupancysBuilder_ == null) {
          occupancys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          occupancysBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqBandOccupancyResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse build() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse result = new zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse(this);
        int from_bitField0_ = bitField0_;
        if (occupancysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            occupancys_ = java.util.Collections.unmodifiableList(occupancys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.occupancys_ = occupancys_;
        } else {
          result.occupancys_ = occupancysBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse.getDefaultInstance()) return this;
        if (occupancysBuilder_ == null) {
          if (!other.occupancys_.isEmpty()) {
            if (occupancys_.isEmpty()) {
              occupancys_ = other.occupancys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOccupancysIsMutable();
              occupancys_.addAll(other.occupancys_);
            }
            onChanged();
          }
        } else {
          if (!other.occupancys_.isEmpty()) {
            if (occupancysBuilder_.isEmpty()) {
              occupancysBuilder_.dispose();
              occupancysBuilder_ = null;
              occupancys_ = other.occupancys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              occupancysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOccupancysFieldBuilder() : null;
            } else {
              occupancysBuilder_.addAllMessages(other.occupancys_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy> occupancys_ =
        java.util.Collections.emptyList();
      private void ensureOccupancysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          occupancys_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy>(occupancys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder> occupancysBuilder_;

      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy> getOccupancysList() {
        if (occupancysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(occupancys_);
        } else {
          return occupancysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public int getOccupancysCount() {
        if (occupancysBuilder_ == null) {
          return occupancys_.size();
        } else {
          return occupancysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy getOccupancys(int index) {
        if (occupancysBuilder_ == null) {
          return occupancys_.get(index);
        } else {
          return occupancysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder setOccupancys(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy value) {
        if (occupancysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccupancysIsMutable();
          occupancys_.set(index, value);
          onChanged();
        } else {
          occupancysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder setOccupancys(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder builderForValue) {
        if (occupancysBuilder_ == null) {
          ensureOccupancysIsMutable();
          occupancys_.set(index, builderForValue.build());
          onChanged();
        } else {
          occupancysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder addOccupancys(zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy value) {
        if (occupancysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccupancysIsMutable();
          occupancys_.add(value);
          onChanged();
        } else {
          occupancysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder addOccupancys(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy value) {
        if (occupancysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccupancysIsMutable();
          occupancys_.add(index, value);
          onChanged();
        } else {
          occupancysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder addOccupancys(
          zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder builderForValue) {
        if (occupancysBuilder_ == null) {
          ensureOccupancysIsMutable();
          occupancys_.add(builderForValue.build());
          onChanged();
        } else {
          occupancysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder addOccupancys(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder builderForValue) {
        if (occupancysBuilder_ == null) {
          ensureOccupancysIsMutable();
          occupancys_.add(index, builderForValue.build());
          onChanged();
        } else {
          occupancysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder addAllOccupancys(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy> values) {
        if (occupancysBuilder_ == null) {
          ensureOccupancysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, occupancys_);
          onChanged();
        } else {
          occupancysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder clearOccupancys() {
        if (occupancysBuilder_ == null) {
          occupancys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          occupancysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public Builder removeOccupancys(int index) {
        if (occupancysBuilder_ == null) {
          ensureOccupancysIsMutable();
          occupancys_.remove(index);
          onChanged();
        } else {
          occupancysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder getOccupancysBuilder(
          int index) {
        return getOccupancysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder getOccupancysOrBuilder(
          int index) {
        if (occupancysBuilder_ == null) {
          return occupancys_.get(index);  } else {
          return occupancysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder> 
           getOccupancysOrBuilderList() {
        if (occupancysBuilder_ != null) {
          return occupancysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(occupancys_);
        }
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder addOccupancysBuilder() {
        return getOccupancysFieldBuilder().addBuilder(
            zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.getDefaultInstance());
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder addOccupancysBuilder(
          int index) {
        return getOccupancysFieldBuilder().addBuilder(
            index, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.getDefaultInstance());
      }
      /**
       * <pre>
       *频道占用度
       * </pre>
       *
       * <code>repeated .zb.dcts.database.FreqChOccupancy occupancys = 1;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder> 
           getOccupancysBuilderList() {
        return getOccupancysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder> 
          getOccupancysFieldBuilder() {
        if (occupancysBuilder_ == null) {
          occupancysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancy.Builder, zb.dcts.database.DbKgdServiceOuterClass.FreqChOccupancyOrBuilder>(
                  occupancys_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          occupancys_ = null;
        }
        return occupancysBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.FreqBandOccupancyResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.FreqBandOccupancyResponse)
    private static final zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FreqBandOccupancyResponse>
        PARSER = new com.google.protobuf.AbstractParser<FreqBandOccupancyResponse>() {
      @java.lang.Override
      public FreqBandOccupancyResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FreqBandOccupancyResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FreqBandOccupancyResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FreqBandOccupancyResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqBandOccupancyResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FreqConflictDayResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.FreqConflictDayResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *频谱占用时间
     * </pre>
     *
     * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
     * @return Whether the specCoccupancy field is set.
     */
    boolean hasSpecCoccupancy();
    /**
     * <pre>
     *频谱占用时间
     * </pre>
     *
     * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
     * @return The specCoccupancy.
     */
    zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse getSpecCoccupancy();
    /**
     * <pre>
     *频谱占用时间
     * </pre>
     *
     * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponseOrBuilder getSpecCoccupancyOrBuilder();

    /**
     * <pre>
     * 用频冲突结果
     * </pre>
     *
     * <code>uint32 conflict = 2;</code>
     * @return The conflict.
     */
    int getConflict();
  }
  /**
   * Protobuf type {@code zb.dcts.database.FreqConflictDayResponse}
   */
  public static final class FreqConflictDayResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.FreqConflictDayResponse)
      FreqConflictDayResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FreqConflictDayResponse.newBuilder() to construct.
    private FreqConflictDayResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FreqConflictDayResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FreqConflictDayResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FreqConflictDayResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder subBuilder = null;
              if (specCoccupancy_ != null) {
                subBuilder = specCoccupancy_.toBuilder();
              }
              specCoccupancy_ = input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(specCoccupancy_);
                specCoccupancy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              conflict_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictDayResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictDayResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.class, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder.class);
    }

    public static final int SPEC_COCCUPANCY_FIELD_NUMBER = 1;
    private zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse specCoccupancy_;
    /**
     * <pre>
     *频谱占用时间
     * </pre>
     *
     * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
     * @return Whether the specCoccupancy field is set.
     */
    @java.lang.Override
    public boolean hasSpecCoccupancy() {
      return specCoccupancy_ != null;
    }
    /**
     * <pre>
     *频谱占用时间
     * </pre>
     *
     * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
     * @return The specCoccupancy.
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse getSpecCoccupancy() {
      return specCoccupancy_ == null ? zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.getDefaultInstance() : specCoccupancy_;
    }
    /**
     * <pre>
     *频谱占用时间
     * </pre>
     *
     * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponseOrBuilder getSpecCoccupancyOrBuilder() {
      return getSpecCoccupancy();
    }

    public static final int CONFLICT_FIELD_NUMBER = 2;
    private int conflict_;
    /**
     * <pre>
     * 用频冲突结果
     * </pre>
     *
     * <code>uint32 conflict = 2;</code>
     * @return The conflict.
     */
    @java.lang.Override
    public int getConflict() {
      return conflict_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (specCoccupancy_ != null) {
        output.writeMessage(1, getSpecCoccupancy());
      }
      if (conflict_ != 0) {
        output.writeUInt32(2, conflict_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (specCoccupancy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSpecCoccupancy());
      }
      if (conflict_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, conflict_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse other = (zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse) obj;

      if (hasSpecCoccupancy() != other.hasSpecCoccupancy()) return false;
      if (hasSpecCoccupancy()) {
        if (!getSpecCoccupancy()
            .equals(other.getSpecCoccupancy())) return false;
      }
      if (getConflict()
          != other.getConflict()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSpecCoccupancy()) {
        hash = (37 * hash) + SPEC_COCCUPANCY_FIELD_NUMBER;
        hash = (53 * hash) + getSpecCoccupancy().hashCode();
      }
      hash = (37 * hash) + CONFLICT_FIELD_NUMBER;
      hash = (53 * hash) + getConflict();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.FreqConflictDayResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.FreqConflictDayResponse)
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictDayResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictDayResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.class, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (specCoccupancyBuilder_ == null) {
          specCoccupancy_ = null;
        } else {
          specCoccupancy_ = null;
          specCoccupancyBuilder_ = null;
        }
        conflict_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictDayResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse build() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse result = new zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse(this);
        if (specCoccupancyBuilder_ == null) {
          result.specCoccupancy_ = specCoccupancy_;
        } else {
          result.specCoccupancy_ = specCoccupancyBuilder_.build();
        }
        result.conflict_ = conflict_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.getDefaultInstance()) return this;
        if (other.hasSpecCoccupancy()) {
          mergeSpecCoccupancy(other.getSpecCoccupancy());
        }
        if (other.getConflict() != 0) {
          setConflict(other.getConflict());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse specCoccupancy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponseOrBuilder> specCoccupancyBuilder_;
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       * @return Whether the specCoccupancy field is set.
       */
      public boolean hasSpecCoccupancy() {
        return specCoccupancyBuilder_ != null || specCoccupancy_ != null;
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       * @return The specCoccupancy.
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse getSpecCoccupancy() {
        if (specCoccupancyBuilder_ == null) {
          return specCoccupancy_ == null ? zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.getDefaultInstance() : specCoccupancy_;
        } else {
          return specCoccupancyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       */
      public Builder setSpecCoccupancy(zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse value) {
        if (specCoccupancyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          specCoccupancy_ = value;
          onChanged();
        } else {
          specCoccupancyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       */
      public Builder setSpecCoccupancy(
          zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder builderForValue) {
        if (specCoccupancyBuilder_ == null) {
          specCoccupancy_ = builderForValue.build();
          onChanged();
        } else {
          specCoccupancyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       */
      public Builder mergeSpecCoccupancy(zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse value) {
        if (specCoccupancyBuilder_ == null) {
          if (specCoccupancy_ != null) {
            specCoccupancy_ =
              zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.newBuilder(specCoccupancy_).mergeFrom(value).buildPartial();
          } else {
            specCoccupancy_ = value;
          }
          onChanged();
        } else {
          specCoccupancyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       */
      public Builder clearSpecCoccupancy() {
        if (specCoccupancyBuilder_ == null) {
          specCoccupancy_ = null;
          onChanged();
        } else {
          specCoccupancy_ = null;
          specCoccupancyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder getSpecCoccupancyBuilder() {
        
        onChanged();
        return getSpecCoccupancyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponseOrBuilder getSpecCoccupancyOrBuilder() {
        if (specCoccupancyBuilder_ != null) {
          return specCoccupancyBuilder_.getMessageOrBuilder();
        } else {
          return specCoccupancy_ == null ?
              zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.getDefaultInstance() : specCoccupancy_;
        }
      }
      /**
       * <pre>
       *频谱占用时间
       * </pre>
       *
       * <code>.zb.dcts.database.SpectrumOccupancyResponse spec_coccupancy = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponseOrBuilder> 
          getSpecCoccupancyFieldBuilder() {
        if (specCoccupancyBuilder_ == null) {
          specCoccupancyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponse.Builder, zb.dcts.database.DbKgdServiceOuterClass.SpectrumOccupancyResponseOrBuilder>(
                  getSpecCoccupancy(),
                  getParentForChildren(),
                  isClean());
          specCoccupancy_ = null;
        }
        return specCoccupancyBuilder_;
      }

      private int conflict_ ;
      /**
       * <pre>
       * 用频冲突结果
       * </pre>
       *
       * <code>uint32 conflict = 2;</code>
       * @return The conflict.
       */
      @java.lang.Override
      public int getConflict() {
        return conflict_;
      }
      /**
       * <pre>
       * 用频冲突结果
       * </pre>
       *
       * <code>uint32 conflict = 2;</code>
       * @param value The conflict to set.
       * @return This builder for chaining.
       */
      public Builder setConflict(int value) {
        
        conflict_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用频冲突结果
       * </pre>
       *
       * <code>uint32 conflict = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConflict() {
        
        conflict_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.FreqConflictDayResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.FreqConflictDayResponse)
    private static final zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FreqConflictDayResponse>
        PARSER = new com.google.protobuf.AbstractParser<FreqConflictDayResponse>() {
      @java.lang.Override
      public FreqConflictDayResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FreqConflictDayResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FreqConflictDayResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FreqConflictDayResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FreqConflictResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.FreqConflictResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 分析日期
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    boolean hasTimeSpan();
    /**
     * <pre>
     * 分析日期
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    zb.dcts.Dcts.TimeSpan getTimeSpan();
    /**
     * <pre>
     * 分析日期
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse> 
        getFreqConflictsList();
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse getFreqConflicts(int index);
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    int getFreqConflictsCount();
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder> 
        getFreqConflictsOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder getFreqConflictsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.database.FreqConflictResponse}
   */
  public static final class FreqConflictResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.FreqConflictResponse)
      FreqConflictResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FreqConflictResponse.newBuilder() to construct.
    private FreqConflictResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FreqConflictResponse() {
      freqConflicts_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FreqConflictResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FreqConflictResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeSpan_ != null) {
                subBuilder = timeSpan_.toBuilder();
              }
              timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSpan_);
                timeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                freqConflicts_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              freqConflicts_.add(
                  input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          freqConflicts_ = java.util.Collections.unmodifiableList(freqConflicts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse.class, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse.Builder.class);
    }

    public static final int TIME_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.TimeSpan timeSpan_;
    /**
     * <pre>
     * 分析日期
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    @java.lang.Override
    public boolean hasTimeSpan() {
      return timeSpan_ != null;
    }
    /**
     * <pre>
     * 分析日期
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeSpan() {
      return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
    }
    /**
     * <pre>
     * 分析日期
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
      return getTimeSpan();
    }

    public static final int FREQ_CONFLICTS_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse> freqConflicts_;
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse> getFreqConflictsList() {
      return freqConflicts_;
    }
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder> 
        getFreqConflictsOrBuilderList() {
      return freqConflicts_;
    }
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    @java.lang.Override
    public int getFreqConflictsCount() {
      return freqConflicts_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse getFreqConflicts(int index) {
      return freqConflicts_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder getFreqConflictsOrBuilder(
        int index) {
      return freqConflicts_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeSpan_ != null) {
        output.writeMessage(1, getTimeSpan());
      }
      for (int i = 0; i < freqConflicts_.size(); i++) {
        output.writeMessage(2, freqConflicts_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimeSpan());
      }
      for (int i = 0; i < freqConflicts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, freqConflicts_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse other = (zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse) obj;

      if (hasTimeSpan() != other.hasTimeSpan()) return false;
      if (hasTimeSpan()) {
        if (!getTimeSpan()
            .equals(other.getTimeSpan())) return false;
      }
      if (!getFreqConflictsList()
          .equals(other.getFreqConflictsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeSpan()) {
        hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSpan().hashCode();
      }
      if (getFreqConflictsCount() > 0) {
        hash = (37 * hash) + FREQ_CONFLICTS_FIELD_NUMBER;
        hash = (53 * hash) + getFreqConflictsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.FreqConflictResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.FreqConflictResponse)
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse.class, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFreqConflictsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }
        if (freqConflictsBuilder_ == null) {
          freqConflicts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          freqConflictsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_FreqConflictResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse build() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse result = new zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse(this);
        int from_bitField0_ = bitField0_;
        if (timeSpanBuilder_ == null) {
          result.timeSpan_ = timeSpan_;
        } else {
          result.timeSpan_ = timeSpanBuilder_.build();
        }
        if (freqConflictsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            freqConflicts_ = java.util.Collections.unmodifiableList(freqConflicts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.freqConflicts_ = freqConflicts_;
        } else {
          result.freqConflicts_ = freqConflictsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse.getDefaultInstance()) return this;
        if (other.hasTimeSpan()) {
          mergeTimeSpan(other.getTimeSpan());
        }
        if (freqConflictsBuilder_ == null) {
          if (!other.freqConflicts_.isEmpty()) {
            if (freqConflicts_.isEmpty()) {
              freqConflicts_ = other.freqConflicts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFreqConflictsIsMutable();
              freqConflicts_.addAll(other.freqConflicts_);
            }
            onChanged();
          }
        } else {
          if (!other.freqConflicts_.isEmpty()) {
            if (freqConflictsBuilder_.isEmpty()) {
              freqConflictsBuilder_.dispose();
              freqConflictsBuilder_ = null;
              freqConflicts_ = other.freqConflicts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              freqConflictsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFreqConflictsFieldBuilder() : null;
            } else {
              freqConflictsBuilder_.addAllMessages(other.freqConflicts_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.Dcts.TimeSpan timeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return Whether the timeSpan field is set.
       */
      public boolean hasTimeSpan() {
        return timeSpanBuilder_ != null || timeSpan_ != null;
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return The timeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        if (timeSpanBuilder_ == null) {
          return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        } else {
          return timeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSpan_ = value;
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = builderForValue.build();
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (timeSpan_ != null) {
            timeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
          } else {
            timeSpan_ = value;
          }
          onChanged();
        } else {
          timeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder clearTimeSpan() {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
          onChanged();
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
        
        onChanged();
        return getTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        if (timeSpanBuilder_ != null) {
          return timeSpanBuilder_.getMessageOrBuilder();
        } else {
          return timeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        }
      }
      /**
       * <pre>
       * 分析日期
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeSpanFieldBuilder() {
        if (timeSpanBuilder_ == null) {
          timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeSpan(),
                  getParentForChildren(),
                  isClean());
          timeSpan_ = null;
        }
        return timeSpanBuilder_;
      }

      private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse> freqConflicts_ =
        java.util.Collections.emptyList();
      private void ensureFreqConflictsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          freqConflicts_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse>(freqConflicts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder> freqConflictsBuilder_;

      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse> getFreqConflictsList() {
        if (freqConflictsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(freqConflicts_);
        } else {
          return freqConflictsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public int getFreqConflictsCount() {
        if (freqConflictsBuilder_ == null) {
          return freqConflicts_.size();
        } else {
          return freqConflictsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse getFreqConflicts(int index) {
        if (freqConflictsBuilder_ == null) {
          return freqConflicts_.get(index);
        } else {
          return freqConflictsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder setFreqConflicts(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse value) {
        if (freqConflictsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqConflictsIsMutable();
          freqConflicts_.set(index, value);
          onChanged();
        } else {
          freqConflictsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder setFreqConflicts(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder builderForValue) {
        if (freqConflictsBuilder_ == null) {
          ensureFreqConflictsIsMutable();
          freqConflicts_.set(index, builderForValue.build());
          onChanged();
        } else {
          freqConflictsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder addFreqConflicts(zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse value) {
        if (freqConflictsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqConflictsIsMutable();
          freqConflicts_.add(value);
          onChanged();
        } else {
          freqConflictsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder addFreqConflicts(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse value) {
        if (freqConflictsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreqConflictsIsMutable();
          freqConflicts_.add(index, value);
          onChanged();
        } else {
          freqConflictsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder addFreqConflicts(
          zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder builderForValue) {
        if (freqConflictsBuilder_ == null) {
          ensureFreqConflictsIsMutable();
          freqConflicts_.add(builderForValue.build());
          onChanged();
        } else {
          freqConflictsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder addFreqConflicts(
          int index, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder builderForValue) {
        if (freqConflictsBuilder_ == null) {
          ensureFreqConflictsIsMutable();
          freqConflicts_.add(index, builderForValue.build());
          onChanged();
        } else {
          freqConflictsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder addAllFreqConflicts(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse> values) {
        if (freqConflictsBuilder_ == null) {
          ensureFreqConflictsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, freqConflicts_);
          onChanged();
        } else {
          freqConflictsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder clearFreqConflicts() {
        if (freqConflictsBuilder_ == null) {
          freqConflicts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          freqConflictsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public Builder removeFreqConflicts(int index) {
        if (freqConflictsBuilder_ == null) {
          ensureFreqConflictsIsMutable();
          freqConflicts_.remove(index);
          onChanged();
        } else {
          freqConflictsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder getFreqConflictsBuilder(
          int index) {
        return getFreqConflictsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder getFreqConflictsOrBuilder(
          int index) {
        if (freqConflictsBuilder_ == null) {
          return freqConflicts_.get(index);  } else {
          return freqConflictsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder> 
           getFreqConflictsOrBuilderList() {
        if (freqConflictsBuilder_ != null) {
          return freqConflictsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(freqConflicts_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder addFreqConflictsBuilder() {
        return getFreqConflictsFieldBuilder().addBuilder(
            zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder addFreqConflictsBuilder(
          int index) {
        return getFreqConflictsFieldBuilder().addBuilder(
            index, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.FreqConflictDayResponse freq_conflicts = 2;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder> 
           getFreqConflictsBuilderList() {
        return getFreqConflictsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder> 
          getFreqConflictsFieldBuilder() {
        if (freqConflictsBuilder_ == null) {
          freqConflictsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponse.Builder, zb.dcts.database.DbKgdServiceOuterClass.FreqConflictDayResponseOrBuilder>(
                  freqConflicts_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          freqConflicts_ = null;
        }
        return freqConflictsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.FreqConflictResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.FreqConflictResponse)
    private static final zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FreqConflictResponse>
        PARSER = new com.google.protobuf.AbstractParser<FreqConflictResponse>() {
      @java.lang.Override
      public FreqConflictResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FreqConflictResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FreqConflictResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FreqConflictResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.FreqConflictResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AreaCoverageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.AreaCoverage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *经度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange longitude = 1;</code>
     * @return Whether the longitude field is set.
     */
    boolean hasLongitude();
    /**
     * <pre>
     *经度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange longitude = 1;</code>
     * @return The longitude.
     */
    zb.dcts.Dcts.DRange getLongitude();
    /**
     * <pre>
     *经度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange longitude = 1;</code>
     */
    zb.dcts.Dcts.DRangeOrBuilder getLongitudeOrBuilder();

    /**
     * <pre>
     *纬度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange latitude = 2;</code>
     * @return Whether the latitude field is set.
     */
    boolean hasLatitude();
    /**
     * <pre>
     *纬度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange latitude = 2;</code>
     * @return The latitude.
     */
    zb.dcts.Dcts.DRange getLatitude();
    /**
     * <pre>
     *纬度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange latitude = 2;</code>
     */
    zb.dcts.Dcts.DRangeOrBuilder getLatitudeOrBuilder();
  }
  /**
   * <pre>
   *空域/区域范围
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.AreaCoverage}
   */
  public static final class AreaCoverage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.AreaCoverage)
      AreaCoverageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AreaCoverage.newBuilder() to construct.
    private AreaCoverage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AreaCoverage() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AreaCoverage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AreaCoverage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.DRange.Builder subBuilder = null;
              if (longitude_ != null) {
                subBuilder = longitude_.toBuilder();
              }
              longitude_ = input.readMessage(zb.dcts.Dcts.DRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(longitude_);
                longitude_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.Dcts.DRange.Builder subBuilder = null;
              if (latitude_ != null) {
                subBuilder = latitude_.toBuilder();
              }
              latitude_ = input.readMessage(zb.dcts.Dcts.DRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(latitude_);
                latitude_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_AreaCoverage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_AreaCoverage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.class, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder.class);
    }

    public static final int LONGITUDE_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.DRange longitude_;
    /**
     * <pre>
     *经度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange longitude = 1;</code>
     * @return Whether the longitude field is set.
     */
    @java.lang.Override
    public boolean hasLongitude() {
      return longitude_ != null;
    }
    /**
     * <pre>
     *经度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange longitude = 1;</code>
     * @return The longitude.
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRange getLongitude() {
      return longitude_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : longitude_;
    }
    /**
     * <pre>
     *经度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange longitude = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRangeOrBuilder getLongitudeOrBuilder() {
      return getLongitude();
    }

    public static final int LATITUDE_FIELD_NUMBER = 2;
    private zb.dcts.Dcts.DRange latitude_;
    /**
     * <pre>
     *纬度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange latitude = 2;</code>
     * @return Whether the latitude field is set.
     */
    @java.lang.Override
    public boolean hasLatitude() {
      return latitude_ != null;
    }
    /**
     * <pre>
     *纬度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange latitude = 2;</code>
     * @return The latitude.
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRange getLatitude() {
      return latitude_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : latitude_;
    }
    /**
     * <pre>
     *纬度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange latitude = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRangeOrBuilder getLatitudeOrBuilder() {
      return getLatitude();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (longitude_ != null) {
        output.writeMessage(1, getLongitude());
      }
      if (latitude_ != null) {
        output.writeMessage(2, getLatitude());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (longitude_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLongitude());
      }
      if (latitude_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLatitude());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage other = (zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage) obj;

      if (hasLongitude() != other.hasLongitude()) return false;
      if (hasLongitude()) {
        if (!getLongitude()
            .equals(other.getLongitude())) return false;
      }
      if (hasLatitude() != other.hasLatitude()) return false;
      if (hasLatitude()) {
        if (!getLatitude()
            .equals(other.getLatitude())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLongitude()) {
        hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
        hash = (53 * hash) + getLongitude().hashCode();
      }
      if (hasLatitude()) {
        hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
        hash = (53 * hash) + getLatitude().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *空域/区域范围
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.AreaCoverage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.AreaCoverage)
        zb.dcts.database.DbKgdServiceOuterClass.AreaCoverageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_AreaCoverage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_AreaCoverage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.class, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (longitudeBuilder_ == null) {
          longitude_ = null;
        } else {
          longitude_ = null;
          longitudeBuilder_ = null;
        }
        if (latitudeBuilder_ == null) {
          latitude_ = null;
        } else {
          latitude_ = null;
          latitudeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_AreaCoverage_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage build() {
        zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage result = new zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage(this);
        if (longitudeBuilder_ == null) {
          result.longitude_ = longitude_;
        } else {
          result.longitude_ = longitudeBuilder_.build();
        }
        if (latitudeBuilder_ == null) {
          result.latitude_ = latitude_;
        } else {
          result.latitude_ = latitudeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.getDefaultInstance()) return this;
        if (other.hasLongitude()) {
          mergeLongitude(other.getLongitude());
        }
        if (other.hasLatitude()) {
          mergeLatitude(other.getLatitude());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.Dcts.DRange longitude_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> longitudeBuilder_;
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       * @return Whether the longitude field is set.
       */
      public boolean hasLongitude() {
        return longitudeBuilder_ != null || longitude_ != null;
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       * @return The longitude.
       */
      public zb.dcts.Dcts.DRange getLongitude() {
        if (longitudeBuilder_ == null) {
          return longitude_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : longitude_;
        } else {
          return longitudeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       */
      public Builder setLongitude(zb.dcts.Dcts.DRange value) {
        if (longitudeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          longitude_ = value;
          onChanged();
        } else {
          longitudeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       */
      public Builder setLongitude(
          zb.dcts.Dcts.DRange.Builder builderForValue) {
        if (longitudeBuilder_ == null) {
          longitude_ = builderForValue.build();
          onChanged();
        } else {
          longitudeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       */
      public Builder mergeLongitude(zb.dcts.Dcts.DRange value) {
        if (longitudeBuilder_ == null) {
          if (longitude_ != null) {
            longitude_ =
              zb.dcts.Dcts.DRange.newBuilder(longitude_).mergeFrom(value).buildPartial();
          } else {
            longitude_ = value;
          }
          onChanged();
        } else {
          longitudeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       */
      public Builder clearLongitude() {
        if (longitudeBuilder_ == null) {
          longitude_ = null;
          onChanged();
        } else {
          longitude_ = null;
          longitudeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       */
      public zb.dcts.Dcts.DRange.Builder getLongitudeBuilder() {
        
        onChanged();
        return getLongitudeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       */
      public zb.dcts.Dcts.DRangeOrBuilder getLongitudeOrBuilder() {
        if (longitudeBuilder_ != null) {
          return longitudeBuilder_.getMessageOrBuilder();
        } else {
          return longitude_ == null ?
              zb.dcts.Dcts.DRange.getDefaultInstance() : longitude_;
        }
      }
      /**
       * <pre>
       *经度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange longitude = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> 
          getLongitudeFieldBuilder() {
        if (longitudeBuilder_ == null) {
          longitudeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder>(
                  getLongitude(),
                  getParentForChildren(),
                  isClean());
          longitude_ = null;
        }
        return longitudeBuilder_;
      }

      private zb.dcts.Dcts.DRange latitude_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> latitudeBuilder_;
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       * @return Whether the latitude field is set.
       */
      public boolean hasLatitude() {
        return latitudeBuilder_ != null || latitude_ != null;
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       * @return The latitude.
       */
      public zb.dcts.Dcts.DRange getLatitude() {
        if (latitudeBuilder_ == null) {
          return latitude_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : latitude_;
        } else {
          return latitudeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       */
      public Builder setLatitude(zb.dcts.Dcts.DRange value) {
        if (latitudeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          latitude_ = value;
          onChanged();
        } else {
          latitudeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       */
      public Builder setLatitude(
          zb.dcts.Dcts.DRange.Builder builderForValue) {
        if (latitudeBuilder_ == null) {
          latitude_ = builderForValue.build();
          onChanged();
        } else {
          latitudeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       */
      public Builder mergeLatitude(zb.dcts.Dcts.DRange value) {
        if (latitudeBuilder_ == null) {
          if (latitude_ != null) {
            latitude_ =
              zb.dcts.Dcts.DRange.newBuilder(latitude_).mergeFrom(value).buildPartial();
          } else {
            latitude_ = value;
          }
          onChanged();
        } else {
          latitudeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       */
      public Builder clearLatitude() {
        if (latitudeBuilder_ == null) {
          latitude_ = null;
          onChanged();
        } else {
          latitude_ = null;
          latitudeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       */
      public zb.dcts.Dcts.DRange.Builder getLatitudeBuilder() {
        
        onChanged();
        return getLatitudeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       */
      public zb.dcts.Dcts.DRangeOrBuilder getLatitudeOrBuilder() {
        if (latitudeBuilder_ != null) {
          return latitudeBuilder_.getMessageOrBuilder();
        } else {
          return latitude_ == null ?
              zb.dcts.Dcts.DRange.getDefaultInstance() : latitude_;
        }
      }
      /**
       * <pre>
       *纬度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange latitude = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> 
          getLatitudeFieldBuilder() {
        if (latitudeBuilder_ == null) {
          latitudeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder>(
                  getLatitude(),
                  getParentForChildren(),
                  isClean());
          latitude_ = null;
        }
        return latitudeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.AreaCoverage)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.AreaCoverage)
    private static final zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AreaCoverage>
        PARSER = new com.google.protobuf.AbstractParser<AreaCoverage>() {
      @java.lang.Override
      public AreaCoverage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AreaCoverage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AreaCoverage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AreaCoverage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalStatRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalStatRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号ID
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     *信号ID
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @return A list containing the statType.
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalStatType> getStatTypeList();
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @return The count of statType.
     */
    int getStatTypeCount();
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @param index The index of the element to return.
     * @return The statType at the given index.
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalStatType getStatType(int index);
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @return A list containing the enum numeric values on the wire for statType.
     */
    java.util.List<java.lang.Integer>
    getStatTypeValueList();
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of statType at the given index.
     */
    int getStatTypeValue(int index);

    /**
     * <pre>
     *查询的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 3;</code>
     * @return Whether the timeSpan field is set.
     */
    boolean hasTimeSpan();
    /**
     * <pre>
     *查询的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 3;</code>
     * @return The timeSpan.
     */
    zb.dcts.Dcts.TimeSpan getTimeSpan();
    /**
     * <pre>
     *查询的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 3;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

    /**
     * <pre>
     *频段范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
     * @return Whether the freqSpan field is set.
     */
    boolean hasFreqSpan();
    /**
     * <pre>
     *频段范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
     * @return The freqSpan.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan();
    /**
     * <pre>
     *频段范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder();

    /**
     * <pre>
     *空/区域范围
     * </pre>
     *
     * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
     * @return Whether the area field is set.
     */
    boolean hasArea();
    /**
     * <pre>
     *空/区域范围
     * </pre>
     *
     * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
     * @return The area.
     */
    zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage getArea();
    /**
     * <pre>
     *空/区域范围
     * </pre>
     *
     * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.AreaCoverageOrBuilder getAreaOrBuilder();

    /**
     * <pre>
     *角度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange direction = 6;</code>
     * @return Whether the direction field is set.
     */
    boolean hasDirection();
    /**
     * <pre>
     *角度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange direction = 6;</code>
     * @return The direction.
     */
    zb.dcts.Dcts.DRange getDirection();
    /**
     * <pre>
     *角度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange direction = 6;</code>
     */
    zb.dcts.Dcts.DRangeOrBuilder getDirectionOrBuilder();

    /**
     * <pre>
     *功率查询范围
     * </pre>
     *
     * <code>.zb.dcts.DRange power_Limit = 7;</code>
     * @return Whether the powerLimit field is set.
     */
    boolean hasPowerLimit();
    /**
     * <pre>
     *功率查询范围
     * </pre>
     *
     * <code>.zb.dcts.DRange power_Limit = 7;</code>
     * @return The powerLimit.
     */
    zb.dcts.Dcts.DRange getPowerLimit();
    /**
     * <pre>
     *功率查询范围
     * </pre>
     *
     * <code>.zb.dcts.DRange power_Limit = 7;</code>
     */
    zb.dcts.Dcts.DRangeOrBuilder getPowerLimitOrBuilder();

    /**
     * <pre>
     *阵地
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
     * @return The enum numeric value on the wire for enCamp.
     */
    int getEnCampValue();
    /**
     * <pre>
     *阵地
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
     * @return The enCamp.
     */
    zb.dcts.aeronaval.Aeronaval.Camp getEnCamp();

    /**
     * <pre>
     *调制类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
     * @return The enum numeric value on the wire for modType.
     */
    int getModTypeValue();
    /**
     * <pre>
     *调制类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
     * @return The modType.
     */
    zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType getModType();

    /**
     * <pre>
     *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
     * </pre>
     *
     * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
     * @return The enum numeric value on the wire for linkType.
     */
    int getLinkTypeValue();
    /**
     * <pre>
     *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
     * </pre>
     *
     * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
     * @return The linkType.
     */
    zb.dcts.source.kh.KhContext.LinkType getLinkType();

    /**
     * <pre>
     *请求类型
     * </pre>
     *
     * <code>.zb.dcts.database.RequestType req_type = 11;</code>
     * @return The enum numeric value on the wire for reqType.
     */
    int getReqTypeValue();
    /**
     * <pre>
     *请求类型
     * </pre>
     *
     * <code>.zb.dcts.database.RequestType req_type = 11;</code>
     * @return The reqType.
     */
    zb.dcts.database.DbKgdServiceOuterClass.RequestType getReqType();
  }
  /**
   * Protobuf type {@code zb.dcts.database.SignalStatRequest}
   */
  public static final class SignalStatRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalStatRequest)
      SignalStatRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalStatRequest.newBuilder() to construct.
    private SignalStatRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalStatRequest() {
      id_ = "";
      statType_ = java.util.Collections.emptyList();
      enCamp_ = 0;
      modType_ = 0;
      linkType_ = 0;
      reqType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalStatRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalStatRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                statType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              statType_.add(rawValue);
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  statType_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                statType_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 26: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeSpan_ != null) {
                subBuilder = timeSpan_.toBuilder();
              }
              timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSpan_);
                timeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (freqSpan_ != null) {
                subBuilder = freqSpan_.toBuilder();
              }
              freqSpan_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqSpan_);
                freqSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder subBuilder = null;
              if (area_ != null) {
                subBuilder = area_.toBuilder();
              }
              area_ = input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(area_);
                area_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              zb.dcts.Dcts.DRange.Builder subBuilder = null;
              if (direction_ != null) {
                subBuilder = direction_.toBuilder();
              }
              direction_ = input.readMessage(zb.dcts.Dcts.DRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(direction_);
                direction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              zb.dcts.Dcts.DRange.Builder subBuilder = null;
              if (powerLimit_ != null) {
                subBuilder = powerLimit_.toBuilder();
              }
              powerLimit_ = input.readMessage(zb.dcts.Dcts.DRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(powerLimit_);
                powerLimit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              enCamp_ = rawValue;
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              modType_ = rawValue;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              linkType_ = rawValue;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              reqType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          statType_ = java.util.Collections.unmodifiableList(statType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest.class, zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *信号ID
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *信号ID
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STAT_TYPE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> statType_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, zb.dcts.database.DbKgdServiceOuterClass.SignalStatType> statType_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, zb.dcts.database.DbKgdServiceOuterClass.SignalStatType>() {
              public zb.dcts.database.DbKgdServiceOuterClass.SignalStatType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                zb.dcts.database.DbKgdServiceOuterClass.SignalStatType result = zb.dcts.database.DbKgdServiceOuterClass.SignalStatType.valueOf(from);
                return result == null ? zb.dcts.database.DbKgdServiceOuterClass.SignalStatType.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @return A list containing the statType.
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalStatType> getStatTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, zb.dcts.database.DbKgdServiceOuterClass.SignalStatType>(statType_, statType_converter_);
    }
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @return The count of statType.
     */
    @java.lang.Override
    public int getStatTypeCount() {
      return statType_.size();
    }
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @param index The index of the element to return.
     * @return The statType at the given index.
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalStatType getStatType(int index) {
      return statType_converter_.convert(statType_.get(index));
    }
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @return A list containing the enum numeric values on the wire for statType.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getStatTypeValueList() {
      return statType_;
    }
    /**
     * <pre>
     *信号统计类型 多个
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of statType at the given index.
     */
    @java.lang.Override
    public int getStatTypeValue(int index) {
      return statType_.get(index);
    }
    private int statTypeMemoizedSerializedSize;

    public static final int TIME_SPAN_FIELD_NUMBER = 3;
    private zb.dcts.Dcts.TimeSpan timeSpan_;
    /**
     * <pre>
     *查询的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 3;</code>
     * @return Whether the timeSpan field is set.
     */
    @java.lang.Override
    public boolean hasTimeSpan() {
      return timeSpan_ != null;
    }
    /**
     * <pre>
     *查询的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 3;</code>
     * @return The timeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeSpan() {
      return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
    }
    /**
     * <pre>
     *查询的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
      return getTimeSpan();
    }

    public static final int FREQ_SPAN_FIELD_NUMBER = 4;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
    /**
     * <pre>
     *频段范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
     * @return Whether the freqSpan field is set.
     */
    @java.lang.Override
    public boolean hasFreqSpan() {
      return freqSpan_ != null;
    }
    /**
     * <pre>
     *频段范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
     * @return The freqSpan.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
      return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
    }
    /**
     * <pre>
     *频段范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
      return getFreqSpan();
    }

    public static final int AREA_FIELD_NUMBER = 5;
    private zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage area_;
    /**
     * <pre>
     *空/区域范围
     * </pre>
     *
     * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
     * @return Whether the area field is set.
     */
    @java.lang.Override
    public boolean hasArea() {
      return area_ != null;
    }
    /**
     * <pre>
     *空/区域范围
     * </pre>
     *
     * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
     * @return The area.
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage getArea() {
      return area_ == null ? zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.getDefaultInstance() : area_;
    }
    /**
     * <pre>
     *空/区域范围
     * </pre>
     *
     * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverageOrBuilder getAreaOrBuilder() {
      return getArea();
    }

    public static final int DIRECTION_FIELD_NUMBER = 6;
    private zb.dcts.Dcts.DRange direction_;
    /**
     * <pre>
     *角度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange direction = 6;</code>
     * @return Whether the direction field is set.
     */
    @java.lang.Override
    public boolean hasDirection() {
      return direction_ != null;
    }
    /**
     * <pre>
     *角度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange direction = 6;</code>
     * @return The direction.
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRange getDirection() {
      return direction_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : direction_;
    }
    /**
     * <pre>
     *角度范围
     * </pre>
     *
     * <code>.zb.dcts.DRange direction = 6;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRangeOrBuilder getDirectionOrBuilder() {
      return getDirection();
    }

    public static final int POWER_LIMIT_FIELD_NUMBER = 7;
    private zb.dcts.Dcts.DRange powerLimit_;
    /**
     * <pre>
     *功率查询范围
     * </pre>
     *
     * <code>.zb.dcts.DRange power_Limit = 7;</code>
     * @return Whether the powerLimit field is set.
     */
    @java.lang.Override
    public boolean hasPowerLimit() {
      return powerLimit_ != null;
    }
    /**
     * <pre>
     *功率查询范围
     * </pre>
     *
     * <code>.zb.dcts.DRange power_Limit = 7;</code>
     * @return The powerLimit.
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRange getPowerLimit() {
      return powerLimit_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : powerLimit_;
    }
    /**
     * <pre>
     *功率查询范围
     * </pre>
     *
     * <code>.zb.dcts.DRange power_Limit = 7;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.DRangeOrBuilder getPowerLimitOrBuilder() {
      return getPowerLimit();
    }

    public static final int EN_CAMP_FIELD_NUMBER = 8;
    private int enCamp_;
    /**
     * <pre>
     *阵地
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
     * @return The enum numeric value on the wire for enCamp.
     */
    @java.lang.Override public int getEnCampValue() {
      return enCamp_;
    }
    /**
     * <pre>
     *阵地
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
     * @return The enCamp.
     */
    @java.lang.Override public zb.dcts.aeronaval.Aeronaval.Camp getEnCamp() {
      @SuppressWarnings("deprecation")
      zb.dcts.aeronaval.Aeronaval.Camp result = zb.dcts.aeronaval.Aeronaval.Camp.valueOf(enCamp_);
      return result == null ? zb.dcts.aeronaval.Aeronaval.Camp.UNRECOGNIZED : result;
    }

    public static final int MOD_TYPE_FIELD_NUMBER = 9;
    private int modType_;
    /**
     * <pre>
     *调制类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
     * @return The enum numeric value on the wire for modType.
     */
    @java.lang.Override public int getModTypeValue() {
      return modType_;
    }
    /**
     * <pre>
     *调制类型
     * </pre>
     *
     * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
     * @return The modType.
     */
    @java.lang.Override public zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType getModType() {
      @SuppressWarnings("deprecation")
      zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType result = zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType.valueOf(modType_);
      return result == null ? zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType.UNRECOGNIZED : result;
    }

    public static final int LINK_TYPE_FIELD_NUMBER = 10;
    private int linkType_;
    /**
     * <pre>
     *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
     * </pre>
     *
     * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
     * @return The enum numeric value on the wire for linkType.
     */
    @java.lang.Override public int getLinkTypeValue() {
      return linkType_;
    }
    /**
     * <pre>
     *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
     * </pre>
     *
     * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
     * @return The linkType.
     */
    @java.lang.Override public zb.dcts.source.kh.KhContext.LinkType getLinkType() {
      @SuppressWarnings("deprecation")
      zb.dcts.source.kh.KhContext.LinkType result = zb.dcts.source.kh.KhContext.LinkType.valueOf(linkType_);
      return result == null ? zb.dcts.source.kh.KhContext.LinkType.UNRECOGNIZED : result;
    }

    public static final int REQ_TYPE_FIELD_NUMBER = 11;
    private int reqType_;
    /**
     * <pre>
     *请求类型
     * </pre>
     *
     * <code>.zb.dcts.database.RequestType req_type = 11;</code>
     * @return The enum numeric value on the wire for reqType.
     */
    @java.lang.Override public int getReqTypeValue() {
      return reqType_;
    }
    /**
     * <pre>
     *请求类型
     * </pre>
     *
     * <code>.zb.dcts.database.RequestType req_type = 11;</code>
     * @return The reqType.
     */
    @java.lang.Override public zb.dcts.database.DbKgdServiceOuterClass.RequestType getReqType() {
      @SuppressWarnings("deprecation")
      zb.dcts.database.DbKgdServiceOuterClass.RequestType result = zb.dcts.database.DbKgdServiceOuterClass.RequestType.valueOf(reqType_);
      return result == null ? zb.dcts.database.DbKgdServiceOuterClass.RequestType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (getStatTypeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(statTypeMemoizedSerializedSize);
      }
      for (int i = 0; i < statType_.size(); i++) {
        output.writeEnumNoTag(statType_.get(i));
      }
      if (timeSpan_ != null) {
        output.writeMessage(3, getTimeSpan());
      }
      if (freqSpan_ != null) {
        output.writeMessage(4, getFreqSpan());
      }
      if (area_ != null) {
        output.writeMessage(5, getArea());
      }
      if (direction_ != null) {
        output.writeMessage(6, getDirection());
      }
      if (powerLimit_ != null) {
        output.writeMessage(7, getPowerLimit());
      }
      if (enCamp_ != zb.dcts.aeronaval.Aeronaval.Camp.UNKNOWN_CAMP.getNumber()) {
        output.writeEnum(8, enCamp_);
      }
      if (modType_ != zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType.UNKNOWN.getNumber()) {
        output.writeEnum(9, modType_);
      }
      if (linkType_ != zb.dcts.source.kh.KhContext.LinkType.UNKNOWN.getNumber()) {
        output.writeEnum(10, linkType_);
      }
      if (reqType_ != zb.dcts.database.DbKgdServiceOuterClass.RequestType.STAT.getNumber()) {
        output.writeEnum(11, reqType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < statType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(statType_.get(i));
        }
        size += dataSize;
        if (!getStatTypeList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }statTypeMemoizedSerializedSize = dataSize;
      }
      if (timeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTimeSpan());
      }
      if (freqSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFreqSpan());
      }
      if (area_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getArea());
      }
      if (direction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDirection());
      }
      if (powerLimit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getPowerLimit());
      }
      if (enCamp_ != zb.dcts.aeronaval.Aeronaval.Camp.UNKNOWN_CAMP.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, enCamp_);
      }
      if (modType_ != zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, modType_);
      }
      if (linkType_ != zb.dcts.source.kh.KhContext.LinkType.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, linkType_);
      }
      if (reqType_ != zb.dcts.database.DbKgdServiceOuterClass.RequestType.STAT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, reqType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest other = (zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!statType_.equals(other.statType_)) return false;
      if (hasTimeSpan() != other.hasTimeSpan()) return false;
      if (hasTimeSpan()) {
        if (!getTimeSpan()
            .equals(other.getTimeSpan())) return false;
      }
      if (hasFreqSpan() != other.hasFreqSpan()) return false;
      if (hasFreqSpan()) {
        if (!getFreqSpan()
            .equals(other.getFreqSpan())) return false;
      }
      if (hasArea() != other.hasArea()) return false;
      if (hasArea()) {
        if (!getArea()
            .equals(other.getArea())) return false;
      }
      if (hasDirection() != other.hasDirection()) return false;
      if (hasDirection()) {
        if (!getDirection()
            .equals(other.getDirection())) return false;
      }
      if (hasPowerLimit() != other.hasPowerLimit()) return false;
      if (hasPowerLimit()) {
        if (!getPowerLimit()
            .equals(other.getPowerLimit())) return false;
      }
      if (enCamp_ != other.enCamp_) return false;
      if (modType_ != other.modType_) return false;
      if (linkType_ != other.linkType_) return false;
      if (reqType_ != other.reqType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getStatTypeCount() > 0) {
        hash = (37 * hash) + STAT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + statType_.hashCode();
      }
      if (hasTimeSpan()) {
        hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSpan().hashCode();
      }
      if (hasFreqSpan()) {
        hash = (37 * hash) + FREQ_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSpan().hashCode();
      }
      if (hasArea()) {
        hash = (37 * hash) + AREA_FIELD_NUMBER;
        hash = (53 * hash) + getArea().hashCode();
      }
      if (hasDirection()) {
        hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + getDirection().hashCode();
      }
      if (hasPowerLimit()) {
        hash = (37 * hash) + POWER_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getPowerLimit().hashCode();
      }
      hash = (37 * hash) + EN_CAMP_FIELD_NUMBER;
      hash = (53 * hash) + enCamp_;
      hash = (37 * hash) + MOD_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + modType_;
      hash = (37 * hash) + LINK_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + linkType_;
      hash = (37 * hash) + REQ_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + reqType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.SignalStatRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalStatRequest)
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest.class, zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        statType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }
        if (areaBuilder_ == null) {
          area_ = null;
        } else {
          area_ = null;
          areaBuilder_ = null;
        }
        if (directionBuilder_ == null) {
          direction_ = null;
        } else {
          direction_ = null;
          directionBuilder_ = null;
        }
        if (powerLimitBuilder_ == null) {
          powerLimit_ = null;
        } else {
          powerLimit_ = null;
          powerLimitBuilder_ = null;
        }
        enCamp_ = 0;

        modType_ = 0;

        linkType_ = 0;

        reqType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest result = new zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (((bitField0_ & 0x00000001) != 0)) {
          statType_ = java.util.Collections.unmodifiableList(statType_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.statType_ = statType_;
        if (timeSpanBuilder_ == null) {
          result.timeSpan_ = timeSpan_;
        } else {
          result.timeSpan_ = timeSpanBuilder_.build();
        }
        if (freqSpanBuilder_ == null) {
          result.freqSpan_ = freqSpan_;
        } else {
          result.freqSpan_ = freqSpanBuilder_.build();
        }
        if (areaBuilder_ == null) {
          result.area_ = area_;
        } else {
          result.area_ = areaBuilder_.build();
        }
        if (directionBuilder_ == null) {
          result.direction_ = direction_;
        } else {
          result.direction_ = directionBuilder_.build();
        }
        if (powerLimitBuilder_ == null) {
          result.powerLimit_ = powerLimit_;
        } else {
          result.powerLimit_ = powerLimitBuilder_.build();
        }
        result.enCamp_ = enCamp_;
        result.modType_ = modType_;
        result.linkType_ = linkType_;
        result.reqType_ = reqType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.statType_.isEmpty()) {
          if (statType_.isEmpty()) {
            statType_ = other.statType_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStatTypeIsMutable();
            statType_.addAll(other.statType_);
          }
          onChanged();
        }
        if (other.hasTimeSpan()) {
          mergeTimeSpan(other.getTimeSpan());
        }
        if (other.hasFreqSpan()) {
          mergeFreqSpan(other.getFreqSpan());
        }
        if (other.hasArea()) {
          mergeArea(other.getArea());
        }
        if (other.hasDirection()) {
          mergeDirection(other.getDirection());
        }
        if (other.hasPowerLimit()) {
          mergePowerLimit(other.getPowerLimit());
        }
        if (other.enCamp_ != 0) {
          setEnCampValue(other.getEnCampValue());
        }
        if (other.modType_ != 0) {
          setModTypeValue(other.getModTypeValue());
        }
        if (other.linkType_ != 0) {
          setLinkTypeValue(other.getLinkTypeValue());
        }
        if (other.reqType_ != 0) {
          setReqTypeValue(other.getReqTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *信号ID
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *信号ID
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *信号ID
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号ID
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号ID
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> statType_ =
        java.util.Collections.emptyList();
      private void ensureStatTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          statType_ = new java.util.ArrayList<java.lang.Integer>(statType_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @return A list containing the statType.
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalStatType> getStatTypeList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, zb.dcts.database.DbKgdServiceOuterClass.SignalStatType>(statType_, statType_converter_);
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @return The count of statType.
       */
      public int getStatTypeCount() {
        return statType_.size();
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param index The index of the element to return.
       * @return The statType at the given index.
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalStatType getStatType(int index) {
        return statType_converter_.convert(statType_.get(index));
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param index The index to set the value at.
       * @param value The statType to set.
       * @return This builder for chaining.
       */
      public Builder setStatType(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalStatType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatTypeIsMutable();
        statType_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param value The statType to add.
       * @return This builder for chaining.
       */
      public Builder addStatType(zb.dcts.database.DbKgdServiceOuterClass.SignalStatType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatTypeIsMutable();
        statType_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param values The statType to add.
       * @return This builder for chaining.
       */
      public Builder addAllStatType(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalStatType> values) {
        ensureStatTypeIsMutable();
        for (zb.dcts.database.DbKgdServiceOuterClass.SignalStatType value : values) {
          statType_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatType() {
        statType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @return A list containing the enum numeric values on the wire for statType.
       */
      public java.util.List<java.lang.Integer>
      getStatTypeValueList() {
        return java.util.Collections.unmodifiableList(statType_);
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of statType at the given index.
       */
      public int getStatTypeValue(int index) {
        return statType_.get(index);
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of statType at the given index.
       * @return This builder for chaining.
       */
      public Builder setStatTypeValue(
          int index, int value) {
        ensureStatTypeIsMutable();
        statType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param value The enum numeric value on the wire for statType to add.
       * @return This builder for chaining.
       */
      public Builder addStatTypeValue(int value) {
        ensureStatTypeIsMutable();
        statType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号统计类型 多个
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalStatType stat_Type = 2;</code>
       * @param values The enum numeric values on the wire for statType to add.
       * @return This builder for chaining.
       */
      public Builder addAllStatTypeValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureStatTypeIsMutable();
        for (int value : values) {
          statType_.add(value);
        }
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.TimeSpan timeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       * @return Whether the timeSpan field is set.
       */
      public boolean hasTimeSpan() {
        return timeSpanBuilder_ != null || timeSpan_ != null;
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       * @return The timeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        if (timeSpanBuilder_ == null) {
          return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        } else {
          return timeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSpan_ = value;
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      public Builder setTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = builderForValue.build();
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (timeSpan_ != null) {
            timeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
          } else {
            timeSpan_ = value;
          }
          onChanged();
        } else {
          timeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      public Builder clearTimeSpan() {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
          onChanged();
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
        
        onChanged();
        return getTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        if (timeSpanBuilder_ != null) {
          return timeSpanBuilder_.getMessageOrBuilder();
        } else {
          return timeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        }
      }
      /**
       * <pre>
       *查询的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeSpanFieldBuilder() {
        if (timeSpanBuilder_ == null) {
          timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeSpan(),
                  getParentForChildren(),
                  isClean());
          timeSpan_ = null;
        }
        return timeSpanBuilder_;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqSpanBuilder_;
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       * @return Whether the freqSpan field is set.
       */
      public boolean hasFreqSpan() {
        return freqSpanBuilder_ != null || freqSpan_ != null;
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       * @return The freqSpan.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
        if (freqSpanBuilder_ == null) {
          return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        } else {
          return freqSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       */
      public Builder setFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqSpan_ = value;
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       */
      public Builder setFreqSpan(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = builderForValue.build();
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       */
      public Builder mergeFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (freqSpan_ != null) {
            freqSpan_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(freqSpan_).mergeFrom(value).buildPartial();
          } else {
            freqSpan_ = value;
          }
          onChanged();
        } else {
          freqSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       */
      public Builder clearFreqSpan() {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
          onChanged();
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqSpanBuilder() {
        
        onChanged();
        return getFreqSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
        if (freqSpanBuilder_ != null) {
          return freqSpanBuilder_.getMessageOrBuilder();
        } else {
          return freqSpan_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        }
      }
      /**
       * <pre>
       *频段范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_Span = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqSpanFieldBuilder() {
        if (freqSpanBuilder_ == null) {
          freqSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFreqSpan(),
                  getParentForChildren(),
                  isClean());
          freqSpan_ = null;
        }
        return freqSpanBuilder_;
      }

      private zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage area_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverageOrBuilder> areaBuilder_;
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       * @return Whether the area field is set.
       */
      public boolean hasArea() {
        return areaBuilder_ != null || area_ != null;
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       * @return The area.
       */
      public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage getArea() {
        if (areaBuilder_ == null) {
          return area_ == null ? zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.getDefaultInstance() : area_;
        } else {
          return areaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       */
      public Builder setArea(zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage value) {
        if (areaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          area_ = value;
          onChanged();
        } else {
          areaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       */
      public Builder setArea(
          zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder builderForValue) {
        if (areaBuilder_ == null) {
          area_ = builderForValue.build();
          onChanged();
        } else {
          areaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       */
      public Builder mergeArea(zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage value) {
        if (areaBuilder_ == null) {
          if (area_ != null) {
            area_ =
              zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.newBuilder(area_).mergeFrom(value).buildPartial();
          } else {
            area_ = value;
          }
          onChanged();
        } else {
          areaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       */
      public Builder clearArea() {
        if (areaBuilder_ == null) {
          area_ = null;
          onChanged();
        } else {
          area_ = null;
          areaBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder getAreaBuilder() {
        
        onChanged();
        return getAreaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.AreaCoverageOrBuilder getAreaOrBuilder() {
        if (areaBuilder_ != null) {
          return areaBuilder_.getMessageOrBuilder();
        } else {
          return area_ == null ?
              zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.getDefaultInstance() : area_;
        }
      }
      /**
       * <pre>
       *空/区域范围
       * </pre>
       *
       * <code>.zb.dcts.database.AreaCoverage area = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverageOrBuilder> 
          getAreaFieldBuilder() {
        if (areaBuilder_ == null) {
          areaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverage.Builder, zb.dcts.database.DbKgdServiceOuterClass.AreaCoverageOrBuilder>(
                  getArea(),
                  getParentForChildren(),
                  isClean());
          area_ = null;
        }
        return areaBuilder_;
      }

      private zb.dcts.Dcts.DRange direction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> directionBuilder_;
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       * @return Whether the direction field is set.
       */
      public boolean hasDirection() {
        return directionBuilder_ != null || direction_ != null;
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       * @return The direction.
       */
      public zb.dcts.Dcts.DRange getDirection() {
        if (directionBuilder_ == null) {
          return direction_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : direction_;
        } else {
          return directionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       */
      public Builder setDirection(zb.dcts.Dcts.DRange value) {
        if (directionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          direction_ = value;
          onChanged();
        } else {
          directionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       */
      public Builder setDirection(
          zb.dcts.Dcts.DRange.Builder builderForValue) {
        if (directionBuilder_ == null) {
          direction_ = builderForValue.build();
          onChanged();
        } else {
          directionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       */
      public Builder mergeDirection(zb.dcts.Dcts.DRange value) {
        if (directionBuilder_ == null) {
          if (direction_ != null) {
            direction_ =
              zb.dcts.Dcts.DRange.newBuilder(direction_).mergeFrom(value).buildPartial();
          } else {
            direction_ = value;
          }
          onChanged();
        } else {
          directionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       */
      public Builder clearDirection() {
        if (directionBuilder_ == null) {
          direction_ = null;
          onChanged();
        } else {
          direction_ = null;
          directionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       */
      public zb.dcts.Dcts.DRange.Builder getDirectionBuilder() {
        
        onChanged();
        return getDirectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       */
      public zb.dcts.Dcts.DRangeOrBuilder getDirectionOrBuilder() {
        if (directionBuilder_ != null) {
          return directionBuilder_.getMessageOrBuilder();
        } else {
          return direction_ == null ?
              zb.dcts.Dcts.DRange.getDefaultInstance() : direction_;
        }
      }
      /**
       * <pre>
       *角度范围
       * </pre>
       *
       * <code>.zb.dcts.DRange direction = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> 
          getDirectionFieldBuilder() {
        if (directionBuilder_ == null) {
          directionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder>(
                  getDirection(),
                  getParentForChildren(),
                  isClean());
          direction_ = null;
        }
        return directionBuilder_;
      }

      private zb.dcts.Dcts.DRange powerLimit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> powerLimitBuilder_;
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       * @return Whether the powerLimit field is set.
       */
      public boolean hasPowerLimit() {
        return powerLimitBuilder_ != null || powerLimit_ != null;
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       * @return The powerLimit.
       */
      public zb.dcts.Dcts.DRange getPowerLimit() {
        if (powerLimitBuilder_ == null) {
          return powerLimit_ == null ? zb.dcts.Dcts.DRange.getDefaultInstance() : powerLimit_;
        } else {
          return powerLimitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       */
      public Builder setPowerLimit(zb.dcts.Dcts.DRange value) {
        if (powerLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          powerLimit_ = value;
          onChanged();
        } else {
          powerLimitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       */
      public Builder setPowerLimit(
          zb.dcts.Dcts.DRange.Builder builderForValue) {
        if (powerLimitBuilder_ == null) {
          powerLimit_ = builderForValue.build();
          onChanged();
        } else {
          powerLimitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       */
      public Builder mergePowerLimit(zb.dcts.Dcts.DRange value) {
        if (powerLimitBuilder_ == null) {
          if (powerLimit_ != null) {
            powerLimit_ =
              zb.dcts.Dcts.DRange.newBuilder(powerLimit_).mergeFrom(value).buildPartial();
          } else {
            powerLimit_ = value;
          }
          onChanged();
        } else {
          powerLimitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       */
      public Builder clearPowerLimit() {
        if (powerLimitBuilder_ == null) {
          powerLimit_ = null;
          onChanged();
        } else {
          powerLimit_ = null;
          powerLimitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       */
      public zb.dcts.Dcts.DRange.Builder getPowerLimitBuilder() {
        
        onChanged();
        return getPowerLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       */
      public zb.dcts.Dcts.DRangeOrBuilder getPowerLimitOrBuilder() {
        if (powerLimitBuilder_ != null) {
          return powerLimitBuilder_.getMessageOrBuilder();
        } else {
          return powerLimit_ == null ?
              zb.dcts.Dcts.DRange.getDefaultInstance() : powerLimit_;
        }
      }
      /**
       * <pre>
       *功率查询范围
       * </pre>
       *
       * <code>.zb.dcts.DRange power_Limit = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder> 
          getPowerLimitFieldBuilder() {
        if (powerLimitBuilder_ == null) {
          powerLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.DRange, zb.dcts.Dcts.DRange.Builder, zb.dcts.Dcts.DRangeOrBuilder>(
                  getPowerLimit(),
                  getParentForChildren(),
                  isClean());
          powerLimit_ = null;
        }
        return powerLimitBuilder_;
      }

      private int enCamp_ = 0;
      /**
       * <pre>
       *阵地
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
       * @return The enum numeric value on the wire for enCamp.
       */
      @java.lang.Override public int getEnCampValue() {
        return enCamp_;
      }
      /**
       * <pre>
       *阵地
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
       * @param value The enum numeric value on the wire for enCamp to set.
       * @return This builder for chaining.
       */
      public Builder setEnCampValue(int value) {
        
        enCamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *阵地
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
       * @return The enCamp.
       */
      @java.lang.Override
      public zb.dcts.aeronaval.Aeronaval.Camp getEnCamp() {
        @SuppressWarnings("deprecation")
        zb.dcts.aeronaval.Aeronaval.Camp result = zb.dcts.aeronaval.Aeronaval.Camp.valueOf(enCamp_);
        return result == null ? zb.dcts.aeronaval.Aeronaval.Camp.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *阵地
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
       * @param value The enCamp to set.
       * @return This builder for chaining.
       */
      public Builder setEnCamp(zb.dcts.aeronaval.Aeronaval.Camp value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        enCamp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *阵地
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp en_camp = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnCamp() {
        
        enCamp_ = 0;
        onChanged();
        return this;
      }

      private int modType_ = 0;
      /**
       * <pre>
       *调制类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
       * @return The enum numeric value on the wire for modType.
       */
      @java.lang.Override public int getModTypeValue() {
        return modType_;
      }
      /**
       * <pre>
       *调制类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
       * @param value The enum numeric value on the wire for modType to set.
       * @return This builder for chaining.
       */
      public Builder setModTypeValue(int value) {
        
        modType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *调制类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
       * @return The modType.
       */
      @java.lang.Override
      public zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType getModType() {
        @SuppressWarnings("deprecation")
        zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType result = zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType.valueOf(modType_);
        return result == null ? zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *调制类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
       * @param value The modType to set.
       * @return This builder for chaining.
       */
      public Builder setModType(zb.dcts.scenario.FFP.ModIdentify.ModIdentifyResult.ModType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        modType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *调制类型
       * </pre>
       *
       * <code>.zb.dcts.scenario.FFP.ModIdentifyResult.ModType mod_Type = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearModType() {
        
        modType_ = 0;
        onChanged();
        return this;
      }

      private int linkType_ = 0;
      /**
       * <pre>
       *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
       * </pre>
       *
       * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
       * @return The enum numeric value on the wire for linkType.
       */
      @java.lang.Override public int getLinkTypeValue() {
        return linkType_;
      }
      /**
       * <pre>
       *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
       * </pre>
       *
       * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
       * @param value The enum numeric value on the wire for linkType to set.
       * @return This builder for chaining.
       */
      public Builder setLinkTypeValue(int value) {
        
        linkType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
       * </pre>
       *
       * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
       * @return The linkType.
       */
      @java.lang.Override
      public zb.dcts.source.kh.KhContext.LinkType getLinkType() {
        @SuppressWarnings("deprecation")
        zb.dcts.source.kh.KhContext.LinkType result = zb.dcts.source.kh.KhContext.LinkType.valueOf(linkType_);
        return result == null ? zb.dcts.source.kh.KhContext.LinkType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
       * </pre>
       *
       * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
       * @param value The linkType to set.
       * @return This builder for chaining.
       */
      public Builder setLinkType(zb.dcts.source.kh.KhContext.LinkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        linkType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据类型，需要增加类型是指:定频、跳频、扩频、link4A，Link11,Link16
       * </pre>
       *
       * <code>.zb.dcts.source.kh.LinkType link_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearLinkType() {
        
        linkType_ = 0;
        onChanged();
        return this;
      }

      private int reqType_ = 0;
      /**
       * <pre>
       *请求类型
       * </pre>
       *
       * <code>.zb.dcts.database.RequestType req_type = 11;</code>
       * @return The enum numeric value on the wire for reqType.
       */
      @java.lang.Override public int getReqTypeValue() {
        return reqType_;
      }
      /**
       * <pre>
       *请求类型
       * </pre>
       *
       * <code>.zb.dcts.database.RequestType req_type = 11;</code>
       * @param value The enum numeric value on the wire for reqType to set.
       * @return This builder for chaining.
       */
      public Builder setReqTypeValue(int value) {
        
        reqType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *请求类型
       * </pre>
       *
       * <code>.zb.dcts.database.RequestType req_type = 11;</code>
       * @return The reqType.
       */
      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.RequestType getReqType() {
        @SuppressWarnings("deprecation")
        zb.dcts.database.DbKgdServiceOuterClass.RequestType result = zb.dcts.database.DbKgdServiceOuterClass.RequestType.valueOf(reqType_);
        return result == null ? zb.dcts.database.DbKgdServiceOuterClass.RequestType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *请求类型
       * </pre>
       *
       * <code>.zb.dcts.database.RequestType req_type = 11;</code>
       * @param value The reqType to set.
       * @return This builder for chaining.
       */
      public Builder setReqType(zb.dcts.database.DbKgdServiceOuterClass.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        reqType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *请求类型
       * </pre>
       *
       * <code>.zb.dcts.database.RequestType req_type = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearReqType() {
        
        reqType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalStatRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalStatRequest)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalStatRequest>
        PARSER = new com.google.protobuf.AbstractParser<SignalStatRequest>() {
      @java.lang.Override
      public SignalStatRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalStatRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalStatRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalStatRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalStatRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalTypeWithListDescriptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalTypeWithListDescription)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string typeName = 1;</code>
     * @return The typeName.
     */
    java.lang.String getTypeName();
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string typeName = 1;</code>
     * @return The bytes for typeName.
     */
    com.google.protobuf.ByteString
        getTypeNameBytes();

    /**
     * <pre>
     *信号密度
     * </pre>
     *
     * <code>float scale = 2;</code>
     * @return The scale.
     */
    float getScale();

    /**
     * <pre>
     *该类型的信号list，List中可能包含多个ID
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
     * @return Whether the signallist field is set.
     */
    boolean hasSignallist();
    /**
     * <pre>
     *该类型的信号list，List中可能包含多个ID
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
     * @return The signallist.
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getSignallist();
    /**
     * <pre>
     *该类型的信号list，List中可能包含多个ID
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder getSignallistOrBuilder();
  }
  /**
   * <pre>
   *每个类型的信号片段集合
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.SignalTypeWithListDescription}
   */
  public static final class SignalTypeWithListDescription extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalTypeWithListDescription)
      SignalTypeWithListDescriptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalTypeWithListDescription.newBuilder() to construct.
    private SignalTypeWithListDescription(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalTypeWithListDescription() {
      typeName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalTypeWithListDescription();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalTypeWithListDescription(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              typeName_ = s;
              break;
            }
            case 21: {

              scale_ = input.readFloat();
              break;
            }
            case 26: {
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder subBuilder = null;
              if (signallist_ != null) {
                subBuilder = signallist_.toBuilder();
              }
              signallist_ = input.readMessage(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signallist_);
                signallist_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeWithListDescription_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeWithListDescription_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder.class);
    }

    public static final int TYPENAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object typeName_;
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string typeName = 1;</code>
     * @return The typeName.
     */
    @java.lang.Override
    public java.lang.String getTypeName() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string typeName = 1;</code>
     * @return The bytes for typeName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCALE_FIELD_NUMBER = 2;
    private float scale_;
    /**
     * <pre>
     *信号密度
     * </pre>
     *
     * <code>float scale = 2;</code>
     * @return The scale.
     */
    @java.lang.Override
    public float getScale() {
      return scale_;
    }

    public static final int SIGNALLIST_FIELD_NUMBER = 3;
    private zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList signallist_;
    /**
     * <pre>
     *该类型的信号list，List中可能包含多个ID
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
     * @return Whether the signallist field is set.
     */
    @java.lang.Override
    public boolean hasSignallist() {
      return signallist_ != null;
    }
    /**
     * <pre>
     *该类型的信号list，List中可能包含多个ID
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
     * @return The signallist.
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getSignallist() {
      return signallist_ == null ? zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance() : signallist_;
    }
    /**
     * <pre>
     *该类型的信号list，List中可能包含多个ID
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder getSignallistOrBuilder() {
      return getSignallist();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, typeName_);
      }
      if (scale_ != 0F) {
        output.writeFloat(2, scale_);
      }
      if (signallist_ != null) {
        output.writeMessage(3, getSignallist());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, typeName_);
      }
      if (scale_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, scale_);
      }
      if (signallist_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSignallist());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription other = (zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription) obj;

      if (!getTypeName()
          .equals(other.getTypeName())) return false;
      if (java.lang.Float.floatToIntBits(getScale())
          != java.lang.Float.floatToIntBits(
              other.getScale())) return false;
      if (hasSignallist() != other.hasSignallist()) return false;
      if (hasSignallist()) {
        if (!getSignallist()
            .equals(other.getSignallist())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPENAME_FIELD_NUMBER;
      hash = (53 * hash) + getTypeName().hashCode();
      hash = (37 * hash) + SCALE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScale());
      if (hasSignallist()) {
        hash = (37 * hash) + SIGNALLIST_FIELD_NUMBER;
        hash = (53 * hash) + getSignallist().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.SignalTypeWithListDescription}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalTypeWithListDescription)
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeWithListDescription_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeWithListDescription_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeName_ = "";

        scale_ = 0F;

        if (signallistBuilder_ == null) {
          signallist_ = null;
        } else {
          signallist_ = null;
          signallistBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTypeWithListDescription_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription result = new zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription(this);
        result.typeName_ = typeName_;
        result.scale_ = scale_;
        if (signallistBuilder_ == null) {
          result.signallist_ = signallist_;
        } else {
          result.signallist_ = signallistBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.getDefaultInstance()) return this;
        if (!other.getTypeName().isEmpty()) {
          typeName_ = other.typeName_;
          onChanged();
        }
        if (other.getScale() != 0F) {
          setScale(other.getScale());
        }
        if (other.hasSignallist()) {
          mergeSignallist(other.getSignallist());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object typeName_ = "";
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string typeName = 1;</code>
       * @return The typeName.
       */
      public java.lang.String getTypeName() {
        java.lang.Object ref = typeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          typeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string typeName = 1;</code>
       * @return The bytes for typeName.
       */
      public com.google.protobuf.ByteString
          getTypeNameBytes() {
        java.lang.Object ref = typeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string typeName = 1;</code>
       * @param value The typeName to set.
       * @return This builder for chaining.
       */
      public Builder setTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        typeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string typeName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeName() {
        
        typeName_ = getDefaultInstance().getTypeName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string typeName = 1;</code>
       * @param value The bytes for typeName to set.
       * @return This builder for chaining.
       */
      public Builder setTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        typeName_ = value;
        onChanged();
        return this;
      }

      private float scale_ ;
      /**
       * <pre>
       *信号密度
       * </pre>
       *
       * <code>float scale = 2;</code>
       * @return The scale.
       */
      @java.lang.Override
      public float getScale() {
        return scale_;
      }
      /**
       * <pre>
       *信号密度
       * </pre>
       *
       * <code>float scale = 2;</code>
       * @param value The scale to set.
       * @return This builder for chaining.
       */
      public Builder setScale(float value) {
        
        scale_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号密度
       * </pre>
       *
       * <code>float scale = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearScale() {
        
        scale_ = 0F;
        onChanged();
        return this;
      }

      private zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList signallist_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder> signallistBuilder_;
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       * @return Whether the signallist field is set.
       */
      public boolean hasSignallist() {
        return signallistBuilder_ != null || signallist_ != null;
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       * @return The signallist.
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getSignallist() {
        if (signallistBuilder_ == null) {
          return signallist_ == null ? zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance() : signallist_;
        } else {
          return signallistBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       */
      public Builder setSignallist(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList value) {
        if (signallistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signallist_ = value;
          onChanged();
        } else {
          signallistBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       */
      public Builder setSignallist(
          zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder builderForValue) {
        if (signallistBuilder_ == null) {
          signallist_ = builderForValue.build();
          onChanged();
        } else {
          signallistBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       */
      public Builder mergeSignallist(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList value) {
        if (signallistBuilder_ == null) {
          if (signallist_ != null) {
            signallist_ =
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.newBuilder(signallist_).mergeFrom(value).buildPartial();
          } else {
            signallist_ = value;
          }
          onChanged();
        } else {
          signallistBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       */
      public Builder clearSignallist() {
        if (signallistBuilder_ == null) {
          signallist_ = null;
          onChanged();
        } else {
          signallist_ = null;
          signallistBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder getSignallistBuilder() {
        
        onChanged();
        return getSignallistFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder getSignallistOrBuilder() {
        if (signallistBuilder_ != null) {
          return signallistBuilder_.getMessageOrBuilder();
        } else {
          return signallist_ == null ?
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance() : signallist_;
        }
      }
      /**
       * <pre>
       *该类型的信号list，List中可能包含多个ID
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder> 
          getSignallistFieldBuilder() {
        if (signallistBuilder_ == null) {
          signallistBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder>(
                  getSignallist(),
                  getParentForChildren(),
                  isClean());
          signallist_ = null;
        }
        return signallistBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalTypeWithListDescription)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalTypeWithListDescription)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalTypeWithListDescription>
        PARSER = new com.google.protobuf.AbstractParser<SignalTypeWithListDescription>() {
      @java.lang.Override
      public SignalTypeWithListDescription parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalTypeWithListDescription(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalTypeWithListDescription> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalTypeWithListDescription> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalStatResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalStatResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription> 
        getSignalTypeList();
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription getSignalType(int index);
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    int getSignalTypeCount();
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder> 
        getSignalTypeOrBuilderList();
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder getSignalTypeOrBuilder(
        int index);
  }
  /**
   * <pre>
   *信号统计结果，按方向/阵地/信号类型/出现时间等查询条件得出的查询结果
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.SignalStatResult}
   */
  public static final class SignalStatResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalStatResult)
      SignalStatResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalStatResult.newBuilder() to construct.
    private SignalStatResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalStatResult() {
      signalType_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalStatResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalStatResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signalType_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription>();
                mutable_bitField0_ |= 0x00000001;
              }
              signalType_.add(
                  input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signalType_ = java.util.Collections.unmodifiableList(signalType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult.class, zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult.Builder.class);
    }

    public static final int SIGNALTYPE_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription> signalType_;
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription> getSignalTypeList() {
      return signalType_;
    }
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder> 
        getSignalTypeOrBuilderList() {
      return signalType_;
    }
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    @java.lang.Override
    public int getSignalTypeCount() {
      return signalType_.size();
    }
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription getSignalType(int index) {
      return signalType_.get(index);
    }
    /**
     * <pre>
     *每个类型的信号片段集合
     * </pre>
     *
     * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder getSignalTypeOrBuilder(
        int index) {
      return signalType_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < signalType_.size(); i++) {
        output.writeMessage(1, signalType_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < signalType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, signalType_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult other = (zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult) obj;

      if (!getSignalTypeList()
          .equals(other.getSignalTypeList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSignalTypeCount() > 0) {
        hash = (37 * hash) + SIGNALTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSignalTypeList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *信号统计结果，按方向/阵地/信号类型/出现时间等查询条件得出的查询结果
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.SignalStatResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalStatResult)
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult.class, zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignalTypeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signalTypeBuilder_ == null) {
          signalType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signalTypeBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalStatResult_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult result = new zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult(this);
        int from_bitField0_ = bitField0_;
        if (signalTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            signalType_ = java.util.Collections.unmodifiableList(signalType_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signalType_ = signalType_;
        } else {
          result.signalType_ = signalTypeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult.getDefaultInstance()) return this;
        if (signalTypeBuilder_ == null) {
          if (!other.signalType_.isEmpty()) {
            if (signalType_.isEmpty()) {
              signalType_ = other.signalType_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignalTypeIsMutable();
              signalType_.addAll(other.signalType_);
            }
            onChanged();
          }
        } else {
          if (!other.signalType_.isEmpty()) {
            if (signalTypeBuilder_.isEmpty()) {
              signalTypeBuilder_.dispose();
              signalTypeBuilder_ = null;
              signalType_ = other.signalType_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signalTypeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignalTypeFieldBuilder() : null;
            } else {
              signalTypeBuilder_.addAllMessages(other.signalType_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription> signalType_ =
        java.util.Collections.emptyList();
      private void ensureSignalTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signalType_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription>(signalType_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder> signalTypeBuilder_;

      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription> getSignalTypeList() {
        if (signalTypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signalType_);
        } else {
          return signalTypeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public int getSignalTypeCount() {
        if (signalTypeBuilder_ == null) {
          return signalType_.size();
        } else {
          return signalTypeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription getSignalType(int index) {
        if (signalTypeBuilder_ == null) {
          return signalType_.get(index);
        } else {
          return signalTypeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder setSignalType(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription value) {
        if (signalTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalTypeIsMutable();
          signalType_.set(index, value);
          onChanged();
        } else {
          signalTypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder setSignalType(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder builderForValue) {
        if (signalTypeBuilder_ == null) {
          ensureSignalTypeIsMutable();
          signalType_.set(index, builderForValue.build());
          onChanged();
        } else {
          signalTypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder addSignalType(zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription value) {
        if (signalTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalTypeIsMutable();
          signalType_.add(value);
          onChanged();
        } else {
          signalTypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder addSignalType(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription value) {
        if (signalTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalTypeIsMutable();
          signalType_.add(index, value);
          onChanged();
        } else {
          signalTypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder addSignalType(
          zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder builderForValue) {
        if (signalTypeBuilder_ == null) {
          ensureSignalTypeIsMutable();
          signalType_.add(builderForValue.build());
          onChanged();
        } else {
          signalTypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder addSignalType(
          int index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder builderForValue) {
        if (signalTypeBuilder_ == null) {
          ensureSignalTypeIsMutable();
          signalType_.add(index, builderForValue.build());
          onChanged();
        } else {
          signalTypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder addAllSignalType(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription> values) {
        if (signalTypeBuilder_ == null) {
          ensureSignalTypeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signalType_);
          onChanged();
        } else {
          signalTypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder clearSignalType() {
        if (signalTypeBuilder_ == null) {
          signalType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signalTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public Builder removeSignalType(int index) {
        if (signalTypeBuilder_ == null) {
          ensureSignalTypeIsMutable();
          signalType_.remove(index);
          onChanged();
        } else {
          signalTypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder getSignalTypeBuilder(
          int index) {
        return getSignalTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder getSignalTypeOrBuilder(
          int index) {
        if (signalTypeBuilder_ == null) {
          return signalType_.get(index);  } else {
          return signalTypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder> 
           getSignalTypeOrBuilderList() {
        if (signalTypeBuilder_ != null) {
          return signalTypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signalType_);
        }
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder addSignalTypeBuilder() {
        return getSignalTypeFieldBuilder().addBuilder(
            zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.getDefaultInstance());
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder addSignalTypeBuilder(
          int index) {
        return getSignalTypeFieldBuilder().addBuilder(
            index, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.getDefaultInstance());
      }
      /**
       * <pre>
       *每个类型的信号片段集合
       * </pre>
       *
       * <code>repeated .zb.dcts.database.SignalTypeWithListDescription signalType = 1;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder> 
           getSignalTypeBuilderList() {
        return getSignalTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder> 
          getSignalTypeFieldBuilder() {
        if (signalTypeBuilder_ == null) {
          signalTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescription.Builder, zb.dcts.database.DbKgdServiceOuterClass.SignalTypeWithListDescriptionOrBuilder>(
                  signalType_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          signalType_ = null;
        }
        return signalTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalStatResult)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalStatResult)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalStatResult>
        PARSER = new com.google.protobuf.AbstractParser<SignalStatResult>() {
      @java.lang.Override
      public SignalStatResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalStatResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalStatResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalStatResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalStatResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalTimeSeqResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalTimeSeqResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号实际出现时间段    
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    boolean hasTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段    
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    zb.dcts.Dcts.TimeSpan getTimeSpan();
    /**
     * <pre>
     *信号实际出现时间段    
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder();

    /**
     * <pre>
     *挖掘出来的信号List【包含多个融合后的信号片段】
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
     * @return Whether the signallist field is set.
     */
    boolean hasSignallist();
    /**
     * <pre>
     *挖掘出来的信号List【包含多个融合后的信号片段】
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
     * @return The signallist.
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getSignallist();
    /**
     * <pre>
     *挖掘出来的信号List【包含多个融合后的信号片段】
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder getSignallistOrBuilder();
  }
  /**
   * <pre>
   *信号时序关系分析结果
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.SignalTimeSeqResult}
   */
  public static final class SignalTimeSeqResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalTimeSeqResult)
      SignalTimeSeqResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalTimeSeqResult.newBuilder() to construct.
    private SignalTimeSeqResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalTimeSeqResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalTimeSeqResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalTimeSeqResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (timeSpan_ != null) {
                subBuilder = timeSpan_.toBuilder();
              }
              timeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeSpan_);
                timeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder subBuilder = null;
              if (signallist_ != null) {
                subBuilder = signallist_.toBuilder();
              }
              signallist_ = input.readMessage(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signallist_);
                signallist_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTimeSeqResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTimeSeqResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult.Builder.class);
    }

    public static final int TIME_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.Dcts.TimeSpan timeSpan_;
    /**
     * <pre>
     *信号实际出现时间段    
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return Whether the timeSpan field is set.
     */
    @java.lang.Override
    public boolean hasTimeSpan() {
      return timeSpan_ != null;
    }
    /**
     * <pre>
     *信号实际出现时间段    
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     * @return The timeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getTimeSpan() {
      return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
    }
    /**
     * <pre>
     *信号实际出现时间段    
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan time_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
      return getTimeSpan();
    }

    public static final int SIGNALLIST_FIELD_NUMBER = 2;
    private zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList signallist_;
    /**
     * <pre>
     *挖掘出来的信号List【包含多个融合后的信号片段】
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
     * @return Whether the signallist field is set.
     */
    @java.lang.Override
    public boolean hasSignallist() {
      return signallist_ != null;
    }
    /**
     * <pre>
     *挖掘出来的信号List【包含多个融合后的信号片段】
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
     * @return The signallist.
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getSignallist() {
      return signallist_ == null ? zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance() : signallist_;
    }
    /**
     * <pre>
     *挖掘出来的信号List【包含多个融合后的信号片段】
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder getSignallistOrBuilder() {
      return getSignallist();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeSpan_ != null) {
        output.writeMessage(1, getTimeSpan());
      }
      if (signallist_ != null) {
        output.writeMessage(2, getSignallist());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimeSpan());
      }
      if (signallist_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSignallist());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult other = (zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult) obj;

      if (hasTimeSpan() != other.hasTimeSpan()) return false;
      if (hasTimeSpan()) {
        if (!getTimeSpan()
            .equals(other.getTimeSpan())) return false;
      }
      if (hasSignallist() != other.hasSignallist()) return false;
      if (hasSignallist()) {
        if (!getSignallist()
            .equals(other.getSignallist())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimeSpan()) {
        hash = (37 * hash) + TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getTimeSpan().hashCode();
      }
      if (hasSignallist()) {
        hash = (37 * hash) + SIGNALLIST_FIELD_NUMBER;
        hash = (53 * hash) + getSignallist().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *信号时序关系分析结果
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.SignalTimeSeqResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalTimeSeqResult)
        zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTimeSeqResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTimeSeqResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult.class, zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }
        if (signallistBuilder_ == null) {
          signallist_ = null;
        } else {
          signallist_ = null;
          signallistBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalTimeSeqResult_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult result = new zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult(this);
        if (timeSpanBuilder_ == null) {
          result.timeSpan_ = timeSpan_;
        } else {
          result.timeSpan_ = timeSpanBuilder_.build();
        }
        if (signallistBuilder_ == null) {
          result.signallist_ = signallist_;
        } else {
          result.signallist_ = signallistBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult.getDefaultInstance()) return this;
        if (other.hasTimeSpan()) {
          mergeTimeSpan(other.getTimeSpan());
        }
        if (other.hasSignallist()) {
          mergeSignallist(other.getSignallist());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.Dcts.TimeSpan timeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> timeSpanBuilder_;
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return Whether the timeSpan field is set.
       */
      public boolean hasTimeSpan() {
        return timeSpanBuilder_ != null || timeSpan_ != null;
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       * @return The timeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getTimeSpan() {
        if (timeSpanBuilder_ == null) {
          return timeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        } else {
          return timeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeSpan_ = value;
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder setTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = builderForValue.build();
          onChanged();
        } else {
          timeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder mergeTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (timeSpanBuilder_ == null) {
          if (timeSpan_ != null) {
            timeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(timeSpan_).mergeFrom(value).buildPartial();
          } else {
            timeSpan_ = value;
          }
          onChanged();
        } else {
          timeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public Builder clearTimeSpan() {
        if (timeSpanBuilder_ == null) {
          timeSpan_ = null;
          onChanged();
        } else {
          timeSpan_ = null;
          timeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getTimeSpanBuilder() {
        
        onChanged();
        return getTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getTimeSpanOrBuilder() {
        if (timeSpanBuilder_ != null) {
          return timeSpanBuilder_.getMessageOrBuilder();
        } else {
          return timeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : timeSpan_;
        }
      }
      /**
       * <pre>
       *信号实际出现时间段    
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan time_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getTimeSpanFieldBuilder() {
        if (timeSpanBuilder_ == null) {
          timeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getTimeSpan(),
                  getParentForChildren(),
                  isClean());
          timeSpan_ = null;
        }
        return timeSpanBuilder_;
      }

      private zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList signallist_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder> signallistBuilder_;
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       * @return Whether the signallist field is set.
       */
      public boolean hasSignallist() {
        return signallistBuilder_ != null || signallist_ != null;
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       * @return The signallist.
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getSignallist() {
        if (signallistBuilder_ == null) {
          return signallist_ == null ? zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance() : signallist_;
        } else {
          return signallistBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       */
      public Builder setSignallist(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList value) {
        if (signallistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signallist_ = value;
          onChanged();
        } else {
          signallistBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       */
      public Builder setSignallist(
          zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder builderForValue) {
        if (signallistBuilder_ == null) {
          signallist_ = builderForValue.build();
          onChanged();
        } else {
          signallistBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       */
      public Builder mergeSignallist(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList value) {
        if (signallistBuilder_ == null) {
          if (signallist_ != null) {
            signallist_ =
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.newBuilder(signallist_).mergeFrom(value).buildPartial();
          } else {
            signallist_ = value;
          }
          onChanged();
        } else {
          signallistBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       */
      public Builder clearSignallist() {
        if (signallistBuilder_ == null) {
          signallist_ = null;
          onChanged();
        } else {
          signallist_ = null;
          signallistBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder getSignallistBuilder() {
        
        onChanged();
        return getSignallistFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder getSignallistOrBuilder() {
        if (signallistBuilder_ != null) {
          return signallistBuilder_.getMessageOrBuilder();
        } else {
          return signallist_ == null ?
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance() : signallist_;
        }
      }
      /**
       * <pre>
       *挖掘出来的信号List【包含多个融合后的信号片段】
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.FusionSignalList signallist = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder> 
          getSignallistFieldBuilder() {
        if (signallistBuilder_ == null) {
          signallistBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder>(
                  getSignallist(),
                  getParentForChildren(),
                  isClean());
          signallist_ = null;
        }
        return signallistBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalTimeSeqResult)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalTimeSeqResult)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalTimeSeqResult>
        PARSER = new com.google.protobuf.AbstractParser<SignalTimeSeqResult>() {
      @java.lang.Override
      public SignalTimeSeqResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalTimeSeqResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalTimeSeqResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalTimeSeqResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalTimeSeqResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DiscipOccupancyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.DiscipOccupancy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     *占用度
     * </pre>
     *
     * <code>float occupancy = 2;</code>
     * @return The occupancy.
     */
    float getOccupancy();

    /**
     * <pre>
     *信号个数
     * </pre>
     *
     * <code>uint32 num = 3;</code>
     * @return The num.
     */
    int getNum();
  }
  /**
   * <pre>
   *信号时间段占用度统计
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.DiscipOccupancy}
   */
  public static final class DiscipOccupancy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.DiscipOccupancy)
      DiscipOccupancyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DiscipOccupancy.newBuilder() to construct.
    private DiscipOccupancy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DiscipOccupancy() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DiscipOccupancy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DiscipOccupancy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 21: {

              occupancy_ = input.readFloat();
              break;
            }
            case 24: {

              num_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_DiscipOccupancy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_DiscipOccupancy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.class, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *信号类型
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OCCUPANCY_FIELD_NUMBER = 2;
    private float occupancy_;
    /**
     * <pre>
     *占用度
     * </pre>
     *
     * <code>float occupancy = 2;</code>
     * @return The occupancy.
     */
    @java.lang.Override
    public float getOccupancy() {
      return occupancy_;
    }

    public static final int NUM_FIELD_NUMBER = 3;
    private int num_;
    /**
     * <pre>
     *信号个数
     * </pre>
     *
     * <code>uint32 num = 3;</code>
     * @return The num.
     */
    @java.lang.Override
    public int getNum() {
      return num_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (occupancy_ != 0F) {
        output.writeFloat(2, occupancy_);
      }
      if (num_ != 0) {
        output.writeUInt32(3, num_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (occupancy_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, occupancy_);
      }
      if (num_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, num_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy other = (zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (java.lang.Float.floatToIntBits(getOccupancy())
          != java.lang.Float.floatToIntBits(
              other.getOccupancy())) return false;
      if (getNum()
          != other.getNum()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + OCCUPANCY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOccupancy());
      hash = (37 * hash) + NUM_FIELD_NUMBER;
      hash = (53 * hash) + getNum();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *信号时间段占用度统计
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.DiscipOccupancy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.DiscipOccupancy)
        zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_DiscipOccupancy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_DiscipOccupancy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.class, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        occupancy_ = 0F;

        num_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_DiscipOccupancy_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy build() {
        zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy result = new zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy(this);
        result.type_ = type_;
        result.occupancy_ = occupancy_;
        result.num_ = num_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getOccupancy() != 0F) {
          setOccupancy(other.getOccupancy());
        }
        if (other.getNum() != 0) {
          setNum(other.getNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string type = 1;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string type = 1;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号类型
       * </pre>
       *
       * <code>string type = 1;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private float occupancy_ ;
      /**
       * <pre>
       *占用度
       * </pre>
       *
       * <code>float occupancy = 2;</code>
       * @return The occupancy.
       */
      @java.lang.Override
      public float getOccupancy() {
        return occupancy_;
      }
      /**
       * <pre>
       *占用度
       * </pre>
       *
       * <code>float occupancy = 2;</code>
       * @param value The occupancy to set.
       * @return This builder for chaining.
       */
      public Builder setOccupancy(float value) {
        
        occupancy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *占用度
       * </pre>
       *
       * <code>float occupancy = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOccupancy() {
        
        occupancy_ = 0F;
        onChanged();
        return this;
      }

      private int num_ ;
      /**
       * <pre>
       *信号个数
       * </pre>
       *
       * <code>uint32 num = 3;</code>
       * @return The num.
       */
      @java.lang.Override
      public int getNum() {
        return num_;
      }
      /**
       * <pre>
       *信号个数
       * </pre>
       *
       * <code>uint32 num = 3;</code>
       * @param value The num to set.
       * @return This builder for chaining.
       */
      public Builder setNum(int value) {
        
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号个数
       * </pre>
       *
       * <code>uint32 num = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNum() {
        
        num_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.DiscipOccupancy)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.DiscipOccupancy)
    private static final zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DiscipOccupancy>
        PARSER = new com.google.protobuf.AbstractParser<DiscipOccupancy>() {
      @java.lang.Override
      public DiscipOccupancy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DiscipOccupancy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DiscipOccupancy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DiscipOccupancy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignalDisciplinarianResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.SignalDisciplinarianResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    java.util.List<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy> 
        getOccpList();
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy getOccp(int index);
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    int getOccpCount();
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder> 
        getOccpOrBuilderList();
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder getOccpOrBuilder(
        int index);

    /**
     * <pre>
     *信号总数，按照ID计算      
     * </pre>
     *
     * <code>uint32 counts = 2;</code>
     * @return The counts.
     */
    int getCounts();
  }
  /**
   * <pre>
   *信号分布规律分析结果
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.SignalDisciplinarianResult}
   */
  public static final class SignalDisciplinarianResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.SignalDisciplinarianResult)
      SignalDisciplinarianResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignalDisciplinarianResult.newBuilder() to construct.
    private SignalDisciplinarianResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignalDisciplinarianResult() {
      occp_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignalDisciplinarianResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignalDisciplinarianResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                occp_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy>();
                mutable_bitField0_ |= 0x00000001;
              }
              occp_.add(
                  input.readMessage(zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.parser(), extensionRegistry));
              break;
            }
            case 16: {

              counts_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          occp_ = java.util.Collections.unmodifiableList(occp_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalDisciplinarianResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalDisciplinarianResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult.class, zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult.Builder.class);
    }

    public static final int OCCP_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy> occp_;
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy> getOccpList() {
      return occp_;
    }
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder> 
        getOccpOrBuilderList() {
      return occp_;
    }
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    @java.lang.Override
    public int getOccpCount() {
      return occp_.size();
    }
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy getOccp(int index) {
      return occp_.get(index);
    }
    /**
     * <pre>
     *不同类型信号的占比
     * </pre>
     *
     * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder getOccpOrBuilder(
        int index) {
      return occp_.get(index);
    }

    public static final int COUNTS_FIELD_NUMBER = 2;
    private int counts_;
    /**
     * <pre>
     *信号总数，按照ID计算      
     * </pre>
     *
     * <code>uint32 counts = 2;</code>
     * @return The counts.
     */
    @java.lang.Override
    public int getCounts() {
      return counts_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < occp_.size(); i++) {
        output.writeMessage(1, occp_.get(i));
      }
      if (counts_ != 0) {
        output.writeUInt32(2, counts_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < occp_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, occp_.get(i));
      }
      if (counts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, counts_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult)) {
        return super.equals(obj);
      }
      zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult other = (zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult) obj;

      if (!getOccpList()
          .equals(other.getOccpList())) return false;
      if (getCounts()
          != other.getCounts()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOccpCount() > 0) {
        hash = (37 * hash) + OCCP_FIELD_NUMBER;
        hash = (53 * hash) + getOccpList().hashCode();
      }
      hash = (37 * hash) + COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getCounts();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *信号分布规律分析结果
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.SignalDisciplinarianResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.SignalDisciplinarianResult)
        zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalDisciplinarianResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalDisciplinarianResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult.class, zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult.Builder.class);
      }

      // Construct using zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOccpFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (occpBuilder_ == null) {
          occp_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          occpBuilder_.clear();
        }
        counts_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.internal_static_zb_dcts_database_SignalDisciplinarianResult_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult getDefaultInstanceForType() {
        return zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult build() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult buildPartial() {
        zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult result = new zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult(this);
        int from_bitField0_ = bitField0_;
        if (occpBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            occp_ = java.util.Collections.unmodifiableList(occp_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.occp_ = occp_;
        } else {
          result.occp_ = occpBuilder_.build();
        }
        result.counts_ = counts_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult) {
          return mergeFrom((zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult other) {
        if (other == zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult.getDefaultInstance()) return this;
        if (occpBuilder_ == null) {
          if (!other.occp_.isEmpty()) {
            if (occp_.isEmpty()) {
              occp_ = other.occp_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOccpIsMutable();
              occp_.addAll(other.occp_);
            }
            onChanged();
          }
        } else {
          if (!other.occp_.isEmpty()) {
            if (occpBuilder_.isEmpty()) {
              occpBuilder_.dispose();
              occpBuilder_ = null;
              occp_ = other.occp_;
              bitField0_ = (bitField0_ & ~0x00000001);
              occpBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOccpFieldBuilder() : null;
            } else {
              occpBuilder_.addAllMessages(other.occp_);
            }
          }
        }
        if (other.getCounts() != 0) {
          setCounts(other.getCounts());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy> occp_ =
        java.util.Collections.emptyList();
      private void ensureOccpIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          occp_ = new java.util.ArrayList<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy>(occp_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder> occpBuilder_;

      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy> getOccpList() {
        if (occpBuilder_ == null) {
          return java.util.Collections.unmodifiableList(occp_);
        } else {
          return occpBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public int getOccpCount() {
        if (occpBuilder_ == null) {
          return occp_.size();
        } else {
          return occpBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy getOccp(int index) {
        if (occpBuilder_ == null) {
          return occp_.get(index);
        } else {
          return occpBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder setOccp(
          int index, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy value) {
        if (occpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccpIsMutable();
          occp_.set(index, value);
          onChanged();
        } else {
          occpBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder setOccp(
          int index, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder builderForValue) {
        if (occpBuilder_ == null) {
          ensureOccpIsMutable();
          occp_.set(index, builderForValue.build());
          onChanged();
        } else {
          occpBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder addOccp(zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy value) {
        if (occpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccpIsMutable();
          occp_.add(value);
          onChanged();
        } else {
          occpBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder addOccp(
          int index, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy value) {
        if (occpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccpIsMutable();
          occp_.add(index, value);
          onChanged();
        } else {
          occpBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder addOccp(
          zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder builderForValue) {
        if (occpBuilder_ == null) {
          ensureOccpIsMutable();
          occp_.add(builderForValue.build());
          onChanged();
        } else {
          occpBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder addOccp(
          int index, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder builderForValue) {
        if (occpBuilder_ == null) {
          ensureOccpIsMutable();
          occp_.add(index, builderForValue.build());
          onChanged();
        } else {
          occpBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder addAllOccp(
          java.lang.Iterable<? extends zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy> values) {
        if (occpBuilder_ == null) {
          ensureOccpIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, occp_);
          onChanged();
        } else {
          occpBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder clearOccp() {
        if (occpBuilder_ == null) {
          occp_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          occpBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public Builder removeOccp(int index) {
        if (occpBuilder_ == null) {
          ensureOccpIsMutable();
          occp_.remove(index);
          onChanged();
        } else {
          occpBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder getOccpBuilder(
          int index) {
        return getOccpFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder getOccpOrBuilder(
          int index) {
        if (occpBuilder_ == null) {
          return occp_.get(index);  } else {
          return occpBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public java.util.List<? extends zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder> 
           getOccpOrBuilderList() {
        if (occpBuilder_ != null) {
          return occpBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(occp_);
        }
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder addOccpBuilder() {
        return getOccpFieldBuilder().addBuilder(
            zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.getDefaultInstance());
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder addOccpBuilder(
          int index) {
        return getOccpFieldBuilder().addBuilder(
            index, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.getDefaultInstance());
      }
      /**
       * <pre>
       *不同类型信号的占比
       * </pre>
       *
       * <code>repeated .zb.dcts.database.DiscipOccupancy occp = 1;</code>
       */
      public java.util.List<zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder> 
           getOccpBuilderList() {
        return getOccpFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder> 
          getOccpFieldBuilder() {
        if (occpBuilder_ == null) {
          occpBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancy.Builder, zb.dcts.database.DbKgdServiceOuterClass.DiscipOccupancyOrBuilder>(
                  occp_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          occp_ = null;
        }
        return occpBuilder_;
      }

      private int counts_ ;
      /**
       * <pre>
       *信号总数，按照ID计算      
       * </pre>
       *
       * <code>uint32 counts = 2;</code>
       * @return The counts.
       */
      @java.lang.Override
      public int getCounts() {
        return counts_;
      }
      /**
       * <pre>
       *信号总数，按照ID计算      
       * </pre>
       *
       * <code>uint32 counts = 2;</code>
       * @param value The counts to set.
       * @return This builder for chaining.
       */
      public Builder setCounts(int value) {
        
        counts_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *信号总数，按照ID计算      
       * </pre>
       *
       * <code>uint32 counts = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCounts() {
        
        counts_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.SignalDisciplinarianResult)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.SignalDisciplinarianResult)
    private static final zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult();
    }

    public static zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignalDisciplinarianResult>
        PARSER = new com.google.protobuf.AbstractParser<SignalDisciplinarianResult>() {
      @java.lang.Override
      public SignalDisciplinarianResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignalDisciplinarianResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignalDisciplinarianResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignalDisciplinarianResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.DbKgdServiceOuterClass.SignalDisciplinarianResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SpectrumOccupancyResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SpectrumOccupancyResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalParamPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalParamPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalCurve_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalCurve_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalVariationResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalVariationResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalTypeDescription_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalTypeDescription_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalTypesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalTypesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_FreqChOccupancy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_FreqChOccupancy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_FreqBandOccupancyResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_FreqBandOccupancyResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_FreqConflictDayResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_FreqConflictDayResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_FreqConflictResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_FreqConflictResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_AreaCoverage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_AreaCoverage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalStatRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalStatRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalTypeWithListDescription_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalTypeWithListDescription_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalStatResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalStatResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalTimeSeqResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalTimeSeqResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_DiscipOccupancy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_DiscipOccupancy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_SignalDisciplinarianResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_SignalDisciplinarianResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033database/DbKgdService.proto\022\020zb.dcts.d" +
      "atabase\032\033google/protobuf/empty.proto\032\ndc" +
      "ts.proto\032\030scenario/detection.proto\032\024data" +
      "base/DbKgd.proto\032\027scenario/spectrum.prot" +
      "o\032\031source/kh/KhContext.proto\032 database/E" +
      "quipmentDatabase.proto\032\036scenario/FFP/mod" +
      "Identify.proto\032\035fusion/airDomain/target." +
      "proto\032\031aeronaval/aeronaval.proto\032\027fusion" +
      "/freqDomain.proto\"\202\001\n\031SpectrumOccupancyR" +
      "esponse\022$\n\ttime_span\030\001 \001(\0132\021.zb.dcts.Tim" +
      "eSpan\022?\n\rsignal_digest\030\002 \003(\0132(.zb.dcts.s" +
      "cenario.detection.SignalDigest\"v\n\020Signal" +
      "ParamPoint\022\023\n\013center_freq\030\001 \001(\001\022\022\n\nband_" +
      "width\030\002 \001(\001\022\021\n\tamplitude\030\003 \001(\001\022&\n\ntime_s" +
      "tamp\030\004 \001(\0132\022.zb.dcts.Timestamp\"R\n\013Signal" +
      "Curve\022\n\n\002id\030\001 \001(\t\0227\n\013param_point\030\002 \003(\0132\"" +
      ".zb.dcts.database.SignalParamPoint\"t\n\027Si" +
      "gnalVariationResponse\022$\n\ttime_span\030\001 \001(\013" +
      "2\021.zb.dcts.TimeSpan\0223\n\014signal_curve\030\002 \003(" +
      "\0132\035.zb.dcts.database.SignalCurve\"2\n\025Sign" +
      "alTypeDescription\022\014\n\004name\030\001 \001(\t\022\013\n\003cnt\030\002" +
      " \001(\r\"~\n\023SignalTypesResponse\022$\n\ttime_span" +
      "\030\001 \001(\0132\021.zb.dcts.TimeSpan\022A\n\020type_descri" +
      "ption\030\002 \003(\0132\'.zb.dcts.database.SignalTyp" +
      "eDescription\"d\n\017FreqChOccupancy\022>\n\014freq_" +
      "channel\030\001 \001(\0132(.zb.dcts.scenario.spectru" +
      "m.FrequencySpan\022\021\n\toccupancy\030\002 \001(\002\"R\n\031Fr" +
      "eqBandOccupancyResponse\0225\n\noccupancys\030\001 " +
      "\003(\0132!.zb.dcts.database.FreqChOccupancy\"q" +
      "\n\027FreqConflictDayResponse\022D\n\017spec_coccup" +
      "ancy\030\001 \001(\0132+.zb.dcts.database.SpectrumOc" +
      "cupancyResponse\022\020\n\010conflict\030\002 \001(\r\"\177\n\024Fre" +
      "qConflictResponse\022$\n\ttime_span\030\001 \001(\0132\021.z" +
      "b.dcts.TimeSpan\022A\n\016freq_conflicts\030\002 \003(\0132" +
      ").zb.dcts.database.FreqConflictDayRespon" +
      "se\"U\n\014AreaCoverage\022\"\n\tlongitude\030\001 \001(\0132\017." +
      "zb.dcts.DRange\022!\n\010latitude\030\002 \001(\0132\017.zb.dc" +
      "ts.DRange\"\375\003\n\021SignalStatRequest\022\n\n\002id\030\001 " +
      "\001(\t\0223\n\tstat_Type\030\002 \003(\0162 .zb.dcts.databas" +
      "e.SignalStatType\022$\n\ttime_span\030\003 \001(\0132\021.zb" +
      ".dcts.TimeSpan\022;\n\tfreq_Span\030\004 \001(\0132(.zb.d" +
      "cts.scenario.spectrum.FrequencySpan\022,\n\004a" +
      "rea\030\005 \001(\0132\036.zb.dcts.database.AreaCoverag" +
      "e\022\"\n\tdirection\030\006 \001(\0132\017.zb.dcts.DRange\022$\n" +
      "\013power_Limit\030\007 \001(\0132\017.zb.dcts.DRange\022(\n\007e" +
      "n_camp\030\010 \001(\0162\027.zb.dcts.aeronaval.Camp\022A\n" +
      "\010mod_Type\030\t \001(\0162/.zb.dcts.scenario.FFP.M" +
      "odIdentifyResult.ModType\022.\n\tlink_type\030\n " +
      "\001(\0162\033.zb.dcts.source.kh.LinkType\022/\n\010req_" +
      "type\030\013 \001(\0162\035.zb.dcts.database.RequestTyp" +
      "e\"\201\001\n\035SignalTypeWithListDescription\022\020\n\010t" +
      "ypeName\030\001 \001(\t\022\r\n\005scale\030\002 \001(\002\022?\n\nsignalli" +
      "st\030\003 \001(\0132+.zb.dcts.fusion.freqDomain.Fus" +
      "ionSignalList\"W\n\020SignalStatResult\022C\n\nsig" +
      "nalType\030\001 \003(\0132/.zb.dcts.database.SignalT" +
      "ypeWithListDescription\"|\n\023SignalTimeSeqR" +
      "esult\022$\n\ttime_span\030\001 \001(\0132\021.zb.dcts.TimeS" +
      "pan\022?\n\nsignallist\030\002 \001(\0132+.zb.dcts.fusion" +
      ".freqDomain.FusionSignalList\"?\n\017DiscipOc" +
      "cupancy\022\014\n\004type\030\001 \001(\t\022\021\n\toccupancy\030\002 \001(\002" +
      "\022\013\n\003num\030\003 \001(\r\"]\n\032SignalDisciplinarianRes" +
      "ult\022/\n\004occp\030\001 \003(\0132!.zb.dcts.database.Dis" +
      "cipOccupancy\022\016\n\006counts\030\002 \001(\r*?\n\013RequestT" +
      "ype\022\010\n\004STAT\020\000\022\014\n\010TIME_SEQ\020\001\022\n\n\006DISCIP\020\002\022" +
      "\014\n\010ABNORMAL\020\003*v\n\016SignalStatType\022\r\n\tSIGNA" +
      "L_ID\020\000\022\r\n\tDIRECTION\020\001\022\010\n\004CAMP\020\002\022\017\n\013SIGNA" +
      "L_TYPE\020\003\022\010\n\004TIME\020\004\022\010\n\004FREQ\020\005\022\014\n\010AIRSPACE" +
      "\020\006\022\t\n\005POWER\020\0072\301\017\n\014DbKgdService\022g\n\023QueryS" +
      "ignalProperty\022(.zb.dcts.database.SignalP" +
      "ropQueryRequest\032$.zb.dcts.database.Signa" +
      "lPropResponse\"\000\022g\n\026QuerySpectrumOccupanc" +
      "y\022\036.zb.dcts.database.QueryRequest\032+.zb.d" +
      "cts.database.SpectrumOccupancyResponse\"\000" +
      "\022c\n\024QuerySignalVariation\022\036.zb.dcts.datab" +
      "ase.QueryRequest\032).zb.dcts.database.Sign" +
      "alVariationResponse\"\000\022[\n\020QuerySignalType" +
      "s\022\036.zb.dcts.database.QueryRequest\032%.zb.d" +
      "cts.database.SignalTypesResponse\"\000\022k\n\024Ac" +
      "cessSignalProperty\022\'.zb.dcts.database.Si" +
      "gnalPropertyRequest\032(.zb.dcts.database.S" +
      "ignalPropertyResponse\"\000\022k\n\032QueryFreqBand" +
      "OccupancyTime\022\036.zb.dcts.database.QueryRe" +
      "quest\032+.zb.dcts.database.FreqBandOccupan" +
      "cyResponse\"\000\022g\n\026QueryFreqBandOccupancy\022\036" +
      ".zb.dcts.database.QueryRequest\032+.zb.dcts" +
      ".database.FreqBandOccupancyResponse\"\000\022]\n" +
      "\021QueryFreqConflict\022\036.zb.dcts.database.Qu" +
      "eryRequest\032&.zb.dcts.database.FreqConfli" +
      "ctResponse\"\000\022_\n\025QueryRecentFusionTime\022\036." +
      "zb.dcts.database.QueryRequest\032$.zb.dcts." +
      "database.FusionTimeResponse\"\000\022a\n\025StartFu" +
      "sionCommSignal\022\036.zb.dcts.database.QueryR" +
      "equest\032$.zb.dcts.database.FusionProcResp" +
      "onse\"\0000\001\022^\n\024StopFusionCommSignal\022\036.zb.dc" +
      "ts.database.QueryRequest\032$.zb.dcts.datab" +
      "ase.FusionProcResponse\"\000\022L\n\014ExportdbData" +
      "\022\036.zb.dcts.database.QueryRequest\032\032.zb.dc" +
      "ts.database.Response\"\000\022L\n\014ImportdbData\022\036" +
      ".zb.dcts.database.QueryRequest\032\032.zb.dcts" +
      ".database.Response\"\000\022K\n\013CleardbData\022\036.zb" +
      ".dcts.database.QueryRequest\032\032.zb.dcts.da" +
      "tabase.Response\"\000\022W\n\020GetdbStorageSize\022\036." +
      "zb.dcts.database.QueryRequest\032!.zb.dcts." +
      "database.DbStatsResponse\"\000\022b\n\021AccessComm" +
      "EquInfo\022$.zb.dcts.database.CommEquInfoRe" +
      "quest\032%.zb.dcts.database.CommEquInfoResp" +
      "onse\"\000\022w\n\030AccessCommCounterEquInfo\022+.zb." +
      "dcts.database.CommCounterEquInfoRequest\032" +
      ",.zb.dcts.database.CommCounterEquInfoRes" +
      "ponse\"\000\022b\n\025StartStatSignalResult\022#.zb.dc" +
      "ts.database.SignalStatRequest\032\".zb.dcts." +
      "database.SignalStatResult\"\000\022b\n\022StartTime" +
      "SeqResult\022#.zb.dcts.database.SignalStatR" +
      "equest\032%.zb.dcts.database.SignalTimeSeqR" +
      "esult\"\000\022p\n\031StartDisciplinarianResult\022#.z" +
      "b.dcts.database.SignalStatRequest\032,.zb.d" +
      "cts.database.SignalDisciplinarianResult\"" +
      "\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
          zb.dcts.Dcts.getDescriptor(),
          zb.dcts.scenario.detection.Detection.getDescriptor(),
          zb.dcts.database.DbKgd.getDescriptor(),
          zb.dcts.scenario.spectrum.Spectrum.getDescriptor(),
          zb.dcts.source.kh.KhContext.getDescriptor(),
          zb.dcts.database.EquipmentDatabase.getDescriptor(),
          zb.dcts.scenario.FFP.ModIdentify.getDescriptor(),
          zb.dcts.fusion.airDomain.target.Target.getDescriptor(),
          zb.dcts.aeronaval.Aeronaval.getDescriptor(),
          zb.dcts.fusion.freqDomain.FreqDomain.getDescriptor(),
        });
    internal_static_zb_dcts_database_SpectrumOccupancyResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zb_dcts_database_SpectrumOccupancyResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SpectrumOccupancyResponse_descriptor,
        new java.lang.String[] { "TimeSpan", "SignalDigest", });
    internal_static_zb_dcts_database_SignalParamPoint_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zb_dcts_database_SignalParamPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalParamPoint_descriptor,
        new java.lang.String[] { "CenterFreq", "BandWidth", "Amplitude", "TimeStamp", });
    internal_static_zb_dcts_database_SignalCurve_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zb_dcts_database_SignalCurve_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalCurve_descriptor,
        new java.lang.String[] { "Id", "ParamPoint", });
    internal_static_zb_dcts_database_SignalVariationResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_zb_dcts_database_SignalVariationResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalVariationResponse_descriptor,
        new java.lang.String[] { "TimeSpan", "SignalCurve", });
    internal_static_zb_dcts_database_SignalTypeDescription_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_zb_dcts_database_SignalTypeDescription_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalTypeDescription_descriptor,
        new java.lang.String[] { "Name", "Cnt", });
    internal_static_zb_dcts_database_SignalTypesResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_zb_dcts_database_SignalTypesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalTypesResponse_descriptor,
        new java.lang.String[] { "TimeSpan", "TypeDescription", });
    internal_static_zb_dcts_database_FreqChOccupancy_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_zb_dcts_database_FreqChOccupancy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_FreqChOccupancy_descriptor,
        new java.lang.String[] { "FreqChannel", "Occupancy", });
    internal_static_zb_dcts_database_FreqBandOccupancyResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_zb_dcts_database_FreqBandOccupancyResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_FreqBandOccupancyResponse_descriptor,
        new java.lang.String[] { "Occupancys", });
    internal_static_zb_dcts_database_FreqConflictDayResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_zb_dcts_database_FreqConflictDayResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_FreqConflictDayResponse_descriptor,
        new java.lang.String[] { "SpecCoccupancy", "Conflict", });
    internal_static_zb_dcts_database_FreqConflictResponse_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_zb_dcts_database_FreqConflictResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_FreqConflictResponse_descriptor,
        new java.lang.String[] { "TimeSpan", "FreqConflicts", });
    internal_static_zb_dcts_database_AreaCoverage_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_zb_dcts_database_AreaCoverage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_AreaCoverage_descriptor,
        new java.lang.String[] { "Longitude", "Latitude", });
    internal_static_zb_dcts_database_SignalStatRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_zb_dcts_database_SignalStatRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalStatRequest_descriptor,
        new java.lang.String[] { "Id", "StatType", "TimeSpan", "FreqSpan", "Area", "Direction", "PowerLimit", "EnCamp", "ModType", "LinkType", "ReqType", });
    internal_static_zb_dcts_database_SignalTypeWithListDescription_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_zb_dcts_database_SignalTypeWithListDescription_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalTypeWithListDescription_descriptor,
        new java.lang.String[] { "TypeName", "Scale", "Signallist", });
    internal_static_zb_dcts_database_SignalStatResult_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_zb_dcts_database_SignalStatResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalStatResult_descriptor,
        new java.lang.String[] { "SignalType", });
    internal_static_zb_dcts_database_SignalTimeSeqResult_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_zb_dcts_database_SignalTimeSeqResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalTimeSeqResult_descriptor,
        new java.lang.String[] { "TimeSpan", "Signallist", });
    internal_static_zb_dcts_database_DiscipOccupancy_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_zb_dcts_database_DiscipOccupancy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_DiscipOccupancy_descriptor,
        new java.lang.String[] { "Type", "Occupancy", "Num", });
    internal_static_zb_dcts_database_SignalDisciplinarianResult_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_zb_dcts_database_SignalDisciplinarianResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_SignalDisciplinarianResult_descriptor,
        new java.lang.String[] { "Occp", "Counts", });
    com.google.protobuf.EmptyProto.getDescriptor();
    zb.dcts.Dcts.getDescriptor();
    zb.dcts.scenario.detection.Detection.getDescriptor();
    zb.dcts.database.DbKgd.getDescriptor();
    zb.dcts.scenario.spectrum.Spectrum.getDescriptor();
    zb.dcts.source.kh.KhContext.getDescriptor();
    zb.dcts.database.EquipmentDatabase.getDescriptor();
    zb.dcts.scenario.FFP.ModIdentify.getDescriptor();
    zb.dcts.fusion.airDomain.target.Target.getDescriptor();
    zb.dcts.aeronaval.Aeronaval.getDescriptor();
    zb.dcts.fusion.freqDomain.FreqDomain.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
