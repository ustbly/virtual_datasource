// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database/EquipmentDatabase.proto

package zb.dcts.database;

public final class EquipmentDatabase {
  private EquipmentDatabase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 调制样式
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.database.ModuleType}
   */
  public enum ModuleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PW = 0;</code>
     */
    PW(0),
    /**
     * <code>FSK = 1;</code>
     */
    FSK(1),
    /**
     * <code>PSK = 2;</code>
     */
    PSK(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PW = 0;</code>
     */
    public static final int PW_VALUE = 0;
    /**
     * <code>FSK = 1;</code>
     */
    public static final int FSK_VALUE = 1;
    /**
     * <code>PSK = 2;</code>
     */
    public static final int PSK_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ModuleType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ModuleType forNumber(int value) {
      switch (value) {
        case 0: return PW;
        case 1: return FSK;
        case 2: return PSK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ModuleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ModuleType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ModuleType>() {
            public ModuleType findValueByNumber(int number) {
              return ModuleType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.getDescriptor().getEnumTypes().get(0);
    }

    private static final ModuleType[] VALUES = values();

    public static ModuleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ModuleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.database.ModuleType)
  }

  /**
   * <pre>
   * 干扰类型
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.database.DisturbType}
   */
  public enum DisturbType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AIMING_DISTURB = 0;</code>
     */
    AIMING_DISTURB(0),
    /**
     * <code>BARRAGE_DISTURB = 1;</code>
     */
    BARRAGE_DISTURB(1),
    /**
     * <code>COMB_DISTURB = 2;</code>
     */
    COMB_DISTURB(2),
    /**
     * <code>DISCRETE_DISTURB = 3;</code>
     */
    DISCRETE_DISTURB(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AIMING_DISTURB = 0;</code>
     */
    public static final int AIMING_DISTURB_VALUE = 0;
    /**
     * <code>BARRAGE_DISTURB = 1;</code>
     */
    public static final int BARRAGE_DISTURB_VALUE = 1;
    /**
     * <code>COMB_DISTURB = 2;</code>
     */
    public static final int COMB_DISTURB_VALUE = 2;
    /**
     * <code>DISCRETE_DISTURB = 3;</code>
     */
    public static final int DISCRETE_DISTURB_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DisturbType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DisturbType forNumber(int value) {
      switch (value) {
        case 0: return AIMING_DISTURB;
        case 1: return BARRAGE_DISTURB;
        case 2: return COMB_DISTURB;
        case 3: return DISCRETE_DISTURB;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DisturbType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DisturbType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DisturbType>() {
            public DisturbType findValueByNumber(int number) {
              return DisturbType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.getDescriptor().getEnumTypes().get(1);
    }

    private static final DisturbType[] VALUES = values();

    public static DisturbType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DisturbType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.database.DisturbType)
  }

  public interface FixedFreqParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.FixedFreqParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>double freq = 1;</code>
     * @return The freq.
     */
    double getFreq();

    /**
     * <pre>
     *带宽
     * </pre>
     *
     * <code>double bandwidth = 2;</code>
     * @return The bandwidth.
     */
    double getBandwidth();

    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>double power = 3;</code>
     * @return The power.
     */
    double getPower();

    /**
     * <pre>
     *调制样式
     * </pre>
     *
     * <code>.zb.dcts.database.ModuleType type = 4;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     *调制样式
     * </pre>
     *
     * <code>.zb.dcts.database.ModuleType type = 4;</code>
     * @return The type.
     */
    zb.dcts.database.EquipmentDatabase.ModuleType getType();
  }
  /**
   * <pre>
   * 定频参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.FixedFreqParam}
   */
  public static final class FixedFreqParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.FixedFreqParam)
      FixedFreqParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FixedFreqParam.newBuilder() to construct.
    private FixedFreqParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FixedFreqParam() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FixedFreqParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FixedFreqParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              freq_ = input.readDouble();
              break;
            }
            case 17: {

              bandwidth_ = input.readDouble();
              break;
            }
            case 25: {

              power_ = input.readDouble();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FixedFreqParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FixedFreqParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.FixedFreqParam.class, zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder.class);
    }

    public static final int FREQ_FIELD_NUMBER = 1;
    private double freq_;
    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>double freq = 1;</code>
     * @return The freq.
     */
    @java.lang.Override
    public double getFreq() {
      return freq_;
    }

    public static final int BANDWIDTH_FIELD_NUMBER = 2;
    private double bandwidth_;
    /**
     * <pre>
     *带宽
     * </pre>
     *
     * <code>double bandwidth = 2;</code>
     * @return The bandwidth.
     */
    @java.lang.Override
    public double getBandwidth() {
      return bandwidth_;
    }

    public static final int POWER_FIELD_NUMBER = 3;
    private double power_;
    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>double power = 3;</code>
     * @return The power.
     */
    @java.lang.Override
    public double getPower() {
      return power_;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <pre>
     *调制样式
     * </pre>
     *
     * <code>.zb.dcts.database.ModuleType type = 4;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     *调制样式
     * </pre>
     *
     * <code>.zb.dcts.database.ModuleType type = 4;</code>
     * @return The type.
     */
    @java.lang.Override public zb.dcts.database.EquipmentDatabase.ModuleType getType() {
      @SuppressWarnings("deprecation")
      zb.dcts.database.EquipmentDatabase.ModuleType result = zb.dcts.database.EquipmentDatabase.ModuleType.valueOf(type_);
      return result == null ? zb.dcts.database.EquipmentDatabase.ModuleType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (freq_ != 0D) {
        output.writeDouble(1, freq_);
      }
      if (bandwidth_ != 0D) {
        output.writeDouble(2, bandwidth_);
      }
      if (power_ != 0D) {
        output.writeDouble(3, power_);
      }
      if (type_ != zb.dcts.database.EquipmentDatabase.ModuleType.PW.getNumber()) {
        output.writeEnum(4, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freq_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, freq_);
      }
      if (bandwidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, bandwidth_);
      }
      if (power_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, power_);
      }
      if (type_ != zb.dcts.database.EquipmentDatabase.ModuleType.PW.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.FixedFreqParam)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.FixedFreqParam other = (zb.dcts.database.EquipmentDatabase.FixedFreqParam) obj;

      if (java.lang.Double.doubleToLongBits(getFreq())
          != java.lang.Double.doubleToLongBits(
              other.getFreq())) return false;
      if (java.lang.Double.doubleToLongBits(getBandwidth())
          != java.lang.Double.doubleToLongBits(
              other.getBandwidth())) return false;
      if (java.lang.Double.doubleToLongBits(getPower())
          != java.lang.Double.doubleToLongBits(
              other.getPower())) return false;
      if (type_ != other.type_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FREQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFreq()));
      hash = (37 * hash) + BANDWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBandwidth()));
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPower()));
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.FixedFreqParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 定频参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.FixedFreqParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.FixedFreqParam)
        zb.dcts.database.EquipmentDatabase.FixedFreqParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FixedFreqParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FixedFreqParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.FixedFreqParam.class, zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.FixedFreqParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        freq_ = 0D;

        bandwidth_ = 0D;

        power_ = 0D;

        type_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FixedFreqParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FixedFreqParam getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FixedFreqParam build() {
        zb.dcts.database.EquipmentDatabase.FixedFreqParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FixedFreqParam buildPartial() {
        zb.dcts.database.EquipmentDatabase.FixedFreqParam result = new zb.dcts.database.EquipmentDatabase.FixedFreqParam(this);
        result.freq_ = freq_;
        result.bandwidth_ = bandwidth_;
        result.power_ = power_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.FixedFreqParam) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.FixedFreqParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.FixedFreqParam other) {
        if (other == zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance()) return this;
        if (other.getFreq() != 0D) {
          setFreq(other.getFreq());
        }
        if (other.getBandwidth() != 0D) {
          setBandwidth(other.getBandwidth());
        }
        if (other.getPower() != 0D) {
          setPower(other.getPower());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.FixedFreqParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.FixedFreqParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double freq_ ;
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>double freq = 1;</code>
       * @return The freq.
       */
      @java.lang.Override
      public double getFreq() {
        return freq_;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>double freq = 1;</code>
       * @param value The freq to set.
       * @return This builder for chaining.
       */
      public Builder setFreq(double value) {
        
        freq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>double freq = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreq() {
        
        freq_ = 0D;
        onChanged();
        return this;
      }

      private double bandwidth_ ;
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 2;</code>
       * @return The bandwidth.
       */
      @java.lang.Override
      public double getBandwidth() {
        return bandwidth_;
      }
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 2;</code>
       * @param value The bandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setBandwidth(double value) {
        
        bandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBandwidth() {
        
        bandwidth_ = 0D;
        onChanged();
        return this;
      }

      private double power_ ;
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 3;</code>
       * @return The power.
       */
      @java.lang.Override
      public double getPower() {
        return power_;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 3;</code>
       * @param value The power to set.
       * @return This builder for chaining.
       */
      public Builder setPower(double value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPower() {
        
        power_ = 0D;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       *调制样式
       * </pre>
       *
       * <code>.zb.dcts.database.ModuleType type = 4;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       *调制样式
       * </pre>
       *
       * <code>.zb.dcts.database.ModuleType type = 4;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *调制样式
       * </pre>
       *
       * <code>.zb.dcts.database.ModuleType type = 4;</code>
       * @return The type.
       */
      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.ModuleType getType() {
        @SuppressWarnings("deprecation")
        zb.dcts.database.EquipmentDatabase.ModuleType result = zb.dcts.database.EquipmentDatabase.ModuleType.valueOf(type_);
        return result == null ? zb.dcts.database.EquipmentDatabase.ModuleType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *调制样式
       * </pre>
       *
       * <code>.zb.dcts.database.ModuleType type = 4;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(zb.dcts.database.EquipmentDatabase.ModuleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *调制样式
       * </pre>
       *
       * <code>.zb.dcts.database.ModuleType type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.FixedFreqParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.FixedFreqParam)
    private static final zb.dcts.database.EquipmentDatabase.FixedFreqParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.FixedFreqParam();
    }

    public static zb.dcts.database.EquipmentDatabase.FixedFreqParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FixedFreqParam>
        PARSER = new com.google.protobuf.AbstractParser<FixedFreqParam>() {
      @java.lang.Override
      public FixedFreqParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FixedFreqParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FixedFreqParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FixedFreqParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.FixedFreqParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FreqHoppingParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.FreqHoppingParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return Whether the freqSpan field is set.
     */
    boolean hasFreqSpan();
    /**
     * <pre>
     *频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return The freqSpan.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan();
    /**
     * <pre>
     *频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder();

    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>double power = 2;</code>
     * @return The power.
     */
    double getPower();

    /**
     * <pre>
     *间隔
     * </pre>
     *
     * <code>double interval = 3;</code>
     * @return The interval.
     */
    double getInterval();

    /**
     * <pre>
     *频点个数
     * </pre>
     *
     * <code>int32 point_num = 4;</code>
     * @return The pointNum.
     */
    int getPointNum();
  }
  /**
   * <pre>
   * 跳频参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.FreqHoppingParam}
   */
  public static final class FreqHoppingParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.FreqHoppingParam)
      FreqHoppingParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FreqHoppingParam.newBuilder() to construct.
    private FreqHoppingParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FreqHoppingParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FreqHoppingParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FreqHoppingParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (freqSpan_ != null) {
                subBuilder = freqSpan_.toBuilder();
              }
              freqSpan_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqSpan_);
                freqSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 17: {

              power_ = input.readDouble();
              break;
            }
            case 25: {

              interval_ = input.readDouble();
              break;
            }
            case 32: {

              pointNum_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FreqHoppingParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FreqHoppingParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.FreqHoppingParam.class, zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder.class);
    }

    public static final int FREQ_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
    /**
     * <pre>
     *频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return Whether the freqSpan field is set.
     */
    @java.lang.Override
    public boolean hasFreqSpan() {
      return freqSpan_ != null;
    }
    /**
     * <pre>
     *频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return The freqSpan.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
      return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
    }
    /**
     * <pre>
     *频率范围
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
      return getFreqSpan();
    }

    public static final int POWER_FIELD_NUMBER = 2;
    private double power_;
    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>double power = 2;</code>
     * @return The power.
     */
    @java.lang.Override
    public double getPower() {
      return power_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 3;
    private double interval_;
    /**
     * <pre>
     *间隔
     * </pre>
     *
     * <code>double interval = 3;</code>
     * @return The interval.
     */
    @java.lang.Override
    public double getInterval() {
      return interval_;
    }

    public static final int POINT_NUM_FIELD_NUMBER = 4;
    private int pointNum_;
    /**
     * <pre>
     *频点个数
     * </pre>
     *
     * <code>int32 point_num = 4;</code>
     * @return The pointNum.
     */
    @java.lang.Override
    public int getPointNum() {
      return pointNum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (freqSpan_ != null) {
        output.writeMessage(1, getFreqSpan());
      }
      if (power_ != 0D) {
        output.writeDouble(2, power_);
      }
      if (interval_ != 0D) {
        output.writeDouble(3, interval_);
      }
      if (pointNum_ != 0) {
        output.writeInt32(4, pointNum_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freqSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFreqSpan());
      }
      if (power_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, power_);
      }
      if (interval_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, interval_);
      }
      if (pointNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, pointNum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.FreqHoppingParam)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.FreqHoppingParam other = (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) obj;

      if (hasFreqSpan() != other.hasFreqSpan()) return false;
      if (hasFreqSpan()) {
        if (!getFreqSpan()
            .equals(other.getFreqSpan())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getPower())
          != java.lang.Double.doubleToLongBits(
              other.getPower())) return false;
      if (java.lang.Double.doubleToLongBits(getInterval())
          != java.lang.Double.doubleToLongBits(
              other.getInterval())) return false;
      if (getPointNum()
          != other.getPointNum()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFreqSpan()) {
        hash = (37 * hash) + FREQ_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSpan().hashCode();
      }
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPower()));
      hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getInterval()));
      hash = (37 * hash) + POINT_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getPointNum();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.FreqHoppingParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 跳频参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.FreqHoppingParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.FreqHoppingParam)
        zb.dcts.database.EquipmentDatabase.FreqHoppingParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FreqHoppingParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FreqHoppingParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.FreqHoppingParam.class, zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.FreqHoppingParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }
        power_ = 0D;

        interval_ = 0D;

        pointNum_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_FreqHoppingParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FreqHoppingParam getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FreqHoppingParam build() {
        zb.dcts.database.EquipmentDatabase.FreqHoppingParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FreqHoppingParam buildPartial() {
        zb.dcts.database.EquipmentDatabase.FreqHoppingParam result = new zb.dcts.database.EquipmentDatabase.FreqHoppingParam(this);
        if (freqSpanBuilder_ == null) {
          result.freqSpan_ = freqSpan_;
        } else {
          result.freqSpan_ = freqSpanBuilder_.build();
        }
        result.power_ = power_;
        result.interval_ = interval_;
        result.pointNum_ = pointNum_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.FreqHoppingParam) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.FreqHoppingParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.FreqHoppingParam other) {
        if (other == zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance()) return this;
        if (other.hasFreqSpan()) {
          mergeFreqSpan(other.getFreqSpan());
        }
        if (other.getPower() != 0D) {
          setPower(other.getPower());
        }
        if (other.getInterval() != 0D) {
          setInterval(other.getInterval());
        }
        if (other.getPointNum() != 0) {
          setPointNum(other.getPointNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.FreqHoppingParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqSpanBuilder_;
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       * @return Whether the freqSpan field is set.
       */
      public boolean hasFreqSpan() {
        return freqSpanBuilder_ != null || freqSpan_ != null;
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       * @return The freqSpan.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
        if (freqSpanBuilder_ == null) {
          return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        } else {
          return freqSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder setFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqSpan_ = value;
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder setFreqSpan(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = builderForValue.build();
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder mergeFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (freqSpan_ != null) {
            freqSpan_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(freqSpan_).mergeFrom(value).buildPartial();
          } else {
            freqSpan_ = value;
          }
          onChanged();
        } else {
          freqSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder clearFreqSpan() {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
          onChanged();
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqSpanBuilder() {
        
        onChanged();
        return getFreqSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
        if (freqSpanBuilder_ != null) {
          return freqSpanBuilder_.getMessageOrBuilder();
        } else {
          return freqSpan_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        }
      }
      /**
       * <pre>
       *频率范围
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqSpanFieldBuilder() {
        if (freqSpanBuilder_ == null) {
          freqSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFreqSpan(),
                  getParentForChildren(),
                  isClean());
          freqSpan_ = null;
        }
        return freqSpanBuilder_;
      }

      private double power_ ;
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 2;</code>
       * @return The power.
       */
      @java.lang.Override
      public double getPower() {
        return power_;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 2;</code>
       * @param value The power to set.
       * @return This builder for chaining.
       */
      public Builder setPower(double value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPower() {
        
        power_ = 0D;
        onChanged();
        return this;
      }

      private double interval_ ;
      /**
       * <pre>
       *间隔
       * </pre>
       *
       * <code>double interval = 3;</code>
       * @return The interval.
       */
      @java.lang.Override
      public double getInterval() {
        return interval_;
      }
      /**
       * <pre>
       *间隔
       * </pre>
       *
       * <code>double interval = 3;</code>
       * @param value The interval to set.
       * @return This builder for chaining.
       */
      public Builder setInterval(double value) {
        
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *间隔
       * </pre>
       *
       * <code>double interval = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterval() {
        
        interval_ = 0D;
        onChanged();
        return this;
      }

      private int pointNum_ ;
      /**
       * <pre>
       *频点个数
       * </pre>
       *
       * <code>int32 point_num = 4;</code>
       * @return The pointNum.
       */
      @java.lang.Override
      public int getPointNum() {
        return pointNum_;
      }
      /**
       * <pre>
       *频点个数
       * </pre>
       *
       * <code>int32 point_num = 4;</code>
       * @param value The pointNum to set.
       * @return This builder for chaining.
       */
      public Builder setPointNum(int value) {
        
        pointNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频点个数
       * </pre>
       *
       * <code>int32 point_num = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointNum() {
        
        pointNum_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.FreqHoppingParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.FreqHoppingParam)
    private static final zb.dcts.database.EquipmentDatabase.FreqHoppingParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.FreqHoppingParam();
    }

    public static zb.dcts.database.EquipmentDatabase.FreqHoppingParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FreqHoppingParam>
        PARSER = new com.google.protobuf.AbstractParser<FreqHoppingParam>() {
      @java.lang.Override
      public FreqHoppingParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FreqHoppingParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FreqHoppingParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FreqHoppingParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.FreqHoppingParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChannelParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.ChannelParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *波道号
     * </pre>
     *
     * <code>int32 channel_id = 1;</code>
     * @return The channelId.
     */
    int getChannelId();

    /**
     * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
     * @return Whether the fixedFreqParam field is set.
     */
    boolean hasFixedFreqParam();
    /**
     * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
     * @return The fixedFreqParam.
     */
    zb.dcts.database.EquipmentDatabase.FixedFreqParam getFixedFreqParam();
    /**
     * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
     */
    zb.dcts.database.EquipmentDatabase.FixedFreqParamOrBuilder getFixedFreqParamOrBuilder();

    /**
     * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
     * @return Whether the freqHoppingParam field is set.
     */
    boolean hasFreqHoppingParam();
    /**
     * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
     * @return The freqHoppingParam.
     */
    zb.dcts.database.EquipmentDatabase.FreqHoppingParam getFreqHoppingParam();
    /**
     * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.FreqHoppingParamOrBuilder getFreqHoppingParamOrBuilder();

    public zb.dcts.database.EquipmentDatabase.ChannelParam.FreqParamCase getFreqParamCase();
  }
  /**
   * <pre>
   * 波道参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.ChannelParam}
   */
  public static final class ChannelParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.ChannelParam)
      ChannelParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChannelParam.newBuilder() to construct.
    private ChannelParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChannelParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChannelParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChannelParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              channelId_ = input.readInt32();
              break;
            }
            case 18: {
              zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder subBuilder = null;
              if (freqParamCase_ == 2) {
                subBuilder = ((zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_).toBuilder();
              }
              freqParam_ =
                  input.readMessage(zb.dcts.database.EquipmentDatabase.FixedFreqParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_);
                freqParam_ = subBuilder.buildPartial();
              }
              freqParamCase_ = 2;
              break;
            }
            case 26: {
              zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder subBuilder = null;
              if (freqParamCase_ == 3) {
                subBuilder = ((zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_).toBuilder();
              }
              freqParam_ =
                  input.readMessage(zb.dcts.database.EquipmentDatabase.FreqHoppingParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_);
                freqParam_ = subBuilder.buildPartial();
              }
              freqParamCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ChannelParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ChannelParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.ChannelParam.class, zb.dcts.database.EquipmentDatabase.ChannelParam.Builder.class);
    }

    private int freqParamCase_ = 0;
    private java.lang.Object freqParam_;
    public enum FreqParamCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      FIXED_FREQ_PARAM(2),
      FREQ_HOPPING_PARAM(3),
      FREQPARAM_NOT_SET(0);
      private final int value;
      private FreqParamCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FreqParamCase valueOf(int value) {
        return forNumber(value);
      }

      public static FreqParamCase forNumber(int value) {
        switch (value) {
          case 2: return FIXED_FREQ_PARAM;
          case 3: return FREQ_HOPPING_PARAM;
          case 0: return FREQPARAM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FreqParamCase
    getFreqParamCase() {
      return FreqParamCase.forNumber(
          freqParamCase_);
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_;
    /**
     * <pre>
     *波道号
     * </pre>
     *
     * <code>int32 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }

    public static final int FIXED_FREQ_PARAM_FIELD_NUMBER = 2;
    /**
     * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
     * @return Whether the fixedFreqParam field is set.
     */
    @java.lang.Override
    public boolean hasFixedFreqParam() {
      return freqParamCase_ == 2;
    }
    /**
     * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
     * @return The fixedFreqParam.
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.FixedFreqParam getFixedFreqParam() {
      if (freqParamCase_ == 2) {
         return (zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_;
      }
      return zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance();
    }
    /**
     * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.FixedFreqParamOrBuilder getFixedFreqParamOrBuilder() {
      if (freqParamCase_ == 2) {
         return (zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_;
      }
      return zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance();
    }

    public static final int FREQ_HOPPING_PARAM_FIELD_NUMBER = 3;
    /**
     * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
     * @return Whether the freqHoppingParam field is set.
     */
    @java.lang.Override
    public boolean hasFreqHoppingParam() {
      return freqParamCase_ == 3;
    }
    /**
     * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
     * @return The freqHoppingParam.
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.FreqHoppingParam getFreqHoppingParam() {
      if (freqParamCase_ == 3) {
         return (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_;
      }
      return zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance();
    }
    /**
     * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.FreqHoppingParamOrBuilder getFreqHoppingParamOrBuilder() {
      if (freqParamCase_ == 3) {
         return (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_;
      }
      return zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (channelId_ != 0) {
        output.writeInt32(1, channelId_);
      }
      if (freqParamCase_ == 2) {
        output.writeMessage(2, (zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_);
      }
      if (freqParamCase_ == 3) {
        output.writeMessage(3, (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (channelId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, channelId_);
      }
      if (freqParamCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_);
      }
      if (freqParamCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.ChannelParam)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.ChannelParam other = (zb.dcts.database.EquipmentDatabase.ChannelParam) obj;

      if (getChannelId()
          != other.getChannelId()) return false;
      if (!getFreqParamCase().equals(other.getFreqParamCase())) return false;
      switch (freqParamCase_) {
        case 2:
          if (!getFixedFreqParam()
              .equals(other.getFixedFreqParam())) return false;
          break;
        case 3:
          if (!getFreqHoppingParam()
              .equals(other.getFreqHoppingParam())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getChannelId();
      switch (freqParamCase_) {
        case 2:
          hash = (37 * hash) + FIXED_FREQ_PARAM_FIELD_NUMBER;
          hash = (53 * hash) + getFixedFreqParam().hashCode();
          break;
        case 3:
          hash = (37 * hash) + FREQ_HOPPING_PARAM_FIELD_NUMBER;
          hash = (53 * hash) + getFreqHoppingParam().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.ChannelParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.ChannelParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 波道参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.ChannelParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.ChannelParam)
        zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ChannelParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ChannelParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.ChannelParam.class, zb.dcts.database.EquipmentDatabase.ChannelParam.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.ChannelParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        channelId_ = 0;

        freqParamCase_ = 0;
        freqParam_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ChannelParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.ChannelParam getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.ChannelParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.ChannelParam build() {
        zb.dcts.database.EquipmentDatabase.ChannelParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.ChannelParam buildPartial() {
        zb.dcts.database.EquipmentDatabase.ChannelParam result = new zb.dcts.database.EquipmentDatabase.ChannelParam(this);
        result.channelId_ = channelId_;
        if (freqParamCase_ == 2) {
          if (fixedFreqParamBuilder_ == null) {
            result.freqParam_ = freqParam_;
          } else {
            result.freqParam_ = fixedFreqParamBuilder_.build();
          }
        }
        if (freqParamCase_ == 3) {
          if (freqHoppingParamBuilder_ == null) {
            result.freqParam_ = freqParam_;
          } else {
            result.freqParam_ = freqHoppingParamBuilder_.build();
          }
        }
        result.freqParamCase_ = freqParamCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.ChannelParam) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.ChannelParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.ChannelParam other) {
        if (other == zb.dcts.database.EquipmentDatabase.ChannelParam.getDefaultInstance()) return this;
        if (other.getChannelId() != 0) {
          setChannelId(other.getChannelId());
        }
        switch (other.getFreqParamCase()) {
          case FIXED_FREQ_PARAM: {
            mergeFixedFreqParam(other.getFixedFreqParam());
            break;
          }
          case FREQ_HOPPING_PARAM: {
            mergeFreqHoppingParam(other.getFreqHoppingParam());
            break;
          }
          case FREQPARAM_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.ChannelParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.ChannelParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int freqParamCase_ = 0;
      private java.lang.Object freqParam_;
      public FreqParamCase
          getFreqParamCase() {
        return FreqParamCase.forNumber(
            freqParamCase_);
      }

      public Builder clearFreqParam() {
        freqParamCase_ = 0;
        freqParam_ = null;
        onChanged();
        return this;
      }


      private int channelId_ ;
      /**
       * <pre>
       *波道号
       * </pre>
       *
       * <code>int32 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <pre>
       *波道号
       * </pre>
       *
       * <code>int32 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(int value) {
        
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *波道号
       * </pre>
       *
       * <code>int32 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        
        channelId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.FixedFreqParam, zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder, zb.dcts.database.EquipmentDatabase.FixedFreqParamOrBuilder> fixedFreqParamBuilder_;
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       * @return Whether the fixedFreqParam field is set.
       */
      @java.lang.Override
      public boolean hasFixedFreqParam() {
        return freqParamCase_ == 2;
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       * @return The fixedFreqParam.
       */
      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FixedFreqParam getFixedFreqParam() {
        if (fixedFreqParamBuilder_ == null) {
          if (freqParamCase_ == 2) {
            return (zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_;
          }
          return zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance();
        } else {
          if (freqParamCase_ == 2) {
            return fixedFreqParamBuilder_.getMessage();
          }
          return zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance();
        }
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       */
      public Builder setFixedFreqParam(zb.dcts.database.EquipmentDatabase.FixedFreqParam value) {
        if (fixedFreqParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqParam_ = value;
          onChanged();
        } else {
          fixedFreqParamBuilder_.setMessage(value);
        }
        freqParamCase_ = 2;
        return this;
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       */
      public Builder setFixedFreqParam(
          zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder builderForValue) {
        if (fixedFreqParamBuilder_ == null) {
          freqParam_ = builderForValue.build();
          onChanged();
        } else {
          fixedFreqParamBuilder_.setMessage(builderForValue.build());
        }
        freqParamCase_ = 2;
        return this;
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       */
      public Builder mergeFixedFreqParam(zb.dcts.database.EquipmentDatabase.FixedFreqParam value) {
        if (fixedFreqParamBuilder_ == null) {
          if (freqParamCase_ == 2 &&
              freqParam_ != zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance()) {
            freqParam_ = zb.dcts.database.EquipmentDatabase.FixedFreqParam.newBuilder((zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_)
                .mergeFrom(value).buildPartial();
          } else {
            freqParam_ = value;
          }
          onChanged();
        } else {
          if (freqParamCase_ == 2) {
            fixedFreqParamBuilder_.mergeFrom(value);
          }
          fixedFreqParamBuilder_.setMessage(value);
        }
        freqParamCase_ = 2;
        return this;
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       */
      public Builder clearFixedFreqParam() {
        if (fixedFreqParamBuilder_ == null) {
          if (freqParamCase_ == 2) {
            freqParamCase_ = 0;
            freqParam_ = null;
            onChanged();
          }
        } else {
          if (freqParamCase_ == 2) {
            freqParamCase_ = 0;
            freqParam_ = null;
          }
          fixedFreqParamBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder getFixedFreqParamBuilder() {
        return getFixedFreqParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       */
      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FixedFreqParamOrBuilder getFixedFreqParamOrBuilder() {
        if ((freqParamCase_ == 2) && (fixedFreqParamBuilder_ != null)) {
          return fixedFreqParamBuilder_.getMessageOrBuilder();
        } else {
          if (freqParamCase_ == 2) {
            return (zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_;
          }
          return zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance();
        }
      }
      /**
       * <code>.zb.dcts.database.FixedFreqParam fixed_freq_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.FixedFreqParam, zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder, zb.dcts.database.EquipmentDatabase.FixedFreqParamOrBuilder> 
          getFixedFreqParamFieldBuilder() {
        if (fixedFreqParamBuilder_ == null) {
          if (!(freqParamCase_ == 2)) {
            freqParam_ = zb.dcts.database.EquipmentDatabase.FixedFreqParam.getDefaultInstance();
          }
          fixedFreqParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.FixedFreqParam, zb.dcts.database.EquipmentDatabase.FixedFreqParam.Builder, zb.dcts.database.EquipmentDatabase.FixedFreqParamOrBuilder>(
                  (zb.dcts.database.EquipmentDatabase.FixedFreqParam) freqParam_,
                  getParentForChildren(),
                  isClean());
          freqParam_ = null;
        }
        freqParamCase_ = 2;
        onChanged();;
        return fixedFreqParamBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.FreqHoppingParam, zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder, zb.dcts.database.EquipmentDatabase.FreqHoppingParamOrBuilder> freqHoppingParamBuilder_;
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       * @return Whether the freqHoppingParam field is set.
       */
      @java.lang.Override
      public boolean hasFreqHoppingParam() {
        return freqParamCase_ == 3;
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       * @return The freqHoppingParam.
       */
      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FreqHoppingParam getFreqHoppingParam() {
        if (freqHoppingParamBuilder_ == null) {
          if (freqParamCase_ == 3) {
            return (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_;
          }
          return zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance();
        } else {
          if (freqParamCase_ == 3) {
            return freqHoppingParamBuilder_.getMessage();
          }
          return zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance();
        }
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       */
      public Builder setFreqHoppingParam(zb.dcts.database.EquipmentDatabase.FreqHoppingParam value) {
        if (freqHoppingParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqParam_ = value;
          onChanged();
        } else {
          freqHoppingParamBuilder_.setMessage(value);
        }
        freqParamCase_ = 3;
        return this;
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       */
      public Builder setFreqHoppingParam(
          zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder builderForValue) {
        if (freqHoppingParamBuilder_ == null) {
          freqParam_ = builderForValue.build();
          onChanged();
        } else {
          freqHoppingParamBuilder_.setMessage(builderForValue.build());
        }
        freqParamCase_ = 3;
        return this;
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       */
      public Builder mergeFreqHoppingParam(zb.dcts.database.EquipmentDatabase.FreqHoppingParam value) {
        if (freqHoppingParamBuilder_ == null) {
          if (freqParamCase_ == 3 &&
              freqParam_ != zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance()) {
            freqParam_ = zb.dcts.database.EquipmentDatabase.FreqHoppingParam.newBuilder((zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_)
                .mergeFrom(value).buildPartial();
          } else {
            freqParam_ = value;
          }
          onChanged();
        } else {
          if (freqParamCase_ == 3) {
            freqHoppingParamBuilder_.mergeFrom(value);
          }
          freqHoppingParamBuilder_.setMessage(value);
        }
        freqParamCase_ = 3;
        return this;
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       */
      public Builder clearFreqHoppingParam() {
        if (freqHoppingParamBuilder_ == null) {
          if (freqParamCase_ == 3) {
            freqParamCase_ = 0;
            freqParam_ = null;
            onChanged();
          }
        } else {
          if (freqParamCase_ == 3) {
            freqParamCase_ = 0;
            freqParam_ = null;
          }
          freqHoppingParamBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder getFreqHoppingParamBuilder() {
        return getFreqHoppingParamFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       */
      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.FreqHoppingParamOrBuilder getFreqHoppingParamOrBuilder() {
        if ((freqParamCase_ == 3) && (freqHoppingParamBuilder_ != null)) {
          return freqHoppingParamBuilder_.getMessageOrBuilder();
        } else {
          if (freqParamCase_ == 3) {
            return (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_;
          }
          return zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance();
        }
      }
      /**
       * <code>.zb.dcts.database.FreqHoppingParam freq_hopping_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.FreqHoppingParam, zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder, zb.dcts.database.EquipmentDatabase.FreqHoppingParamOrBuilder> 
          getFreqHoppingParamFieldBuilder() {
        if (freqHoppingParamBuilder_ == null) {
          if (!(freqParamCase_ == 3)) {
            freqParam_ = zb.dcts.database.EquipmentDatabase.FreqHoppingParam.getDefaultInstance();
          }
          freqHoppingParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.FreqHoppingParam, zb.dcts.database.EquipmentDatabase.FreqHoppingParam.Builder, zb.dcts.database.EquipmentDatabase.FreqHoppingParamOrBuilder>(
                  (zb.dcts.database.EquipmentDatabase.FreqHoppingParam) freqParam_,
                  getParentForChildren(),
                  isClean());
          freqParam_ = null;
        }
        freqParamCase_ = 3;
        onChanged();;
        return freqHoppingParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.ChannelParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.ChannelParam)
    private static final zb.dcts.database.EquipmentDatabase.ChannelParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.ChannelParam();
    }

    public static zb.dcts.database.EquipmentDatabase.ChannelParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChannelParam>
        PARSER = new com.google.protobuf.AbstractParser<ChannelParam>() {
      @java.lang.Override
      public ChannelParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChannelParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChannelParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChannelParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.ChannelParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BaseEquInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.BaseEquInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *装备id
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *装备名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     *装备名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *装备图片
     * </pre>
     *
     * <code>string pic = 3;</code>
     * @return The pic.
     */
    java.lang.String getPic();
    /**
     * <pre>
     *装备图片
     * </pre>
     *
     * <code>string pic = 3;</code>
     * @return The bytes for pic.
     */
    com.google.protobuf.ByteString
        getPicBytes();

    /**
     * <pre>
     *装备简介
     * </pre>
     *
     * <code>string synopsis = 4;</code>
     * @return The synopsis.
     */
    java.lang.String getSynopsis();
    /**
     * <pre>
     *装备简介
     * </pre>
     *
     * <code>string synopsis = 4;</code>
     * @return The bytes for synopsis.
     */
    com.google.protobuf.ByteString
        getSynopsisBytes();

    /**
     * <pre>
     *数据更新时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp update_time = 5;</code>
     * @return Whether the updateTime field is set.
     */
    boolean hasUpdateTime();
    /**
     * <pre>
     *数据更新时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp update_time = 5;</code>
     * @return The updateTime.
     */
    zb.dcts.Dcts.Timestamp getUpdateTime();
    /**
     * <pre>
     *数据更新时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp update_time = 5;</code>
     */
    zb.dcts.Dcts.TimestampOrBuilder getUpdateTimeOrBuilder();
  }
  /**
   * <pre>
   * 基础装备信息
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.BaseEquInfo}
   */
  public static final class BaseEquInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.BaseEquInfo)
      BaseEquInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BaseEquInfo.newBuilder() to construct.
    private BaseEquInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BaseEquInfo() {
      name_ = "";
      pic_ = "";
      synopsis_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BaseEquInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BaseEquInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              pic_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              synopsis_ = s;
              break;
            }
            case 42: {
              zb.dcts.Dcts.Timestamp.Builder subBuilder = null;
              if (updateTime_ != null) {
                subBuilder = updateTime_.toBuilder();
              }
              updateTime_ = input.readMessage(zb.dcts.Dcts.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateTime_);
                updateTime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_BaseEquInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_BaseEquInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.BaseEquInfo.class, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *装备id
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *装备名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *装备名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PIC_FIELD_NUMBER = 3;
    private volatile java.lang.Object pic_;
    /**
     * <pre>
     *装备图片
     * </pre>
     *
     * <code>string pic = 3;</code>
     * @return The pic.
     */
    @java.lang.Override
    public java.lang.String getPic() {
      java.lang.Object ref = pic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pic_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *装备图片
     * </pre>
     *
     * <code>string pic = 3;</code>
     * @return The bytes for pic.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPicBytes() {
      java.lang.Object ref = pic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYNOPSIS_FIELD_NUMBER = 4;
    private volatile java.lang.Object synopsis_;
    /**
     * <pre>
     *装备简介
     * </pre>
     *
     * <code>string synopsis = 4;</code>
     * @return The synopsis.
     */
    @java.lang.Override
    public java.lang.String getSynopsis() {
      java.lang.Object ref = synopsis_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        synopsis_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *装备简介
     * </pre>
     *
     * <code>string synopsis = 4;</code>
     * @return The bytes for synopsis.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSynopsisBytes() {
      java.lang.Object ref = synopsis_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        synopsis_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UPDATE_TIME_FIELD_NUMBER = 5;
    private zb.dcts.Dcts.Timestamp updateTime_;
    /**
     * <pre>
     *数据更新时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp update_time = 5;</code>
     * @return Whether the updateTime field is set.
     */
    @java.lang.Override
    public boolean hasUpdateTime() {
      return updateTime_ != null;
    }
    /**
     * <pre>
     *数据更新时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp update_time = 5;</code>
     * @return The updateTime.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Timestamp getUpdateTime() {
      return updateTime_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : updateTime_;
    }
    /**
     * <pre>
     *数据更新时间
     * </pre>
     *
     * <code>.zb.dcts.Timestamp update_time = 5;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimestampOrBuilder getUpdateTimeOrBuilder() {
      return getUpdateTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getPicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, pic_);
      }
      if (!getSynopsisBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, synopsis_);
      }
      if (updateTime_ != null) {
        output.writeMessage(5, getUpdateTime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getPicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, pic_);
      }
      if (!getSynopsisBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, synopsis_);
      }
      if (updateTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUpdateTime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.BaseEquInfo)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.BaseEquInfo other = (zb.dcts.database.EquipmentDatabase.BaseEquInfo) obj;

      if (getId()
          != other.getId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getPic()
          .equals(other.getPic())) return false;
      if (!getSynopsis()
          .equals(other.getSynopsis())) return false;
      if (hasUpdateTime() != other.hasUpdateTime()) return false;
      if (hasUpdateTime()) {
        if (!getUpdateTime()
            .equals(other.getUpdateTime())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PIC_FIELD_NUMBER;
      hash = (53 * hash) + getPic().hashCode();
      hash = (37 * hash) + SYNOPSIS_FIELD_NUMBER;
      hash = (53 * hash) + getSynopsis().hashCode();
      if (hasUpdateTime()) {
        hash = (37 * hash) + UPDATE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.BaseEquInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 基础装备信息
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.BaseEquInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.BaseEquInfo)
        zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_BaseEquInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_BaseEquInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.BaseEquInfo.class, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.BaseEquInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        name_ = "";

        pic_ = "";

        synopsis_ = "";

        if (updateTimeBuilder_ == null) {
          updateTime_ = null;
        } else {
          updateTime_ = null;
          updateTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_BaseEquInfo_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.BaseEquInfo getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.BaseEquInfo build() {
        zb.dcts.database.EquipmentDatabase.BaseEquInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.BaseEquInfo buildPartial() {
        zb.dcts.database.EquipmentDatabase.BaseEquInfo result = new zb.dcts.database.EquipmentDatabase.BaseEquInfo(this);
        result.id_ = id_;
        result.name_ = name_;
        result.pic_ = pic_;
        result.synopsis_ = synopsis_;
        if (updateTimeBuilder_ == null) {
          result.updateTime_ = updateTime_;
        } else {
          result.updateTime_ = updateTimeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.BaseEquInfo) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.BaseEquInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.BaseEquInfo other) {
        if (other == zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPic().isEmpty()) {
          pic_ = other.pic_;
          onChanged();
        }
        if (!other.getSynopsis().isEmpty()) {
          synopsis_ = other.synopsis_;
          onChanged();
        }
        if (other.hasUpdateTime()) {
          mergeUpdateTime(other.getUpdateTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.BaseEquInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.BaseEquInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *装备id
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *装备id
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备id
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *装备名称
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *装备名称
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *装备名称
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备名称
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备名称
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pic_ = "";
      /**
       * <pre>
       *装备图片
       * </pre>
       *
       * <code>string pic = 3;</code>
       * @return The pic.
       */
      public java.lang.String getPic() {
        java.lang.Object ref = pic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *装备图片
       * </pre>
       *
       * <code>string pic = 3;</code>
       * @return The bytes for pic.
       */
      public com.google.protobuf.ByteString
          getPicBytes() {
        java.lang.Object ref = pic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *装备图片
       * </pre>
       *
       * <code>string pic = 3;</code>
       * @param value The pic to set.
       * @return This builder for chaining.
       */
      public Builder setPic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备图片
       * </pre>
       *
       * <code>string pic = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPic() {
        
        pic_ = getDefaultInstance().getPic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备图片
       * </pre>
       *
       * <code>string pic = 3;</code>
       * @param value The bytes for pic to set.
       * @return This builder for chaining.
       */
      public Builder setPicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object synopsis_ = "";
      /**
       * <pre>
       *装备简介
       * </pre>
       *
       * <code>string synopsis = 4;</code>
       * @return The synopsis.
       */
      public java.lang.String getSynopsis() {
        java.lang.Object ref = synopsis_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          synopsis_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *装备简介
       * </pre>
       *
       * <code>string synopsis = 4;</code>
       * @return The bytes for synopsis.
       */
      public com.google.protobuf.ByteString
          getSynopsisBytes() {
        java.lang.Object ref = synopsis_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          synopsis_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *装备简介
       * </pre>
       *
       * <code>string synopsis = 4;</code>
       * @param value The synopsis to set.
       * @return This builder for chaining.
       */
      public Builder setSynopsis(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        synopsis_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备简介
       * </pre>
       *
       * <code>string synopsis = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSynopsis() {
        
        synopsis_ = getDefaultInstance().getSynopsis();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *装备简介
       * </pre>
       *
       * <code>string synopsis = 4;</code>
       * @param value The bytes for synopsis to set.
       * @return This builder for chaining.
       */
      public Builder setSynopsisBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        synopsis_ = value;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.Timestamp updateTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> updateTimeBuilder_;
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       * @return Whether the updateTime field is set.
       */
      public boolean hasUpdateTime() {
        return updateTimeBuilder_ != null || updateTime_ != null;
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       * @return The updateTime.
       */
      public zb.dcts.Dcts.Timestamp getUpdateTime() {
        if (updateTimeBuilder_ == null) {
          return updateTime_ == null ? zb.dcts.Dcts.Timestamp.getDefaultInstance() : updateTime_;
        } else {
          return updateTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       */
      public Builder setUpdateTime(zb.dcts.Dcts.Timestamp value) {
        if (updateTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateTime_ = value;
          onChanged();
        } else {
          updateTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       */
      public Builder setUpdateTime(
          zb.dcts.Dcts.Timestamp.Builder builderForValue) {
        if (updateTimeBuilder_ == null) {
          updateTime_ = builderForValue.build();
          onChanged();
        } else {
          updateTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       */
      public Builder mergeUpdateTime(zb.dcts.Dcts.Timestamp value) {
        if (updateTimeBuilder_ == null) {
          if (updateTime_ != null) {
            updateTime_ =
              zb.dcts.Dcts.Timestamp.newBuilder(updateTime_).mergeFrom(value).buildPartial();
          } else {
            updateTime_ = value;
          }
          onChanged();
        } else {
          updateTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       */
      public Builder clearUpdateTime() {
        if (updateTimeBuilder_ == null) {
          updateTime_ = null;
          onChanged();
        } else {
          updateTime_ = null;
          updateTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       */
      public zb.dcts.Dcts.Timestamp.Builder getUpdateTimeBuilder() {
        
        onChanged();
        return getUpdateTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       */
      public zb.dcts.Dcts.TimestampOrBuilder getUpdateTimeOrBuilder() {
        if (updateTimeBuilder_ != null) {
          return updateTimeBuilder_.getMessageOrBuilder();
        } else {
          return updateTime_ == null ?
              zb.dcts.Dcts.Timestamp.getDefaultInstance() : updateTime_;
        }
      }
      /**
       * <pre>
       *数据更新时间
       * </pre>
       *
       * <code>.zb.dcts.Timestamp update_time = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder> 
          getUpdateTimeFieldBuilder() {
        if (updateTimeBuilder_ == null) {
          updateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Timestamp, zb.dcts.Dcts.Timestamp.Builder, zb.dcts.Dcts.TimestampOrBuilder>(
                  getUpdateTime(),
                  getParentForChildren(),
                  isClean());
          updateTime_ = null;
        }
        return updateTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.BaseEquInfo)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.BaseEquInfo)
    private static final zb.dcts.database.EquipmentDatabase.BaseEquInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.BaseEquInfo();
    }

    public static zb.dcts.database.EquipmentDatabase.BaseEquInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BaseEquInfo>
        PARSER = new com.google.protobuf.AbstractParser<BaseEquInfo>() {
      @java.lang.Override
      public BaseEquInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseEquInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BaseEquInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BaseEquInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.BaseEquInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommEquInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.CommEquInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return Whether the baseInfo field is set.
     */
    boolean hasBaseInfo();
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return The baseInfo.
     */
    zb.dcts.database.EquipmentDatabase.BaseEquInfo getBaseInfo();
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     */
    zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder getBaseInfoOrBuilder();

    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    java.util.List<zb.dcts.database.EquipmentDatabase.ChannelParam> 
        getChannelParamList();
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    zb.dcts.database.EquipmentDatabase.ChannelParam getChannelParam(int index);
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    int getChannelParamCount();
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    java.util.List<? extends zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder> 
        getChannelParamOrBuilderList();
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder getChannelParamOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 通信装备信息
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.CommEquInfo}
   */
  public static final class CommEquInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.CommEquInfo)
      CommEquInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommEquInfo.newBuilder() to construct.
    private CommEquInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommEquInfo() {
      channelParam_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommEquInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommEquInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder subBuilder = null;
              if (baseInfo_ != null) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(zb.dcts.database.EquipmentDatabase.BaseEquInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                channelParam_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.ChannelParam>();
                mutable_bitField0_ |= 0x00000001;
              }
              channelParam_.add(
                  input.readMessage(zb.dcts.database.EquipmentDatabase.ChannelParam.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          channelParam_ = java.util.Collections.unmodifiableList(channelParam_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.CommEquInfo.class, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder.class);
    }

    public static final int BASE_INFO_FIELD_NUMBER = 1;
    private zb.dcts.database.EquipmentDatabase.BaseEquInfo baseInfo_;
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return Whether the baseInfo field is set.
     */
    @java.lang.Override
    public boolean hasBaseInfo() {
      return baseInfo_ != null;
    }
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return The baseInfo.
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.BaseEquInfo getBaseInfo() {
      return baseInfo_ == null ? zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance() : baseInfo_;
    }
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder getBaseInfoOrBuilder() {
      return getBaseInfo();
    }

    public static final int CHANNEL_PARAM_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.database.EquipmentDatabase.ChannelParam> channelParam_;
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.EquipmentDatabase.ChannelParam> getChannelParamList() {
      return channelParam_;
    }
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder> 
        getChannelParamOrBuilderList() {
      return channelParam_;
    }
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    @java.lang.Override
    public int getChannelParamCount() {
      return channelParam_.size();
    }
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.ChannelParam getChannelParam(int index) {
      return channelParam_.get(index);
    }
    /**
     * <pre>
     *装备参数(多波道)
     * </pre>
     *
     * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder getChannelParamOrBuilder(
        int index) {
      return channelParam_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseInfo_ != null) {
        output.writeMessage(1, getBaseInfo());
      }
      for (int i = 0; i < channelParam_.size(); i++) {
        output.writeMessage(2, channelParam_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseInfo());
      }
      for (int i = 0; i < channelParam_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, channelParam_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.CommEquInfo)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.CommEquInfo other = (zb.dcts.database.EquipmentDatabase.CommEquInfo) obj;

      if (hasBaseInfo() != other.hasBaseInfo()) return false;
      if (hasBaseInfo()) {
        if (!getBaseInfo()
            .equals(other.getBaseInfo())) return false;
      }
      if (!getChannelParamList()
          .equals(other.getChannelParamList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBaseInfo()) {
        hash = (37 * hash) + BASE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getBaseInfo().hashCode();
      }
      if (getChannelParamCount() > 0) {
        hash = (37 * hash) + CHANNEL_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getChannelParamList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.CommEquInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通信装备信息
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.CommEquInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.CommEquInfo)
        zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.CommEquInfo.class, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.CommEquInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChannelParamFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (baseInfoBuilder_ == null) {
          baseInfo_ = null;
        } else {
          baseInfo_ = null;
          baseInfoBuilder_ = null;
        }
        if (channelParamBuilder_ == null) {
          channelParam_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          channelParamBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfo_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfo getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.CommEquInfo.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfo build() {
        zb.dcts.database.EquipmentDatabase.CommEquInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfo buildPartial() {
        zb.dcts.database.EquipmentDatabase.CommEquInfo result = new zb.dcts.database.EquipmentDatabase.CommEquInfo(this);
        int from_bitField0_ = bitField0_;
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (channelParamBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            channelParam_ = java.util.Collections.unmodifiableList(channelParam_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.channelParam_ = channelParam_;
        } else {
          result.channelParam_ = channelParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.CommEquInfo) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.CommEquInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.CommEquInfo other) {
        if (other == zb.dcts.database.EquipmentDatabase.CommEquInfo.getDefaultInstance()) return this;
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (channelParamBuilder_ == null) {
          if (!other.channelParam_.isEmpty()) {
            if (channelParam_.isEmpty()) {
              channelParam_ = other.channelParam_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChannelParamIsMutable();
              channelParam_.addAll(other.channelParam_);
            }
            onChanged();
          }
        } else {
          if (!other.channelParam_.isEmpty()) {
            if (channelParamBuilder_.isEmpty()) {
              channelParamBuilder_.dispose();
              channelParamBuilder_ = null;
              channelParam_ = other.channelParam_;
              bitField0_ = (bitField0_ & ~0x00000001);
              channelParamBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChannelParamFieldBuilder() : null;
            } else {
              channelParamBuilder_.addAllMessages(other.channelParam_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.CommEquInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.CommEquInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private zb.dcts.database.EquipmentDatabase.BaseEquInfo baseInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.BaseEquInfo, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder, zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder> baseInfoBuilder_;
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       * @return Whether the baseInfo field is set.
       */
      public boolean hasBaseInfo() {
        return baseInfoBuilder_ != null || baseInfo_ != null;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       * @return The baseInfo.
       */
      public zb.dcts.database.EquipmentDatabase.BaseEquInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_ == null ? zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance() : baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder setBaseInfo(zb.dcts.database.EquipmentDatabase.BaseEquInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder setBaseInfo(
          zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder mergeBaseInfo(zb.dcts.database.EquipmentDatabase.BaseEquInfo value) {
        if (baseInfoBuilder_ == null) {
          if (baseInfo_ != null) {
            baseInfo_ =
              zb.dcts.database.EquipmentDatabase.BaseEquInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = null;
          onChanged();
        } else {
          baseInfo_ = null;
          baseInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder getBaseInfoBuilder() {
        
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_ == null ?
              zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance() : baseInfo_;
        }
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.BaseEquInfo, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder, zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.BaseEquInfo, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder, zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder>(
                  getBaseInfo(),
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      private java.util.List<zb.dcts.database.EquipmentDatabase.ChannelParam> channelParam_ =
        java.util.Collections.emptyList();
      private void ensureChannelParamIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          channelParam_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.ChannelParam>(channelParam_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.ChannelParam, zb.dcts.database.EquipmentDatabase.ChannelParam.Builder, zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder> channelParamBuilder_;

      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.ChannelParam> getChannelParamList() {
        if (channelParamBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channelParam_);
        } else {
          return channelParamBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public int getChannelParamCount() {
        if (channelParamBuilder_ == null) {
          return channelParam_.size();
        } else {
          return channelParamBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.ChannelParam getChannelParam(int index) {
        if (channelParamBuilder_ == null) {
          return channelParam_.get(index);
        } else {
          return channelParamBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder setChannelParam(
          int index, zb.dcts.database.EquipmentDatabase.ChannelParam value) {
        if (channelParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelParamIsMutable();
          channelParam_.set(index, value);
          onChanged();
        } else {
          channelParamBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder setChannelParam(
          int index, zb.dcts.database.EquipmentDatabase.ChannelParam.Builder builderForValue) {
        if (channelParamBuilder_ == null) {
          ensureChannelParamIsMutable();
          channelParam_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelParamBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder addChannelParam(zb.dcts.database.EquipmentDatabase.ChannelParam value) {
        if (channelParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelParamIsMutable();
          channelParam_.add(value);
          onChanged();
        } else {
          channelParamBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder addChannelParam(
          int index, zb.dcts.database.EquipmentDatabase.ChannelParam value) {
        if (channelParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelParamIsMutable();
          channelParam_.add(index, value);
          onChanged();
        } else {
          channelParamBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder addChannelParam(
          zb.dcts.database.EquipmentDatabase.ChannelParam.Builder builderForValue) {
        if (channelParamBuilder_ == null) {
          ensureChannelParamIsMutable();
          channelParam_.add(builderForValue.build());
          onChanged();
        } else {
          channelParamBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder addChannelParam(
          int index, zb.dcts.database.EquipmentDatabase.ChannelParam.Builder builderForValue) {
        if (channelParamBuilder_ == null) {
          ensureChannelParamIsMutable();
          channelParam_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelParamBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder addAllChannelParam(
          java.lang.Iterable<? extends zb.dcts.database.EquipmentDatabase.ChannelParam> values) {
        if (channelParamBuilder_ == null) {
          ensureChannelParamIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelParam_);
          onChanged();
        } else {
          channelParamBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder clearChannelParam() {
        if (channelParamBuilder_ == null) {
          channelParam_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          channelParamBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public Builder removeChannelParam(int index) {
        if (channelParamBuilder_ == null) {
          ensureChannelParamIsMutable();
          channelParam_.remove(index);
          onChanged();
        } else {
          channelParamBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.ChannelParam.Builder getChannelParamBuilder(
          int index) {
        return getChannelParamFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder getChannelParamOrBuilder(
          int index) {
        if (channelParamBuilder_ == null) {
          return channelParam_.get(index);  } else {
          return channelParamBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public java.util.List<? extends zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder> 
           getChannelParamOrBuilderList() {
        if (channelParamBuilder_ != null) {
          return channelParamBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channelParam_);
        }
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.ChannelParam.Builder addChannelParamBuilder() {
        return getChannelParamFieldBuilder().addBuilder(
            zb.dcts.database.EquipmentDatabase.ChannelParam.getDefaultInstance());
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.ChannelParam.Builder addChannelParamBuilder(
          int index) {
        return getChannelParamFieldBuilder().addBuilder(
            index, zb.dcts.database.EquipmentDatabase.ChannelParam.getDefaultInstance());
      }
      /**
       * <pre>
       *装备参数(多波道)
       * </pre>
       *
       * <code>repeated .zb.dcts.database.ChannelParam channel_param = 2;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.ChannelParam.Builder> 
           getChannelParamBuilderList() {
        return getChannelParamFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.ChannelParam, zb.dcts.database.EquipmentDatabase.ChannelParam.Builder, zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder> 
          getChannelParamFieldBuilder() {
        if (channelParamBuilder_ == null) {
          channelParamBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.ChannelParam, zb.dcts.database.EquipmentDatabase.ChannelParam.Builder, zb.dcts.database.EquipmentDatabase.ChannelParamOrBuilder>(
                  channelParam_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          channelParam_ = null;
        }
        return channelParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.CommEquInfo)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.CommEquInfo)
    private static final zb.dcts.database.EquipmentDatabase.CommEquInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.CommEquInfo();
    }

    public static zb.dcts.database.EquipmentDatabase.CommEquInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommEquInfo>
        PARSER = new com.google.protobuf.AbstractParser<CommEquInfo>() {
      @java.lang.Override
      public CommEquInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommEquInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommEquInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommEquInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommEquInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DisturbParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.DisturbParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *干扰类型
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
     * @return The enum numeric value on the wire for disturbType.
     */
    int getDisturbTypeValue();
    /**
     * <pre>
     *干扰类型
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
     * @return The disturbType.
     */
    zb.dcts.database.EquipmentDatabase.DisturbType getDisturbType();

    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>double freq = 2;</code>
     * @return The freq.
     */
    double getFreq();

    /**
     * <pre>
     *带宽
     * </pre>
     *
     * <code>double bandwidth = 3;</code>
     * @return The bandwidth.
     */
    double getBandwidth();

    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>double power = 4;</code>
     * @return The power.
     */
    double getPower();

    /**
     * <pre>
     *波束宽度(°)
     * </pre>
     *
     * <code>double beam_width = 5;</code>
     * @return The beamWidth.
     */
    double getBeamWidth();

    /**
     * <pre>
     *波束方位角朝向(°)
     * </pre>
     *
     * <code>double beam_yaw = 6;</code>
     * @return The beamYaw.
     */
    double getBeamYaw();

    /**
     * <pre>
     *天线高度
     * </pre>
     *
     * <code>double ant_height = 7;</code>
     * @return The antHeight.
     */
    double getAntHeight();

    /**
     * <pre>
     *天线增益
     * </pre>
     *
     * <code>double ant_gain = 8;</code>
     * @return The antGain.
     */
    double getAntGain();

    /**
     * <pre>
     *干扰最远距离
     * </pre>
     *
     * <code>double max_distance = 9;</code>
     * @return The maxDistance.
     */
    double getMaxDistance();
  }
  /**
   * <pre>
   * 干扰参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.DisturbParam}
   */
  public static final class DisturbParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.DisturbParam)
      DisturbParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DisturbParam.newBuilder() to construct.
    private DisturbParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DisturbParam() {
      disturbType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DisturbParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DisturbParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              disturbType_ = rawValue;
              break;
            }
            case 17: {

              freq_ = input.readDouble();
              break;
            }
            case 25: {

              bandwidth_ = input.readDouble();
              break;
            }
            case 33: {

              power_ = input.readDouble();
              break;
            }
            case 41: {

              beamWidth_ = input.readDouble();
              break;
            }
            case 49: {

              beamYaw_ = input.readDouble();
              break;
            }
            case 57: {

              antHeight_ = input.readDouble();
              break;
            }
            case 65: {

              antGain_ = input.readDouble();
              break;
            }
            case 73: {

              maxDistance_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DisturbParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DisturbParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.DisturbParam.class, zb.dcts.database.EquipmentDatabase.DisturbParam.Builder.class);
    }

    public static final int DISTURB_TYPE_FIELD_NUMBER = 1;
    private int disturbType_;
    /**
     * <pre>
     *干扰类型
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
     * @return The enum numeric value on the wire for disturbType.
     */
    @java.lang.Override public int getDisturbTypeValue() {
      return disturbType_;
    }
    /**
     * <pre>
     *干扰类型
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
     * @return The disturbType.
     */
    @java.lang.Override public zb.dcts.database.EquipmentDatabase.DisturbType getDisturbType() {
      @SuppressWarnings("deprecation")
      zb.dcts.database.EquipmentDatabase.DisturbType result = zb.dcts.database.EquipmentDatabase.DisturbType.valueOf(disturbType_);
      return result == null ? zb.dcts.database.EquipmentDatabase.DisturbType.UNRECOGNIZED : result;
    }

    public static final int FREQ_FIELD_NUMBER = 2;
    private double freq_;
    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>double freq = 2;</code>
     * @return The freq.
     */
    @java.lang.Override
    public double getFreq() {
      return freq_;
    }

    public static final int BANDWIDTH_FIELD_NUMBER = 3;
    private double bandwidth_;
    /**
     * <pre>
     *带宽
     * </pre>
     *
     * <code>double bandwidth = 3;</code>
     * @return The bandwidth.
     */
    @java.lang.Override
    public double getBandwidth() {
      return bandwidth_;
    }

    public static final int POWER_FIELD_NUMBER = 4;
    private double power_;
    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>double power = 4;</code>
     * @return The power.
     */
    @java.lang.Override
    public double getPower() {
      return power_;
    }

    public static final int BEAM_WIDTH_FIELD_NUMBER = 5;
    private double beamWidth_;
    /**
     * <pre>
     *波束宽度(°)
     * </pre>
     *
     * <code>double beam_width = 5;</code>
     * @return The beamWidth.
     */
    @java.lang.Override
    public double getBeamWidth() {
      return beamWidth_;
    }

    public static final int BEAM_YAW_FIELD_NUMBER = 6;
    private double beamYaw_;
    /**
     * <pre>
     *波束方位角朝向(°)
     * </pre>
     *
     * <code>double beam_yaw = 6;</code>
     * @return The beamYaw.
     */
    @java.lang.Override
    public double getBeamYaw() {
      return beamYaw_;
    }

    public static final int ANT_HEIGHT_FIELD_NUMBER = 7;
    private double antHeight_;
    /**
     * <pre>
     *天线高度
     * </pre>
     *
     * <code>double ant_height = 7;</code>
     * @return The antHeight.
     */
    @java.lang.Override
    public double getAntHeight() {
      return antHeight_;
    }

    public static final int ANT_GAIN_FIELD_NUMBER = 8;
    private double antGain_;
    /**
     * <pre>
     *天线增益
     * </pre>
     *
     * <code>double ant_gain = 8;</code>
     * @return The antGain.
     */
    @java.lang.Override
    public double getAntGain() {
      return antGain_;
    }

    public static final int MAX_DISTANCE_FIELD_NUMBER = 9;
    private double maxDistance_;
    /**
     * <pre>
     *干扰最远距离
     * </pre>
     *
     * <code>double max_distance = 9;</code>
     * @return The maxDistance.
     */
    @java.lang.Override
    public double getMaxDistance() {
      return maxDistance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (disturbType_ != zb.dcts.database.EquipmentDatabase.DisturbType.AIMING_DISTURB.getNumber()) {
        output.writeEnum(1, disturbType_);
      }
      if (freq_ != 0D) {
        output.writeDouble(2, freq_);
      }
      if (bandwidth_ != 0D) {
        output.writeDouble(3, bandwidth_);
      }
      if (power_ != 0D) {
        output.writeDouble(4, power_);
      }
      if (beamWidth_ != 0D) {
        output.writeDouble(5, beamWidth_);
      }
      if (beamYaw_ != 0D) {
        output.writeDouble(6, beamYaw_);
      }
      if (antHeight_ != 0D) {
        output.writeDouble(7, antHeight_);
      }
      if (antGain_ != 0D) {
        output.writeDouble(8, antGain_);
      }
      if (maxDistance_ != 0D) {
        output.writeDouble(9, maxDistance_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (disturbType_ != zb.dcts.database.EquipmentDatabase.DisturbType.AIMING_DISTURB.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, disturbType_);
      }
      if (freq_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, freq_);
      }
      if (bandwidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, bandwidth_);
      }
      if (power_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, power_);
      }
      if (beamWidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, beamWidth_);
      }
      if (beamYaw_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, beamYaw_);
      }
      if (antHeight_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, antHeight_);
      }
      if (antGain_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, antGain_);
      }
      if (maxDistance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, maxDistance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.DisturbParam)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.DisturbParam other = (zb.dcts.database.EquipmentDatabase.DisturbParam) obj;

      if (disturbType_ != other.disturbType_) return false;
      if (java.lang.Double.doubleToLongBits(getFreq())
          != java.lang.Double.doubleToLongBits(
              other.getFreq())) return false;
      if (java.lang.Double.doubleToLongBits(getBandwidth())
          != java.lang.Double.doubleToLongBits(
              other.getBandwidth())) return false;
      if (java.lang.Double.doubleToLongBits(getPower())
          != java.lang.Double.doubleToLongBits(
              other.getPower())) return false;
      if (java.lang.Double.doubleToLongBits(getBeamWidth())
          != java.lang.Double.doubleToLongBits(
              other.getBeamWidth())) return false;
      if (java.lang.Double.doubleToLongBits(getBeamYaw())
          != java.lang.Double.doubleToLongBits(
              other.getBeamYaw())) return false;
      if (java.lang.Double.doubleToLongBits(getAntHeight())
          != java.lang.Double.doubleToLongBits(
              other.getAntHeight())) return false;
      if (java.lang.Double.doubleToLongBits(getAntGain())
          != java.lang.Double.doubleToLongBits(
              other.getAntGain())) return false;
      if (java.lang.Double.doubleToLongBits(getMaxDistance())
          != java.lang.Double.doubleToLongBits(
              other.getMaxDistance())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DISTURB_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + disturbType_;
      hash = (37 * hash) + FREQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFreq()));
      hash = (37 * hash) + BANDWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBandwidth()));
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPower()));
      hash = (37 * hash) + BEAM_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBeamWidth()));
      hash = (37 * hash) + BEAM_YAW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBeamYaw()));
      hash = (37 * hash) + ANT_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAntHeight()));
      hash = (37 * hash) + ANT_GAIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAntGain()));
      hash = (37 * hash) + MAX_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxDistance()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.DisturbParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.DisturbParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 干扰参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.DisturbParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.DisturbParam)
        zb.dcts.database.EquipmentDatabase.DisturbParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DisturbParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DisturbParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.DisturbParam.class, zb.dcts.database.EquipmentDatabase.DisturbParam.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.DisturbParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        disturbType_ = 0;

        freq_ = 0D;

        bandwidth_ = 0D;

        power_ = 0D;

        beamWidth_ = 0D;

        beamYaw_ = 0D;

        antHeight_ = 0D;

        antGain_ = 0D;

        maxDistance_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DisturbParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.DisturbParam getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.DisturbParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.DisturbParam build() {
        zb.dcts.database.EquipmentDatabase.DisturbParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.DisturbParam buildPartial() {
        zb.dcts.database.EquipmentDatabase.DisturbParam result = new zb.dcts.database.EquipmentDatabase.DisturbParam(this);
        result.disturbType_ = disturbType_;
        result.freq_ = freq_;
        result.bandwidth_ = bandwidth_;
        result.power_ = power_;
        result.beamWidth_ = beamWidth_;
        result.beamYaw_ = beamYaw_;
        result.antHeight_ = antHeight_;
        result.antGain_ = antGain_;
        result.maxDistance_ = maxDistance_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.DisturbParam) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.DisturbParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.DisturbParam other) {
        if (other == zb.dcts.database.EquipmentDatabase.DisturbParam.getDefaultInstance()) return this;
        if (other.disturbType_ != 0) {
          setDisturbTypeValue(other.getDisturbTypeValue());
        }
        if (other.getFreq() != 0D) {
          setFreq(other.getFreq());
        }
        if (other.getBandwidth() != 0D) {
          setBandwidth(other.getBandwidth());
        }
        if (other.getPower() != 0D) {
          setPower(other.getPower());
        }
        if (other.getBeamWidth() != 0D) {
          setBeamWidth(other.getBeamWidth());
        }
        if (other.getBeamYaw() != 0D) {
          setBeamYaw(other.getBeamYaw());
        }
        if (other.getAntHeight() != 0D) {
          setAntHeight(other.getAntHeight());
        }
        if (other.getAntGain() != 0D) {
          setAntGain(other.getAntGain());
        }
        if (other.getMaxDistance() != 0D) {
          setMaxDistance(other.getMaxDistance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.DisturbParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.DisturbParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int disturbType_ = 0;
      /**
       * <pre>
       *干扰类型
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
       * @return The enum numeric value on the wire for disturbType.
       */
      @java.lang.Override public int getDisturbTypeValue() {
        return disturbType_;
      }
      /**
       * <pre>
       *干扰类型
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
       * @param value The enum numeric value on the wire for disturbType to set.
       * @return This builder for chaining.
       */
      public Builder setDisturbTypeValue(int value) {
        
        disturbType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰类型
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
       * @return The disturbType.
       */
      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.DisturbType getDisturbType() {
        @SuppressWarnings("deprecation")
        zb.dcts.database.EquipmentDatabase.DisturbType result = zb.dcts.database.EquipmentDatabase.DisturbType.valueOf(disturbType_);
        return result == null ? zb.dcts.database.EquipmentDatabase.DisturbType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *干扰类型
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
       * @param value The disturbType to set.
       * @return This builder for chaining.
       */
      public Builder setDisturbType(zb.dcts.database.EquipmentDatabase.DisturbType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        disturbType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰类型
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbType disturb_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisturbType() {
        
        disturbType_ = 0;
        onChanged();
        return this;
      }

      private double freq_ ;
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>double freq = 2;</code>
       * @return The freq.
       */
      @java.lang.Override
      public double getFreq() {
        return freq_;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>double freq = 2;</code>
       * @param value The freq to set.
       * @return This builder for chaining.
       */
      public Builder setFreq(double value) {
        
        freq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>double freq = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreq() {
        
        freq_ = 0D;
        onChanged();
        return this;
      }

      private double bandwidth_ ;
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 3;</code>
       * @return The bandwidth.
       */
      @java.lang.Override
      public double getBandwidth() {
        return bandwidth_;
      }
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 3;</code>
       * @param value The bandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setBandwidth(double value) {
        
        bandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBandwidth() {
        
        bandwidth_ = 0D;
        onChanged();
        return this;
      }

      private double power_ ;
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 4;</code>
       * @return The power.
       */
      @java.lang.Override
      public double getPower() {
        return power_;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 4;</code>
       * @param value The power to set.
       * @return This builder for chaining.
       */
      public Builder setPower(double value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>double power = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPower() {
        
        power_ = 0D;
        onChanged();
        return this;
      }

      private double beamWidth_ ;
      /**
       * <pre>
       *波束宽度(°)
       * </pre>
       *
       * <code>double beam_width = 5;</code>
       * @return The beamWidth.
       */
      @java.lang.Override
      public double getBeamWidth() {
        return beamWidth_;
      }
      /**
       * <pre>
       *波束宽度(°)
       * </pre>
       *
       * <code>double beam_width = 5;</code>
       * @param value The beamWidth to set.
       * @return This builder for chaining.
       */
      public Builder setBeamWidth(double value) {
        
        beamWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *波束宽度(°)
       * </pre>
       *
       * <code>double beam_width = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBeamWidth() {
        
        beamWidth_ = 0D;
        onChanged();
        return this;
      }

      private double beamYaw_ ;
      /**
       * <pre>
       *波束方位角朝向(°)
       * </pre>
       *
       * <code>double beam_yaw = 6;</code>
       * @return The beamYaw.
       */
      @java.lang.Override
      public double getBeamYaw() {
        return beamYaw_;
      }
      /**
       * <pre>
       *波束方位角朝向(°)
       * </pre>
       *
       * <code>double beam_yaw = 6;</code>
       * @param value The beamYaw to set.
       * @return This builder for chaining.
       */
      public Builder setBeamYaw(double value) {
        
        beamYaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *波束方位角朝向(°)
       * </pre>
       *
       * <code>double beam_yaw = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearBeamYaw() {
        
        beamYaw_ = 0D;
        onChanged();
        return this;
      }

      private double antHeight_ ;
      /**
       * <pre>
       *天线高度
       * </pre>
       *
       * <code>double ant_height = 7;</code>
       * @return The antHeight.
       */
      @java.lang.Override
      public double getAntHeight() {
        return antHeight_;
      }
      /**
       * <pre>
       *天线高度
       * </pre>
       *
       * <code>double ant_height = 7;</code>
       * @param value The antHeight to set.
       * @return This builder for chaining.
       */
      public Builder setAntHeight(double value) {
        
        antHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *天线高度
       * </pre>
       *
       * <code>double ant_height = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAntHeight() {
        
        antHeight_ = 0D;
        onChanged();
        return this;
      }

      private double antGain_ ;
      /**
       * <pre>
       *天线增益
       * </pre>
       *
       * <code>double ant_gain = 8;</code>
       * @return The antGain.
       */
      @java.lang.Override
      public double getAntGain() {
        return antGain_;
      }
      /**
       * <pre>
       *天线增益
       * </pre>
       *
       * <code>double ant_gain = 8;</code>
       * @param value The antGain to set.
       * @return This builder for chaining.
       */
      public Builder setAntGain(double value) {
        
        antGain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *天线增益
       * </pre>
       *
       * <code>double ant_gain = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAntGain() {
        
        antGain_ = 0D;
        onChanged();
        return this;
      }

      private double maxDistance_ ;
      /**
       * <pre>
       *干扰最远距离
       * </pre>
       *
       * <code>double max_distance = 9;</code>
       * @return The maxDistance.
       */
      @java.lang.Override
      public double getMaxDistance() {
        return maxDistance_;
      }
      /**
       * <pre>
       *干扰最远距离
       * </pre>
       *
       * <code>double max_distance = 9;</code>
       * @param value The maxDistance to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDistance(double value) {
        
        maxDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰最远距离
       * </pre>
       *
       * <code>double max_distance = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDistance() {
        
        maxDistance_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.DisturbParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.DisturbParam)
    private static final zb.dcts.database.EquipmentDatabase.DisturbParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.DisturbParam();
    }

    public static zb.dcts.database.EquipmentDatabase.DisturbParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DisturbParam>
        PARSER = new com.google.protobuf.AbstractParser<DisturbParam>() {
      @java.lang.Override
      public DisturbParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DisturbParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DisturbParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DisturbParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.DisturbParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScoutParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.ScoutParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *侦察频段
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return Whether the freqSpan field is set.
     */
    boolean hasFreqSpan();
    /**
     * <pre>
     *侦察频段
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return The freqSpan.
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan();
    /**
     * <pre>
     *侦察频段
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     */
    zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder();

    /**
     * <pre>
     *侦察最远距离
     * </pre>
     *
     * <code>double max_distance = 2;</code>
     * @return The maxDistance.
     */
    double getMaxDistance();
  }
  /**
   * <pre>
   * 侦察参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.ScoutParam}
   */
  public static final class ScoutParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.ScoutParam)
      ScoutParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScoutParam.newBuilder() to construct.
    private ScoutParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScoutParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScoutParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScoutParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder subBuilder = null;
              if (freqSpan_ != null) {
                subBuilder = freqSpan_.toBuilder();
              }
              freqSpan_ = input.readMessage(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(freqSpan_);
                freqSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 17: {

              maxDistance_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ScoutParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ScoutParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.ScoutParam.class, zb.dcts.database.EquipmentDatabase.ScoutParam.Builder.class);
    }

    public static final int FREQ_SPAN_FIELD_NUMBER = 1;
    private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
    /**
     * <pre>
     *侦察频段
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return Whether the freqSpan field is set.
     */
    @java.lang.Override
    public boolean hasFreqSpan() {
      return freqSpan_ != null;
    }
    /**
     * <pre>
     *侦察频段
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     * @return The freqSpan.
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
      return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
    }
    /**
     * <pre>
     *侦察频段
     * </pre>
     *
     * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
      return getFreqSpan();
    }

    public static final int MAX_DISTANCE_FIELD_NUMBER = 2;
    private double maxDistance_;
    /**
     * <pre>
     *侦察最远距离
     * </pre>
     *
     * <code>double max_distance = 2;</code>
     * @return The maxDistance.
     */
    @java.lang.Override
    public double getMaxDistance() {
      return maxDistance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (freqSpan_ != null) {
        output.writeMessage(1, getFreqSpan());
      }
      if (maxDistance_ != 0D) {
        output.writeDouble(2, maxDistance_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (freqSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFreqSpan());
      }
      if (maxDistance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, maxDistance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.ScoutParam)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.ScoutParam other = (zb.dcts.database.EquipmentDatabase.ScoutParam) obj;

      if (hasFreqSpan() != other.hasFreqSpan()) return false;
      if (hasFreqSpan()) {
        if (!getFreqSpan()
            .equals(other.getFreqSpan())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getMaxDistance())
          != java.lang.Double.doubleToLongBits(
              other.getMaxDistance())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFreqSpan()) {
        hash = (37 * hash) + FREQ_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSpan().hashCode();
      }
      hash = (37 * hash) + MAX_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxDistance()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.ScoutParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.ScoutParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 侦察参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.ScoutParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.ScoutParam)
        zb.dcts.database.EquipmentDatabase.ScoutParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ScoutParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ScoutParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.ScoutParam.class, zb.dcts.database.EquipmentDatabase.ScoutParam.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.ScoutParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }
        maxDistance_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_ScoutParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.ScoutParam getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.ScoutParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.ScoutParam build() {
        zb.dcts.database.EquipmentDatabase.ScoutParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.ScoutParam buildPartial() {
        zb.dcts.database.EquipmentDatabase.ScoutParam result = new zb.dcts.database.EquipmentDatabase.ScoutParam(this);
        if (freqSpanBuilder_ == null) {
          result.freqSpan_ = freqSpan_;
        } else {
          result.freqSpan_ = freqSpanBuilder_.build();
        }
        result.maxDistance_ = maxDistance_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.ScoutParam) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.ScoutParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.ScoutParam other) {
        if (other == zb.dcts.database.EquipmentDatabase.ScoutParam.getDefaultInstance()) return this;
        if (other.hasFreqSpan()) {
          mergeFreqSpan(other.getFreqSpan());
        }
        if (other.getMaxDistance() != 0D) {
          setMaxDistance(other.getMaxDistance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.ScoutParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.ScoutParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.spectrum.Spectrum.FrequencySpan freqSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> freqSpanBuilder_;
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       * @return Whether the freqSpan field is set.
       */
      public boolean hasFreqSpan() {
        return freqSpanBuilder_ != null || freqSpan_ != null;
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       * @return The freqSpan.
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan getFreqSpan() {
        if (freqSpanBuilder_ == null) {
          return freqSpan_ == null ? zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        } else {
          return freqSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder setFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          freqSpan_ = value;
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder setFreqSpan(
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder builderForValue) {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = builderForValue.build();
          onChanged();
        } else {
          freqSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder mergeFreqSpan(zb.dcts.scenario.spectrum.Spectrum.FrequencySpan value) {
        if (freqSpanBuilder_ == null) {
          if (freqSpan_ != null) {
            freqSpan_ =
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.newBuilder(freqSpan_).mergeFrom(value).buildPartial();
          } else {
            freqSpan_ = value;
          }
          onChanged();
        } else {
          freqSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public Builder clearFreqSpan() {
        if (freqSpanBuilder_ == null) {
          freqSpan_ = null;
          onChanged();
        } else {
          freqSpan_ = null;
          freqSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder getFreqSpanBuilder() {
        
        onChanged();
        return getFreqSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      public zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder getFreqSpanOrBuilder() {
        if (freqSpanBuilder_ != null) {
          return freqSpanBuilder_.getMessageOrBuilder();
        } else {
          return freqSpan_ == null ?
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.getDefaultInstance() : freqSpan_;
        }
      }
      /**
       * <pre>
       *侦察频段
       * </pre>
       *
       * <code>.zb.dcts.scenario.spectrum.FrequencySpan freq_span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder> 
          getFreqSpanFieldBuilder() {
        if (freqSpanBuilder_ == null) {
          freqSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.spectrum.Spectrum.FrequencySpan, zb.dcts.scenario.spectrum.Spectrum.FrequencySpan.Builder, zb.dcts.scenario.spectrum.Spectrum.FrequencySpanOrBuilder>(
                  getFreqSpan(),
                  getParentForChildren(),
                  isClean());
          freqSpan_ = null;
        }
        return freqSpanBuilder_;
      }

      private double maxDistance_ ;
      /**
       * <pre>
       *侦察最远距离
       * </pre>
       *
       * <code>double max_distance = 2;</code>
       * @return The maxDistance.
       */
      @java.lang.Override
      public double getMaxDistance() {
        return maxDistance_;
      }
      /**
       * <pre>
       *侦察最远距离
       * </pre>
       *
       * <code>double max_distance = 2;</code>
       * @param value The maxDistance to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDistance(double value) {
        
        maxDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *侦察最远距离
       * </pre>
       *
       * <code>double max_distance = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDistance() {
        
        maxDistance_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.ScoutParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.ScoutParam)
    private static final zb.dcts.database.EquipmentDatabase.ScoutParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.ScoutParam();
    }

    public static zb.dcts.database.EquipmentDatabase.ScoutParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScoutParam>
        PARSER = new com.google.protobuf.AbstractParser<ScoutParam>() {
      @java.lang.Override
      public ScoutParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScoutParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScoutParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScoutParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.ScoutParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DirectionFindingParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.DirectionFindingParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *是否具备测向能力
     * </pre>
     *
     * <code>bool is_direction_finding = 1;</code>
     * @return The isDirectionFinding.
     */
    boolean getIsDirectionFinding();

    /**
     * <pre>
     *测向精度	
     * </pre>
     *
     * <code>double accuracy = 2;</code>
     * @return The accuracy.
     */
    double getAccuracy();
  }
  /**
   * <pre>
   * 测向参数
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.DirectionFindingParam}
   */
  public static final class DirectionFindingParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.DirectionFindingParam)
      DirectionFindingParamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DirectionFindingParam.newBuilder() to construct.
    private DirectionFindingParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DirectionFindingParam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DirectionFindingParam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DirectionFindingParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              isDirectionFinding_ = input.readBool();
              break;
            }
            case 17: {

              accuracy_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DirectionFindingParam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DirectionFindingParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.DirectionFindingParam.class, zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder.class);
    }

    public static final int IS_DIRECTION_FINDING_FIELD_NUMBER = 1;
    private boolean isDirectionFinding_;
    /**
     * <pre>
     *是否具备测向能力
     * </pre>
     *
     * <code>bool is_direction_finding = 1;</code>
     * @return The isDirectionFinding.
     */
    @java.lang.Override
    public boolean getIsDirectionFinding() {
      return isDirectionFinding_;
    }

    public static final int ACCURACY_FIELD_NUMBER = 2;
    private double accuracy_;
    /**
     * <pre>
     *测向精度	
     * </pre>
     *
     * <code>double accuracy = 2;</code>
     * @return The accuracy.
     */
    @java.lang.Override
    public double getAccuracy() {
      return accuracy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isDirectionFinding_ != false) {
        output.writeBool(1, isDirectionFinding_);
      }
      if (accuracy_ != 0D) {
        output.writeDouble(2, accuracy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isDirectionFinding_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isDirectionFinding_);
      }
      if (accuracy_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, accuracy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.DirectionFindingParam)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.DirectionFindingParam other = (zb.dcts.database.EquipmentDatabase.DirectionFindingParam) obj;

      if (getIsDirectionFinding()
          != other.getIsDirectionFinding()) return false;
      if (java.lang.Double.doubleToLongBits(getAccuracy())
          != java.lang.Double.doubleToLongBits(
              other.getAccuracy())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IS_DIRECTION_FINDING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsDirectionFinding());
      hash = (37 * hash) + ACCURACY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAccuracy()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.DirectionFindingParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 测向参数
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.DirectionFindingParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.DirectionFindingParam)
        zb.dcts.database.EquipmentDatabase.DirectionFindingParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DirectionFindingParam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DirectionFindingParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.DirectionFindingParam.class, zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.DirectionFindingParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        isDirectionFinding_ = false;

        accuracy_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_DirectionFindingParam_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.DirectionFindingParam getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.DirectionFindingParam.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.DirectionFindingParam build() {
        zb.dcts.database.EquipmentDatabase.DirectionFindingParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.DirectionFindingParam buildPartial() {
        zb.dcts.database.EquipmentDatabase.DirectionFindingParam result = new zb.dcts.database.EquipmentDatabase.DirectionFindingParam(this);
        result.isDirectionFinding_ = isDirectionFinding_;
        result.accuracy_ = accuracy_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.DirectionFindingParam) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.DirectionFindingParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.DirectionFindingParam other) {
        if (other == zb.dcts.database.EquipmentDatabase.DirectionFindingParam.getDefaultInstance()) return this;
        if (other.getIsDirectionFinding() != false) {
          setIsDirectionFinding(other.getIsDirectionFinding());
        }
        if (other.getAccuracy() != 0D) {
          setAccuracy(other.getAccuracy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.DirectionFindingParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.DirectionFindingParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean isDirectionFinding_ ;
      /**
       * <pre>
       *是否具备测向能力
       * </pre>
       *
       * <code>bool is_direction_finding = 1;</code>
       * @return The isDirectionFinding.
       */
      @java.lang.Override
      public boolean getIsDirectionFinding() {
        return isDirectionFinding_;
      }
      /**
       * <pre>
       *是否具备测向能力
       * </pre>
       *
       * <code>bool is_direction_finding = 1;</code>
       * @param value The isDirectionFinding to set.
       * @return This builder for chaining.
       */
      public Builder setIsDirectionFinding(boolean value) {
        
        isDirectionFinding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否具备测向能力
       * </pre>
       *
       * <code>bool is_direction_finding = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsDirectionFinding() {
        
        isDirectionFinding_ = false;
        onChanged();
        return this;
      }

      private double accuracy_ ;
      /**
       * <pre>
       *测向精度	
       * </pre>
       *
       * <code>double accuracy = 2;</code>
       * @return The accuracy.
       */
      @java.lang.Override
      public double getAccuracy() {
        return accuracy_;
      }
      /**
       * <pre>
       *测向精度	
       * </pre>
       *
       * <code>double accuracy = 2;</code>
       * @param value The accuracy to set.
       * @return This builder for chaining.
       */
      public Builder setAccuracy(double value) {
        
        accuracy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *测向精度	
       * </pre>
       *
       * <code>double accuracy = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccuracy() {
        
        accuracy_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.DirectionFindingParam)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.DirectionFindingParam)
    private static final zb.dcts.database.EquipmentDatabase.DirectionFindingParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.DirectionFindingParam();
    }

    public static zb.dcts.database.EquipmentDatabase.DirectionFindingParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DirectionFindingParam>
        PARSER = new com.google.protobuf.AbstractParser<DirectionFindingParam>() {
      @java.lang.Override
      public DirectionFindingParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DirectionFindingParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DirectionFindingParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DirectionFindingParam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.DirectionFindingParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommCounterEquInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.CommCounterEquInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return Whether the baseInfo field is set.
     */
    boolean hasBaseInfo();
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return The baseInfo.
     */
    zb.dcts.database.EquipmentDatabase.BaseEquInfo getBaseInfo();
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     */
    zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder getBaseInfoOrBuilder();

    /**
     * <pre>
     *干扰参数
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
     * @return Whether the disturbParam field is set.
     */
    boolean hasDisturbParam();
    /**
     * <pre>
     *干扰参数
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
     * @return The disturbParam.
     */
    zb.dcts.database.EquipmentDatabase.DisturbParam getDisturbParam();
    /**
     * <pre>
     *干扰参数
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
     */
    zb.dcts.database.EquipmentDatabase.DisturbParamOrBuilder getDisturbParamOrBuilder();

    /**
     * <pre>
     *侦察参数
     * </pre>
     *
     * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
     * @return Whether the scoutParam field is set.
     */
    boolean hasScoutParam();
    /**
     * <pre>
     *侦察参数
     * </pre>
     *
     * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
     * @return The scoutParam.
     */
    zb.dcts.database.EquipmentDatabase.ScoutParam getScoutParam();
    /**
     * <pre>
     *侦察参数
     * </pre>
     *
     * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.ScoutParamOrBuilder getScoutParamOrBuilder();

    /**
     * <pre>
     *测向参数
     * </pre>
     *
     * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
     * @return Whether the dfParam field is set.
     */
    boolean hasDfParam();
    /**
     * <pre>
     *测向参数
     * </pre>
     *
     * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
     * @return The dfParam.
     */
    zb.dcts.database.EquipmentDatabase.DirectionFindingParam getDfParam();
    /**
     * <pre>
     *测向参数
     * </pre>
     *
     * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
     */
    zb.dcts.database.EquipmentDatabase.DirectionFindingParamOrBuilder getDfParamOrBuilder();
  }
  /**
   * <pre>
   * 通信对抗装备信息
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.CommCounterEquInfo}
   */
  public static final class CommCounterEquInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.CommCounterEquInfo)
      CommCounterEquInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommCounterEquInfo.newBuilder() to construct.
    private CommCounterEquInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommCounterEquInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommCounterEquInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommCounterEquInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder subBuilder = null;
              if (baseInfo_ != null) {
                subBuilder = baseInfo_.toBuilder();
              }
              baseInfo_ = input.readMessage(zb.dcts.database.EquipmentDatabase.BaseEquInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseInfo_);
                baseInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.database.EquipmentDatabase.DisturbParam.Builder subBuilder = null;
              if (disturbParam_ != null) {
                subBuilder = disturbParam_.toBuilder();
              }
              disturbParam_ = input.readMessage(zb.dcts.database.EquipmentDatabase.DisturbParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(disturbParam_);
                disturbParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              zb.dcts.database.EquipmentDatabase.ScoutParam.Builder subBuilder = null;
              if (scoutParam_ != null) {
                subBuilder = scoutParam_.toBuilder();
              }
              scoutParam_ = input.readMessage(zb.dcts.database.EquipmentDatabase.ScoutParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(scoutParam_);
                scoutParam_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder subBuilder = null;
              if (dfParam_ != null) {
                subBuilder = dfParam_.toBuilder();
              }
              dfParam_ = input.readMessage(zb.dcts.database.EquipmentDatabase.DirectionFindingParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dfParam_);
                dfParam_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.class, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder.class);
    }

    public static final int BASE_INFO_FIELD_NUMBER = 1;
    private zb.dcts.database.EquipmentDatabase.BaseEquInfo baseInfo_;
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return Whether the baseInfo field is set.
     */
    @java.lang.Override
    public boolean hasBaseInfo() {
      return baseInfo_ != null;
    }
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     * @return The baseInfo.
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.BaseEquInfo getBaseInfo() {
      return baseInfo_ == null ? zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance() : baseInfo_;
    }
    /**
     * <pre>
     *基本信息
     * </pre>
     *
     * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder getBaseInfoOrBuilder() {
      return getBaseInfo();
    }

    public static final int DISTURB_PARAM_FIELD_NUMBER = 2;
    private zb.dcts.database.EquipmentDatabase.DisturbParam disturbParam_;
    /**
     * <pre>
     *干扰参数
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
     * @return Whether the disturbParam field is set.
     */
    @java.lang.Override
    public boolean hasDisturbParam() {
      return disturbParam_ != null;
    }
    /**
     * <pre>
     *干扰参数
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
     * @return The disturbParam.
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.DisturbParam getDisturbParam() {
      return disturbParam_ == null ? zb.dcts.database.EquipmentDatabase.DisturbParam.getDefaultInstance() : disturbParam_;
    }
    /**
     * <pre>
     *干扰参数
     * </pre>
     *
     * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.DisturbParamOrBuilder getDisturbParamOrBuilder() {
      return getDisturbParam();
    }

    public static final int SCOUT_PARAM_FIELD_NUMBER = 3;
    private zb.dcts.database.EquipmentDatabase.ScoutParam scoutParam_;
    /**
     * <pre>
     *侦察参数
     * </pre>
     *
     * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
     * @return Whether the scoutParam field is set.
     */
    @java.lang.Override
    public boolean hasScoutParam() {
      return scoutParam_ != null;
    }
    /**
     * <pre>
     *侦察参数
     * </pre>
     *
     * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
     * @return The scoutParam.
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.ScoutParam getScoutParam() {
      return scoutParam_ == null ? zb.dcts.database.EquipmentDatabase.ScoutParam.getDefaultInstance() : scoutParam_;
    }
    /**
     * <pre>
     *侦察参数
     * </pre>
     *
     * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.ScoutParamOrBuilder getScoutParamOrBuilder() {
      return getScoutParam();
    }

    public static final int DF_PARAM_FIELD_NUMBER = 4;
    private zb.dcts.database.EquipmentDatabase.DirectionFindingParam dfParam_;
    /**
     * <pre>
     *测向参数
     * </pre>
     *
     * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
     * @return Whether the dfParam field is set.
     */
    @java.lang.Override
    public boolean hasDfParam() {
      return dfParam_ != null;
    }
    /**
     * <pre>
     *测向参数
     * </pre>
     *
     * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
     * @return The dfParam.
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.DirectionFindingParam getDfParam() {
      return dfParam_ == null ? zb.dcts.database.EquipmentDatabase.DirectionFindingParam.getDefaultInstance() : dfParam_;
    }
    /**
     * <pre>
     *测向参数
     * </pre>
     *
     * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.DirectionFindingParamOrBuilder getDfParamOrBuilder() {
      return getDfParam();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseInfo_ != null) {
        output.writeMessage(1, getBaseInfo());
      }
      if (disturbParam_ != null) {
        output.writeMessage(2, getDisturbParam());
      }
      if (scoutParam_ != null) {
        output.writeMessage(3, getScoutParam());
      }
      if (dfParam_ != null) {
        output.writeMessage(4, getDfParam());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseInfo());
      }
      if (disturbParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDisturbParam());
      }
      if (scoutParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getScoutParam());
      }
      if (dfParam_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDfParam());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.CommCounterEquInfo)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.CommCounterEquInfo other = (zb.dcts.database.EquipmentDatabase.CommCounterEquInfo) obj;

      if (hasBaseInfo() != other.hasBaseInfo()) return false;
      if (hasBaseInfo()) {
        if (!getBaseInfo()
            .equals(other.getBaseInfo())) return false;
      }
      if (hasDisturbParam() != other.hasDisturbParam()) return false;
      if (hasDisturbParam()) {
        if (!getDisturbParam()
            .equals(other.getDisturbParam())) return false;
      }
      if (hasScoutParam() != other.hasScoutParam()) return false;
      if (hasScoutParam()) {
        if (!getScoutParam()
            .equals(other.getScoutParam())) return false;
      }
      if (hasDfParam() != other.hasDfParam()) return false;
      if (hasDfParam()) {
        if (!getDfParam()
            .equals(other.getDfParam())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBaseInfo()) {
        hash = (37 * hash) + BASE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getBaseInfo().hashCode();
      }
      if (hasDisturbParam()) {
        hash = (37 * hash) + DISTURB_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getDisturbParam().hashCode();
      }
      if (hasScoutParam()) {
        hash = (37 * hash) + SCOUT_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getScoutParam().hashCode();
      }
      if (hasDfParam()) {
        hash = (37 * hash) + DF_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getDfParam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.CommCounterEquInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通信对抗装备信息
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.CommCounterEquInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.CommCounterEquInfo)
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.class, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (baseInfoBuilder_ == null) {
          baseInfo_ = null;
        } else {
          baseInfo_ = null;
          baseInfoBuilder_ = null;
        }
        if (disturbParamBuilder_ == null) {
          disturbParam_ = null;
        } else {
          disturbParam_ = null;
          disturbParamBuilder_ = null;
        }
        if (scoutParamBuilder_ == null) {
          scoutParam_ = null;
        } else {
          scoutParam_ = null;
          scoutParamBuilder_ = null;
        }
        if (dfParamBuilder_ == null) {
          dfParam_ = null;
        } else {
          dfParam_ = null;
          dfParamBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfo_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo build() {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo buildPartial() {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfo result = new zb.dcts.database.EquipmentDatabase.CommCounterEquInfo(this);
        if (baseInfoBuilder_ == null) {
          result.baseInfo_ = baseInfo_;
        } else {
          result.baseInfo_ = baseInfoBuilder_.build();
        }
        if (disturbParamBuilder_ == null) {
          result.disturbParam_ = disturbParam_;
        } else {
          result.disturbParam_ = disturbParamBuilder_.build();
        }
        if (scoutParamBuilder_ == null) {
          result.scoutParam_ = scoutParam_;
        } else {
          result.scoutParam_ = scoutParamBuilder_.build();
        }
        if (dfParamBuilder_ == null) {
          result.dfParam_ = dfParam_;
        } else {
          result.dfParam_ = dfParamBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.CommCounterEquInfo) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.CommCounterEquInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.CommCounterEquInfo other) {
        if (other == zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.getDefaultInstance()) return this;
        if (other.hasBaseInfo()) {
          mergeBaseInfo(other.getBaseInfo());
        }
        if (other.hasDisturbParam()) {
          mergeDisturbParam(other.getDisturbParam());
        }
        if (other.hasScoutParam()) {
          mergeScoutParam(other.getScoutParam());
        }
        if (other.hasDfParam()) {
          mergeDfParam(other.getDfParam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.CommCounterEquInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.database.EquipmentDatabase.BaseEquInfo baseInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.BaseEquInfo, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder, zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder> baseInfoBuilder_;
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       * @return Whether the baseInfo field is set.
       */
      public boolean hasBaseInfo() {
        return baseInfoBuilder_ != null || baseInfo_ != null;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       * @return The baseInfo.
       */
      public zb.dcts.database.EquipmentDatabase.BaseEquInfo getBaseInfo() {
        if (baseInfoBuilder_ == null) {
          return baseInfo_ == null ? zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance() : baseInfo_;
        } else {
          return baseInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder setBaseInfo(zb.dcts.database.EquipmentDatabase.BaseEquInfo value) {
        if (baseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseInfo_ = value;
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder setBaseInfo(
          zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder builderForValue) {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder mergeBaseInfo(zb.dcts.database.EquipmentDatabase.BaseEquInfo value) {
        if (baseInfoBuilder_ == null) {
          if (baseInfo_ != null) {
            baseInfo_ =
              zb.dcts.database.EquipmentDatabase.BaseEquInfo.newBuilder(baseInfo_).mergeFrom(value).buildPartial();
          } else {
            baseInfo_ = value;
          }
          onChanged();
        } else {
          baseInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public Builder clearBaseInfo() {
        if (baseInfoBuilder_ == null) {
          baseInfo_ = null;
          onChanged();
        } else {
          baseInfo_ = null;
          baseInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder getBaseInfoBuilder() {
        
        onChanged();
        return getBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      public zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder getBaseInfoOrBuilder() {
        if (baseInfoBuilder_ != null) {
          return baseInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseInfo_ == null ?
              zb.dcts.database.EquipmentDatabase.BaseEquInfo.getDefaultInstance() : baseInfo_;
        }
      }
      /**
       * <pre>
       *基本信息
       * </pre>
       *
       * <code>.zb.dcts.database.BaseEquInfo base_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.BaseEquInfo, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder, zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder> 
          getBaseInfoFieldBuilder() {
        if (baseInfoBuilder_ == null) {
          baseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.BaseEquInfo, zb.dcts.database.EquipmentDatabase.BaseEquInfo.Builder, zb.dcts.database.EquipmentDatabase.BaseEquInfoOrBuilder>(
                  getBaseInfo(),
                  getParentForChildren(),
                  isClean());
          baseInfo_ = null;
        }
        return baseInfoBuilder_;
      }

      private zb.dcts.database.EquipmentDatabase.DisturbParam disturbParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.DisturbParam, zb.dcts.database.EquipmentDatabase.DisturbParam.Builder, zb.dcts.database.EquipmentDatabase.DisturbParamOrBuilder> disturbParamBuilder_;
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       * @return Whether the disturbParam field is set.
       */
      public boolean hasDisturbParam() {
        return disturbParamBuilder_ != null || disturbParam_ != null;
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       * @return The disturbParam.
       */
      public zb.dcts.database.EquipmentDatabase.DisturbParam getDisturbParam() {
        if (disturbParamBuilder_ == null) {
          return disturbParam_ == null ? zb.dcts.database.EquipmentDatabase.DisturbParam.getDefaultInstance() : disturbParam_;
        } else {
          return disturbParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       */
      public Builder setDisturbParam(zb.dcts.database.EquipmentDatabase.DisturbParam value) {
        if (disturbParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          disturbParam_ = value;
          onChanged();
        } else {
          disturbParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       */
      public Builder setDisturbParam(
          zb.dcts.database.EquipmentDatabase.DisturbParam.Builder builderForValue) {
        if (disturbParamBuilder_ == null) {
          disturbParam_ = builderForValue.build();
          onChanged();
        } else {
          disturbParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       */
      public Builder mergeDisturbParam(zb.dcts.database.EquipmentDatabase.DisturbParam value) {
        if (disturbParamBuilder_ == null) {
          if (disturbParam_ != null) {
            disturbParam_ =
              zb.dcts.database.EquipmentDatabase.DisturbParam.newBuilder(disturbParam_).mergeFrom(value).buildPartial();
          } else {
            disturbParam_ = value;
          }
          onChanged();
        } else {
          disturbParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       */
      public Builder clearDisturbParam() {
        if (disturbParamBuilder_ == null) {
          disturbParam_ = null;
          onChanged();
        } else {
          disturbParam_ = null;
          disturbParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.DisturbParam.Builder getDisturbParamBuilder() {
        
        onChanged();
        return getDisturbParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       */
      public zb.dcts.database.EquipmentDatabase.DisturbParamOrBuilder getDisturbParamOrBuilder() {
        if (disturbParamBuilder_ != null) {
          return disturbParamBuilder_.getMessageOrBuilder();
        } else {
          return disturbParam_ == null ?
              zb.dcts.database.EquipmentDatabase.DisturbParam.getDefaultInstance() : disturbParam_;
        }
      }
      /**
       * <pre>
       *干扰参数
       * </pre>
       *
       * <code>.zb.dcts.database.DisturbParam disturb_param = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.DisturbParam, zb.dcts.database.EquipmentDatabase.DisturbParam.Builder, zb.dcts.database.EquipmentDatabase.DisturbParamOrBuilder> 
          getDisturbParamFieldBuilder() {
        if (disturbParamBuilder_ == null) {
          disturbParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.DisturbParam, zb.dcts.database.EquipmentDatabase.DisturbParam.Builder, zb.dcts.database.EquipmentDatabase.DisturbParamOrBuilder>(
                  getDisturbParam(),
                  getParentForChildren(),
                  isClean());
          disturbParam_ = null;
        }
        return disturbParamBuilder_;
      }

      private zb.dcts.database.EquipmentDatabase.ScoutParam scoutParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.ScoutParam, zb.dcts.database.EquipmentDatabase.ScoutParam.Builder, zb.dcts.database.EquipmentDatabase.ScoutParamOrBuilder> scoutParamBuilder_;
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       * @return Whether the scoutParam field is set.
       */
      public boolean hasScoutParam() {
        return scoutParamBuilder_ != null || scoutParam_ != null;
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       * @return The scoutParam.
       */
      public zb.dcts.database.EquipmentDatabase.ScoutParam getScoutParam() {
        if (scoutParamBuilder_ == null) {
          return scoutParam_ == null ? zb.dcts.database.EquipmentDatabase.ScoutParam.getDefaultInstance() : scoutParam_;
        } else {
          return scoutParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       */
      public Builder setScoutParam(zb.dcts.database.EquipmentDatabase.ScoutParam value) {
        if (scoutParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scoutParam_ = value;
          onChanged();
        } else {
          scoutParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       */
      public Builder setScoutParam(
          zb.dcts.database.EquipmentDatabase.ScoutParam.Builder builderForValue) {
        if (scoutParamBuilder_ == null) {
          scoutParam_ = builderForValue.build();
          onChanged();
        } else {
          scoutParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       */
      public Builder mergeScoutParam(zb.dcts.database.EquipmentDatabase.ScoutParam value) {
        if (scoutParamBuilder_ == null) {
          if (scoutParam_ != null) {
            scoutParam_ =
              zb.dcts.database.EquipmentDatabase.ScoutParam.newBuilder(scoutParam_).mergeFrom(value).buildPartial();
          } else {
            scoutParam_ = value;
          }
          onChanged();
        } else {
          scoutParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       */
      public Builder clearScoutParam() {
        if (scoutParamBuilder_ == null) {
          scoutParam_ = null;
          onChanged();
        } else {
          scoutParam_ = null;
          scoutParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.ScoutParam.Builder getScoutParamBuilder() {
        
        onChanged();
        return getScoutParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.ScoutParamOrBuilder getScoutParamOrBuilder() {
        if (scoutParamBuilder_ != null) {
          return scoutParamBuilder_.getMessageOrBuilder();
        } else {
          return scoutParam_ == null ?
              zb.dcts.database.EquipmentDatabase.ScoutParam.getDefaultInstance() : scoutParam_;
        }
      }
      /**
       * <pre>
       *侦察参数
       * </pre>
       *
       * <code>.zb.dcts.database.ScoutParam scout_param = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.ScoutParam, zb.dcts.database.EquipmentDatabase.ScoutParam.Builder, zb.dcts.database.EquipmentDatabase.ScoutParamOrBuilder> 
          getScoutParamFieldBuilder() {
        if (scoutParamBuilder_ == null) {
          scoutParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.ScoutParam, zb.dcts.database.EquipmentDatabase.ScoutParam.Builder, zb.dcts.database.EquipmentDatabase.ScoutParamOrBuilder>(
                  getScoutParam(),
                  getParentForChildren(),
                  isClean());
          scoutParam_ = null;
        }
        return scoutParamBuilder_;
      }

      private zb.dcts.database.EquipmentDatabase.DirectionFindingParam dfParam_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.DirectionFindingParam, zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder, zb.dcts.database.EquipmentDatabase.DirectionFindingParamOrBuilder> dfParamBuilder_;
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       * @return Whether the dfParam field is set.
       */
      public boolean hasDfParam() {
        return dfParamBuilder_ != null || dfParam_ != null;
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       * @return The dfParam.
       */
      public zb.dcts.database.EquipmentDatabase.DirectionFindingParam getDfParam() {
        if (dfParamBuilder_ == null) {
          return dfParam_ == null ? zb.dcts.database.EquipmentDatabase.DirectionFindingParam.getDefaultInstance() : dfParam_;
        } else {
          return dfParamBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       */
      public Builder setDfParam(zb.dcts.database.EquipmentDatabase.DirectionFindingParam value) {
        if (dfParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dfParam_ = value;
          onChanged();
        } else {
          dfParamBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       */
      public Builder setDfParam(
          zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder builderForValue) {
        if (dfParamBuilder_ == null) {
          dfParam_ = builderForValue.build();
          onChanged();
        } else {
          dfParamBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       */
      public Builder mergeDfParam(zb.dcts.database.EquipmentDatabase.DirectionFindingParam value) {
        if (dfParamBuilder_ == null) {
          if (dfParam_ != null) {
            dfParam_ =
              zb.dcts.database.EquipmentDatabase.DirectionFindingParam.newBuilder(dfParam_).mergeFrom(value).buildPartial();
          } else {
            dfParam_ = value;
          }
          onChanged();
        } else {
          dfParamBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       */
      public Builder clearDfParam() {
        if (dfParamBuilder_ == null) {
          dfParam_ = null;
          onChanged();
        } else {
          dfParam_ = null;
          dfParamBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       */
      public zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder getDfParamBuilder() {
        
        onChanged();
        return getDfParamFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       */
      public zb.dcts.database.EquipmentDatabase.DirectionFindingParamOrBuilder getDfParamOrBuilder() {
        if (dfParamBuilder_ != null) {
          return dfParamBuilder_.getMessageOrBuilder();
        } else {
          return dfParam_ == null ?
              zb.dcts.database.EquipmentDatabase.DirectionFindingParam.getDefaultInstance() : dfParam_;
        }
      }
      /**
       * <pre>
       *测向参数
       * </pre>
       *
       * <code>.zb.dcts.database.DirectionFindingParam df_param = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.DirectionFindingParam, zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder, zb.dcts.database.EquipmentDatabase.DirectionFindingParamOrBuilder> 
          getDfParamFieldBuilder() {
        if (dfParamBuilder_ == null) {
          dfParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.DirectionFindingParam, zb.dcts.database.EquipmentDatabase.DirectionFindingParam.Builder, zb.dcts.database.EquipmentDatabase.DirectionFindingParamOrBuilder>(
                  getDfParam(),
                  getParentForChildren(),
                  isClean());
          dfParam_ = null;
        }
        return dfParamBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.CommCounterEquInfo)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.CommCounterEquInfo)
    private static final zb.dcts.database.EquipmentDatabase.CommCounterEquInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.CommCounterEquInfo();
    }

    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommCounterEquInfo>
        PARSER = new com.google.protobuf.AbstractParser<CommCounterEquInfo>() {
      @java.lang.Override
      public CommCounterEquInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommCounterEquInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommCounterEquInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommCounterEquInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommEquInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.CommEquInfoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The enum numeric value on the wire for method.
     */
    int getMethodValue();
    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The method.
     */
    zb.dcts.database.DataAccesslayer.RequestMethod getMethod();

    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> 
        getQueryList();
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    zb.dcts.database.DataAccesslayer.QueryParam getQuery(int index);
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    int getQueryCount();
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    java.util.List<? extends zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
        getQueryOrBuilderList();
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    zb.dcts.database.DataAccesslayer.QueryParamOrBuilder getQueryOrBuilder(
        int index);

    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> 
        getBodyList();
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommEquInfo getBody(int index);
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    int getBodyCount();
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
        getBodyOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder getBodyOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 通信装备信息请求
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.CommEquInfoRequest}
   */
  public static final class CommEquInfoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.CommEquInfoRequest)
      CommEquInfoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommEquInfoRequest.newBuilder() to construct.
    private CommEquInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommEquInfoRequest() {
      method_ = 0;
      query_ = java.util.Collections.emptyList();
      body_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommEquInfoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommEquInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              method_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                query_ = new java.util.ArrayList<zb.dcts.database.DataAccesslayer.QueryParam>();
                mutable_bitField0_ |= 0x00000001;
              }
              query_.add(
                  input.readMessage(zb.dcts.database.DataAccesslayer.QueryParam.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommEquInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              body_.add(
                  input.readMessage(zb.dcts.database.EquipmentDatabase.CommEquInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          query_ = java.util.Collections.unmodifiableList(query_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          body_ = java.util.Collections.unmodifiableList(body_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.CommEquInfoRequest.class, zb.dcts.database.EquipmentDatabase.CommEquInfoRequest.Builder.class);
    }

    public static final int METHOD_FIELD_NUMBER = 1;
    private int method_;
    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The enum numeric value on the wire for method.
     */
    @java.lang.Override public int getMethodValue() {
      return method_;
    }
    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The method.
     */
    @java.lang.Override public zb.dcts.database.DataAccesslayer.RequestMethod getMethod() {
      @SuppressWarnings("deprecation")
      zb.dcts.database.DataAccesslayer.RequestMethod result = zb.dcts.database.DataAccesslayer.RequestMethod.valueOf(method_);
      return result == null ? zb.dcts.database.DataAccesslayer.RequestMethod.UNRECOGNIZED : result;
    }

    public static final int QUERY_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> query_;
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> getQueryList() {
      return query_;
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
        getQueryOrBuilderList() {
      return query_;
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public int getQueryCount() {
      return query_.size();
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DataAccesslayer.QueryParam getQuery(int index) {
      return query_.get(index);
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DataAccesslayer.QueryParamOrBuilder getQueryOrBuilder(
        int index) {
      return query_.get(index);
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> body_;
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> getBodyList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
        getBodyOrBuilderList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public int getBodyCount() {
      return body_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommEquInfo getBody(int index) {
      return body_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder getBodyOrBuilder(
        int index) {
      return body_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (method_ != zb.dcts.database.DataAccesslayer.RequestMethod.M_GET.getNumber()) {
        output.writeEnum(1, method_);
      }
      for (int i = 0; i < query_.size(); i++) {
        output.writeMessage(2, query_.get(i));
      }
      for (int i = 0; i < body_.size(); i++) {
        output.writeMessage(3, body_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (method_ != zb.dcts.database.DataAccesslayer.RequestMethod.M_GET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, method_);
      }
      for (int i = 0; i < query_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, query_.get(i));
      }
      for (int i = 0; i < body_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, body_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.CommEquInfoRequest)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.CommEquInfoRequest other = (zb.dcts.database.EquipmentDatabase.CommEquInfoRequest) obj;

      if (method_ != other.method_) return false;
      if (!getQueryList()
          .equals(other.getQueryList())) return false;
      if (!getBodyList()
          .equals(other.getBodyList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + method_;
      if (getQueryCount() > 0) {
        hash = (37 * hash) + QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getQueryList().hashCode();
      }
      if (getBodyCount() > 0) {
        hash = (37 * hash) + BODY_FIELD_NUMBER;
        hash = (53 * hash) + getBodyList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.CommEquInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通信装备信息请求
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.CommEquInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.CommEquInfoRequest)
        zb.dcts.database.EquipmentDatabase.CommEquInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.CommEquInfoRequest.class, zb.dcts.database.EquipmentDatabase.CommEquInfoRequest.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.CommEquInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getQueryFieldBuilder();
          getBodyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        method_ = 0;

        if (queryBuilder_ == null) {
          query_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          queryBuilder_.clear();
        }
        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfoRequest getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.CommEquInfoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfoRequest build() {
        zb.dcts.database.EquipmentDatabase.CommEquInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfoRequest buildPartial() {
        zb.dcts.database.EquipmentDatabase.CommEquInfoRequest result = new zb.dcts.database.EquipmentDatabase.CommEquInfoRequest(this);
        int from_bitField0_ = bitField0_;
        result.method_ = method_;
        if (queryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            query_ = java.util.Collections.unmodifiableList(query_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.query_ = query_;
        } else {
          result.query_ = queryBuilder_.build();
        }
        if (bodyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            body_ = java.util.Collections.unmodifiableList(body_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.body_ = body_;
        } else {
          result.body_ = bodyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.CommEquInfoRequest) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.CommEquInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.CommEquInfoRequest other) {
        if (other == zb.dcts.database.EquipmentDatabase.CommEquInfoRequest.getDefaultInstance()) return this;
        if (other.method_ != 0) {
          setMethodValue(other.getMethodValue());
        }
        if (queryBuilder_ == null) {
          if (!other.query_.isEmpty()) {
            if (query_.isEmpty()) {
              query_ = other.query_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureQueryIsMutable();
              query_.addAll(other.query_);
            }
            onChanged();
          }
        } else {
          if (!other.query_.isEmpty()) {
            if (queryBuilder_.isEmpty()) {
              queryBuilder_.dispose();
              queryBuilder_ = null;
              query_ = other.query_;
              bitField0_ = (bitField0_ & ~0x00000001);
              queryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getQueryFieldBuilder() : null;
            } else {
              queryBuilder_.addAllMessages(other.query_);
            }
          }
        }
        if (bodyBuilder_ == null) {
          if (!other.body_.isEmpty()) {
            if (body_.isEmpty()) {
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBodyIsMutable();
              body_.addAll(other.body_);
            }
            onChanged();
          }
        } else {
          if (!other.body_.isEmpty()) {
            if (bodyBuilder_.isEmpty()) {
              bodyBuilder_.dispose();
              bodyBuilder_ = null;
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000002);
              bodyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBodyFieldBuilder() : null;
            } else {
              bodyBuilder_.addAllMessages(other.body_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.CommEquInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.CommEquInfoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int method_ = 0;
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @return The enum numeric value on the wire for method.
       */
      @java.lang.Override public int getMethodValue() {
        return method_;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @param value The enum numeric value on the wire for method to set.
       * @return This builder for chaining.
       */
      public Builder setMethodValue(int value) {
        
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @return The method.
       */
      @java.lang.Override
      public zb.dcts.database.DataAccesslayer.RequestMethod getMethod() {
        @SuppressWarnings("deprecation")
        zb.dcts.database.DataAccesslayer.RequestMethod result = zb.dcts.database.DataAccesslayer.RequestMethod.valueOf(method_);
        return result == null ? zb.dcts.database.DataAccesslayer.RequestMethod.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(zb.dcts.database.DataAccesslayer.RequestMethod value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        method_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        
        method_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> query_ =
        java.util.Collections.emptyList();
      private void ensureQueryIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          query_ = new java.util.ArrayList<zb.dcts.database.DataAccesslayer.QueryParam>(query_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DataAccesslayer.QueryParam, zb.dcts.database.DataAccesslayer.QueryParam.Builder, zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> queryBuilder_;

      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> getQueryList() {
        if (queryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(query_);
        } else {
          return queryBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public int getQueryCount() {
        if (queryBuilder_ == null) {
          return query_.size();
        } else {
          return queryBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam getQuery(int index) {
        if (queryBuilder_ == null) {
          return query_.get(index);
        } else {
          return queryBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder setQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryIsMutable();
          query_.set(index, value);
          onChanged();
        } else {
          queryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder setQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam.Builder builderForValue) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.set(index, builderForValue.build());
          onChanged();
        } else {
          queryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(zb.dcts.database.DataAccesslayer.QueryParam value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryIsMutable();
          query_.add(value);
          onChanged();
        } else {
          queryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryIsMutable();
          query_.add(index, value);
          onChanged();
        } else {
          queryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(
          zb.dcts.database.DataAccesslayer.QueryParam.Builder builderForValue) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.add(builderForValue.build());
          onChanged();
        } else {
          queryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam.Builder builderForValue) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.add(index, builderForValue.build());
          onChanged();
        } else {
          queryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addAllQuery(
          java.lang.Iterable<? extends zb.dcts.database.DataAccesslayer.QueryParam> values) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, query_);
          onChanged();
        } else {
          queryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder clearQuery() {
        if (queryBuilder_ == null) {
          query_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          queryBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder removeQuery(int index) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.remove(index);
          onChanged();
        } else {
          queryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam.Builder getQueryBuilder(
          int index) {
        return getQueryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParamOrBuilder getQueryOrBuilder(
          int index) {
        if (queryBuilder_ == null) {
          return query_.get(index);  } else {
          return queryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public java.util.List<? extends zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
           getQueryOrBuilderList() {
        if (queryBuilder_ != null) {
          return queryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(query_);
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam.Builder addQueryBuilder() {
        return getQueryFieldBuilder().addBuilder(
            zb.dcts.database.DataAccesslayer.QueryParam.getDefaultInstance());
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam.Builder addQueryBuilder(
          int index) {
        return getQueryFieldBuilder().addBuilder(
            index, zb.dcts.database.DataAccesslayer.QueryParam.getDefaultInstance());
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public java.util.List<zb.dcts.database.DataAccesslayer.QueryParam.Builder> 
           getQueryBuilderList() {
        return getQueryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DataAccesslayer.QueryParam, zb.dcts.database.DataAccesslayer.QueryParam.Builder, zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
          getQueryFieldBuilder() {
        if (queryBuilder_ == null) {
          queryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DataAccesslayer.QueryParam, zb.dcts.database.DataAccesslayer.QueryParam.Builder, zb.dcts.database.DataAccesslayer.QueryParamOrBuilder>(
                  query_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          query_ = null;
        }
        return queryBuilder_;
      }

      private java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> body_ =
        java.util.Collections.emptyList();
      private void ensureBodyIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommEquInfo>(body_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommEquInfo, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> bodyBuilder_;

      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> getBodyList() {
        if (bodyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(body_);
        } else {
          return bodyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public int getBodyCount() {
        if (bodyBuilder_ == null) {
          return body_.size();
        } else {
          return bodyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo getBody(int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);
        } else {
          return bodyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.set(index, value);
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.set(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(zb.dcts.database.EquipmentDatabase.CommEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(index, value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(
          zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addAllBody(
          java.lang.Iterable<? extends zb.dcts.database.EquipmentDatabase.CommEquInfo> values) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, body_);
          onChanged();
        } else {
          bodyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder clearBody() {
        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder removeBody(int index) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.remove(index);
          onChanged();
        } else {
          bodyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder getBodyBuilder(
          int index) {
        return getBodyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder getBodyOrBuilder(
          int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);  } else {
          return bodyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
           getBodyOrBuilderList() {
        if (bodyBuilder_ != null) {
          return bodyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(body_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder addBodyBuilder() {
        return getBodyFieldBuilder().addBuilder(
            zb.dcts.database.EquipmentDatabase.CommEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder addBodyBuilder(
          int index) {
        return getBodyFieldBuilder().addBuilder(
            index, zb.dcts.database.EquipmentDatabase.CommEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder> 
           getBodyBuilderList() {
        return getBodyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommEquInfo, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
          getBodyFieldBuilder() {
        if (bodyBuilder_ == null) {
          bodyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.CommEquInfo, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder>(
                  body_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        return bodyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.CommEquInfoRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.CommEquInfoRequest)
    private static final zb.dcts.database.EquipmentDatabase.CommEquInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.CommEquInfoRequest();
    }

    public static zb.dcts.database.EquipmentDatabase.CommEquInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommEquInfoRequest>
        PARSER = new com.google.protobuf.AbstractParser<CommEquInfoRequest>() {
      @java.lang.Override
      public CommEquInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommEquInfoRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommEquInfoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommEquInfoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommEquInfoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommEquInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.CommEquInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 statuscode = 1;</code>
     * @return The statuscode.
     */
    int getStatuscode();

    /**
     * <code>string info = 2;</code>
     * @return The info.
     */
    java.lang.String getInfo();
    /**
     * <code>string info = 2;</code>
     * @return The bytes for info.
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> 
        getBodyList();
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommEquInfo getBody(int index);
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    int getBodyCount();
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
        getBodyOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder getBodyOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 通信装备信息响应
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.CommEquInfoResponse}
   */
  public static final class CommEquInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.CommEquInfoResponse)
      CommEquInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommEquInfoResponse.newBuilder() to construct.
    private CommEquInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommEquInfoResponse() {
      info_ = "";
      body_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommEquInfoResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommEquInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              statuscode_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              info_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommEquInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              body_.add(
                  input.readMessage(zb.dcts.database.EquipmentDatabase.CommEquInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          body_ = java.util.Collections.unmodifiableList(body_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.CommEquInfoResponse.class, zb.dcts.database.EquipmentDatabase.CommEquInfoResponse.Builder.class);
    }

    public static final int STATUSCODE_FIELD_NUMBER = 1;
    private int statuscode_;
    /**
     * <code>int32 statuscode = 1;</code>
     * @return The statuscode.
     */
    @java.lang.Override
    public int getStatuscode() {
      return statuscode_;
    }

    public static final int INFO_FIELD_NUMBER = 2;
    private volatile java.lang.Object info_;
    /**
     * <code>string info = 2;</code>
     * @return The info.
     */
    @java.lang.Override
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      }
    }
    /**
     * <code>string info = 2;</code>
     * @return The bytes for info.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> body_;
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> getBodyList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
        getBodyOrBuilderList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public int getBodyCount() {
      return body_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommEquInfo getBody(int index) {
      return body_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder getBodyOrBuilder(
        int index) {
      return body_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (statuscode_ != 0) {
        output.writeInt32(1, statuscode_);
      }
      if (!getInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, info_);
      }
      for (int i = 0; i < body_.size(); i++) {
        output.writeMessage(3, body_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (statuscode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, statuscode_);
      }
      if (!getInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, info_);
      }
      for (int i = 0; i < body_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, body_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.CommEquInfoResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.CommEquInfoResponse other = (zb.dcts.database.EquipmentDatabase.CommEquInfoResponse) obj;

      if (getStatuscode()
          != other.getStatuscode()) return false;
      if (!getInfo()
          .equals(other.getInfo())) return false;
      if (!getBodyList()
          .equals(other.getBodyList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUSCODE_FIELD_NUMBER;
      hash = (53 * hash) + getStatuscode();
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
      if (getBodyCount() > 0) {
        hash = (37 * hash) + BODY_FIELD_NUMBER;
        hash = (53 * hash) + getBodyList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.CommEquInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通信装备信息响应
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.CommEquInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.CommEquInfoResponse)
        zb.dcts.database.EquipmentDatabase.CommEquInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.CommEquInfoResponse.class, zb.dcts.database.EquipmentDatabase.CommEquInfoResponse.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.CommEquInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBodyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        statuscode_ = 0;

        info_ = "";

        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommEquInfoResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfoResponse getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.CommEquInfoResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfoResponse build() {
        zb.dcts.database.EquipmentDatabase.CommEquInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommEquInfoResponse buildPartial() {
        zb.dcts.database.EquipmentDatabase.CommEquInfoResponse result = new zb.dcts.database.EquipmentDatabase.CommEquInfoResponse(this);
        int from_bitField0_ = bitField0_;
        result.statuscode_ = statuscode_;
        result.info_ = info_;
        if (bodyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            body_ = java.util.Collections.unmodifiableList(body_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.body_ = body_;
        } else {
          result.body_ = bodyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.CommEquInfoResponse) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.CommEquInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.CommEquInfoResponse other) {
        if (other == zb.dcts.database.EquipmentDatabase.CommEquInfoResponse.getDefaultInstance()) return this;
        if (other.getStatuscode() != 0) {
          setStatuscode(other.getStatuscode());
        }
        if (!other.getInfo().isEmpty()) {
          info_ = other.info_;
          onChanged();
        }
        if (bodyBuilder_ == null) {
          if (!other.body_.isEmpty()) {
            if (body_.isEmpty()) {
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBodyIsMutable();
              body_.addAll(other.body_);
            }
            onChanged();
          }
        } else {
          if (!other.body_.isEmpty()) {
            if (bodyBuilder_.isEmpty()) {
              bodyBuilder_.dispose();
              bodyBuilder_ = null;
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bodyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBodyFieldBuilder() : null;
            } else {
              bodyBuilder_.addAllMessages(other.body_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.CommEquInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.CommEquInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int statuscode_ ;
      /**
       * <code>int32 statuscode = 1;</code>
       * @return The statuscode.
       */
      @java.lang.Override
      public int getStatuscode() {
        return statuscode_;
      }
      /**
       * <code>int32 statuscode = 1;</code>
       * @param value The statuscode to set.
       * @return This builder for chaining.
       */
      public Builder setStatuscode(int value) {
        
        statuscode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 statuscode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatuscode() {
        
        statuscode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <code>string info = 2;</code>
       * @return The info.
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string info = 2;</code>
       * @return The bytes for info.
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string info = 2;</code>
       * @param value The info to set.
       * @return This builder for chaining.
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string info = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInfo() {
        
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <code>string info = 2;</code>
       * @param value The bytes for info to set.
       * @return This builder for chaining.
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        info_ = value;
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> body_ =
        java.util.Collections.emptyList();
      private void ensureBodyIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommEquInfo>(body_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommEquInfo, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> bodyBuilder_;

      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo> getBodyList() {
        if (bodyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(body_);
        } else {
          return bodyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public int getBodyCount() {
        if (bodyBuilder_ == null) {
          return body_.size();
        } else {
          return bodyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo getBody(int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);
        } else {
          return bodyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.set(index, value);
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.set(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(zb.dcts.database.EquipmentDatabase.CommEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(index, value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(
          zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder addAllBody(
          java.lang.Iterable<? extends zb.dcts.database.EquipmentDatabase.CommEquInfo> values) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, body_);
          onChanged();
        } else {
          bodyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder clearBody() {
        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public Builder removeBody(int index) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.remove(index);
          onChanged();
        } else {
          bodyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder getBodyBuilder(
          int index) {
        return getBodyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder getBodyOrBuilder(
          int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);  } else {
          return bodyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
           getBodyOrBuilderList() {
        if (bodyBuilder_ != null) {
          return bodyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(body_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder addBodyBuilder() {
        return getBodyFieldBuilder().addBuilder(
            zb.dcts.database.EquipmentDatabase.CommEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder addBodyBuilder(
          int index) {
        return getBodyFieldBuilder().addBuilder(
            index, zb.dcts.database.EquipmentDatabase.CommEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder> 
           getBodyBuilderList() {
        return getBodyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommEquInfo, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder> 
          getBodyFieldBuilder() {
        if (bodyBuilder_ == null) {
          bodyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.CommEquInfo, zb.dcts.database.EquipmentDatabase.CommEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommEquInfoOrBuilder>(
                  body_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        return bodyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.CommEquInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.CommEquInfoResponse)
    private static final zb.dcts.database.EquipmentDatabase.CommEquInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.CommEquInfoResponse();
    }

    public static zb.dcts.database.EquipmentDatabase.CommEquInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommEquInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<CommEquInfoResponse>() {
      @java.lang.Override
      public CommEquInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommEquInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommEquInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommEquInfoResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommEquInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommCounterEquInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.CommCounterEquInfoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The enum numeric value on the wire for method.
     */
    int getMethodValue();
    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The method.
     */
    zb.dcts.database.DataAccesslayer.RequestMethod getMethod();

    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> 
        getQueryList();
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    zb.dcts.database.DataAccesslayer.QueryParam getQuery(int index);
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    int getQueryCount();
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    java.util.List<? extends zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
        getQueryOrBuilderList();
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    zb.dcts.database.DataAccesslayer.QueryParamOrBuilder getQueryOrBuilder(
        int index);

    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> 
        getBodyList();
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getBody(int index);
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    int getBodyCount();
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
        getBodyOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder getBodyOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 通信对抗装备信息请求
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.CommCounterEquInfoRequest}
   */
  public static final class CommCounterEquInfoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.CommCounterEquInfoRequest)
      CommCounterEquInfoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommCounterEquInfoRequest.newBuilder() to construct.
    private CommCounterEquInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommCounterEquInfoRequest() {
      method_ = 0;
      query_ = java.util.Collections.emptyList();
      body_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommCounterEquInfoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommCounterEquInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              method_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                query_ = new java.util.ArrayList<zb.dcts.database.DataAccesslayer.QueryParam>();
                mutable_bitField0_ |= 0x00000001;
              }
              query_.add(
                  input.readMessage(zb.dcts.database.DataAccesslayer.QueryParam.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              body_.add(
                  input.readMessage(zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          query_ = java.util.Collections.unmodifiableList(query_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          body_ = java.util.Collections.unmodifiableList(body_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest.class, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest.Builder.class);
    }

    public static final int METHOD_FIELD_NUMBER = 1;
    private int method_;
    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The enum numeric value on the wire for method.
     */
    @java.lang.Override public int getMethodValue() {
      return method_;
    }
    /**
     * <pre>
     *访问方法支持 M_GET M_POST M_PUT M_DELETE
     * </pre>
     *
     * <code>.zb.dcts.database.RequestMethod method = 1;</code>
     * @return The method.
     */
    @java.lang.Override public zb.dcts.database.DataAccesslayer.RequestMethod getMethod() {
      @SuppressWarnings("deprecation")
      zb.dcts.database.DataAccesslayer.RequestMethod result = zb.dcts.database.DataAccesslayer.RequestMethod.valueOf(method_);
      return result == null ? zb.dcts.database.DataAccesslayer.RequestMethod.UNRECOGNIZED : result;
    }

    public static final int QUERY_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> query_;
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> getQueryList() {
      return query_;
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
        getQueryOrBuilderList() {
      return query_;
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public int getQueryCount() {
      return query_.size();
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DataAccesslayer.QueryParam getQuery(int index) {
      return query_.get(index);
    }
    /**
     * <pre>
     *查询参数的关键词(键)支持 
     * </pre>
     *
     * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.DataAccesslayer.QueryParamOrBuilder getQueryOrBuilder(
        int index) {
      return query_.get(index);
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> body_;
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> getBodyList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
        getBodyOrBuilderList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public int getBodyCount() {
      return body_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getBody(int index) {
      return body_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder getBodyOrBuilder(
        int index) {
      return body_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (method_ != zb.dcts.database.DataAccesslayer.RequestMethod.M_GET.getNumber()) {
        output.writeEnum(1, method_);
      }
      for (int i = 0; i < query_.size(); i++) {
        output.writeMessage(2, query_.get(i));
      }
      for (int i = 0; i < body_.size(); i++) {
        output.writeMessage(3, body_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (method_ != zb.dcts.database.DataAccesslayer.RequestMethod.M_GET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, method_);
      }
      for (int i = 0; i < query_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, query_.get(i));
      }
      for (int i = 0; i < body_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, body_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest other = (zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest) obj;

      if (method_ != other.method_) return false;
      if (!getQueryList()
          .equals(other.getQueryList())) return false;
      if (!getBodyList()
          .equals(other.getBodyList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + method_;
      if (getQueryCount() > 0) {
        hash = (37 * hash) + QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getQueryList().hashCode();
      }
      if (getBodyCount() > 0) {
        hash = (37 * hash) + BODY_FIELD_NUMBER;
        hash = (53 * hash) + getBodyList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通信对抗装备信息请求
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.CommCounterEquInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.CommCounterEquInfoRequest)
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest.class, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getQueryFieldBuilder();
          getBodyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        method_ = 0;

        if (queryBuilder_ == null) {
          query_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          queryBuilder_.clear();
        }
        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoRequest_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest build() {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest buildPartial() {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest result = new zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest(this);
        int from_bitField0_ = bitField0_;
        result.method_ = method_;
        if (queryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            query_ = java.util.Collections.unmodifiableList(query_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.query_ = query_;
        } else {
          result.query_ = queryBuilder_.build();
        }
        if (bodyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            body_ = java.util.Collections.unmodifiableList(body_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.body_ = body_;
        } else {
          result.body_ = bodyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest other) {
        if (other == zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest.getDefaultInstance()) return this;
        if (other.method_ != 0) {
          setMethodValue(other.getMethodValue());
        }
        if (queryBuilder_ == null) {
          if (!other.query_.isEmpty()) {
            if (query_.isEmpty()) {
              query_ = other.query_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureQueryIsMutable();
              query_.addAll(other.query_);
            }
            onChanged();
          }
        } else {
          if (!other.query_.isEmpty()) {
            if (queryBuilder_.isEmpty()) {
              queryBuilder_.dispose();
              queryBuilder_ = null;
              query_ = other.query_;
              bitField0_ = (bitField0_ & ~0x00000001);
              queryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getQueryFieldBuilder() : null;
            } else {
              queryBuilder_.addAllMessages(other.query_);
            }
          }
        }
        if (bodyBuilder_ == null) {
          if (!other.body_.isEmpty()) {
            if (body_.isEmpty()) {
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBodyIsMutable();
              body_.addAll(other.body_);
            }
            onChanged();
          }
        } else {
          if (!other.body_.isEmpty()) {
            if (bodyBuilder_.isEmpty()) {
              bodyBuilder_.dispose();
              bodyBuilder_ = null;
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000002);
              bodyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBodyFieldBuilder() : null;
            } else {
              bodyBuilder_.addAllMessages(other.body_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int method_ = 0;
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @return The enum numeric value on the wire for method.
       */
      @java.lang.Override public int getMethodValue() {
        return method_;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @param value The enum numeric value on the wire for method to set.
       * @return This builder for chaining.
       */
      public Builder setMethodValue(int value) {
        
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @return The method.
       */
      @java.lang.Override
      public zb.dcts.database.DataAccesslayer.RequestMethod getMethod() {
        @SuppressWarnings("deprecation")
        zb.dcts.database.DataAccesslayer.RequestMethod result = zb.dcts.database.DataAccesslayer.RequestMethod.valueOf(method_);
        return result == null ? zb.dcts.database.DataAccesslayer.RequestMethod.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(zb.dcts.database.DataAccesslayer.RequestMethod value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        method_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *访问方法支持 M_GET M_POST M_PUT M_DELETE
       * </pre>
       *
       * <code>.zb.dcts.database.RequestMethod method = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        
        method_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> query_ =
        java.util.Collections.emptyList();
      private void ensureQueryIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          query_ = new java.util.ArrayList<zb.dcts.database.DataAccesslayer.QueryParam>(query_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DataAccesslayer.QueryParam, zb.dcts.database.DataAccesslayer.QueryParam.Builder, zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> queryBuilder_;

      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public java.util.List<zb.dcts.database.DataAccesslayer.QueryParam> getQueryList() {
        if (queryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(query_);
        } else {
          return queryBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public int getQueryCount() {
        if (queryBuilder_ == null) {
          return query_.size();
        } else {
          return queryBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam getQuery(int index) {
        if (queryBuilder_ == null) {
          return query_.get(index);
        } else {
          return queryBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder setQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryIsMutable();
          query_.set(index, value);
          onChanged();
        } else {
          queryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder setQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam.Builder builderForValue) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.set(index, builderForValue.build());
          onChanged();
        } else {
          queryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(zb.dcts.database.DataAccesslayer.QueryParam value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryIsMutable();
          query_.add(value);
          onChanged();
        } else {
          queryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam value) {
        if (queryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQueryIsMutable();
          query_.add(index, value);
          onChanged();
        } else {
          queryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(
          zb.dcts.database.DataAccesslayer.QueryParam.Builder builderForValue) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.add(builderForValue.build());
          onChanged();
        } else {
          queryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addQuery(
          int index, zb.dcts.database.DataAccesslayer.QueryParam.Builder builderForValue) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.add(index, builderForValue.build());
          onChanged();
        } else {
          queryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder addAllQuery(
          java.lang.Iterable<? extends zb.dcts.database.DataAccesslayer.QueryParam> values) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, query_);
          onChanged();
        } else {
          queryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder clearQuery() {
        if (queryBuilder_ == null) {
          query_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          queryBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public Builder removeQuery(int index) {
        if (queryBuilder_ == null) {
          ensureQueryIsMutable();
          query_.remove(index);
          onChanged();
        } else {
          queryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam.Builder getQueryBuilder(
          int index) {
        return getQueryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParamOrBuilder getQueryOrBuilder(
          int index) {
        if (queryBuilder_ == null) {
          return query_.get(index);  } else {
          return queryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public java.util.List<? extends zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
           getQueryOrBuilderList() {
        if (queryBuilder_ != null) {
          return queryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(query_);
        }
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam.Builder addQueryBuilder() {
        return getQueryFieldBuilder().addBuilder(
            zb.dcts.database.DataAccesslayer.QueryParam.getDefaultInstance());
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public zb.dcts.database.DataAccesslayer.QueryParam.Builder addQueryBuilder(
          int index) {
        return getQueryFieldBuilder().addBuilder(
            index, zb.dcts.database.DataAccesslayer.QueryParam.getDefaultInstance());
      }
      /**
       * <pre>
       *查询参数的关键词(键)支持 
       * </pre>
       *
       * <code>repeated .zb.dcts.database.QueryParam query = 2;</code>
       */
      public java.util.List<zb.dcts.database.DataAccesslayer.QueryParam.Builder> 
           getQueryBuilderList() {
        return getQueryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.DataAccesslayer.QueryParam, zb.dcts.database.DataAccesslayer.QueryParam.Builder, zb.dcts.database.DataAccesslayer.QueryParamOrBuilder> 
          getQueryFieldBuilder() {
        if (queryBuilder_ == null) {
          queryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.DataAccesslayer.QueryParam, zb.dcts.database.DataAccesslayer.QueryParam.Builder, zb.dcts.database.DataAccesslayer.QueryParamOrBuilder>(
                  query_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          query_ = null;
        }
        return queryBuilder_;
      }

      private java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> body_ =
        java.util.Collections.emptyList();
      private void ensureBodyIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo>(body_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommCounterEquInfo, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> bodyBuilder_;

      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> getBodyList() {
        if (bodyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(body_);
        } else {
          return bodyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public int getBodyCount() {
        if (bodyBuilder_ == null) {
          return body_.size();
        } else {
          return bodyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getBody(int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);
        } else {
          return bodyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.set(index, value);
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.set(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(zb.dcts.database.EquipmentDatabase.CommCounterEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(index, value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(
          zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addAllBody(
          java.lang.Iterable<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> values) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, body_);
          onChanged();
        } else {
          bodyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder clearBody() {
        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder removeBody(int index) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.remove(index);
          onChanged();
        } else {
          bodyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder getBodyBuilder(
          int index) {
        return getBodyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder getBodyOrBuilder(
          int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);  } else {
          return bodyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
           getBodyOrBuilderList() {
        if (bodyBuilder_ != null) {
          return bodyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(body_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder addBodyBuilder() {
        return getBodyFieldBuilder().addBuilder(
            zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder addBodyBuilder(
          int index) {
        return getBodyFieldBuilder().addBuilder(
            index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder> 
           getBodyBuilderList() {
        return getBodyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommCounterEquInfo, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
          getBodyFieldBuilder() {
        if (bodyBuilder_ == null) {
          bodyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.CommCounterEquInfo, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder>(
                  body_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        return bodyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.CommCounterEquInfoRequest)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.CommCounterEquInfoRequest)
    private static final zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest();
    }

    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommCounterEquInfoRequest>
        PARSER = new com.google.protobuf.AbstractParser<CommCounterEquInfoRequest>() {
      @java.lang.Override
      public CommCounterEquInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommCounterEquInfoRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommCounterEquInfoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommCounterEquInfoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommCounterEquInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.CommCounterEquInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 statuscode = 1;</code>
     * @return The statuscode.
     */
    int getStatuscode();

    /**
     * <code>string info = 2;</code>
     * @return The info.
     */
    java.lang.String getInfo();
    /**
     * <code>string info = 2;</code>
     * @return The bytes for info.
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> 
        getBodyList();
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getBody(int index);
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    int getBodyCount();
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
        getBodyOrBuilderList();
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder getBodyOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 通信对抗装备信息响应
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.CommCounterEquInfoResponse}
   */
  public static final class CommCounterEquInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.CommCounterEquInfoResponse)
      CommCounterEquInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommCounterEquInfoResponse.newBuilder() to construct.
    private CommCounterEquInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommCounterEquInfoResponse() {
      info_ = "";
      body_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CommCounterEquInfoResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommCounterEquInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              statuscode_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              info_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              body_.add(
                  input.readMessage(zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          body_ = java.util.Collections.unmodifiableList(body_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse.class, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse.Builder.class);
    }

    public static final int STATUSCODE_FIELD_NUMBER = 1;
    private int statuscode_;
    /**
     * <code>int32 statuscode = 1;</code>
     * @return The statuscode.
     */
    @java.lang.Override
    public int getStatuscode() {
      return statuscode_;
    }

    public static final int INFO_FIELD_NUMBER = 2;
    private volatile java.lang.Object info_;
    /**
     * <code>string info = 2;</code>
     * @return The info.
     */
    @java.lang.Override
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      }
    }
    /**
     * <code>string info = 2;</code>
     * @return The bytes for info.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> body_;
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> getBodyList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
        getBodyOrBuilderList() {
      return body_;
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public int getBodyCount() {
      return body_.size();
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getBody(int index) {
      return body_.get(index);
    }
    /**
     * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder getBodyOrBuilder(
        int index) {
      return body_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (statuscode_ != 0) {
        output.writeInt32(1, statuscode_);
      }
      if (!getInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, info_);
      }
      for (int i = 0; i < body_.size(); i++) {
        output.writeMessage(3, body_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (statuscode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, statuscode_);
      }
      if (!getInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, info_);
      }
      for (int i = 0; i < body_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, body_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse)) {
        return super.equals(obj);
      }
      zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse other = (zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse) obj;

      if (getStatuscode()
          != other.getStatuscode()) return false;
      if (!getInfo()
          .equals(other.getInfo())) return false;
      if (!getBodyList()
          .equals(other.getBodyList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUSCODE_FIELD_NUMBER;
      hash = (53 * hash) + getStatuscode();
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
      if (getBodyCount() > 0) {
        hash = (37 * hash) + BODY_FIELD_NUMBER;
        hash = (53 * hash) + getBodyList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通信对抗装备信息响应
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.CommCounterEquInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.CommCounterEquInfoResponse)
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse.class, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse.Builder.class);
      }

      // Construct using zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBodyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        statuscode_ = 0;

        info_ = "";

        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.EquipmentDatabase.internal_static_zb_dcts_database_CommCounterEquInfoResponse_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse getDefaultInstanceForType() {
        return zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse build() {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse buildPartial() {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse result = new zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse(this);
        int from_bitField0_ = bitField0_;
        result.statuscode_ = statuscode_;
        result.info_ = info_;
        if (bodyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            body_ = java.util.Collections.unmodifiableList(body_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.body_ = body_;
        } else {
          result.body_ = bodyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse) {
          return mergeFrom((zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse other) {
        if (other == zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse.getDefaultInstance()) return this;
        if (other.getStatuscode() != 0) {
          setStatuscode(other.getStatuscode());
        }
        if (!other.getInfo().isEmpty()) {
          info_ = other.info_;
          onChanged();
        }
        if (bodyBuilder_ == null) {
          if (!other.body_.isEmpty()) {
            if (body_.isEmpty()) {
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBodyIsMutable();
              body_.addAll(other.body_);
            }
            onChanged();
          }
        } else {
          if (!other.body_.isEmpty()) {
            if (bodyBuilder_.isEmpty()) {
              bodyBuilder_.dispose();
              bodyBuilder_ = null;
              body_ = other.body_;
              bitField0_ = (bitField0_ & ~0x00000001);
              bodyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBodyFieldBuilder() : null;
            } else {
              bodyBuilder_.addAllMessages(other.body_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int statuscode_ ;
      /**
       * <code>int32 statuscode = 1;</code>
       * @return The statuscode.
       */
      @java.lang.Override
      public int getStatuscode() {
        return statuscode_;
      }
      /**
       * <code>int32 statuscode = 1;</code>
       * @param value The statuscode to set.
       * @return This builder for chaining.
       */
      public Builder setStatuscode(int value) {
        
        statuscode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 statuscode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatuscode() {
        
        statuscode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <code>string info = 2;</code>
       * @return The info.
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string info = 2;</code>
       * @return The bytes for info.
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string info = 2;</code>
       * @param value The info to set.
       * @return This builder for chaining.
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string info = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInfo() {
        
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <code>string info = 2;</code>
       * @param value The bytes for info to set.
       * @return This builder for chaining.
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        info_ = value;
        onChanged();
        return this;
      }

      private java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> body_ =
        java.util.Collections.emptyList();
      private void ensureBodyIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          body_ = new java.util.ArrayList<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo>(body_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommCounterEquInfo, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> bodyBuilder_;

      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> getBodyList() {
        if (bodyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(body_);
        } else {
          return bodyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public int getBodyCount() {
        if (bodyBuilder_ == null) {
          return body_.size();
        } else {
          return bodyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo getBody(int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);
        } else {
          return bodyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.set(index, value);
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder setBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.set(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(zb.dcts.database.EquipmentDatabase.CommCounterEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBodyIsMutable();
          body_.add(index, value);
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(
          zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addBody(
          int index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.add(index, builderForValue.build());
          onChanged();
        } else {
          bodyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder addAllBody(
          java.lang.Iterable<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfo> values) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, body_);
          onChanged();
        } else {
          bodyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder clearBody() {
        if (bodyBuilder_ == null) {
          body_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          bodyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public Builder removeBody(int index) {
        if (bodyBuilder_ == null) {
          ensureBodyIsMutable();
          body_.remove(index);
          onChanged();
        } else {
          bodyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder getBodyBuilder(
          int index) {
        return getBodyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder getBodyOrBuilder(
          int index) {
        if (bodyBuilder_ == null) {
          return body_.get(index);  } else {
          return bodyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public java.util.List<? extends zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
           getBodyOrBuilderList() {
        if (bodyBuilder_ != null) {
          return bodyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(body_);
        }
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder addBodyBuilder() {
        return getBodyFieldBuilder().addBuilder(
            zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder addBodyBuilder(
          int index) {
        return getBodyFieldBuilder().addBuilder(
            index, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .zb.dcts.database.CommCounterEquInfo body = 3;</code>
       */
      public java.util.List<zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder> 
           getBodyBuilderList() {
        return getBodyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.database.EquipmentDatabase.CommCounterEquInfo, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder> 
          getBodyFieldBuilder() {
        if (bodyBuilder_ == null) {
          bodyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.database.EquipmentDatabase.CommCounterEquInfo, zb.dcts.database.EquipmentDatabase.CommCounterEquInfo.Builder, zb.dcts.database.EquipmentDatabase.CommCounterEquInfoOrBuilder>(
                  body_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        return bodyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.CommCounterEquInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.CommCounterEquInfoResponse)
    private static final zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse();
    }

    public static zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommCounterEquInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<CommCounterEquInfoResponse>() {
      @java.lang.Override
      public CommCounterEquInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommCounterEquInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommCounterEquInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommCounterEquInfoResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.EquipmentDatabase.CommCounterEquInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_FixedFreqParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_FixedFreqParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_FreqHoppingParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_FreqHoppingParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_ChannelParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_ChannelParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_BaseEquInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_BaseEquInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_CommEquInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_CommEquInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_DisturbParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_DisturbParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_ScoutParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_ScoutParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_DirectionFindingParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_DirectionFindingParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_CommCounterEquInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_CommCounterEquInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_CommEquInfoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_CommEquInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_CommEquInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_CommEquInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_CommCounterEquInfoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_CommCounterEquInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_CommCounterEquInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_CommCounterEquInfoResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n database/EquipmentDatabase.proto\022\020zb.d" +
      "cts.database\032\ndcts.proto\032\027scenario/spect" +
      "rum.proto\032\036database/dataAccesslayer.prot" +
      "o\"l\n\016FixedFreqParam\022\014\n\004freq\030\001 \001(\001\022\021\n\tban" +
      "dwidth\030\002 \001(\001\022\r\n\005power\030\003 \001(\001\022*\n\004type\030\004 \001(" +
      "\0162\034.zb.dcts.database.ModuleType\"\203\001\n\020Freq" +
      "HoppingParam\022;\n\tfreq_span\030\001 \001(\0132(.zb.dct" +
      "s.scenario.spectrum.FrequencySpan\022\r\n\005pow" +
      "er\030\002 \001(\001\022\020\n\010interval\030\003 \001(\001\022\021\n\tpoint_num\030" +
      "\004 \001(\005\"\260\001\n\014ChannelParam\022\022\n\nchannel_id\030\001 \001" +
      "(\005\022<\n\020fixed_freq_param\030\002 \001(\0132 .zb.dcts.d" +
      "atabase.FixedFreqParamH\000\022@\n\022freq_hopping" +
      "_param\030\003 \001(\0132\".zb.dcts.database.FreqHopp" +
      "ingParamH\000B\014\n\nfreq_param\"o\n\013BaseEquInfo\022" +
      "\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\013\n\003pic\030\003 \001(\t\022\020" +
      "\n\010synopsis\030\004 \001(\t\022\'\n\013update_time\030\005 \001(\0132\022." +
      "zb.dcts.Timestamp\"v\n\013CommEquInfo\0220\n\tbase" +
      "_info\030\001 \001(\0132\035.zb.dcts.database.BaseEquIn" +
      "fo\0225\n\rchannel_param\030\002 \003(\0132\036.zb.dcts.data" +
      "base.ChannelParam\"\325\001\n\014DisturbParam\0223\n\014di" +
      "sturb_type\030\001 \001(\0162\035.zb.dcts.database.Dist" +
      "urbType\022\014\n\004freq\030\002 \001(\001\022\021\n\tbandwidth\030\003 \001(\001" +
      "\022\r\n\005power\030\004 \001(\001\022\022\n\nbeam_width\030\005 \001(\001\022\020\n\010b" +
      "eam_yaw\030\006 \001(\001\022\022\n\nant_height\030\007 \001(\001\022\020\n\010ant" +
      "_gain\030\010 \001(\001\022\024\n\014max_distance\030\t \001(\001\"_\n\nSco" +
      "utParam\022;\n\tfreq_span\030\001 \001(\0132(.zb.dcts.sce" +
      "nario.spectrum.FrequencySpan\022\024\n\014max_dist" +
      "ance\030\002 \001(\001\"G\n\025DirectionFindingParam\022\034\n\024i" +
      "s_direction_finding\030\001 \001(\010\022\020\n\010accuracy\030\002 " +
      "\001(\001\"\353\001\n\022CommCounterEquInfo\0220\n\tbase_info\030" +
      "\001 \001(\0132\035.zb.dcts.database.BaseEquInfo\0225\n\r" +
      "disturb_param\030\002 \001(\0132\036.zb.dcts.database.D" +
      "isturbParam\0221\n\013scout_param\030\003 \001(\0132\034.zb.dc" +
      "ts.database.ScoutParam\0229\n\010df_param\030\004 \001(\013" +
      "2\'.zb.dcts.database.DirectionFindingPara" +
      "m\"\237\001\n\022CommEquInfoRequest\022/\n\006method\030\001 \001(\016" +
      "2\037.zb.dcts.database.RequestMethod\022+\n\005que" +
      "ry\030\002 \003(\0132\034.zb.dcts.database.QueryParam\022+" +
      "\n\004body\030\003 \003(\0132\035.zb.dcts.database.CommEquI" +
      "nfo\"d\n\023CommEquInfoResponse\022\022\n\nstatuscode" +
      "\030\001 \001(\005\022\014\n\004info\030\002 \001(\t\022+\n\004body\030\003 \003(\0132\035.zb." +
      "dcts.database.CommEquInfo\"\255\001\n\031CommCounte" +
      "rEquInfoRequest\022/\n\006method\030\001 \001(\0162\037.zb.dct" +
      "s.database.RequestMethod\022+\n\005query\030\002 \003(\0132" +
      "\034.zb.dcts.database.QueryParam\0222\n\004body\030\003 " +
      "\003(\0132$.zb.dcts.database.CommCounterEquInf" +
      "o\"r\n\032CommCounterEquInfoResponse\022\022\n\nstatu" +
      "scode\030\001 \001(\005\022\014\n\004info\030\002 \001(\t\0222\n\004body\030\003 \003(\0132" +
      "$.zb.dcts.database.CommCounterEquInfo*&\n" +
      "\nModuleType\022\006\n\002PW\020\000\022\007\n\003FSK\020\001\022\007\n\003PSK\020\002*^\n" +
      "\013DisturbType\022\022\n\016AIMING_DISTURB\020\000\022\023\n\017BARR" +
      "AGE_DISTURB\020\001\022\020\n\014COMB_DISTURB\020\002\022\024\n\020DISCR" +
      "ETE_DISTURB\020\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          zb.dcts.Dcts.getDescriptor(),
          zb.dcts.scenario.spectrum.Spectrum.getDescriptor(),
          zb.dcts.database.DataAccesslayer.getDescriptor(),
        });
    internal_static_zb_dcts_database_FixedFreqParam_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zb_dcts_database_FixedFreqParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_FixedFreqParam_descriptor,
        new java.lang.String[] { "Freq", "Bandwidth", "Power", "Type", });
    internal_static_zb_dcts_database_FreqHoppingParam_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zb_dcts_database_FreqHoppingParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_FreqHoppingParam_descriptor,
        new java.lang.String[] { "FreqSpan", "Power", "Interval", "PointNum", });
    internal_static_zb_dcts_database_ChannelParam_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zb_dcts_database_ChannelParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_ChannelParam_descriptor,
        new java.lang.String[] { "ChannelId", "FixedFreqParam", "FreqHoppingParam", "FreqParam", });
    internal_static_zb_dcts_database_BaseEquInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_zb_dcts_database_BaseEquInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_BaseEquInfo_descriptor,
        new java.lang.String[] { "Id", "Name", "Pic", "Synopsis", "UpdateTime", });
    internal_static_zb_dcts_database_CommEquInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_zb_dcts_database_CommEquInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_CommEquInfo_descriptor,
        new java.lang.String[] { "BaseInfo", "ChannelParam", });
    internal_static_zb_dcts_database_DisturbParam_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_zb_dcts_database_DisturbParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_DisturbParam_descriptor,
        new java.lang.String[] { "DisturbType", "Freq", "Bandwidth", "Power", "BeamWidth", "BeamYaw", "AntHeight", "AntGain", "MaxDistance", });
    internal_static_zb_dcts_database_ScoutParam_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_zb_dcts_database_ScoutParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_ScoutParam_descriptor,
        new java.lang.String[] { "FreqSpan", "MaxDistance", });
    internal_static_zb_dcts_database_DirectionFindingParam_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_zb_dcts_database_DirectionFindingParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_DirectionFindingParam_descriptor,
        new java.lang.String[] { "IsDirectionFinding", "Accuracy", });
    internal_static_zb_dcts_database_CommCounterEquInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_zb_dcts_database_CommCounterEquInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_CommCounterEquInfo_descriptor,
        new java.lang.String[] { "BaseInfo", "DisturbParam", "ScoutParam", "DfParam", });
    internal_static_zb_dcts_database_CommEquInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_zb_dcts_database_CommEquInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_CommEquInfoRequest_descriptor,
        new java.lang.String[] { "Method", "Query", "Body", });
    internal_static_zb_dcts_database_CommEquInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_zb_dcts_database_CommEquInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_CommEquInfoResponse_descriptor,
        new java.lang.String[] { "Statuscode", "Info", "Body", });
    internal_static_zb_dcts_database_CommCounterEquInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_zb_dcts_database_CommCounterEquInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_CommCounterEquInfoRequest_descriptor,
        new java.lang.String[] { "Method", "Query", "Body", });
    internal_static_zb_dcts_database_CommCounterEquInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_zb_dcts_database_CommCounterEquInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_CommCounterEquInfoResponse_descriptor,
        new java.lang.String[] { "Statuscode", "Info", "Body", });
    zb.dcts.Dcts.getDescriptor();
    zb.dcts.scenario.spectrum.Spectrum.getDescriptor();
    zb.dcts.database.DataAccesslayer.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
