// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database/JamTarget.proto

package zb.dcts.database;

public final class JamTargetOuterClass {
  private JamTargetOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.Location)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *干扰站高度
     * </pre>
     *
     * <code>double height = 1;</code>
     * @return The height.
     */
    double getHeight();

    /**
     * <pre>
     *干扰站经度
     * </pre>
     *
     * <code>double longitude = 2;</code>
     * @return The longitude.
     */
    double getLongitude();

    /**
     * <pre>
     *干扰站纬度
     * </pre>
     *
     * <code>double latitude = 3;</code>
     * @return The latitude.
     */
    double getLatitude();
  }
  /**
   * Protobuf type {@code zb.dcts.database.Location}
   */
  public static final class Location extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.Location)
      LocationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Location.newBuilder() to construct.
    private Location(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Location() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Location();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Location(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              height_ = input.readDouble();
              break;
            }
            case 17: {

              longitude_ = input.readDouble();
              break;
            }
            case 25: {

              latitude_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Location_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Location_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.JamTargetOuterClass.Location.class, zb.dcts.database.JamTargetOuterClass.Location.Builder.class);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private double height_;
    /**
     * <pre>
     *干扰站高度
     * </pre>
     *
     * <code>double height = 1;</code>
     * @return The height.
     */
    @java.lang.Override
    public double getHeight() {
      return height_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 2;
    private double longitude_;
    /**
     * <pre>
     *干扰站经度
     * </pre>
     *
     * <code>double longitude = 2;</code>
     * @return The longitude.
     */
    @java.lang.Override
    public double getLongitude() {
      return longitude_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 3;
    private double latitude_;
    /**
     * <pre>
     *干扰站纬度
     * </pre>
     *
     * <code>double latitude = 3;</code>
     * @return The latitude.
     */
    @java.lang.Override
    public double getLatitude() {
      return latitude_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0D) {
        output.writeDouble(1, height_);
      }
      if (longitude_ != 0D) {
        output.writeDouble(2, longitude_);
      }
      if (latitude_ != 0D) {
        output.writeDouble(3, latitude_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, height_);
      }
      if (longitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, longitude_);
      }
      if (latitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, latitude_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.JamTargetOuterClass.Location)) {
        return super.equals(obj);
      }
      zb.dcts.database.JamTargetOuterClass.Location other = (zb.dcts.database.JamTargetOuterClass.Location) obj;

      if (java.lang.Double.doubleToLongBits(getHeight())
          != java.lang.Double.doubleToLongBits(
              other.getHeight())) return false;
      if (java.lang.Double.doubleToLongBits(getLongitude())
          != java.lang.Double.doubleToLongBits(
              other.getLongitude())) return false;
      if (java.lang.Double.doubleToLongBits(getLatitude())
          != java.lang.Double.doubleToLongBits(
              other.getLatitude())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getHeight()));
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLongitude()));
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLatitude()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.Location parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.JamTargetOuterClass.Location prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.database.Location}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.Location)
        zb.dcts.database.JamTargetOuterClass.LocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Location_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Location_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.JamTargetOuterClass.Location.class, zb.dcts.database.JamTargetOuterClass.Location.Builder.class);
      }

      // Construct using zb.dcts.database.JamTargetOuterClass.Location.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        height_ = 0D;

        longitude_ = 0D;

        latitude_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Location_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.Location getDefaultInstanceForType() {
        return zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.Location build() {
        zb.dcts.database.JamTargetOuterClass.Location result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.Location buildPartial() {
        zb.dcts.database.JamTargetOuterClass.Location result = new zb.dcts.database.JamTargetOuterClass.Location(this);
        result.height_ = height_;
        result.longitude_ = longitude_;
        result.latitude_ = latitude_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.JamTargetOuterClass.Location) {
          return mergeFrom((zb.dcts.database.JamTargetOuterClass.Location)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.JamTargetOuterClass.Location other) {
        if (other == zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance()) return this;
        if (other.getHeight() != 0D) {
          setHeight(other.getHeight());
        }
        if (other.getLongitude() != 0D) {
          setLongitude(other.getLongitude());
        }
        if (other.getLatitude() != 0D) {
          setLatitude(other.getLatitude());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.JamTargetOuterClass.Location parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.JamTargetOuterClass.Location) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double height_ ;
      /**
       * <pre>
       *干扰站高度
       * </pre>
       *
       * <code>double height = 1;</code>
       * @return The height.
       */
      @java.lang.Override
      public double getHeight() {
        return height_;
      }
      /**
       * <pre>
       *干扰站高度
       * </pre>
       *
       * <code>double height = 1;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(double value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰站高度
       * </pre>
       *
       * <code>double height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0D;
        onChanged();
        return this;
      }

      private double longitude_ ;
      /**
       * <pre>
       *干扰站经度
       * </pre>
       *
       * <code>double longitude = 2;</code>
       * @return The longitude.
       */
      @java.lang.Override
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <pre>
       *干扰站经度
       * </pre>
       *
       * <code>double longitude = 2;</code>
       * @param value The longitude to set.
       * @return This builder for chaining.
       */
      public Builder setLongitude(double value) {
        
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰站经度
       * </pre>
       *
       * <code>double longitude = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitude() {
        
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <pre>
       *干扰站纬度
       * </pre>
       *
       * <code>double latitude = 3;</code>
       * @return The latitude.
       */
      @java.lang.Override
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <pre>
       *干扰站纬度
       * </pre>
       *
       * <code>double latitude = 3;</code>
       * @param value The latitude to set.
       * @return This builder for chaining.
       */
      public Builder setLatitude(double value) {
        
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰站纬度
       * </pre>
       *
       * <code>double latitude = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitude() {
        
        latitude_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.Location)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.Location)
    private static final zb.dcts.database.JamTargetOuterClass.Location DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.JamTargetOuterClass.Location();
    }

    public static zb.dcts.database.JamTargetOuterClass.Location getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Location>
        PARSER = new com.google.protobuf.AbstractParser<Location>() {
      @java.lang.Override
      public Location parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Location(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Location> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Location> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.Location getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JamStationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.JamStation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *干扰站ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *干扰机平台
     * </pre>
     *
     * <code>string jamming_platform = 2;</code>
     * @return The jammingPlatform.
     */
    java.lang.String getJammingPlatform();
    /**
     * <pre>
     *干扰机平台
     * </pre>
     *
     * <code>string jamming_platform = 2;</code>
     * @return The bytes for jammingPlatform.
     */
    com.google.protobuf.ByteString
        getJammingPlatformBytes();

    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 3;</code>
     * @return Whether the location field is set.
     */
    boolean hasLocation();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 3;</code>
     * @return The location.
     */
    zb.dcts.database.JamTargetOuterClass.Location getLocation();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 3;</code>
     */
    zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder();

    /**
     * <pre>
     *干扰功率
     * </pre>
     *
     * <code>float power = 4;</code>
     * @return The power.
     */
    float getPower();

    /**
     * <pre>
     *跳频干扰点数
     * </pre>
     *
     * <code>uint32 hop_num = 5;</code>
     * @return The hopNum.
     */
    int getHopNum();

    /**
     * <pre>
     *定频点数
     * </pre>
     *
     * <code>uint32 fix_num = 6;</code>
     * @return The fixNum.
     */
    int getFixNum();

    /**
     * <pre>
     *干扰波束宽度
     * </pre>
     *
     * <code>float beam_width = 7;</code>
     * @return The beamWidth.
     */
    float getBeamWidth();

    /**
     * <pre>
     *干扰各定频目标得分
     * </pre>
     *
     * <code>float jam_fix_score = 8;</code>
     * @return The jamFixScore.
     */
    float getJamFixScore();

    /**
     * <pre>
     *干扰各跳频目标得分
     * </pre>
     *
     * <code>float jam_hop_score = 9;</code>
     * @return The jamHopScore.
     */
    float getJamHopScore();
  }
  /**
   * <pre>
   *干扰站信息
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.JamStation}
   */
  public static final class JamStation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.JamStation)
      JamStationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JamStation.newBuilder() to construct.
    private JamStation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JamStation() {
      jammingPlatform_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JamStation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JamStation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              jammingPlatform_ = s;
              break;
            }
            case 26: {
              zb.dcts.database.JamTargetOuterClass.Location.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(zb.dcts.database.JamTargetOuterClass.Location.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            case 37: {

              power_ = input.readFloat();
              break;
            }
            case 40: {

              hopNum_ = input.readUInt32();
              break;
            }
            case 48: {

              fixNum_ = input.readUInt32();
              break;
            }
            case 61: {

              beamWidth_ = input.readFloat();
              break;
            }
            case 69: {

              jamFixScore_ = input.readFloat();
              break;
            }
            case 77: {

              jamHopScore_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamStation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamStation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.JamTargetOuterClass.JamStation.class, zb.dcts.database.JamTargetOuterClass.JamStation.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *干扰站ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int JAMMING_PLATFORM_FIELD_NUMBER = 2;
    private volatile java.lang.Object jammingPlatform_;
    /**
     * <pre>
     *干扰机平台
     * </pre>
     *
     * <code>string jamming_platform = 2;</code>
     * @return The jammingPlatform.
     */
    @java.lang.Override
    public java.lang.String getJammingPlatform() {
      java.lang.Object ref = jammingPlatform_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jammingPlatform_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *干扰机平台
     * </pre>
     *
     * <code>string jamming_platform = 2;</code>
     * @return The bytes for jammingPlatform.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJammingPlatformBytes() {
      java.lang.Object ref = jammingPlatform_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jammingPlatform_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOCATION_FIELD_NUMBER = 3;
    private zb.dcts.database.JamTargetOuterClass.Location location_;
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 3;</code>
     * @return Whether the location field is set.
     */
    @java.lang.Override
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 3;</code>
     * @return The location.
     */
    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.Location getLocation() {
      return location_ == null ? zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 3;</code>
     */
    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    public static final int POWER_FIELD_NUMBER = 4;
    private float power_;
    /**
     * <pre>
     *干扰功率
     * </pre>
     *
     * <code>float power = 4;</code>
     * @return The power.
     */
    @java.lang.Override
    public float getPower() {
      return power_;
    }

    public static final int HOP_NUM_FIELD_NUMBER = 5;
    private int hopNum_;
    /**
     * <pre>
     *跳频干扰点数
     * </pre>
     *
     * <code>uint32 hop_num = 5;</code>
     * @return The hopNum.
     */
    @java.lang.Override
    public int getHopNum() {
      return hopNum_;
    }

    public static final int FIX_NUM_FIELD_NUMBER = 6;
    private int fixNum_;
    /**
     * <pre>
     *定频点数
     * </pre>
     *
     * <code>uint32 fix_num = 6;</code>
     * @return The fixNum.
     */
    @java.lang.Override
    public int getFixNum() {
      return fixNum_;
    }

    public static final int BEAM_WIDTH_FIELD_NUMBER = 7;
    private float beamWidth_;
    /**
     * <pre>
     *干扰波束宽度
     * </pre>
     *
     * <code>float beam_width = 7;</code>
     * @return The beamWidth.
     */
    @java.lang.Override
    public float getBeamWidth() {
      return beamWidth_;
    }

    public static final int JAM_FIX_SCORE_FIELD_NUMBER = 8;
    private float jamFixScore_;
    /**
     * <pre>
     *干扰各定频目标得分
     * </pre>
     *
     * <code>float jam_fix_score = 8;</code>
     * @return The jamFixScore.
     */
    @java.lang.Override
    public float getJamFixScore() {
      return jamFixScore_;
    }

    public static final int JAM_HOP_SCORE_FIELD_NUMBER = 9;
    private float jamHopScore_;
    /**
     * <pre>
     *干扰各跳频目标得分
     * </pre>
     *
     * <code>float jam_hop_score = 9;</code>
     * @return The jamHopScore.
     */
    @java.lang.Override
    public float getJamHopScore() {
      return jamHopScore_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (!getJammingPlatformBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, jammingPlatform_);
      }
      if (location_ != null) {
        output.writeMessage(3, getLocation());
      }
      if (power_ != 0F) {
        output.writeFloat(4, power_);
      }
      if (hopNum_ != 0) {
        output.writeUInt32(5, hopNum_);
      }
      if (fixNum_ != 0) {
        output.writeUInt32(6, fixNum_);
      }
      if (beamWidth_ != 0F) {
        output.writeFloat(7, beamWidth_);
      }
      if (jamFixScore_ != 0F) {
        output.writeFloat(8, jamFixScore_);
      }
      if (jamHopScore_ != 0F) {
        output.writeFloat(9, jamHopScore_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (!getJammingPlatformBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, jammingPlatform_);
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLocation());
      }
      if (power_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, power_);
      }
      if (hopNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, hopNum_);
      }
      if (fixNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, fixNum_);
      }
      if (beamWidth_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, beamWidth_);
      }
      if (jamFixScore_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, jamFixScore_);
      }
      if (jamHopScore_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, jamHopScore_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.JamTargetOuterClass.JamStation)) {
        return super.equals(obj);
      }
      zb.dcts.database.JamTargetOuterClass.JamStation other = (zb.dcts.database.JamTargetOuterClass.JamStation) obj;

      if (getId()
          != other.getId()) return false;
      if (!getJammingPlatform()
          .equals(other.getJammingPlatform())) return false;
      if (hasLocation() != other.hasLocation()) return false;
      if (hasLocation()) {
        if (!getLocation()
            .equals(other.getLocation())) return false;
      }
      if (java.lang.Float.floatToIntBits(getPower())
          != java.lang.Float.floatToIntBits(
              other.getPower())) return false;
      if (getHopNum()
          != other.getHopNum()) return false;
      if (getFixNum()
          != other.getFixNum()) return false;
      if (java.lang.Float.floatToIntBits(getBeamWidth())
          != java.lang.Float.floatToIntBits(
              other.getBeamWidth())) return false;
      if (java.lang.Float.floatToIntBits(getJamFixScore())
          != java.lang.Float.floatToIntBits(
              other.getJamFixScore())) return false;
      if (java.lang.Float.floatToIntBits(getJamHopScore())
          != java.lang.Float.floatToIntBits(
              other.getJamHopScore())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + JAMMING_PLATFORM_FIELD_NUMBER;
      hash = (53 * hash) + getJammingPlatform().hashCode();
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPower());
      hash = (37 * hash) + HOP_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getHopNum();
      hash = (37 * hash) + FIX_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getFixNum();
      hash = (37 * hash) + BEAM_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBeamWidth());
      hash = (37 * hash) + JAM_FIX_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getJamFixScore());
      hash = (37 * hash) + JAM_HOP_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getJamHopScore());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamStation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.JamTargetOuterClass.JamStation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *干扰站信息
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.JamStation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.JamStation)
        zb.dcts.database.JamTargetOuterClass.JamStationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamStation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamStation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.JamTargetOuterClass.JamStation.class, zb.dcts.database.JamTargetOuterClass.JamStation.Builder.class);
      }

      // Construct using zb.dcts.database.JamTargetOuterClass.JamStation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        jammingPlatform_ = "";

        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        power_ = 0F;

        hopNum_ = 0;

        fixNum_ = 0;

        beamWidth_ = 0F;

        jamFixScore_ = 0F;

        jamHopScore_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamStation_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.JamStation getDefaultInstanceForType() {
        return zb.dcts.database.JamTargetOuterClass.JamStation.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.JamStation build() {
        zb.dcts.database.JamTargetOuterClass.JamStation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.JamStation buildPartial() {
        zb.dcts.database.JamTargetOuterClass.JamStation result = new zb.dcts.database.JamTargetOuterClass.JamStation(this);
        result.id_ = id_;
        result.jammingPlatform_ = jammingPlatform_;
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        result.power_ = power_;
        result.hopNum_ = hopNum_;
        result.fixNum_ = fixNum_;
        result.beamWidth_ = beamWidth_;
        result.jamFixScore_ = jamFixScore_;
        result.jamHopScore_ = jamHopScore_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.JamTargetOuterClass.JamStation) {
          return mergeFrom((zb.dcts.database.JamTargetOuterClass.JamStation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.JamTargetOuterClass.JamStation other) {
        if (other == zb.dcts.database.JamTargetOuterClass.JamStation.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getJammingPlatform().isEmpty()) {
          jammingPlatform_ = other.jammingPlatform_;
          onChanged();
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.getPower() != 0F) {
          setPower(other.getPower());
        }
        if (other.getHopNum() != 0) {
          setHopNum(other.getHopNum());
        }
        if (other.getFixNum() != 0) {
          setFixNum(other.getFixNum());
        }
        if (other.getBeamWidth() != 0F) {
          setBeamWidth(other.getBeamWidth());
        }
        if (other.getJamFixScore() != 0F) {
          setJamFixScore(other.getJamFixScore());
        }
        if (other.getJamHopScore() != 0F) {
          setJamHopScore(other.getJamHopScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.JamTargetOuterClass.JamStation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.JamTargetOuterClass.JamStation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *干扰站ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *干扰站ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰站ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object jammingPlatform_ = "";
      /**
       * <pre>
       *干扰机平台
       * </pre>
       *
       * <code>string jamming_platform = 2;</code>
       * @return The jammingPlatform.
       */
      public java.lang.String getJammingPlatform() {
        java.lang.Object ref = jammingPlatform_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jammingPlatform_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *干扰机平台
       * </pre>
       *
       * <code>string jamming_platform = 2;</code>
       * @return The bytes for jammingPlatform.
       */
      public com.google.protobuf.ByteString
          getJammingPlatformBytes() {
        java.lang.Object ref = jammingPlatform_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jammingPlatform_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *干扰机平台
       * </pre>
       *
       * <code>string jamming_platform = 2;</code>
       * @param value The jammingPlatform to set.
       * @return This builder for chaining.
       */
      public Builder setJammingPlatform(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jammingPlatform_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰机平台
       * </pre>
       *
       * <code>string jamming_platform = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearJammingPlatform() {
        
        jammingPlatform_ = getDefaultInstance().getJammingPlatform();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰机平台
       * </pre>
       *
       * <code>string jamming_platform = 2;</code>
       * @param value The bytes for jammingPlatform to set.
       * @return This builder for chaining.
       */
      public Builder setJammingPlatformBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jammingPlatform_ = value;
        onChanged();
        return this;
      }

      private zb.dcts.database.JamTargetOuterClass.Location location_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder> locationBuilder_;
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       * @return Whether the location field is set.
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       * @return The location.
       */
      public zb.dcts.database.JamTargetOuterClass.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       */
      public Builder setLocation(zb.dcts.database.JamTargetOuterClass.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       */
      public Builder setLocation(
          zb.dcts.database.JamTargetOuterClass.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       */
      public Builder mergeLocation(zb.dcts.database.JamTargetOuterClass.Location value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              zb.dcts.database.JamTargetOuterClass.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       */
      public zb.dcts.database.JamTargetOuterClass.Location.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       */
      public zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private float power_ ;
      /**
       * <pre>
       *干扰功率
       * </pre>
       *
       * <code>float power = 4;</code>
       * @return The power.
       */
      @java.lang.Override
      public float getPower() {
        return power_;
      }
      /**
       * <pre>
       *干扰功率
       * </pre>
       *
       * <code>float power = 4;</code>
       * @param value The power to set.
       * @return This builder for chaining.
       */
      public Builder setPower(float value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰功率
       * </pre>
       *
       * <code>float power = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPower() {
        
        power_ = 0F;
        onChanged();
        return this;
      }

      private int hopNum_ ;
      /**
       * <pre>
       *跳频干扰点数
       * </pre>
       *
       * <code>uint32 hop_num = 5;</code>
       * @return The hopNum.
       */
      @java.lang.Override
      public int getHopNum() {
        return hopNum_;
      }
      /**
       * <pre>
       *跳频干扰点数
       * </pre>
       *
       * <code>uint32 hop_num = 5;</code>
       * @param value The hopNum to set.
       * @return This builder for chaining.
       */
      public Builder setHopNum(int value) {
        
        hopNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频干扰点数
       * </pre>
       *
       * <code>uint32 hop_num = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHopNum() {
        
        hopNum_ = 0;
        onChanged();
        return this;
      }

      private int fixNum_ ;
      /**
       * <pre>
       *定频点数
       * </pre>
       *
       * <code>uint32 fix_num = 6;</code>
       * @return The fixNum.
       */
      @java.lang.Override
      public int getFixNum() {
        return fixNum_;
      }
      /**
       * <pre>
       *定频点数
       * </pre>
       *
       * <code>uint32 fix_num = 6;</code>
       * @param value The fixNum to set.
       * @return This builder for chaining.
       */
      public Builder setFixNum(int value) {
        
        fixNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *定频点数
       * </pre>
       *
       * <code>uint32 fix_num = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixNum() {
        
        fixNum_ = 0;
        onChanged();
        return this;
      }

      private float beamWidth_ ;
      /**
       * <pre>
       *干扰波束宽度
       * </pre>
       *
       * <code>float beam_width = 7;</code>
       * @return The beamWidth.
       */
      @java.lang.Override
      public float getBeamWidth() {
        return beamWidth_;
      }
      /**
       * <pre>
       *干扰波束宽度
       * </pre>
       *
       * <code>float beam_width = 7;</code>
       * @param value The beamWidth to set.
       * @return This builder for chaining.
       */
      public Builder setBeamWidth(float value) {
        
        beamWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰波束宽度
       * </pre>
       *
       * <code>float beam_width = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearBeamWidth() {
        
        beamWidth_ = 0F;
        onChanged();
        return this;
      }

      private float jamFixScore_ ;
      /**
       * <pre>
       *干扰各定频目标得分
       * </pre>
       *
       * <code>float jam_fix_score = 8;</code>
       * @return The jamFixScore.
       */
      @java.lang.Override
      public float getJamFixScore() {
        return jamFixScore_;
      }
      /**
       * <pre>
       *干扰各定频目标得分
       * </pre>
       *
       * <code>float jam_fix_score = 8;</code>
       * @param value The jamFixScore to set.
       * @return This builder for chaining.
       */
      public Builder setJamFixScore(float value) {
        
        jamFixScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰各定频目标得分
       * </pre>
       *
       * <code>float jam_fix_score = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearJamFixScore() {
        
        jamFixScore_ = 0F;
        onChanged();
        return this;
      }

      private float jamHopScore_ ;
      /**
       * <pre>
       *干扰各跳频目标得分
       * </pre>
       *
       * <code>float jam_hop_score = 9;</code>
       * @return The jamHopScore.
       */
      @java.lang.Override
      public float getJamHopScore() {
        return jamHopScore_;
      }
      /**
       * <pre>
       *干扰各跳频目标得分
       * </pre>
       *
       * <code>float jam_hop_score = 9;</code>
       * @param value The jamHopScore to set.
       * @return This builder for chaining.
       */
      public Builder setJamHopScore(float value) {
        
        jamHopScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *干扰各跳频目标得分
       * </pre>
       *
       * <code>float jam_hop_score = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearJamHopScore() {
        
        jamHopScore_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.JamStation)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.JamStation)
    private static final zb.dcts.database.JamTargetOuterClass.JamStation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.JamTargetOuterClass.JamStation();
    }

    public static zb.dcts.database.JamTargetOuterClass.JamStation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JamStation>
        PARSER = new com.google.protobuf.AbstractParser<JamStation>() {
      @java.lang.Override
      public JamStation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JamStation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JamStation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JamStation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.JamStation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JamTargetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.JamTarget)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *目标网络ID
     * </pre>
     *
     * <code>uint32 net_id = 1;</code>
     * @return The netId.
     */
    int getNetId();

    /**
     * <pre>
     *网内用户ID
     * </pre>
     *
     * <code>uint32 user_id = 2;</code>
     * @return The userId.
     */
    int getUserId();

    /**
     * <pre>
     *网内用户平台类型
     * </pre>
     *
     * <code>string platform = 3;</code>
     * @return The platform.
     */
    java.lang.String getPlatform();
    /**
     * <pre>
     *网内用户平台类型
     * </pre>
     *
     * <code>string platform = 3;</code>
     * @return The bytes for platform.
     */
    com.google.protobuf.ByteString
        getPlatformBytes();

    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string net_type = 4;</code>
     * @return The netType.
     */
    java.lang.String getNetType();
    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string net_type = 4;</code>
     * @return The bytes for netType.
     */
    com.google.protobuf.ByteString
        getNetTypeBytes();

    /**
     * <pre>
     *带宽
     * </pre>
     *
     * <code>double bandwidth = 5;</code>
     * @return The bandwidth.
     */
    double getBandwidth();

    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>repeated double frequency = 6;</code>
     * @return A list containing the frequency.
     */
    java.util.List<java.lang.Double> getFrequencyList();
    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>repeated double frequency = 6;</code>
     * @return The count of frequency.
     */
    int getFrequencyCount();
    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>repeated double frequency = 6;</code>
     * @param index The index of the element to return.
     * @return The frequency at the given index.
     */
    double getFrequency(int index);

    /**
     * <pre>
     *可信度
     * </pre>
     *
     * <code>float confidence = 7;</code>
     * @return The confidence.
     */
    float getConfidence();

    /**
     * <pre>
     *优先级
     * </pre>
     *
     * <code>uint32 priority = 8;</code>
     * @return The priority.
     */
    int getPriority();

    /**
     * <pre>
     *频率间隔
     * </pre>
     *
     * <code>float interval = 9;</code>
     * @return The interval.
     */
    float getInterval();

    /**
     * <pre>
     *跳频点数
     * </pre>
     *
     * <code>uint32 hop_points = 10;</code>
     * @return The hopPoints.
     */
    int getHopPoints();

    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>float power = 11;</code>
     * @return The power.
     */
    float getPower();

    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 12;</code>
     * @return Whether the location field is set.
     */
    boolean hasLocation();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 12;</code>
     * @return The location.
     */
    zb.dcts.database.JamTargetOuterClass.Location getLocation();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 12;</code>
     */
    zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder();

    /**
     * <pre>
     *目标类型
     * </pre>
     *
     * <code>string target_type = 13;</code>
     * @return The targetType.
     */
    java.lang.String getTargetType();
    /**
     * <pre>
     *目标类型
     * </pre>
     *
     * <code>string target_type = 13;</code>
     * @return The bytes for targetType.
     */
    com.google.protobuf.ByteString
        getTargetTypeBytes();

    /**
     * <pre>
     *通信对抗装备的id
     * </pre>
     *
     * <code>uint32 equ_id = 14;</code>
     * @return The equId.
     */
    int getEquId();
  }
  /**
   * <pre>
   * 通信用户类
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.JamTarget}
   */
  public static final class JamTarget extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.JamTarget)
      JamTargetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use JamTarget.newBuilder() to construct.
    private JamTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private JamTarget() {
      platform_ = "";
      netType_ = "";
      frequency_ = emptyDoubleList();
      targetType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new JamTarget();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private JamTarget(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              netId_ = input.readUInt32();
              break;
            }
            case 16: {

              userId_ = input.readUInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              platform_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              netType_ = s;
              break;
            }
            case 41: {

              bandwidth_ = input.readDouble();
              break;
            }
            case 49: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                frequency_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              frequency_.addDouble(input.readDouble());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                frequency_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                frequency_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 61: {

              confidence_ = input.readFloat();
              break;
            }
            case 64: {

              priority_ = input.readUInt32();
              break;
            }
            case 77: {

              interval_ = input.readFloat();
              break;
            }
            case 80: {

              hopPoints_ = input.readUInt32();
              break;
            }
            case 93: {

              power_ = input.readFloat();
              break;
            }
            case 98: {
              zb.dcts.database.JamTargetOuterClass.Location.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(zb.dcts.database.JamTargetOuterClass.Location.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              targetType_ = s;
              break;
            }
            case 112: {

              equId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          frequency_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamTarget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamTarget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.JamTargetOuterClass.JamTarget.class, zb.dcts.database.JamTargetOuterClass.JamTarget.Builder.class);
    }

    public static final int NET_ID_FIELD_NUMBER = 1;
    private int netId_;
    /**
     * <pre>
     *目标网络ID
     * </pre>
     *
     * <code>uint32 net_id = 1;</code>
     * @return The netId.
     */
    @java.lang.Override
    public int getNetId() {
      return netId_;
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private int userId_;
    /**
     * <pre>
     *网内用户ID
     * </pre>
     *
     * <code>uint32 user_id = 2;</code>
     * @return The userId.
     */
    @java.lang.Override
    public int getUserId() {
      return userId_;
    }

    public static final int PLATFORM_FIELD_NUMBER = 3;
    private volatile java.lang.Object platform_;
    /**
     * <pre>
     *网内用户平台类型
     * </pre>
     *
     * <code>string platform = 3;</code>
     * @return The platform.
     */
    @java.lang.Override
    public java.lang.String getPlatform() {
      java.lang.Object ref = platform_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        platform_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *网内用户平台类型
     * </pre>
     *
     * <code>string platform = 3;</code>
     * @return The bytes for platform.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPlatformBytes() {
      java.lang.Object ref = platform_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        platform_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NET_TYPE_FIELD_NUMBER = 4;
    private volatile java.lang.Object netType_;
    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string net_type = 4;</code>
     * @return The netType.
     */
    @java.lang.Override
    public java.lang.String getNetType() {
      java.lang.Object ref = netType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        netType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string net_type = 4;</code>
     * @return The bytes for netType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNetTypeBytes() {
      java.lang.Object ref = netType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        netType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BANDWIDTH_FIELD_NUMBER = 5;
    private double bandwidth_;
    /**
     * <pre>
     *带宽
     * </pre>
     *
     * <code>double bandwidth = 5;</code>
     * @return The bandwidth.
     */
    @java.lang.Override
    public double getBandwidth() {
      return bandwidth_;
    }

    public static final int FREQUENCY_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.DoubleList frequency_;
    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>repeated double frequency = 6;</code>
     * @return A list containing the frequency.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getFrequencyList() {
      return frequency_;
    }
    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>repeated double frequency = 6;</code>
     * @return The count of frequency.
     */
    public int getFrequencyCount() {
      return frequency_.size();
    }
    /**
     * <pre>
     *频率
     * </pre>
     *
     * <code>repeated double frequency = 6;</code>
     * @param index The index of the element to return.
     * @return The frequency at the given index.
     */
    public double getFrequency(int index) {
      return frequency_.getDouble(index);
    }
    private int frequencyMemoizedSerializedSize = -1;

    public static final int CONFIDENCE_FIELD_NUMBER = 7;
    private float confidence_;
    /**
     * <pre>
     *可信度
     * </pre>
     *
     * <code>float confidence = 7;</code>
     * @return The confidence.
     */
    @java.lang.Override
    public float getConfidence() {
      return confidence_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 8;
    private int priority_;
    /**
     * <pre>
     *优先级
     * </pre>
     *
     * <code>uint32 priority = 8;</code>
     * @return The priority.
     */
    @java.lang.Override
    public int getPriority() {
      return priority_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 9;
    private float interval_;
    /**
     * <pre>
     *频率间隔
     * </pre>
     *
     * <code>float interval = 9;</code>
     * @return The interval.
     */
    @java.lang.Override
    public float getInterval() {
      return interval_;
    }

    public static final int HOP_POINTS_FIELD_NUMBER = 10;
    private int hopPoints_;
    /**
     * <pre>
     *跳频点数
     * </pre>
     *
     * <code>uint32 hop_points = 10;</code>
     * @return The hopPoints.
     */
    @java.lang.Override
    public int getHopPoints() {
      return hopPoints_;
    }

    public static final int POWER_FIELD_NUMBER = 11;
    private float power_;
    /**
     * <pre>
     *功率
     * </pre>
     *
     * <code>float power = 11;</code>
     * @return The power.
     */
    @java.lang.Override
    public float getPower() {
      return power_;
    }

    public static final int LOCATION_FIELD_NUMBER = 12;
    private zb.dcts.database.JamTargetOuterClass.Location location_;
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 12;</code>
     * @return Whether the location field is set.
     */
    @java.lang.Override
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 12;</code>
     * @return The location.
     */
    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.Location getLocation() {
      return location_ == null ? zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 12;</code>
     */
    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    public static final int TARGET_TYPE_FIELD_NUMBER = 13;
    private volatile java.lang.Object targetType_;
    /**
     * <pre>
     *目标类型
     * </pre>
     *
     * <code>string target_type = 13;</code>
     * @return The targetType.
     */
    @java.lang.Override
    public java.lang.String getTargetType() {
      java.lang.Object ref = targetType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *目标类型
     * </pre>
     *
     * <code>string target_type = 13;</code>
     * @return The bytes for targetType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTargetTypeBytes() {
      java.lang.Object ref = targetType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EQU_ID_FIELD_NUMBER = 14;
    private int equId_;
    /**
     * <pre>
     *通信对抗装备的id
     * </pre>
     *
     * <code>uint32 equ_id = 14;</code>
     * @return The equId.
     */
    @java.lang.Override
    public int getEquId() {
      return equId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (netId_ != 0) {
        output.writeUInt32(1, netId_);
      }
      if (userId_ != 0) {
        output.writeUInt32(2, userId_);
      }
      if (!getPlatformBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, platform_);
      }
      if (!getNetTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, netType_);
      }
      if (bandwidth_ != 0D) {
        output.writeDouble(5, bandwidth_);
      }
      if (getFrequencyList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(frequencyMemoizedSerializedSize);
      }
      for (int i = 0; i < frequency_.size(); i++) {
        output.writeDoubleNoTag(frequency_.getDouble(i));
      }
      if (confidence_ != 0F) {
        output.writeFloat(7, confidence_);
      }
      if (priority_ != 0) {
        output.writeUInt32(8, priority_);
      }
      if (interval_ != 0F) {
        output.writeFloat(9, interval_);
      }
      if (hopPoints_ != 0) {
        output.writeUInt32(10, hopPoints_);
      }
      if (power_ != 0F) {
        output.writeFloat(11, power_);
      }
      if (location_ != null) {
        output.writeMessage(12, getLocation());
      }
      if (!getTargetTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, targetType_);
      }
      if (equId_ != 0) {
        output.writeUInt32(14, equId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (netId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, netId_);
      }
      if (userId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, userId_);
      }
      if (!getPlatformBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, platform_);
      }
      if (!getNetTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, netType_);
      }
      if (bandwidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, bandwidth_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFrequencyList().size();
        size += dataSize;
        if (!getFrequencyList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        frequencyMemoizedSerializedSize = dataSize;
      }
      if (confidence_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, confidence_);
      }
      if (priority_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, priority_);
      }
      if (interval_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, interval_);
      }
      if (hopPoints_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, hopPoints_);
      }
      if (power_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, power_);
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getLocation());
      }
      if (!getTargetTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, targetType_);
      }
      if (equId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, equId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.JamTargetOuterClass.JamTarget)) {
        return super.equals(obj);
      }
      zb.dcts.database.JamTargetOuterClass.JamTarget other = (zb.dcts.database.JamTargetOuterClass.JamTarget) obj;

      if (getNetId()
          != other.getNetId()) return false;
      if (getUserId()
          != other.getUserId()) return false;
      if (!getPlatform()
          .equals(other.getPlatform())) return false;
      if (!getNetType()
          .equals(other.getNetType())) return false;
      if (java.lang.Double.doubleToLongBits(getBandwidth())
          != java.lang.Double.doubleToLongBits(
              other.getBandwidth())) return false;
      if (!getFrequencyList()
          .equals(other.getFrequencyList())) return false;
      if (java.lang.Float.floatToIntBits(getConfidence())
          != java.lang.Float.floatToIntBits(
              other.getConfidence())) return false;
      if (getPriority()
          != other.getPriority()) return false;
      if (java.lang.Float.floatToIntBits(getInterval())
          != java.lang.Float.floatToIntBits(
              other.getInterval())) return false;
      if (getHopPoints()
          != other.getHopPoints()) return false;
      if (java.lang.Float.floatToIntBits(getPower())
          != java.lang.Float.floatToIntBits(
              other.getPower())) return false;
      if (hasLocation() != other.hasLocation()) return false;
      if (hasLocation()) {
        if (!getLocation()
            .equals(other.getLocation())) return false;
      }
      if (!getTargetType()
          .equals(other.getTargetType())) return false;
      if (getEquId()
          != other.getEquId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNetId();
      hash = (37 * hash) + USER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId();
      hash = (37 * hash) + PLATFORM_FIELD_NUMBER;
      hash = (53 * hash) + getPlatform().hashCode();
      hash = (37 * hash) + NET_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getNetType().hashCode();
      hash = (37 * hash) + BANDWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBandwidth()));
      if (getFrequencyCount() > 0) {
        hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
        hash = (53 * hash) + getFrequencyList().hashCode();
      }
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getConfidence());
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + getPriority();
      hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getInterval());
      hash = (37 * hash) + HOP_POINTS_FIELD_NUMBER;
      hash = (53 * hash) + getHopPoints();
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPower());
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      hash = (37 * hash) + TARGET_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getTargetType().hashCode();
      hash = (37 * hash) + EQU_ID_FIELD_NUMBER;
      hash = (53 * hash) + getEquId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.JamTarget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.JamTargetOuterClass.JamTarget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通信用户类
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.JamTarget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.JamTarget)
        zb.dcts.database.JamTargetOuterClass.JamTargetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamTarget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.JamTargetOuterClass.JamTarget.class, zb.dcts.database.JamTargetOuterClass.JamTarget.Builder.class);
      }

      // Construct using zb.dcts.database.JamTargetOuterClass.JamTarget.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        netId_ = 0;

        userId_ = 0;

        platform_ = "";

        netType_ = "";

        bandwidth_ = 0D;

        frequency_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        confidence_ = 0F;

        priority_ = 0;

        interval_ = 0F;

        hopPoints_ = 0;

        power_ = 0F;

        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        targetType_ = "";

        equId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_JamTarget_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.JamTarget getDefaultInstanceForType() {
        return zb.dcts.database.JamTargetOuterClass.JamTarget.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.JamTarget build() {
        zb.dcts.database.JamTargetOuterClass.JamTarget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.JamTarget buildPartial() {
        zb.dcts.database.JamTargetOuterClass.JamTarget result = new zb.dcts.database.JamTargetOuterClass.JamTarget(this);
        int from_bitField0_ = bitField0_;
        result.netId_ = netId_;
        result.userId_ = userId_;
        result.platform_ = platform_;
        result.netType_ = netType_;
        result.bandwidth_ = bandwidth_;
        if (((bitField0_ & 0x00000001) != 0)) {
          frequency_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.frequency_ = frequency_;
        result.confidence_ = confidence_;
        result.priority_ = priority_;
        result.interval_ = interval_;
        result.hopPoints_ = hopPoints_;
        result.power_ = power_;
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        result.targetType_ = targetType_;
        result.equId_ = equId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.JamTargetOuterClass.JamTarget) {
          return mergeFrom((zb.dcts.database.JamTargetOuterClass.JamTarget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.JamTargetOuterClass.JamTarget other) {
        if (other == zb.dcts.database.JamTargetOuterClass.JamTarget.getDefaultInstance()) return this;
        if (other.getNetId() != 0) {
          setNetId(other.getNetId());
        }
        if (other.getUserId() != 0) {
          setUserId(other.getUserId());
        }
        if (!other.getPlatform().isEmpty()) {
          platform_ = other.platform_;
          onChanged();
        }
        if (!other.getNetType().isEmpty()) {
          netType_ = other.netType_;
          onChanged();
        }
        if (other.getBandwidth() != 0D) {
          setBandwidth(other.getBandwidth());
        }
        if (!other.frequency_.isEmpty()) {
          if (frequency_.isEmpty()) {
            frequency_ = other.frequency_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFrequencyIsMutable();
            frequency_.addAll(other.frequency_);
          }
          onChanged();
        }
        if (other.getConfidence() != 0F) {
          setConfidence(other.getConfidence());
        }
        if (other.getPriority() != 0) {
          setPriority(other.getPriority());
        }
        if (other.getInterval() != 0F) {
          setInterval(other.getInterval());
        }
        if (other.getHopPoints() != 0) {
          setHopPoints(other.getHopPoints());
        }
        if (other.getPower() != 0F) {
          setPower(other.getPower());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (!other.getTargetType().isEmpty()) {
          targetType_ = other.targetType_;
          onChanged();
        }
        if (other.getEquId() != 0) {
          setEquId(other.getEquId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.JamTargetOuterClass.JamTarget parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.JamTargetOuterClass.JamTarget) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int netId_ ;
      /**
       * <pre>
       *目标网络ID
       * </pre>
       *
       * <code>uint32 net_id = 1;</code>
       * @return The netId.
       */
      @java.lang.Override
      public int getNetId() {
        return netId_;
      }
      /**
       * <pre>
       *目标网络ID
       * </pre>
       *
       * <code>uint32 net_id = 1;</code>
       * @param value The netId to set.
       * @return This builder for chaining.
       */
      public Builder setNetId(int value) {
        
        netId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *目标网络ID
       * </pre>
       *
       * <code>uint32 net_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNetId() {
        
        netId_ = 0;
        onChanged();
        return this;
      }

      private int userId_ ;
      /**
       * <pre>
       *网内用户ID
       * </pre>
       *
       * <code>uint32 user_id = 2;</code>
       * @return The userId.
       */
      @java.lang.Override
      public int getUserId() {
        return userId_;
      }
      /**
       * <pre>
       *网内用户ID
       * </pre>
       *
       * <code>uint32 user_id = 2;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(int value) {
        
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网内用户ID
       * </pre>
       *
       * <code>uint32 user_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        
        userId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object platform_ = "";
      /**
       * <pre>
       *网内用户平台类型
       * </pre>
       *
       * <code>string platform = 3;</code>
       * @return The platform.
       */
      public java.lang.String getPlatform() {
        java.lang.Object ref = platform_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          platform_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *网内用户平台类型
       * </pre>
       *
       * <code>string platform = 3;</code>
       * @return The bytes for platform.
       */
      public com.google.protobuf.ByteString
          getPlatformBytes() {
        java.lang.Object ref = platform_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          platform_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *网内用户平台类型
       * </pre>
       *
       * <code>string platform = 3;</code>
       * @param value The platform to set.
       * @return This builder for chaining.
       */
      public Builder setPlatform(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        platform_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网内用户平台类型
       * </pre>
       *
       * <code>string platform = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatform() {
        
        platform_ = getDefaultInstance().getPlatform();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网内用户平台类型
       * </pre>
       *
       * <code>string platform = 3;</code>
       * @param value The bytes for platform to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        platform_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object netType_ = "";
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string net_type = 4;</code>
       * @return The netType.
       */
      public java.lang.String getNetType() {
        java.lang.Object ref = netType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          netType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string net_type = 4;</code>
       * @return The bytes for netType.
       */
      public com.google.protobuf.ByteString
          getNetTypeBytes() {
        java.lang.Object ref = netType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          netType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string net_type = 4;</code>
       * @param value The netType to set.
       * @return This builder for chaining.
       */
      public Builder setNetType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        netType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string net_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNetType() {
        
        netType_ = getDefaultInstance().getNetType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string net_type = 4;</code>
       * @param value The bytes for netType to set.
       * @return This builder for chaining.
       */
      public Builder setNetTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        netType_ = value;
        onChanged();
        return this;
      }

      private double bandwidth_ ;
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 5;</code>
       * @return The bandwidth.
       */
      @java.lang.Override
      public double getBandwidth() {
        return bandwidth_;
      }
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 5;</code>
       * @param value The bandwidth to set.
       * @return This builder for chaining.
       */
      public Builder setBandwidth(double value) {
        
        bandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *带宽
       * </pre>
       *
       * <code>double bandwidth = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBandwidth() {
        
        bandwidth_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList frequency_ = emptyDoubleList();
      private void ensureFrequencyIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          frequency_ = mutableCopy(frequency_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>repeated double frequency = 6;</code>
       * @return A list containing the frequency.
       */
      public java.util.List<java.lang.Double>
          getFrequencyList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(frequency_) : frequency_;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>repeated double frequency = 6;</code>
       * @return The count of frequency.
       */
      public int getFrequencyCount() {
        return frequency_.size();
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>repeated double frequency = 6;</code>
       * @param index The index of the element to return.
       * @return The frequency at the given index.
       */
      public double getFrequency(int index) {
        return frequency_.getDouble(index);
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>repeated double frequency = 6;</code>
       * @param index The index to set the value at.
       * @param value The frequency to set.
       * @return This builder for chaining.
       */
      public Builder setFrequency(
          int index, double value) {
        ensureFrequencyIsMutable();
        frequency_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>repeated double frequency = 6;</code>
       * @param value The frequency to add.
       * @return This builder for chaining.
       */
      public Builder addFrequency(double value) {
        ensureFrequencyIsMutable();
        frequency_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>repeated double frequency = 6;</code>
       * @param values The frequency to add.
       * @return This builder for chaining.
       */
      public Builder addAllFrequency(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureFrequencyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, frequency_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率
       * </pre>
       *
       * <code>repeated double frequency = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrequency() {
        frequency_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private float confidence_ ;
      /**
       * <pre>
       *可信度
       * </pre>
       *
       * <code>float confidence = 7;</code>
       * @return The confidence.
       */
      @java.lang.Override
      public float getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *可信度
       * </pre>
       *
       * <code>float confidence = 7;</code>
       * @param value The confidence to set.
       * @return This builder for chaining.
       */
      public Builder setConfidence(float value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *可信度
       * </pre>
       *
       * <code>float confidence = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfidence() {
        
        confidence_ = 0F;
        onChanged();
        return this;
      }

      private int priority_ ;
      /**
       * <pre>
       *优先级
       * </pre>
       *
       * <code>uint32 priority = 8;</code>
       * @return The priority.
       */
      @java.lang.Override
      public int getPriority() {
        return priority_;
      }
      /**
       * <pre>
       *优先级
       * </pre>
       *
       * <code>uint32 priority = 8;</code>
       * @param value The priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriority(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *优先级
       * </pre>
       *
       * <code>uint32 priority = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private float interval_ ;
      /**
       * <pre>
       *频率间隔
       * </pre>
       *
       * <code>float interval = 9;</code>
       * @return The interval.
       */
      @java.lang.Override
      public float getInterval() {
        return interval_;
      }
      /**
       * <pre>
       *频率间隔
       * </pre>
       *
       * <code>float interval = 9;</code>
       * @param value The interval to set.
       * @return This builder for chaining.
       */
      public Builder setInterval(float value) {
        
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率间隔
       * </pre>
       *
       * <code>float interval = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterval() {
        
        interval_ = 0F;
        onChanged();
        return this;
      }

      private int hopPoints_ ;
      /**
       * <pre>
       *跳频点数
       * </pre>
       *
       * <code>uint32 hop_points = 10;</code>
       * @return The hopPoints.
       */
      @java.lang.Override
      public int getHopPoints() {
        return hopPoints_;
      }
      /**
       * <pre>
       *跳频点数
       * </pre>
       *
       * <code>uint32 hop_points = 10;</code>
       * @param value The hopPoints to set.
       * @return This builder for chaining.
       */
      public Builder setHopPoints(int value) {
        
        hopPoints_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频点数
       * </pre>
       *
       * <code>uint32 hop_points = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHopPoints() {
        
        hopPoints_ = 0;
        onChanged();
        return this;
      }

      private float power_ ;
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>float power = 11;</code>
       * @return The power.
       */
      @java.lang.Override
      public float getPower() {
        return power_;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>float power = 11;</code>
       * @param value The power to set.
       * @return This builder for chaining.
       */
      public Builder setPower(float value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功率
       * </pre>
       *
       * <code>float power = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPower() {
        
        power_ = 0F;
        onChanged();
        return this;
      }

      private zb.dcts.database.JamTargetOuterClass.Location location_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder> locationBuilder_;
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       * @return Whether the location field is set.
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       * @return The location.
       */
      public zb.dcts.database.JamTargetOuterClass.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       */
      public Builder setLocation(zb.dcts.database.JamTargetOuterClass.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       */
      public Builder setLocation(
          zb.dcts.database.JamTargetOuterClass.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       */
      public Builder mergeLocation(zb.dcts.database.JamTargetOuterClass.Location value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              zb.dcts.database.JamTargetOuterClass.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       */
      public zb.dcts.database.JamTargetOuterClass.Location.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       */
      public zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      private java.lang.Object targetType_ = "";
      /**
       * <pre>
       *目标类型
       * </pre>
       *
       * <code>string target_type = 13;</code>
       * @return The targetType.
       */
      public java.lang.String getTargetType() {
        java.lang.Object ref = targetType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          targetType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *目标类型
       * </pre>
       *
       * <code>string target_type = 13;</code>
       * @return The bytes for targetType.
       */
      public com.google.protobuf.ByteString
          getTargetTypeBytes() {
        java.lang.Object ref = targetType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *目标类型
       * </pre>
       *
       * <code>string target_type = 13;</code>
       * @param value The targetType to set.
       * @return This builder for chaining.
       */
      public Builder setTargetType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        targetType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *目标类型
       * </pre>
       *
       * <code>string target_type = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetType() {
        
        targetType_ = getDefaultInstance().getTargetType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *目标类型
       * </pre>
       *
       * <code>string target_type = 13;</code>
       * @param value The bytes for targetType to set.
       * @return This builder for chaining.
       */
      public Builder setTargetTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        targetType_ = value;
        onChanged();
        return this;
      }

      private int equId_ ;
      /**
       * <pre>
       *通信对抗装备的id
       * </pre>
       *
       * <code>uint32 equ_id = 14;</code>
       * @return The equId.
       */
      @java.lang.Override
      public int getEquId() {
        return equId_;
      }
      /**
       * <pre>
       *通信对抗装备的id
       * </pre>
       *
       * <code>uint32 equ_id = 14;</code>
       * @param value The equId to set.
       * @return This builder for chaining.
       */
      public Builder setEquId(int value) {
        
        equId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通信对抗装备的id
       * </pre>
       *
       * <code>uint32 equ_id = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquId() {
        
        equId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.JamTarget)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.JamTarget)
    private static final zb.dcts.database.JamTargetOuterClass.JamTarget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.JamTargetOuterClass.JamTarget();
    }

    public static zb.dcts.database.JamTargetOuterClass.JamTarget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JamTarget>
        PARSER = new com.google.protobuf.AbstractParser<JamTarget>() {
      @java.lang.Override
      public JamTarget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JamTarget(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<JamTarget> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JamTarget> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.JamTarget getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BaseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.database.Base)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *阵地ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 2;</code>
     * @return Whether the location field is set.
     */
    boolean hasLocation();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 2;</code>
     * @return The location.
     */
    zb.dcts.database.JamTargetOuterClass.Location getLocation();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 2;</code>
     */
    zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder();
  }
  /**
   * <pre>
   *阵地信息
   * </pre>
   *
   * Protobuf type {@code zb.dcts.database.Base}
   */
  public static final class Base extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.database.Base)
      BaseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Base.newBuilder() to construct.
    private Base(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Base() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Base();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Base(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 18: {
              zb.dcts.database.JamTargetOuterClass.Location.Builder subBuilder = null;
              if (location_ != null) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(zb.dcts.database.JamTargetOuterClass.Location.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Base_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Base_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.database.JamTargetOuterClass.Base.class, zb.dcts.database.JamTargetOuterClass.Base.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *阵地ID
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int LOCATION_FIELD_NUMBER = 2;
    private zb.dcts.database.JamTargetOuterClass.Location location_;
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 2;</code>
     * @return Whether the location field is set.
     */
    @java.lang.Override
    public boolean hasLocation() {
      return location_ != null;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 2;</code>
     * @return The location.
     */
    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.Location getLocation() {
      return location_ == null ? zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.database.Location location = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder() {
      return getLocation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (location_ != null) {
        output.writeMessage(2, getLocation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (location_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLocation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.database.JamTargetOuterClass.Base)) {
        return super.equals(obj);
      }
      zb.dcts.database.JamTargetOuterClass.Base other = (zb.dcts.database.JamTargetOuterClass.Base) obj;

      if (getId()
          != other.getId()) return false;
      if (hasLocation() != other.hasLocation()) return false;
      if (hasLocation()) {
        if (!getLocation()
            .equals(other.getLocation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (hasLocation()) {
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.database.JamTargetOuterClass.Base parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.database.JamTargetOuterClass.Base prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *阵地信息
     * </pre>
     *
     * Protobuf type {@code zb.dcts.database.Base}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.database.Base)
        zb.dcts.database.JamTargetOuterClass.BaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Base_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Base_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.database.JamTargetOuterClass.Base.class, zb.dcts.database.JamTargetOuterClass.Base.Builder.class);
      }

      // Construct using zb.dcts.database.JamTargetOuterClass.Base.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        if (locationBuilder_ == null) {
          location_ = null;
        } else {
          location_ = null;
          locationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.database.JamTargetOuterClass.internal_static_zb_dcts_database_Base_descriptor;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.Base getDefaultInstanceForType() {
        return zb.dcts.database.JamTargetOuterClass.Base.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.Base build() {
        zb.dcts.database.JamTargetOuterClass.Base result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.database.JamTargetOuterClass.Base buildPartial() {
        zb.dcts.database.JamTargetOuterClass.Base result = new zb.dcts.database.JamTargetOuterClass.Base(this);
        result.id_ = id_;
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.database.JamTargetOuterClass.Base) {
          return mergeFrom((zb.dcts.database.JamTargetOuterClass.Base)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.database.JamTargetOuterClass.Base other) {
        if (other == zb.dcts.database.JamTargetOuterClass.Base.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.database.JamTargetOuterClass.Base parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.database.JamTargetOuterClass.Base) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *阵地ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *阵地ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *阵地ID
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private zb.dcts.database.JamTargetOuterClass.Location location_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder> locationBuilder_;
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       * @return Whether the location field is set.
       */
      public boolean hasLocation() {
        return locationBuilder_ != null || location_ != null;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       * @return The location.
       */
      public zb.dcts.database.JamTargetOuterClass.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_ == null ? zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       */
      public Builder setLocation(zb.dcts.database.JamTargetOuterClass.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       */
      public Builder setLocation(
          zb.dcts.database.JamTargetOuterClass.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       */
      public Builder mergeLocation(zb.dcts.database.JamTargetOuterClass.Location value) {
        if (locationBuilder_ == null) {
          if (location_ != null) {
            location_ =
              zb.dcts.database.JamTargetOuterClass.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = null;
          onChanged();
        } else {
          location_ = null;
          locationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       */
      public zb.dcts.database.JamTargetOuterClass.Location.Builder getLocationBuilder() {
        
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       */
      public zb.dcts.database.JamTargetOuterClass.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_ == null ?
              zb.dcts.database.JamTargetOuterClass.Location.getDefaultInstance() : location_;
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.database.Location location = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.database.JamTargetOuterClass.Location, zb.dcts.database.JamTargetOuterClass.Location.Builder, zb.dcts.database.JamTargetOuterClass.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.database.Base)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.database.Base)
    private static final zb.dcts.database.JamTargetOuterClass.Base DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.database.JamTargetOuterClass.Base();
    }

    public static zb.dcts.database.JamTargetOuterClass.Base getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Base>
        PARSER = new com.google.protobuf.AbstractParser<Base>() {
      @java.lang.Override
      public Base parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Base(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Base> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Base> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.database.JamTargetOuterClass.Base getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_Location_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_Location_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_JamStation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_JamStation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_JamTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_JamTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_database_Base_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_database_Base_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030database/JamTarget.proto\022\020zb.dcts.data" +
      "base\032\033google/protobuf/empty.proto\"?\n\010Loc" +
      "ation\022\016\n\006height\030\001 \001(\001\022\021\n\tlongitude\030\002 \001(\001" +
      "\022\020\n\010latitude\030\003 \001(\001\"\323\001\n\nJamStation\022\n\n\002id\030" +
      "\001 \001(\r\022\030\n\020jamming_platform\030\002 \001(\t\022,\n\010locat" +
      "ion\030\003 \001(\0132\032.zb.dcts.database.Location\022\r\n" +
      "\005power\030\004 \001(\002\022\017\n\007hop_num\030\005 \001(\r\022\017\n\007fix_num" +
      "\030\006 \001(\r\022\022\n\nbeam_width\030\007 \001(\002\022\025\n\rjam_fix_sc" +
      "ore\030\010 \001(\002\022\025\n\rjam_hop_score\030\t \001(\002\"\244\002\n\tJam" +
      "Target\022\016\n\006net_id\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\r\022" +
      "\020\n\010platform\030\003 \001(\t\022\020\n\010net_type\030\004 \001(\t\022\021\n\tb" +
      "andwidth\030\005 \001(\001\022\021\n\tfrequency\030\006 \003(\001\022\022\n\ncon" +
      "fidence\030\007 \001(\002\022\020\n\010priority\030\010 \001(\r\022\020\n\010inter" +
      "val\030\t \001(\002\022\022\n\nhop_points\030\n \001(\r\022\r\n\005power\030\013" +
      " \001(\002\022,\n\010location\030\014 \001(\0132\032.zb.dcts.databas" +
      "e.Location\022\023\n\013target_type\030\r \001(\t\022\016\n\006equ_i" +
      "d\030\016 \001(\r\"@\n\004Base\022\n\n\002id\030\001 \001(\r\022,\n\010location\030" +
      "\002 \001(\0132\032.zb.dcts.database.Locationb\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
        });
    internal_static_zb_dcts_database_Location_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zb_dcts_database_Location_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_Location_descriptor,
        new java.lang.String[] { "Height", "Longitude", "Latitude", });
    internal_static_zb_dcts_database_JamStation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zb_dcts_database_JamStation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_JamStation_descriptor,
        new java.lang.String[] { "Id", "JammingPlatform", "Location", "Power", "HopNum", "FixNum", "BeamWidth", "JamFixScore", "JamHopScore", });
    internal_static_zb_dcts_database_JamTarget_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zb_dcts_database_JamTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_JamTarget_descriptor,
        new java.lang.String[] { "NetId", "UserId", "Platform", "NetType", "Bandwidth", "Frequency", "Confidence", "Priority", "Interval", "HopPoints", "Power", "Location", "TargetType", "EquId", });
    internal_static_zb_dcts_database_Base_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_zb_dcts_database_Base_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_database_Base_descriptor,
        new java.lang.String[] { "Id", "Location", });
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
