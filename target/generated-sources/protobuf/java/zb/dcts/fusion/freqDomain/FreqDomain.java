// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fusion/freqDomain.proto

package zb.dcts.fusion.freqDomain;

public final class FreqDomain {
  private FreqDomain() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *业务类型
   * </pre>
   *
   * Protobuf enum {@code zb.dcts.fusion.freqDomain.BusinessType}
   */
  public enum BusinessType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *话音
     * </pre>
     *
     * <code>VOICE = 0;</code>
     */
    VOICE(0),
    /**
     * <pre>
     *数据链
     * </pre>
     *
     * <code>LINK = 1;</code>
     */
    LINK(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *话音
     * </pre>
     *
     * <code>VOICE = 0;</code>
     */
    public static final int VOICE_VALUE = 0;
    /**
     * <pre>
     *数据链
     * </pre>
     *
     * <code>LINK = 1;</code>
     */
    public static final int LINK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BusinessType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BusinessType forNumber(int value) {
      switch (value) {
        case 0: return VOICE;
        case 1: return LINK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BusinessType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BusinessType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BusinessType>() {
            public BusinessType findValueByNumber(int number) {
              return BusinessType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zb.dcts.fusion.freqDomain.FreqDomain.getDescriptor().getEnumTypes().get(0);
    }

    private static final BusinessType[] VALUES = values();

    public static BusinessType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BusinessType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:zb.dcts.fusion.freqDomain.BusinessType)
  }

  public interface FusionFixedSignalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.fusion.freqDomain.FusionFixedSignal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return Whether the digest field is set.
     */
    boolean hasDigest();
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return The digest.
     */
    zb.dcts.scenario.detection.Detection.SignalDigest getDigest();
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     */
    zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getDigestOrBuilder();

    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.Position position = 2;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.Position position = 2;</code>
     * @return The position.
     */
    zb.dcts.Dcts.Position getPosition();
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.Position position = 2;</code>
     */
    zb.dcts.Dcts.PositionOrBuilder getPositionOrBuilder();

    /**
     * <pre>
     *发射信号装备信息，侦收站
     * </pre>
     *
     * <code>string equipment = 3;</code>
     * @return The equipment.
     */
    java.lang.String getEquipment();
    /**
     * <pre>
     *发射信号装备信息，侦收站
     * </pre>
     *
     * <code>string equipment = 3;</code>
     * @return The bytes for equipment.
     */
    com.google.protobuf.ByteString
        getEquipmentBytes();

    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
     * @return The enum numeric value on the wire for bussinessType.
     */
    int getBussinessTypeValue();
    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
     * @return The bussinessType.
     */
    zb.dcts.fusion.freqDomain.FreqDomain.BusinessType getBussinessType();

    /**
     * <pre>
     *威胁等级
     * </pre>
     *
     * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
     * @return The enum numeric value on the wire for threatLevel.
     */
    int getThreatLevelValue();
    /**
     * <pre>
     *威胁等级
     * </pre>
     *
     * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
     * @return The threatLevel.
     */
    zb.dcts.Dcts.ThreatLevel getThreatLevel();

    /**
     * <pre>
     *可信度
     * </pre>
     *
     * <code>double confidence = 6;</code>
     * @return The confidence.
     */
    double getConfidence();

    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
     * @return The enum numeric value on the wire for camp.
     */
    int getCampValue();
    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
     * @return The camp.
     */
    zb.dcts.aeronaval.Aeronaval.Camp getCamp();
  }
  /**
   * <pre>
   *融合后定频信号
   * </pre>
   *
   * Protobuf type {@code zb.dcts.fusion.freqDomain.FusionFixedSignal}
   */
  public static final class FusionFixedSignal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.fusion.freqDomain.FusionFixedSignal)
      FusionFixedSignalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FusionFixedSignal.newBuilder() to construct.
    private FusionFixedSignal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FusionFixedSignal() {
      equipment_ = "";
      bussinessType_ = 0;
      threatLevel_ = 0;
      camp_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FusionFixedSignal();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FusionFixedSignal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              zb.dcts.scenario.detection.Detection.SignalDigest.Builder subBuilder = null;
              if (digest_ != null) {
                subBuilder = digest_.toBuilder();
              }
              digest_ = input.readMessage(zb.dcts.scenario.detection.Detection.SignalDigest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(digest_);
                digest_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              zb.dcts.Dcts.Position.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(zb.dcts.Dcts.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              equipment_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              bussinessType_ = rawValue;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              threatLevel_ = rawValue;
              break;
            }
            case 49: {

              confidence_ = input.readDouble();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              camp_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.class, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder.class);
    }

    public static final int DIGEST_FIELD_NUMBER = 1;
    private zb.dcts.scenario.detection.Detection.SignalDigest digest_;
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return Whether the digest field is set.
     */
    @java.lang.Override
    public boolean hasDigest() {
      return digest_ != null;
    }
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     * @return The digest.
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigest getDigest() {
      return digest_ == null ? zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance() : digest_;
    }
    /**
     * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getDigestOrBuilder() {
      return getDigest();
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private zb.dcts.Dcts.Position position_;
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.Position position = 2;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.Position position = 2;</code>
     * @return The position.
     */
    @java.lang.Override
    public zb.dcts.Dcts.Position getPosition() {
      return position_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : position_;
    }
    /**
     * <pre>
     *位置信息
     * </pre>
     *
     * <code>.zb.dcts.Position position = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.PositionOrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int EQUIPMENT_FIELD_NUMBER = 3;
    private volatile java.lang.Object equipment_;
    /**
     * <pre>
     *发射信号装备信息，侦收站
     * </pre>
     *
     * <code>string equipment = 3;</code>
     * @return The equipment.
     */
    @java.lang.Override
    public java.lang.String getEquipment() {
      java.lang.Object ref = equipment_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        equipment_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *发射信号装备信息，侦收站
     * </pre>
     *
     * <code>string equipment = 3;</code>
     * @return The bytes for equipment.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEquipmentBytes() {
      java.lang.Object ref = equipment_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        equipment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BUSSINESS_TYPE_FIELD_NUMBER = 4;
    private int bussinessType_;
    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
     * @return The enum numeric value on the wire for bussinessType.
     */
    @java.lang.Override public int getBussinessTypeValue() {
      return bussinessType_;
    }
    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
     * @return The bussinessType.
     */
    @java.lang.Override public zb.dcts.fusion.freqDomain.FreqDomain.BusinessType getBussinessType() {
      @SuppressWarnings("deprecation")
      zb.dcts.fusion.freqDomain.FreqDomain.BusinessType result = zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.valueOf(bussinessType_);
      return result == null ? zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.UNRECOGNIZED : result;
    }

    public static final int THREAT_LEVEL_FIELD_NUMBER = 5;
    private int threatLevel_;
    /**
     * <pre>
     *威胁等级
     * </pre>
     *
     * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
     * @return The enum numeric value on the wire for threatLevel.
     */
    @java.lang.Override public int getThreatLevelValue() {
      return threatLevel_;
    }
    /**
     * <pre>
     *威胁等级
     * </pre>
     *
     * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
     * @return The threatLevel.
     */
    @java.lang.Override public zb.dcts.Dcts.ThreatLevel getThreatLevel() {
      @SuppressWarnings("deprecation")
      zb.dcts.Dcts.ThreatLevel result = zb.dcts.Dcts.ThreatLevel.valueOf(threatLevel_);
      return result == null ? zb.dcts.Dcts.ThreatLevel.UNRECOGNIZED : result;
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 6;
    private double confidence_;
    /**
     * <pre>
     *可信度
     * </pre>
     *
     * <code>double confidence = 6;</code>
     * @return The confidence.
     */
    @java.lang.Override
    public double getConfidence() {
      return confidence_;
    }

    public static final int CAMP_FIELD_NUMBER = 7;
    private int camp_;
    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
     * @return The enum numeric value on the wire for camp.
     */
    @java.lang.Override public int getCampValue() {
      return camp_;
    }
    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
     * @return The camp.
     */
    @java.lang.Override public zb.dcts.aeronaval.Aeronaval.Camp getCamp() {
      @SuppressWarnings("deprecation")
      zb.dcts.aeronaval.Aeronaval.Camp result = zb.dcts.aeronaval.Aeronaval.Camp.valueOf(camp_);
      return result == null ? zb.dcts.aeronaval.Aeronaval.Camp.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (digest_ != null) {
        output.writeMessage(1, getDigest());
      }
      if (position_ != null) {
        output.writeMessage(2, getPosition());
      }
      if (!getEquipmentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, equipment_);
      }
      if (bussinessType_ != zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.VOICE.getNumber()) {
        output.writeEnum(4, bussinessType_);
      }
      if (threatLevel_ != zb.dcts.Dcts.ThreatLevel.NONE.getNumber()) {
        output.writeEnum(5, threatLevel_);
      }
      if (confidence_ != 0D) {
        output.writeDouble(6, confidence_);
      }
      if (camp_ != zb.dcts.aeronaval.Aeronaval.Camp.UNKNOWN_CAMP.getNumber()) {
        output.writeEnum(7, camp_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (digest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDigest());
      }
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPosition());
      }
      if (!getEquipmentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, equipment_);
      }
      if (bussinessType_ != zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.VOICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, bussinessType_);
      }
      if (threatLevel_ != zb.dcts.Dcts.ThreatLevel.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, threatLevel_);
      }
      if (confidence_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, confidence_);
      }
      if (camp_ != zb.dcts.aeronaval.Aeronaval.Camp.UNKNOWN_CAMP.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, camp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal)) {
        return super.equals(obj);
      }
      zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal other = (zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal) obj;

      if (hasDigest() != other.hasDigest()) return false;
      if (hasDigest()) {
        if (!getDigest()
            .equals(other.getDigest())) return false;
      }
      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (!getEquipment()
          .equals(other.getEquipment())) return false;
      if (bussinessType_ != other.bussinessType_) return false;
      if (threatLevel_ != other.threatLevel_) return false;
      if (java.lang.Double.doubleToLongBits(getConfidence())
          != java.lang.Double.doubleToLongBits(
              other.getConfidence())) return false;
      if (camp_ != other.camp_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDigest()) {
        hash = (37 * hash) + DIGEST_FIELD_NUMBER;
        hash = (53 * hash) + getDigest().hashCode();
      }
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      hash = (37 * hash) + EQUIPMENT_FIELD_NUMBER;
      hash = (53 * hash) + getEquipment().hashCode();
      hash = (37 * hash) + BUSSINESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + bussinessType_;
      hash = (37 * hash) + THREAT_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + threatLevel_;
      hash = (37 * hash) + CONFIDENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConfidence()));
      hash = (37 * hash) + CAMP_FIELD_NUMBER;
      hash = (53 * hash) + camp_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *融合后定频信号
     * </pre>
     *
     * Protobuf type {@code zb.dcts.fusion.freqDomain.FusionFixedSignal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.fusion.freqDomain.FusionFixedSignal)
        zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.class, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder.class);
      }

      // Construct using zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (digestBuilder_ == null) {
          digest_ = null;
        } else {
          digest_ = null;
          digestBuilder_ = null;
        }
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        equipment_ = "";

        bussinessType_ = 0;

        threatLevel_ = 0;

        confidence_ = 0D;

        camp_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_descriptor;
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal getDefaultInstanceForType() {
        return zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal build() {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal buildPartial() {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal result = new zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal(this);
        if (digestBuilder_ == null) {
          result.digest_ = digest_;
        } else {
          result.digest_ = digestBuilder_.build();
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.equipment_ = equipment_;
        result.bussinessType_ = bussinessType_;
        result.threatLevel_ = threatLevel_;
        result.confidence_ = confidence_;
        result.camp_ = camp_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal) {
          return mergeFrom((zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal other) {
        if (other == zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.getDefaultInstance()) return this;
        if (other.hasDigest()) {
          mergeDigest(other.getDigest());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (!other.getEquipment().isEmpty()) {
          equipment_ = other.equipment_;
          onChanged();
        }
        if (other.bussinessType_ != 0) {
          setBussinessTypeValue(other.getBussinessTypeValue());
        }
        if (other.threatLevel_ != 0) {
          setThreatLevelValue(other.getThreatLevelValue());
        }
        if (other.getConfidence() != 0D) {
          setConfidence(other.getConfidence());
        }
        if (other.camp_ != 0) {
          setCampValue(other.getCampValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private zb.dcts.scenario.detection.Detection.SignalDigest digest_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> digestBuilder_;
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       * @return Whether the digest field is set.
       */
      public boolean hasDigest() {
        return digestBuilder_ != null || digest_ != null;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       * @return The digest.
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest getDigest() {
        if (digestBuilder_ == null) {
          return digest_ == null ? zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance() : digest_;
        } else {
          return digestBuilder_.getMessage();
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder setDigest(zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (digestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          digest_ = value;
          onChanged();
        } else {
          digestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder setDigest(
          zb.dcts.scenario.detection.Detection.SignalDigest.Builder builderForValue) {
        if (digestBuilder_ == null) {
          digest_ = builderForValue.build();
          onChanged();
        } else {
          digestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder mergeDigest(zb.dcts.scenario.detection.Detection.SignalDigest value) {
        if (digestBuilder_ == null) {
          if (digest_ != null) {
            digest_ =
              zb.dcts.scenario.detection.Detection.SignalDigest.newBuilder(digest_).mergeFrom(value).buildPartial();
          } else {
            digest_ = value;
          }
          onChanged();
        } else {
          digestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public Builder clearDigest() {
        if (digestBuilder_ == null) {
          digest_ = null;
          onChanged();
        } else {
          digest_ = null;
          digestBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigest.Builder getDigestBuilder() {
        
        onChanged();
        return getDigestFieldBuilder().getBuilder();
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      public zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder getDigestOrBuilder() {
        if (digestBuilder_ != null) {
          return digestBuilder_.getMessageOrBuilder();
        } else {
          return digest_ == null ?
              zb.dcts.scenario.detection.Detection.SignalDigest.getDefaultInstance() : digest_;
        }
      }
      /**
       * <code>.zb.dcts.scenario.detection.SignalDigest digest = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder> 
          getDigestFieldBuilder() {
        if (digestBuilder_ == null) {
          digestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.scenario.detection.Detection.SignalDigest, zb.dcts.scenario.detection.Detection.SignalDigest.Builder, zb.dcts.scenario.detection.Detection.SignalDigestOrBuilder>(
                  getDigest(),
                  getParentForChildren(),
                  isClean());
          digest_ = null;
        }
        return digestBuilder_;
      }

      private zb.dcts.Dcts.Position position_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> positionBuilder_;
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       * @return The position.
       */
      public zb.dcts.Dcts.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? zb.dcts.Dcts.Position.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       */
      public Builder setPosition(zb.dcts.Dcts.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       */
      public Builder setPosition(
          zb.dcts.Dcts.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       */
      public Builder mergePosition(zb.dcts.Dcts.Position value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              zb.dcts.Dcts.Position.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       */
      public zb.dcts.Dcts.Position.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       */
      public zb.dcts.Dcts.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              zb.dcts.Dcts.Position.getDefaultInstance() : position_;
        }
      }
      /**
       * <pre>
       *位置信息
       * </pre>
       *
       * <code>.zb.dcts.Position position = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.Position, zb.dcts.Dcts.Position.Builder, zb.dcts.Dcts.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private java.lang.Object equipment_ = "";
      /**
       * <pre>
       *发射信号装备信息，侦收站
       * </pre>
       *
       * <code>string equipment = 3;</code>
       * @return The equipment.
       */
      public java.lang.String getEquipment() {
        java.lang.Object ref = equipment_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          equipment_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站
       * </pre>
       *
       * <code>string equipment = 3;</code>
       * @return The bytes for equipment.
       */
      public com.google.protobuf.ByteString
          getEquipmentBytes() {
        java.lang.Object ref = equipment_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          equipment_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站
       * </pre>
       *
       * <code>string equipment = 3;</code>
       * @param value The equipment to set.
       * @return This builder for chaining.
       */
      public Builder setEquipment(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        equipment_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站
       * </pre>
       *
       * <code>string equipment = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquipment() {
        
        equipment_ = getDefaultInstance().getEquipment();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站
       * </pre>
       *
       * <code>string equipment = 3;</code>
       * @param value The bytes for equipment to set.
       * @return This builder for chaining.
       */
      public Builder setEquipmentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        equipment_ = value;
        onChanged();
        return this;
      }

      private int bussinessType_ = 0;
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
       * @return The enum numeric value on the wire for bussinessType.
       */
      @java.lang.Override public int getBussinessTypeValue() {
        return bussinessType_;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
       * @param value The enum numeric value on the wire for bussinessType to set.
       * @return This builder for chaining.
       */
      public Builder setBussinessTypeValue(int value) {
        
        bussinessType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
       * @return The bussinessType.
       */
      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.BusinessType getBussinessType() {
        @SuppressWarnings("deprecation")
        zb.dcts.fusion.freqDomain.FreqDomain.BusinessType result = zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.valueOf(bussinessType_);
        return result == null ? zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
       * @param value The bussinessType to set.
       * @return This builder for chaining.
       */
      public Builder setBussinessType(zb.dcts.fusion.freqDomain.FreqDomain.BusinessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        bussinessType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBussinessType() {
        
        bussinessType_ = 0;
        onChanged();
        return this;
      }

      private int threatLevel_ = 0;
      /**
       * <pre>
       *威胁等级
       * </pre>
       *
       * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
       * @return The enum numeric value on the wire for threatLevel.
       */
      @java.lang.Override public int getThreatLevelValue() {
        return threatLevel_;
      }
      /**
       * <pre>
       *威胁等级
       * </pre>
       *
       * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
       * @param value The enum numeric value on the wire for threatLevel to set.
       * @return This builder for chaining.
       */
      public Builder setThreatLevelValue(int value) {
        
        threatLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *威胁等级
       * </pre>
       *
       * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
       * @return The threatLevel.
       */
      @java.lang.Override
      public zb.dcts.Dcts.ThreatLevel getThreatLevel() {
        @SuppressWarnings("deprecation")
        zb.dcts.Dcts.ThreatLevel result = zb.dcts.Dcts.ThreatLevel.valueOf(threatLevel_);
        return result == null ? zb.dcts.Dcts.ThreatLevel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *威胁等级
       * </pre>
       *
       * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
       * @param value The threatLevel to set.
       * @return This builder for chaining.
       */
      public Builder setThreatLevel(zb.dcts.Dcts.ThreatLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        threatLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *威胁等级
       * </pre>
       *
       * <code>.zb.dcts.ThreatLevel threat_level = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearThreatLevel() {
        
        threatLevel_ = 0;
        onChanged();
        return this;
      }

      private double confidence_ ;
      /**
       * <pre>
       *可信度
       * </pre>
       *
       * <code>double confidence = 6;</code>
       * @return The confidence.
       */
      @java.lang.Override
      public double getConfidence() {
        return confidence_;
      }
      /**
       * <pre>
       *可信度
       * </pre>
       *
       * <code>double confidence = 6;</code>
       * @param value The confidence to set.
       * @return This builder for chaining.
       */
      public Builder setConfidence(double value) {
        
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *可信度
       * </pre>
       *
       * <code>double confidence = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfidence() {
        
        confidence_ = 0D;
        onChanged();
        return this;
      }

      private int camp_ = 0;
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
       * @return The enum numeric value on the wire for camp.
       */
      @java.lang.Override public int getCampValue() {
        return camp_;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
       * @param value The enum numeric value on the wire for camp to set.
       * @return This builder for chaining.
       */
      public Builder setCampValue(int value) {
        
        camp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
       * @return The camp.
       */
      @java.lang.Override
      public zb.dcts.aeronaval.Aeronaval.Camp getCamp() {
        @SuppressWarnings("deprecation")
        zb.dcts.aeronaval.Aeronaval.Camp result = zb.dcts.aeronaval.Aeronaval.Camp.valueOf(camp_);
        return result == null ? zb.dcts.aeronaval.Aeronaval.Camp.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
       * @param value The camp to set.
       * @return This builder for chaining.
       */
      public Builder setCamp(zb.dcts.aeronaval.Aeronaval.Camp value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        camp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCamp() {
        
        camp_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.fusion.freqDomain.FusionFixedSignal)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.fusion.freqDomain.FusionFixedSignal)
    private static final zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal();
    }

    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FusionFixedSignal>
        PARSER = new com.google.protobuf.AbstractParser<FusionFixedSignal>() {
      @java.lang.Override
      public FusionFixedSignal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FusionFixedSignal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FusionFixedSignal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FusionFixedSignal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FusionHopSignalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.fusion.freqDomain.FusionHopSignal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
     * @return The enum numeric value on the wire for camp.
     */
    int getCampValue();
    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
     * @return The camp.
     */
    zb.dcts.aeronaval.Aeronaval.Camp getCamp();

    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string type = 3;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string type = 3;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     *跳频周期
     * </pre>
     *
     * <code>double period = 4;</code>
     * @return The period.
     */
    double getPeriod();

    /**
     * <pre>
     *起始频率
     * </pre>
     *
     * <code>double start_freq = 5;</code>
     * @return The startFreq.
     */
    double getStartFreq();

    /**
     * <pre>
     *终止频率
     * </pre>
     *
     * <code>double stop_freq = 6;</code>
     * @return The stopFreq.
     */
    double getStopFreq();

    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated double freq_set = 7;</code>
     * @return A list containing the freqSet.
     */
    java.util.List<java.lang.Double> getFreqSetList();
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated double freq_set = 7;</code>
     * @return The count of freqSet.
     */
    int getFreqSetCount();
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated double freq_set = 7;</code>
     * @param index The index of the element to return.
     * @return The freqSet at the given index.
     */
    double getFreqSet(int index);

    /**
     * <pre>
     *跳频带宽
     * </pre>
     *
     * <code>double band = 8;</code>
     * @return The band.
     */
    double getBand();

    /**
     * <pre>
     *调制方式
     * </pre>
     *
     * <code>string modulation = 9;</code>
     * @return The modulation.
     */
    java.lang.String getModulation();
    /**
     * <pre>
     *调制方式
     * </pre>
     *
     * <code>string modulation = 9;</code>
     * @return The bytes for modulation.
     */
    com.google.protobuf.ByteString
        getModulationBytes();

    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
     * @return Whether the emitTimeSpan field is set.
     */
    boolean hasEmitTimeSpan();
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
     * @return The emitTimeSpan.
     */
    zb.dcts.Dcts.TimeSpan getEmitTimeSpan();
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
     */
    zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder();

    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @return A list containing the equipments.
     */
    java.util.List<java.lang.String>
        getEquipmentsList();
    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @return The count of equipments.
     */
    int getEquipmentsCount();
    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @param index The index of the element to return.
     * @return The equipments at the given index.
     */
    java.lang.String getEquipments(int index);
    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @param index The index of the value to return.
     * @return The bytes of the equipments at the given index.
     */
    com.google.protobuf.ByteString
        getEquipmentsBytes(int index);

    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
     * @return The enum numeric value on the wire for bussinessType.
     */
    int getBussinessTypeValue();
    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
     * @return The bussinessType.
     */
    zb.dcts.fusion.freqDomain.FreqDomain.BusinessType getBussinessType();

    /**
     * <pre>
     *用途
     * </pre>
     *
     * <code>string purpose = 13;</code>
     * @return The purpose.
     */
    java.lang.String getPurpose();
    /**
     * <pre>
     *用途
     * </pre>
     *
     * <code>string purpose = 13;</code>
     * @return The bytes for purpose.
     */
    com.google.protobuf.ByteString
        getPurposeBytes();
  }
  /**
   * <pre>
   *融合后跳频网络
   * </pre>
   *
   * Protobuf type {@code zb.dcts.fusion.freqDomain.FusionHopSignal}
   */
  public static final class FusionHopSignal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.fusion.freqDomain.FusionHopSignal)
      FusionHopSignalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FusionHopSignal.newBuilder() to construct.
    private FusionHopSignal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FusionHopSignal() {
      id_ = "";
      camp_ = 0;
      type_ = "";
      freqSet_ = emptyDoubleList();
      modulation_ = "";
      equipments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bussinessType_ = 0;
      purpose_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FusionHopSignal();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FusionHopSignal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              camp_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 33: {

              period_ = input.readDouble();
              break;
            }
            case 41: {

              startFreq_ = input.readDouble();
              break;
            }
            case 49: {

              stopFreq_ = input.readDouble();
              break;
            }
            case 57: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                freqSet_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              freqSet_.addDouble(input.readDouble());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                freqSet_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                freqSet_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 65: {

              band_ = input.readDouble();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              modulation_ = s;
              break;
            }
            case 82: {
              zb.dcts.Dcts.TimeSpan.Builder subBuilder = null;
              if (emitTimeSpan_ != null) {
                subBuilder = emitTimeSpan_.toBuilder();
              }
              emitTimeSpan_ = input.readMessage(zb.dcts.Dcts.TimeSpan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emitTimeSpan_);
                emitTimeSpan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                equipments_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              equipments_.add(s);
              break;
            }
            case 96: {
              int rawValue = input.readEnum();

              bussinessType_ = rawValue;
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              purpose_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          freqSet_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          equipments_ = equipments_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.class, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *id
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAMP_FIELD_NUMBER = 2;
    private int camp_;
    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
     * @return The enum numeric value on the wire for camp.
     */
    @java.lang.Override public int getCampValue() {
      return camp_;
    }
    /**
     * <pre>
     *阵营
     * </pre>
     *
     * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
     * @return The camp.
     */
    @java.lang.Override public zb.dcts.aeronaval.Aeronaval.Camp getCamp() {
      @SuppressWarnings("deprecation")
      zb.dcts.aeronaval.Aeronaval.Camp result = zb.dcts.aeronaval.Aeronaval.Camp.valueOf(camp_);
      return result == null ? zb.dcts.aeronaval.Aeronaval.Camp.UNRECOGNIZED : result;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string type = 3;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *网络类型
     * </pre>
     *
     * <code>string type = 3;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERIOD_FIELD_NUMBER = 4;
    private double period_;
    /**
     * <pre>
     *跳频周期
     * </pre>
     *
     * <code>double period = 4;</code>
     * @return The period.
     */
    @java.lang.Override
    public double getPeriod() {
      return period_;
    }

    public static final int START_FREQ_FIELD_NUMBER = 5;
    private double startFreq_;
    /**
     * <pre>
     *起始频率
     * </pre>
     *
     * <code>double start_freq = 5;</code>
     * @return The startFreq.
     */
    @java.lang.Override
    public double getStartFreq() {
      return startFreq_;
    }

    public static final int STOP_FREQ_FIELD_NUMBER = 6;
    private double stopFreq_;
    /**
     * <pre>
     *终止频率
     * </pre>
     *
     * <code>double stop_freq = 6;</code>
     * @return The stopFreq.
     */
    @java.lang.Override
    public double getStopFreq() {
      return stopFreq_;
    }

    public static final int FREQ_SET_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.DoubleList freqSet_;
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated double freq_set = 7;</code>
     * @return A list containing the freqSet.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getFreqSetList() {
      return freqSet_;
    }
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated double freq_set = 7;</code>
     * @return The count of freqSet.
     */
    public int getFreqSetCount() {
      return freqSet_.size();
    }
    /**
     * <pre>
     *频率集
     * </pre>
     *
     * <code>repeated double freq_set = 7;</code>
     * @param index The index of the element to return.
     * @return The freqSet at the given index.
     */
    public double getFreqSet(int index) {
      return freqSet_.getDouble(index);
    }
    private int freqSetMemoizedSerializedSize = -1;

    public static final int BAND_FIELD_NUMBER = 8;
    private double band_;
    /**
     * <pre>
     *跳频带宽
     * </pre>
     *
     * <code>double band = 8;</code>
     * @return The band.
     */
    @java.lang.Override
    public double getBand() {
      return band_;
    }

    public static final int MODULATION_FIELD_NUMBER = 9;
    private volatile java.lang.Object modulation_;
    /**
     * <pre>
     *调制方式
     * </pre>
     *
     * <code>string modulation = 9;</code>
     * @return The modulation.
     */
    @java.lang.Override
    public java.lang.String getModulation() {
      java.lang.Object ref = modulation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modulation_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *调制方式
     * </pre>
     *
     * <code>string modulation = 9;</code>
     * @return The bytes for modulation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModulationBytes() {
      java.lang.Object ref = modulation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modulation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMIT_TIME_SPAN_FIELD_NUMBER = 10;
    private zb.dcts.Dcts.TimeSpan emitTimeSpan_;
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
     * @return Whether the emitTimeSpan field is set.
     */
    @java.lang.Override
    public boolean hasEmitTimeSpan() {
      return emitTimeSpan_ != null;
    }
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
     * @return The emitTimeSpan.
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpan getEmitTimeSpan() {
      return emitTimeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
    }
    /**
     * <pre>
     *信号出现的起始和终止时间
     * </pre>
     *
     * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
     */
    @java.lang.Override
    public zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder() {
      return getEmitTimeSpan();
    }

    public static final int EQUIPMENTS_FIELD_NUMBER = 11;
    private com.google.protobuf.LazyStringList equipments_;
    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @return A list containing the equipments.
     */
    public com.google.protobuf.ProtocolStringList
        getEquipmentsList() {
      return equipments_;
    }
    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @return The count of equipments.
     */
    public int getEquipmentsCount() {
      return equipments_.size();
    }
    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @param index The index of the element to return.
     * @return The equipments at the given index.
     */
    public java.lang.String getEquipments(int index) {
      return equipments_.get(index);
    }
    /**
     * <pre>
     *发射信号装备信息，侦收站列表
     * </pre>
     *
     * <code>repeated string equipments = 11;</code>
     * @param index The index of the value to return.
     * @return The bytes of the equipments at the given index.
     */
    public com.google.protobuf.ByteString
        getEquipmentsBytes(int index) {
      return equipments_.getByteString(index);
    }

    public static final int BUSSINESS_TYPE_FIELD_NUMBER = 12;
    private int bussinessType_;
    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
     * @return The enum numeric value on the wire for bussinessType.
     */
    @java.lang.Override public int getBussinessTypeValue() {
      return bussinessType_;
    }
    /**
     * <pre>
     *业务类型
     * </pre>
     *
     * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
     * @return The bussinessType.
     */
    @java.lang.Override public zb.dcts.fusion.freqDomain.FreqDomain.BusinessType getBussinessType() {
      @SuppressWarnings("deprecation")
      zb.dcts.fusion.freqDomain.FreqDomain.BusinessType result = zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.valueOf(bussinessType_);
      return result == null ? zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.UNRECOGNIZED : result;
    }

    public static final int PURPOSE_FIELD_NUMBER = 13;
    private volatile java.lang.Object purpose_;
    /**
     * <pre>
     *用途
     * </pre>
     *
     * <code>string purpose = 13;</code>
     * @return The purpose.
     */
    @java.lang.Override
    public java.lang.String getPurpose() {
      java.lang.Object ref = purpose_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        purpose_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *用途
     * </pre>
     *
     * <code>string purpose = 13;</code>
     * @return The bytes for purpose.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPurposeBytes() {
      java.lang.Object ref = purpose_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        purpose_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (camp_ != zb.dcts.aeronaval.Aeronaval.Camp.UNKNOWN_CAMP.getNumber()) {
        output.writeEnum(2, camp_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      if (period_ != 0D) {
        output.writeDouble(4, period_);
      }
      if (startFreq_ != 0D) {
        output.writeDouble(5, startFreq_);
      }
      if (stopFreq_ != 0D) {
        output.writeDouble(6, stopFreq_);
      }
      if (getFreqSetList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(freqSetMemoizedSerializedSize);
      }
      for (int i = 0; i < freqSet_.size(); i++) {
        output.writeDoubleNoTag(freqSet_.getDouble(i));
      }
      if (band_ != 0D) {
        output.writeDouble(8, band_);
      }
      if (!getModulationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, modulation_);
      }
      if (emitTimeSpan_ != null) {
        output.writeMessage(10, getEmitTimeSpan());
      }
      for (int i = 0; i < equipments_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, equipments_.getRaw(i));
      }
      if (bussinessType_ != zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.VOICE.getNumber()) {
        output.writeEnum(12, bussinessType_);
      }
      if (!getPurposeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, purpose_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (camp_ != zb.dcts.aeronaval.Aeronaval.Camp.UNKNOWN_CAMP.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, camp_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      if (period_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, period_);
      }
      if (startFreq_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, startFreq_);
      }
      if (stopFreq_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, stopFreq_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFreqSetList().size();
        size += dataSize;
        if (!getFreqSetList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        freqSetMemoizedSerializedSize = dataSize;
      }
      if (band_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, band_);
      }
      if (!getModulationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, modulation_);
      }
      if (emitTimeSpan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getEmitTimeSpan());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < equipments_.size(); i++) {
          dataSize += computeStringSizeNoTag(equipments_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getEquipmentsList().size();
      }
      if (bussinessType_ != zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.VOICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, bussinessType_);
      }
      if (!getPurposeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, purpose_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal)) {
        return super.equals(obj);
      }
      zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal other = (zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (camp_ != other.camp_) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (java.lang.Double.doubleToLongBits(getPeriod())
          != java.lang.Double.doubleToLongBits(
              other.getPeriod())) return false;
      if (java.lang.Double.doubleToLongBits(getStartFreq())
          != java.lang.Double.doubleToLongBits(
              other.getStartFreq())) return false;
      if (java.lang.Double.doubleToLongBits(getStopFreq())
          != java.lang.Double.doubleToLongBits(
              other.getStopFreq())) return false;
      if (!getFreqSetList()
          .equals(other.getFreqSetList())) return false;
      if (java.lang.Double.doubleToLongBits(getBand())
          != java.lang.Double.doubleToLongBits(
              other.getBand())) return false;
      if (!getModulation()
          .equals(other.getModulation())) return false;
      if (hasEmitTimeSpan() != other.hasEmitTimeSpan()) return false;
      if (hasEmitTimeSpan()) {
        if (!getEmitTimeSpan()
            .equals(other.getEmitTimeSpan())) return false;
      }
      if (!getEquipmentsList()
          .equals(other.getEquipmentsList())) return false;
      if (bussinessType_ != other.bussinessType_) return false;
      if (!getPurpose()
          .equals(other.getPurpose())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + CAMP_FIELD_NUMBER;
      hash = (53 * hash) + camp_;
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPeriod()));
      hash = (37 * hash) + START_FREQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getStartFreq()));
      hash = (37 * hash) + STOP_FREQ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getStopFreq()));
      if (getFreqSetCount() > 0) {
        hash = (37 * hash) + FREQ_SET_FIELD_NUMBER;
        hash = (53 * hash) + getFreqSetList().hashCode();
      }
      hash = (37 * hash) + BAND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBand()));
      hash = (37 * hash) + MODULATION_FIELD_NUMBER;
      hash = (53 * hash) + getModulation().hashCode();
      if (hasEmitTimeSpan()) {
        hash = (37 * hash) + EMIT_TIME_SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getEmitTimeSpan().hashCode();
      }
      if (getEquipmentsCount() > 0) {
        hash = (37 * hash) + EQUIPMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEquipmentsList().hashCode();
      }
      hash = (37 * hash) + BUSSINESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + bussinessType_;
      hash = (37 * hash) + PURPOSE_FIELD_NUMBER;
      hash = (53 * hash) + getPurpose().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *融合后跳频网络
     * </pre>
     *
     * Protobuf type {@code zb.dcts.fusion.freqDomain.FusionHopSignal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.fusion.freqDomain.FusionHopSignal)
        zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.class, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder.class);
      }

      // Construct using zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        camp_ = 0;

        type_ = "";

        period_ = 0D;

        startFreq_ = 0D;

        stopFreq_ = 0D;

        freqSet_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        band_ = 0D;

        modulation_ = "";

        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = null;
        } else {
          emitTimeSpan_ = null;
          emitTimeSpanBuilder_ = null;
        }
        equipments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        bussinessType_ = 0;

        purpose_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_descriptor;
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal getDefaultInstanceForType() {
        return zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal build() {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal buildPartial() {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal result = new zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.camp_ = camp_;
        result.type_ = type_;
        result.period_ = period_;
        result.startFreq_ = startFreq_;
        result.stopFreq_ = stopFreq_;
        if (((bitField0_ & 0x00000001) != 0)) {
          freqSet_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.freqSet_ = freqSet_;
        result.band_ = band_;
        result.modulation_ = modulation_;
        if (emitTimeSpanBuilder_ == null) {
          result.emitTimeSpan_ = emitTimeSpan_;
        } else {
          result.emitTimeSpan_ = emitTimeSpanBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          equipments_ = equipments_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.equipments_ = equipments_;
        result.bussinessType_ = bussinessType_;
        result.purpose_ = purpose_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal) {
          return mergeFrom((zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal other) {
        if (other == zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.camp_ != 0) {
          setCampValue(other.getCampValue());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getPeriod() != 0D) {
          setPeriod(other.getPeriod());
        }
        if (other.getStartFreq() != 0D) {
          setStartFreq(other.getStartFreq());
        }
        if (other.getStopFreq() != 0D) {
          setStopFreq(other.getStopFreq());
        }
        if (!other.freqSet_.isEmpty()) {
          if (freqSet_.isEmpty()) {
            freqSet_ = other.freqSet_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFreqSetIsMutable();
            freqSet_.addAll(other.freqSet_);
          }
          onChanged();
        }
        if (other.getBand() != 0D) {
          setBand(other.getBand());
        }
        if (!other.getModulation().isEmpty()) {
          modulation_ = other.modulation_;
          onChanged();
        }
        if (other.hasEmitTimeSpan()) {
          mergeEmitTimeSpan(other.getEmitTimeSpan());
        }
        if (!other.equipments_.isEmpty()) {
          if (equipments_.isEmpty()) {
            equipments_ = other.equipments_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEquipmentsIsMutable();
            equipments_.addAll(other.equipments_);
          }
          onChanged();
        }
        if (other.bussinessType_ != 0) {
          setBussinessTypeValue(other.getBussinessTypeValue());
        }
        if (!other.getPurpose().isEmpty()) {
          purpose_ = other.purpose_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *id
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int camp_ = 0;
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
       * @return The enum numeric value on the wire for camp.
       */
      @java.lang.Override public int getCampValue() {
        return camp_;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
       * @param value The enum numeric value on the wire for camp to set.
       * @return This builder for chaining.
       */
      public Builder setCampValue(int value) {
        
        camp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
       * @return The camp.
       */
      @java.lang.Override
      public zb.dcts.aeronaval.Aeronaval.Camp getCamp() {
        @SuppressWarnings("deprecation")
        zb.dcts.aeronaval.Aeronaval.Camp result = zb.dcts.aeronaval.Aeronaval.Camp.valueOf(camp_);
        return result == null ? zb.dcts.aeronaval.Aeronaval.Camp.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
       * @param value The camp to set.
       * @return This builder for chaining.
       */
      public Builder setCamp(zb.dcts.aeronaval.Aeronaval.Camp value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        camp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *阵营
       * </pre>
       *
       * <code>.zb.dcts.aeronaval.Camp camp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCamp() {
        
        camp_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string type = 3;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string type = 3;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *网络类型
       * </pre>
       *
       * <code>string type = 3;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private double period_ ;
      /**
       * <pre>
       *跳频周期
       * </pre>
       *
       * <code>double period = 4;</code>
       * @return The period.
       */
      @java.lang.Override
      public double getPeriod() {
        return period_;
      }
      /**
       * <pre>
       *跳频周期
       * </pre>
       *
       * <code>double period = 4;</code>
       * @param value The period to set.
       * @return This builder for chaining.
       */
      public Builder setPeriod(double value) {
        
        period_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频周期
       * </pre>
       *
       * <code>double period = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeriod() {
        
        period_ = 0D;
        onChanged();
        return this;
      }

      private double startFreq_ ;
      /**
       * <pre>
       *起始频率
       * </pre>
       *
       * <code>double start_freq = 5;</code>
       * @return The startFreq.
       */
      @java.lang.Override
      public double getStartFreq() {
        return startFreq_;
      }
      /**
       * <pre>
       *起始频率
       * </pre>
       *
       * <code>double start_freq = 5;</code>
       * @param value The startFreq to set.
       * @return This builder for chaining.
       */
      public Builder setStartFreq(double value) {
        
        startFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *起始频率
       * </pre>
       *
       * <code>double start_freq = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartFreq() {
        
        startFreq_ = 0D;
        onChanged();
        return this;
      }

      private double stopFreq_ ;
      /**
       * <pre>
       *终止频率
       * </pre>
       *
       * <code>double stop_freq = 6;</code>
       * @return The stopFreq.
       */
      @java.lang.Override
      public double getStopFreq() {
        return stopFreq_;
      }
      /**
       * <pre>
       *终止频率
       * </pre>
       *
       * <code>double stop_freq = 6;</code>
       * @param value The stopFreq to set.
       * @return This builder for chaining.
       */
      public Builder setStopFreq(double value) {
        
        stopFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *终止频率
       * </pre>
       *
       * <code>double stop_freq = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearStopFreq() {
        
        stopFreq_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList freqSet_ = emptyDoubleList();
      private void ensureFreqSetIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          freqSet_ = mutableCopy(freqSet_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated double freq_set = 7;</code>
       * @return A list containing the freqSet.
       */
      public java.util.List<java.lang.Double>
          getFreqSetList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(freqSet_) : freqSet_;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated double freq_set = 7;</code>
       * @return The count of freqSet.
       */
      public int getFreqSetCount() {
        return freqSet_.size();
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated double freq_set = 7;</code>
       * @param index The index of the element to return.
       * @return The freqSet at the given index.
       */
      public double getFreqSet(int index) {
        return freqSet_.getDouble(index);
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated double freq_set = 7;</code>
       * @param index The index to set the value at.
       * @param value The freqSet to set.
       * @return This builder for chaining.
       */
      public Builder setFreqSet(
          int index, double value) {
        ensureFreqSetIsMutable();
        freqSet_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated double freq_set = 7;</code>
       * @param value The freqSet to add.
       * @return This builder for chaining.
       */
      public Builder addFreqSet(double value) {
        ensureFreqSetIsMutable();
        freqSet_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated double freq_set = 7;</code>
       * @param values The freqSet to add.
       * @return This builder for chaining.
       */
      public Builder addAllFreqSet(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureFreqSetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, freqSet_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *频率集
       * </pre>
       *
       * <code>repeated double freq_set = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreqSet() {
        freqSet_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private double band_ ;
      /**
       * <pre>
       *跳频带宽
       * </pre>
       *
       * <code>double band = 8;</code>
       * @return The band.
       */
      @java.lang.Override
      public double getBand() {
        return band_;
      }
      /**
       * <pre>
       *跳频带宽
       * </pre>
       *
       * <code>double band = 8;</code>
       * @param value The band to set.
       * @return This builder for chaining.
       */
      public Builder setBand(double value) {
        
        band_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跳频带宽
       * </pre>
       *
       * <code>double band = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBand() {
        
        band_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object modulation_ = "";
      /**
       * <pre>
       *调制方式
       * </pre>
       *
       * <code>string modulation = 9;</code>
       * @return The modulation.
       */
      public java.lang.String getModulation() {
        java.lang.Object ref = modulation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modulation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *调制方式
       * </pre>
       *
       * <code>string modulation = 9;</code>
       * @return The bytes for modulation.
       */
      public com.google.protobuf.ByteString
          getModulationBytes() {
        java.lang.Object ref = modulation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modulation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *调制方式
       * </pre>
       *
       * <code>string modulation = 9;</code>
       * @param value The modulation to set.
       * @return This builder for chaining.
       */
      public Builder setModulation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modulation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *调制方式
       * </pre>
       *
       * <code>string modulation = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearModulation() {
        
        modulation_ = getDefaultInstance().getModulation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *调制方式
       * </pre>
       *
       * <code>string modulation = 9;</code>
       * @param value The bytes for modulation to set.
       * @return This builder for chaining.
       */
      public Builder setModulationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modulation_ = value;
        onChanged();
        return this;
      }

      private zb.dcts.Dcts.TimeSpan emitTimeSpan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> emitTimeSpanBuilder_;
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       * @return Whether the emitTimeSpan field is set.
       */
      public boolean hasEmitTimeSpan() {
        return emitTimeSpanBuilder_ != null || emitTimeSpan_ != null;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       * @return The emitTimeSpan.
       */
      public zb.dcts.Dcts.TimeSpan getEmitTimeSpan() {
        if (emitTimeSpanBuilder_ == null) {
          return emitTimeSpan_ == null ? zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
        } else {
          return emitTimeSpanBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       */
      public Builder setEmitTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (emitTimeSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emitTimeSpan_ = value;
          onChanged();
        } else {
          emitTimeSpanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       */
      public Builder setEmitTimeSpan(
          zb.dcts.Dcts.TimeSpan.Builder builderForValue) {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = builderForValue.build();
          onChanged();
        } else {
          emitTimeSpanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       */
      public Builder mergeEmitTimeSpan(zb.dcts.Dcts.TimeSpan value) {
        if (emitTimeSpanBuilder_ == null) {
          if (emitTimeSpan_ != null) {
            emitTimeSpan_ =
              zb.dcts.Dcts.TimeSpan.newBuilder(emitTimeSpan_).mergeFrom(value).buildPartial();
          } else {
            emitTimeSpan_ = value;
          }
          onChanged();
        } else {
          emitTimeSpanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       */
      public Builder clearEmitTimeSpan() {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpan_ = null;
          onChanged();
        } else {
          emitTimeSpan_ = null;
          emitTimeSpanBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       */
      public zb.dcts.Dcts.TimeSpan.Builder getEmitTimeSpanBuilder() {
        
        onChanged();
        return getEmitTimeSpanFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       */
      public zb.dcts.Dcts.TimeSpanOrBuilder getEmitTimeSpanOrBuilder() {
        if (emitTimeSpanBuilder_ != null) {
          return emitTimeSpanBuilder_.getMessageOrBuilder();
        } else {
          return emitTimeSpan_ == null ?
              zb.dcts.Dcts.TimeSpan.getDefaultInstance() : emitTimeSpan_;
        }
      }
      /**
       * <pre>
       *信号出现的起始和终止时间
       * </pre>
       *
       * <code>.zb.dcts.TimeSpan emit_time_span = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder> 
          getEmitTimeSpanFieldBuilder() {
        if (emitTimeSpanBuilder_ == null) {
          emitTimeSpanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              zb.dcts.Dcts.TimeSpan, zb.dcts.Dcts.TimeSpan.Builder, zb.dcts.Dcts.TimeSpanOrBuilder>(
                  getEmitTimeSpan(),
                  getParentForChildren(),
                  isClean());
          emitTimeSpan_ = null;
        }
        return emitTimeSpanBuilder_;
      }

      private com.google.protobuf.LazyStringList equipments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEquipmentsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          equipments_ = new com.google.protobuf.LazyStringArrayList(equipments_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @return A list containing the equipments.
       */
      public com.google.protobuf.ProtocolStringList
          getEquipmentsList() {
        return equipments_.getUnmodifiableView();
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @return The count of equipments.
       */
      public int getEquipmentsCount() {
        return equipments_.size();
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @param index The index of the element to return.
       * @return The equipments at the given index.
       */
      public java.lang.String getEquipments(int index) {
        return equipments_.get(index);
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @param index The index of the value to return.
       * @return The bytes of the equipments at the given index.
       */
      public com.google.protobuf.ByteString
          getEquipmentsBytes(int index) {
        return equipments_.getByteString(index);
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @param index The index to set the value at.
       * @param value The equipments to set.
       * @return This builder for chaining.
       */
      public Builder setEquipments(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEquipmentsIsMutable();
        equipments_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @param value The equipments to add.
       * @return This builder for chaining.
       */
      public Builder addEquipments(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEquipmentsIsMutable();
        equipments_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @param values The equipments to add.
       * @return This builder for chaining.
       */
      public Builder addAllEquipments(
          java.lang.Iterable<java.lang.String> values) {
        ensureEquipmentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, equipments_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquipments() {
        equipments_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发射信号装备信息，侦收站列表
       * </pre>
       *
       * <code>repeated string equipments = 11;</code>
       * @param value The bytes of the equipments to add.
       * @return This builder for chaining.
       */
      public Builder addEquipmentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureEquipmentsIsMutable();
        equipments_.add(value);
        onChanged();
        return this;
      }

      private int bussinessType_ = 0;
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
       * @return The enum numeric value on the wire for bussinessType.
       */
      @java.lang.Override public int getBussinessTypeValue() {
        return bussinessType_;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
       * @param value The enum numeric value on the wire for bussinessType to set.
       * @return This builder for chaining.
       */
      public Builder setBussinessTypeValue(int value) {
        
        bussinessType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
       * @return The bussinessType.
       */
      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.BusinessType getBussinessType() {
        @SuppressWarnings("deprecation")
        zb.dcts.fusion.freqDomain.FreqDomain.BusinessType result = zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.valueOf(bussinessType_);
        return result == null ? zb.dcts.fusion.freqDomain.FreqDomain.BusinessType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
       * @param value The bussinessType to set.
       * @return This builder for chaining.
       */
      public Builder setBussinessType(zb.dcts.fusion.freqDomain.FreqDomain.BusinessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        bussinessType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务类型
       * </pre>
       *
       * <code>.zb.dcts.fusion.freqDomain.BusinessType bussiness_type = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearBussinessType() {
        
        bussinessType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object purpose_ = "";
      /**
       * <pre>
       *用途
       * </pre>
       *
       * <code>string purpose = 13;</code>
       * @return The purpose.
       */
      public java.lang.String getPurpose() {
        java.lang.Object ref = purpose_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          purpose_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *用途
       * </pre>
       *
       * <code>string purpose = 13;</code>
       * @return The bytes for purpose.
       */
      public com.google.protobuf.ByteString
          getPurposeBytes() {
        java.lang.Object ref = purpose_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          purpose_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *用途
       * </pre>
       *
       * <code>string purpose = 13;</code>
       * @param value The purpose to set.
       * @return This builder for chaining.
       */
      public Builder setPurpose(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        purpose_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用途
       * </pre>
       *
       * <code>string purpose = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearPurpose() {
        
        purpose_ = getDefaultInstance().getPurpose();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用途
       * </pre>
       *
       * <code>string purpose = 13;</code>
       * @param value The bytes for purpose to set.
       * @return This builder for chaining.
       */
      public Builder setPurposeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        purpose_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.fusion.freqDomain.FusionHopSignal)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.fusion.freqDomain.FusionHopSignal)
    private static final zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal();
    }

    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FusionHopSignal>
        PARSER = new com.google.protobuf.AbstractParser<FusionHopSignal>() {
      @java.lang.Override
      public FusionHopSignal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FusionHopSignal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FusionHopSignal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FusionHopSignal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FusionSignalListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:zb.dcts.fusion.freqDomain.FusionSignalList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal> 
        getFusFixedSignalsList();
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal getFusFixedSignals(int index);
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    int getFusFixedSignalsCount();
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    java.util.List<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder> 
        getFusFixedSignalsOrBuilderList();
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder getFusFixedSignalsOrBuilder(
        int index);

    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal> 
        getFusHopSignalsList();
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal getFusHopSignals(int index);
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    int getFusHopSignalsCount();
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    java.util.List<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder> 
        getFusHopSignalsOrBuilderList();
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder getFusHopSignalsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code zb.dcts.fusion.freqDomain.FusionSignalList}
   */
  public static final class FusionSignalList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:zb.dcts.fusion.freqDomain.FusionSignalList)
      FusionSignalListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FusionSignalList.newBuilder() to construct.
    private FusionSignalList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FusionSignalList() {
      fusFixedSignals_ = java.util.Collections.emptyList();
      fusHopSignals_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FusionSignalList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FusionSignalList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fusFixedSignals_ = new java.util.ArrayList<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal>();
                mutable_bitField0_ |= 0x00000001;
              }
              fusFixedSignals_.add(
                  input.readMessage(zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                fusHopSignals_ = new java.util.ArrayList<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal>();
                mutable_bitField0_ |= 0x00000002;
              }
              fusHopSignals_.add(
                  input.readMessage(zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fusFixedSignals_ = java.util.Collections.unmodifiableList(fusFixedSignals_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          fusHopSignals_ = java.util.Collections.unmodifiableList(fusHopSignals_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.class, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder.class);
    }

    public static final int FUS_FIXED_SIGNALS_FIELD_NUMBER = 1;
    private java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal> fusFixedSignals_;
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal> getFusFixedSignalsList() {
      return fusFixedSignals_;
    }
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder> 
        getFusFixedSignalsOrBuilderList() {
      return fusFixedSignals_;
    }
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    @java.lang.Override
    public int getFusFixedSignalsCount() {
      return fusFixedSignals_.size();
    }
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal getFusFixedSignals(int index) {
      return fusFixedSignals_.get(index);
    }
    /**
     * <pre>
     *定频信号融合结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder getFusFixedSignalsOrBuilder(
        int index) {
      return fusFixedSignals_.get(index);
    }

    public static final int FUS_HOP_SIGNALS_FIELD_NUMBER = 2;
    private java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal> fusHopSignals_;
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    @java.lang.Override
    public java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal> getFusHopSignalsList() {
      return fusHopSignals_;
    }
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder> 
        getFusHopSignalsOrBuilderList() {
      return fusHopSignals_;
    }
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    @java.lang.Override
    public int getFusHopSignalsCount() {
      return fusHopSignals_.size();
    }
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal getFusHopSignals(int index) {
      return fusHopSignals_.get(index);
    }
    /**
     * <pre>
     *跳频信号合并结果
     * </pre>
     *
     * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
     */
    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder getFusHopSignalsOrBuilder(
        int index) {
      return fusHopSignals_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fusFixedSignals_.size(); i++) {
        output.writeMessage(1, fusFixedSignals_.get(i));
      }
      for (int i = 0; i < fusHopSignals_.size(); i++) {
        output.writeMessage(2, fusHopSignals_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fusFixedSignals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fusFixedSignals_.get(i));
      }
      for (int i = 0; i < fusHopSignals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fusHopSignals_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList)) {
        return super.equals(obj);
      }
      zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList other = (zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList) obj;

      if (!getFusFixedSignalsList()
          .equals(other.getFusFixedSignalsList())) return false;
      if (!getFusHopSignalsList()
          .equals(other.getFusHopSignalsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFusFixedSignalsCount() > 0) {
        hash = (37 * hash) + FUS_FIXED_SIGNALS_FIELD_NUMBER;
        hash = (53 * hash) + getFusFixedSignalsList().hashCode();
      }
      if (getFusHopSignalsCount() > 0) {
        hash = (37 * hash) + FUS_HOP_SIGNALS_FIELD_NUMBER;
        hash = (53 * hash) + getFusHopSignalsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code zb.dcts.fusion.freqDomain.FusionSignalList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:zb.dcts.fusion.freqDomain.FusionSignalList)
        zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.class, zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.Builder.class);
      }

      // Construct using zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFusFixedSignalsFieldBuilder();
          getFusHopSignalsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fusFixedSignalsBuilder_ == null) {
          fusFixedSignals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fusFixedSignalsBuilder_.clear();
        }
        if (fusHopSignalsBuilder_ == null) {
          fusHopSignals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fusHopSignalsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zb.dcts.fusion.freqDomain.FreqDomain.internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_descriptor;
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getDefaultInstanceForType() {
        return zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance();
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList build() {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList buildPartial() {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList result = new zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList(this);
        int from_bitField0_ = bitField0_;
        if (fusFixedSignalsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fusFixedSignals_ = java.util.Collections.unmodifiableList(fusFixedSignals_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fusFixedSignals_ = fusFixedSignals_;
        } else {
          result.fusFixedSignals_ = fusFixedSignalsBuilder_.build();
        }
        if (fusHopSignalsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            fusHopSignals_ = java.util.Collections.unmodifiableList(fusHopSignals_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fusHopSignals_ = fusHopSignals_;
        } else {
          result.fusHopSignals_ = fusHopSignalsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList) {
          return mergeFrom((zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList other) {
        if (other == zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList.getDefaultInstance()) return this;
        if (fusFixedSignalsBuilder_ == null) {
          if (!other.fusFixedSignals_.isEmpty()) {
            if (fusFixedSignals_.isEmpty()) {
              fusFixedSignals_ = other.fusFixedSignals_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFusFixedSignalsIsMutable();
              fusFixedSignals_.addAll(other.fusFixedSignals_);
            }
            onChanged();
          }
        } else {
          if (!other.fusFixedSignals_.isEmpty()) {
            if (fusFixedSignalsBuilder_.isEmpty()) {
              fusFixedSignalsBuilder_.dispose();
              fusFixedSignalsBuilder_ = null;
              fusFixedSignals_ = other.fusFixedSignals_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fusFixedSignalsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFusFixedSignalsFieldBuilder() : null;
            } else {
              fusFixedSignalsBuilder_.addAllMessages(other.fusFixedSignals_);
            }
          }
        }
        if (fusHopSignalsBuilder_ == null) {
          if (!other.fusHopSignals_.isEmpty()) {
            if (fusHopSignals_.isEmpty()) {
              fusHopSignals_ = other.fusHopSignals_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFusHopSignalsIsMutable();
              fusHopSignals_.addAll(other.fusHopSignals_);
            }
            onChanged();
          }
        } else {
          if (!other.fusHopSignals_.isEmpty()) {
            if (fusHopSignalsBuilder_.isEmpty()) {
              fusHopSignalsBuilder_.dispose();
              fusHopSignalsBuilder_ = null;
              fusHopSignals_ = other.fusHopSignals_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fusHopSignalsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFusHopSignalsFieldBuilder() : null;
            } else {
              fusHopSignalsBuilder_.addAllMessages(other.fusHopSignals_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal> fusFixedSignals_ =
        java.util.Collections.emptyList();
      private void ensureFusFixedSignalsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fusFixedSignals_ = new java.util.ArrayList<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal>(fusFixedSignals_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder> fusFixedSignalsBuilder_;

      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal> getFusFixedSignalsList() {
        if (fusFixedSignalsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fusFixedSignals_);
        } else {
          return fusFixedSignalsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public int getFusFixedSignalsCount() {
        if (fusFixedSignalsBuilder_ == null) {
          return fusFixedSignals_.size();
        } else {
          return fusFixedSignalsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal getFusFixedSignals(int index) {
        if (fusFixedSignalsBuilder_ == null) {
          return fusFixedSignals_.get(index);
        } else {
          return fusFixedSignalsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder setFusFixedSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal value) {
        if (fusFixedSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFusFixedSignalsIsMutable();
          fusFixedSignals_.set(index, value);
          onChanged();
        } else {
          fusFixedSignalsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder setFusFixedSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder builderForValue) {
        if (fusFixedSignalsBuilder_ == null) {
          ensureFusFixedSignalsIsMutable();
          fusFixedSignals_.set(index, builderForValue.build());
          onChanged();
        } else {
          fusFixedSignalsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder addFusFixedSignals(zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal value) {
        if (fusFixedSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFusFixedSignalsIsMutable();
          fusFixedSignals_.add(value);
          onChanged();
        } else {
          fusFixedSignalsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder addFusFixedSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal value) {
        if (fusFixedSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFusFixedSignalsIsMutable();
          fusFixedSignals_.add(index, value);
          onChanged();
        } else {
          fusFixedSignalsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder addFusFixedSignals(
          zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder builderForValue) {
        if (fusFixedSignalsBuilder_ == null) {
          ensureFusFixedSignalsIsMutable();
          fusFixedSignals_.add(builderForValue.build());
          onChanged();
        } else {
          fusFixedSignalsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder addFusFixedSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder builderForValue) {
        if (fusFixedSignalsBuilder_ == null) {
          ensureFusFixedSignalsIsMutable();
          fusFixedSignals_.add(index, builderForValue.build());
          onChanged();
        } else {
          fusFixedSignalsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder addAllFusFixedSignals(
          java.lang.Iterable<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal> values) {
        if (fusFixedSignalsBuilder_ == null) {
          ensureFusFixedSignalsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fusFixedSignals_);
          onChanged();
        } else {
          fusFixedSignalsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder clearFusFixedSignals() {
        if (fusFixedSignalsBuilder_ == null) {
          fusFixedSignals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fusFixedSignalsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public Builder removeFusFixedSignals(int index) {
        if (fusFixedSignalsBuilder_ == null) {
          ensureFusFixedSignalsIsMutable();
          fusFixedSignals_.remove(index);
          onChanged();
        } else {
          fusFixedSignalsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder getFusFixedSignalsBuilder(
          int index) {
        return getFusFixedSignalsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder getFusFixedSignalsOrBuilder(
          int index) {
        if (fusFixedSignalsBuilder_ == null) {
          return fusFixedSignals_.get(index);  } else {
          return fusFixedSignalsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public java.util.List<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder> 
           getFusFixedSignalsOrBuilderList() {
        if (fusFixedSignalsBuilder_ != null) {
          return fusFixedSignalsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fusFixedSignals_);
        }
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder addFusFixedSignalsBuilder() {
        return getFusFixedSignalsFieldBuilder().addBuilder(
            zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.getDefaultInstance());
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder addFusFixedSignalsBuilder(
          int index) {
        return getFusFixedSignalsFieldBuilder().addBuilder(
            index, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.getDefaultInstance());
      }
      /**
       * <pre>
       *定频信号融合结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionFixedSignal fus_fixed_signals = 1;</code>
       */
      public java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder> 
           getFusFixedSignalsBuilderList() {
        return getFusFixedSignalsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder> 
          getFusFixedSignalsFieldBuilder() {
        if (fusFixedSignalsBuilder_ == null) {
          fusFixedSignalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignal.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionFixedSignalOrBuilder>(
                  fusFixedSignals_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fusFixedSignals_ = null;
        }
        return fusFixedSignalsBuilder_;
      }

      private java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal> fusHopSignals_ =
        java.util.Collections.emptyList();
      private void ensureFusHopSignalsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          fusHopSignals_ = new java.util.ArrayList<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal>(fusHopSignals_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder> fusHopSignalsBuilder_;

      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal> getFusHopSignalsList() {
        if (fusHopSignalsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fusHopSignals_);
        } else {
          return fusHopSignalsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public int getFusHopSignalsCount() {
        if (fusHopSignalsBuilder_ == null) {
          return fusHopSignals_.size();
        } else {
          return fusHopSignalsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal getFusHopSignals(int index) {
        if (fusHopSignalsBuilder_ == null) {
          return fusHopSignals_.get(index);
        } else {
          return fusHopSignalsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder setFusHopSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal value) {
        if (fusHopSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFusHopSignalsIsMutable();
          fusHopSignals_.set(index, value);
          onChanged();
        } else {
          fusHopSignalsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder setFusHopSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder builderForValue) {
        if (fusHopSignalsBuilder_ == null) {
          ensureFusHopSignalsIsMutable();
          fusHopSignals_.set(index, builderForValue.build());
          onChanged();
        } else {
          fusHopSignalsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder addFusHopSignals(zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal value) {
        if (fusHopSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFusHopSignalsIsMutable();
          fusHopSignals_.add(value);
          onChanged();
        } else {
          fusHopSignalsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder addFusHopSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal value) {
        if (fusHopSignalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFusHopSignalsIsMutable();
          fusHopSignals_.add(index, value);
          onChanged();
        } else {
          fusHopSignalsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder addFusHopSignals(
          zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder builderForValue) {
        if (fusHopSignalsBuilder_ == null) {
          ensureFusHopSignalsIsMutable();
          fusHopSignals_.add(builderForValue.build());
          onChanged();
        } else {
          fusHopSignalsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder addFusHopSignals(
          int index, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder builderForValue) {
        if (fusHopSignalsBuilder_ == null) {
          ensureFusHopSignalsIsMutable();
          fusHopSignals_.add(index, builderForValue.build());
          onChanged();
        } else {
          fusHopSignalsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder addAllFusHopSignals(
          java.lang.Iterable<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal> values) {
        if (fusHopSignalsBuilder_ == null) {
          ensureFusHopSignalsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fusHopSignals_);
          onChanged();
        } else {
          fusHopSignalsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder clearFusHopSignals() {
        if (fusHopSignalsBuilder_ == null) {
          fusHopSignals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fusHopSignalsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public Builder removeFusHopSignals(int index) {
        if (fusHopSignalsBuilder_ == null) {
          ensureFusHopSignalsIsMutable();
          fusHopSignals_.remove(index);
          onChanged();
        } else {
          fusHopSignalsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder getFusHopSignalsBuilder(
          int index) {
        return getFusHopSignalsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder getFusHopSignalsOrBuilder(
          int index) {
        if (fusHopSignalsBuilder_ == null) {
          return fusHopSignals_.get(index);  } else {
          return fusHopSignalsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public java.util.List<? extends zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder> 
           getFusHopSignalsOrBuilderList() {
        if (fusHopSignalsBuilder_ != null) {
          return fusHopSignalsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fusHopSignals_);
        }
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder addFusHopSignalsBuilder() {
        return getFusHopSignalsFieldBuilder().addBuilder(
            zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.getDefaultInstance());
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder addFusHopSignalsBuilder(
          int index) {
        return getFusHopSignalsFieldBuilder().addBuilder(
            index, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.getDefaultInstance());
      }
      /**
       * <pre>
       *跳频信号合并结果
       * </pre>
       *
       * <code>repeated .zb.dcts.fusion.freqDomain.FusionHopSignal fus_hop_signals = 2;</code>
       */
      public java.util.List<zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder> 
           getFusHopSignalsBuilderList() {
        return getFusHopSignalsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder> 
          getFusHopSignalsFieldBuilder() {
        if (fusHopSignalsBuilder_ == null) {
          fusHopSignalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignal.Builder, zb.dcts.fusion.freqDomain.FreqDomain.FusionHopSignalOrBuilder>(
                  fusHopSignals_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          fusHopSignals_ = null;
        }
        return fusHopSignalsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:zb.dcts.fusion.freqDomain.FusionSignalList)
    }

    // @@protoc_insertion_point(class_scope:zb.dcts.fusion.freqDomain.FusionSignalList)
    private static final zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList();
    }

    public static zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FusionSignalList>
        PARSER = new com.google.protobuf.AbstractParser<FusionSignalList>() {
      @java.lang.Override
      public FusionSignalList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FusionSignalList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FusionSignalList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FusionSignalList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zb.dcts.fusion.freqDomain.FreqDomain.FusionSignalList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027fusion/freqDomain.proto\022\031zb.dcts.fusio" +
      "n.freqDomain\032\ndcts.proto\032\027scenario/spect" +
      "rum.proto\032\030scenario/detection.proto\032\031aer" +
      "onaval/aeronaval.proto\"\255\002\n\021FusionFixedSi" +
      "gnal\0228\n\006digest\030\001 \001(\0132(.zb.dcts.scenario." +
      "detection.SignalDigest\022#\n\010position\030\002 \001(\013" +
      "2\021.zb.dcts.Position\022\021\n\tequipment\030\003 \001(\t\022?" +
      "\n\016bussiness_type\030\004 \001(\0162\'.zb.dcts.fusion." +
      "freqDomain.BusinessType\022*\n\014threat_level\030" +
      "\005 \001(\0162\024.zb.dcts.ThreatLevel\022\022\n\nconfidenc" +
      "e\030\006 \001(\001\022%\n\004camp\030\007 \001(\0162\027.zb.dcts.aeronava" +
      "l.Camp\"\316\002\n\017FusionHopSignal\022\n\n\002id\030\001 \001(\t\022%" +
      "\n\004camp\030\002 \001(\0162\027.zb.dcts.aeronaval.Camp\022\014\n" +
      "\004type\030\003 \001(\t\022\016\n\006period\030\004 \001(\001\022\022\n\nstart_fre" +
      "q\030\005 \001(\001\022\021\n\tstop_freq\030\006 \001(\001\022\020\n\010freq_set\030\007" +
      " \003(\001\022\014\n\004band\030\010 \001(\001\022\022\n\nmodulation\030\t \001(\t\022)" +
      "\n\016emit_time_span\030\n \001(\0132\021.zb.dcts.TimeSpa" +
      "n\022\022\n\nequipments\030\013 \003(\t\022?\n\016bussiness_type\030" +
      "\014 \001(\0162\'.zb.dcts.fusion.freqDomain.Busine" +
      "ssType\022\017\n\007purpose\030\r \001(\t\"\240\001\n\020FusionSignal" +
      "List\022G\n\021fus_fixed_signals\030\001 \003(\0132,.zb.dct" +
      "s.fusion.freqDomain.FusionFixedSignal\022C\n" +
      "\017fus_hop_signals\030\002 \003(\0132*.zb.dcts.fusion." +
      "freqDomain.FusionHopSignal*#\n\014BusinessTy" +
      "pe\022\t\n\005VOICE\020\000\022\010\n\004LINK\020\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          zb.dcts.Dcts.getDescriptor(),
          zb.dcts.scenario.spectrum.Spectrum.getDescriptor(),
          zb.dcts.scenario.detection.Detection.getDescriptor(),
          zb.dcts.aeronaval.Aeronaval.getDescriptor(),
        });
    internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_fusion_freqDomain_FusionFixedSignal_descriptor,
        new java.lang.String[] { "Digest", "Position", "Equipment", "BussinessType", "ThreatLevel", "Confidence", "Camp", });
    internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_fusion_freqDomain_FusionHopSignal_descriptor,
        new java.lang.String[] { "Id", "Camp", "Type", "Period", "StartFreq", "StopFreq", "FreqSet", "Band", "Modulation", "EmitTimeSpan", "Equipments", "BussinessType", "Purpose", });
    internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zb_dcts_fusion_freqDomain_FusionSignalList_descriptor,
        new java.lang.String[] { "FusFixedSignals", "FusHopSignals", });
    zb.dcts.Dcts.getDescriptor();
    zb.dcts.scenario.spectrum.Spectrum.getDescriptor();
    zb.dcts.scenario.detection.Detection.getDescriptor();
    zb.dcts.aeronaval.Aeronaval.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
