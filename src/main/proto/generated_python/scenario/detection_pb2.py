# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scenario/detection.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import dcts_pb2 as dcts__pb2
from source import source_pb2 as source_dot_source__pb2
from scenario import spectrum_pb2 as scenario_dot_spectrum__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='scenario/detection.proto',
  package='zb.dcts.scenario.detection',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x18scenario/detection.proto\x12\x1azb.dcts.scenario.detection\x1a\ndcts.proto\x1a\x13source/source.proto\x1a\x17scenario/spectrum.proto\x1a\x17scenario/scenario.proto\"]\n\x0fThresholdSector\x12;\n\tfreq_span\x18\x01 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\x12\r\n\x05level\x18\x02 \x01(\x02\"R\n\x12UserThresholdParam\x12<\n\x07sectors\x18\x01 \x03(\x0b\x32+.zb.dcts.scenario.detection.ThresholdSector\"`\n\x15HistoryThresholdParam\x12\x1f\n\x04span\x18\x01 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\x12\x16\n\x0emax_load_count\x18\x03 \x01(\x05\x12\x0e\n\x06offset\x18\x04 \x01(\x02\"\xda\x01\n\x16\x41\x64\x61ptiveThresholdParam\x12\x15\n\raverage_count\x18\x01 \x01(\x05\x12X\n\x0epartition_mode\x18\x02 \x01(\x0e\x32@.zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode\x12\x0e\n\x06offset\x18\x03 \x01(\x02\"?\n\rPartitionMode\x12\x0f\n\x0bPM_STANDARD\x10\x00\x12\x10\n\x0cPM_AGGRESIVE\x10\x01\x12\x0b\n\x07PM_FAST\x10\x02\"\x95\x01\n\x19NeighborVarThresholdParam\x12\x1c\n\x14noise_variance_scale\x18\x01 \x01(\x02\x12\x1a\n\x12noise_max_variance\x18\x02 \x01(\x02\x12\x0e\n\x06offset\x18\x03 \x01(\x02\x12\x18\n\x10lookup_freq_span\x18\x04 \x01(\x01\x12\x14\n\x0csmooth_range\x18\x05 \x01(\x05\"\xff\x03\n\x14\x45nergyDetectionParam\x12?\n\x0c\x61\x63tive_types\x18\x01 \x03(\x0e\x32).zb.dcts.scenario.detection.ThresholdType\x12I\n\x05logic\x18\x02 \x01(\x0e\x32:.zb.dcts.scenario.detection.EnergyDetectionParam.LogicType\x12L\n\x11history_threshold\x18\x05 \x01(\x0b\x32\x31.zb.dcts.scenario.detection.HistoryThresholdParam\x12\x46\n\x0euser_threshold\x18\x06 \x01(\x0b\x32..zb.dcts.scenario.detection.UserThresholdParam\x12N\n\x12\x61\x64\x61ptive_threshold\x18\x07 \x01(\x0b\x32\x32.zb.dcts.scenario.detection.AdaptiveThresholdParam\x12Q\n\x12neighbor_threshold\x18\t \x01(\x0b\x32\x35.zb.dcts.scenario.detection.NeighborVarThresholdParam\"\"\n\tLogicType\x12\n\n\x06LT_AND\x10\x00\x12\t\n\x05LT_OR\x10\x01\"b\n\x0eThresholdTrace\x12\x37\n\x04type\x18\x01 \x01(\x0e\x32).zb.dcts.scenario.detection.ThresholdType\x12\x17\n\x0fthreshold_trace\x18\x02 \x03(\x02\"N\n\x0e\x46reqSpanFilter\x12<\n\nfreq_spans\x18\x01 \x03(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\"\x90\x01\n\x17SignalSegmentationParam\x12$\n\x1c\x66req_center_jitter_tolerance\x18\x01 \x01(\x02\x12\"\n\x1a\x66req_border_blur_tolerance\x18\x02 \x01(\x02\x12\x0f\n\x07min_rss\x18\x03 \x01(\x02\x12\x1a\n\x12time_gap_tolerance\x18\x04 \x01(\x05\"\xb2\x01\n\x15HopSignalClusterParam\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x41\n\x0f\x66requency_range\x18\x02 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\x12)\n\x10\x62\x61nd_width_range\x18\x03 \x01(\x0b\x32\x0f.zb.dcts.DRange\x12\x1d\n\x15\x66req_jitter_tolerance\x18\x04 \x01(\x02\"i\n\x17HopSignalDetectionParam\x12N\n\x13hop_signal_clusters\x18\x01 \x03(\x0b\x32\x31.zb.dcts.scenario.detection.HopSignalClusterParam\"\x83\x02\n\x11SignalDetectParam\x12>\n\nwhite_list\x18\x01 \x01(\x0b\x32*.zb.dcts.scenario.detection.FreqSpanFilter\x12U\n\x18signal_segmenation_param\x18\x02 \x01(\x0b\x32\x33.zb.dcts.scenario.detection.SignalSegmentationParam\x12W\n\x1ahop_signal_detection_param\x18\x03 \x01(\x0b\x32\x33.zb.dcts.scenario.detection.HopSignalDetectionParam\"\xc4\x01\n\x0e\x44\x65tectionParam\x12\x17\n\x0fresult_interval\x18\x01 \x01(\x05\x12M\n\x13\x65nergy_detect_param\x18\x02 \x01(\x0b\x32\x30.zb.dcts.scenario.detection.EnergyDetectionParam\x12J\n\x13signal_detect_param\x18\x03 \x01(\x0b\x32-.zb.dcts.scenario.detection.SignalDetectParam\"\xb3\x01\n\rSignalFeature\x12\x17\n\x0fsequence_number\x18\x01 \x01(\x05\x12:\n\x0bsignal_band\x18\x02 \x01(\x0b\x32%.zb.dcts.scenario.spectrum.SignalBand\x12(\n\tamplitude\x18\x04 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\x12#\n\x04hits\x18\x05 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\"\xed\x02\n\x0cSignalDigest\x12\n\n\x02id\x18\x01 \x01(\t\x12<\n\x08\x61\x63tivity\x18\x02 \x01(\x0e\x32*.zb.dcts.scenario.detection.SignalActivity\x12*\n\x0b\x63\x65nter_freq\x18\x03 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\x12)\n\nband_width\x18\x04 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\x12(\n\tamplitude\x18\x05 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\x12)\n\x0e\x65mit_time_span\x18\x06 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\x12\x14\n\x0cnum_features\x18\x07 \x01(\x05\x12$\n\x0e\x64ir_of_arrival\x18\t \x01(\x0b\x32\x0c.zb.dcts.DOA\x12\x16\n\x0e\x63lassification\x18\n \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x0b \x01(\t\"\x8d\x01\n\rSignalSegment\x12\x38\n\x06\x64igest\x18\x01 \x01(\x0b\x32(.zb.dcts.scenario.detection.SignalDigest\x12\x42\n\x0f\x66\x65\x61ture_details\x18\x02 \x03(\x0b\x32).zb.dcts.scenario.detection.SignalFeature\"\xa8\x01\n\x0fHopSignalDigest\x12*\n\x0b\x63\x65nter_freq\x18\x01 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\x12)\n\nband_width\x18\x02 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\x12(\n\tamplitude\x18\x03 \x01(\x0b\x32\x15.zb.dcts.StatisticVal\x12\x14\n\x0cnum_features\x18\x05 \x01(\x05\"\xc8\x01\n\x10HopSignalCluster\x12\x0c\n\x04name\x18\x01 \x01(\t\x12<\n\x08\x61\x63tivity\x18\x02 \x01(\x0e\x32*.zb.dcts.scenario.detection.SignalActivity\x12)\n\x0e\x65mit_time_span\x18\x03 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\x12=\n\x08\x66req_set\x18\x04 \x03(\x0b\x32+.zb.dcts.scenario.detection.HopSignalDigest\"O\n\rFixSignalList\x12>\n\x0b\x66ix_signals\x18\x01 \x03(\x0b\x32).zb.dcts.scenario.detection.SignalSegment\"Z\n\rHopSignalList\x12I\n\x13hop_signal_clusters\x18\x01 \x03(\x0b\x32,.zb.dcts.scenario.detection.HopSignalCluster\"\x8c\x01\n\x10\x44\x65tectionRequest\x12\x33\n\tresponser\x18\x01 \x01(\x0b\x32 .zb.dcts.scenario.ScenarioTaskId\x12\x43\n\x0f\x64\x65tection_param\x18\x02 \x01(\x0b\x32*.zb.dcts.scenario.detection.DetectionParam\"J\n\x12\x41utoGatheringParam\x12\x19\n\x11time_span_in_msec\x18\x01 \x01(\x05\x12\x19\n\x11signal_candidates\x18\x02 \x03(\t\"z\n\x14ManualGatheringParam\x12\n\n\x02id\x18\x01 \x01(\t\x12\x19\n\x11time_span_in_msec\x18\x02 \x01(\x05\x12;\n\tfreq_span\x18\x03 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\"\xed\x01\n\x16SignalGatheringRequest\x12\x33\n\tresponser\x18\x01 \x01(\x0b\x32 .zb.dcts.scenario.ScenarioTaskId\x12L\n\x14\x61uto_gathering_param\x18\x02 \x01(\x0b\x32..zb.dcts.scenario.detection.AutoGatheringParam\x12P\n\x16manual_gathering_param\x18\x03 \x01(\x0b\x32\x30.zb.dcts.scenario.detection.ManualGatheringParam\"Z\n\x0cSignalSample\x12\n\n\x02id\x18\x01 \x01(\t\x12>\n\x0csample_block\x18\x02 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.SpectrumBlock\"M\n\x10SignalSampleList\x12\x39\n\x07samples\x18\x01 \x03(\x0b\x32(.zb.dcts.scenario.detection.SignalSample\"\x8a\x02\n\x17SignalTableQueryRequest\x12\x33\n\tresponser\x18\x01 \x01(\x0b\x32 .zb.dcts.scenario.ScenarioTaskId\x12-\n\x0b\x64\x61ta_source\x18\x02 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12&\n\x0c\x61\x63tiviy_mask\x18\x03 \x01(\x0b\x32\x10.zb.dcts.Integer\x12<\n\nfreq_range\x18\x04 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\x12%\n\ntime_range\x18\x05 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\"\xb2\x02\n\x18SignalTableQueryResponse\x12-\n\x0b\x64\x61ta_source\x18\x01 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12\x12\n\nnum_sweeps\x18\x02 \x01(\x05\x12\x13\n\x0bnum_detects\x18\x03 \x01(\x05\x12\x19\n\x11num_total_signals\x18\x04 \x01(\x05\x12\x19\n\x11num_query_signals\x18\x05 \x01(\x05\x12\x41\n\x0f\x66ix_signal_list\x18\x07 \x03(\x0b\x32(.zb.dcts.scenario.detection.SignalDigest\x12\x45\n\x0fhop_signal_list\x18\x08 \x03(\x0b\x32,.zb.dcts.scenario.detection.HopSignalCluster\"\xb7\x01\n\x06Header\x12-\n\x0bresult_from\x18\x01 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12\x17\n\x0fsequence_number\x18\x03 \x01(\r\x12\x13\n\x0bsweep_count\x18\x04 \x01(\r\x12$\n\ttime_span\x18\x05 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\x12*\n\x0f\x64\x65vice_position\x18\x06 \x01(\x0b\x32\x11.zb.dcts.Position\"\xd3\x01\n\x07RawBody\x12=\n\x08\x66req_seg\x18\x01 \x01(\x0b\x32+.zb.dcts.scenario.spectrum.FrequencySegment\x12\x44\n\x13over_threshold_hits\x18\x02 \x01(\x0b\x32\'.zb.dcts.scenario.spectrum.SpectrumLine\x12\x43\n\x12raw_spectrum_lines\x18\x03 \x03(\x0b\x32\'.zb.dcts.scenario.spectrum.SpectrumLine\"\x9a\x01\n\x07RawData\x12\x32\n\x06header\x18\x01 \x01(\x0b\x32\".zb.dcts.scenario.detection.Header\x12\x31\n\x04\x62ody\x18\x02 \x01(\x0b\x32#.zb.dcts.scenario.detection.RawBody\x12(\n\x0fsignal_segments\x18\x03 \x03(\x0b\x32\x0f.zb.dcts.IRange\"\x9a\x02\n\x12\x44\x65viceDetectResult\x12\x32\n\x06header\x18\x01 \x01(\x0b\x32\".zb.dcts.scenario.detection.Header\x12\x42\n\x0f\x66ix_signal_list\x18\x03 \x01(\x0b\x32).zb.dcts.scenario.detection.FixSignalList\x12\x42\n\x0fhop_signal_list\x18\x04 \x01(\x0b\x32).zb.dcts.scenario.detection.HopSignalList\x12H\n\x12signal_sample_list\x18\x05 \x01(\x0b\x32,.zb.dcts.scenario.detection.SignalSampleList\"\x99\x02\n\x11SignalLayerSurvey\x12-\n\x0bresult_from\x18\x01 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12&\n\ntime_stamp\x18\x02 \x01(\x0b\x32\x12.zb.dcts.Timestamp\x12#\n\x08position\x18\x03 \x01(\x0b\x32\x11.zb.dcts.Position\x12\x41\n\x0f\x66ix_signal_list\x18\x04 \x03(\x0b\x32(.zb.dcts.scenario.detection.SignalDigest\x12\x45\n\x0fhop_signal_list\x18\x05 \x03(\x0b\x32,.zb.dcts.scenario.detection.HopSignalCluster*I\n\rThresholdType\x12\x0b\n\x07HISTORY\x10\x00\x12\x0f\n\x0bUSER_DEFINE\x10\x01\x12\x0c\n\x08\x41\x44\x41PTIVE\x10\x02\x12\x0c\n\x08NEIGHBOR\x10\x03*Q\n\x0eSignalActivity\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06\x41\x43TIVE\x10\x01\x12\x0c\n\x08INACTIVE\x10\x02\x12\x0b\n\x07\x44\x45\x43\x41YED\x10\x04\x12\x0b\n\x07REMOVED\x10\x08\x62\x06proto3'
  ,
  dependencies=[dcts__pb2.DESCRIPTOR,source_dot_source__pb2.DESCRIPTOR,scenario_dot_spectrum__pb2.DESCRIPTOR,scenario_dot_scenario__pb2.DESCRIPTOR,])

_THRESHOLDTYPE = _descriptor.EnumDescriptor(
  name='ThresholdType',
  full_name='zb.dcts.scenario.detection.ThresholdType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HISTORY', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='USER_DEFINE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ADAPTIVE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NEIGHBOR', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=6078,
  serialized_end=6151,
)
_sym_db.RegisterEnumDescriptor(_THRESHOLDTYPE)

ThresholdType = enum_type_wrapper.EnumTypeWrapper(_THRESHOLDTYPE)
_SIGNALACTIVITY = _descriptor.EnumDescriptor(
  name='SignalActivity',
  full_name='zb.dcts.scenario.detection.SignalActivity',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INACTIVE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DECAYED', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='REMOVED', index=4, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=6153,
  serialized_end=6234,
)
_sym_db.RegisterEnumDescriptor(_SIGNALACTIVITY)

SignalActivity = enum_type_wrapper.EnumTypeWrapper(_SIGNALACTIVITY)
HISTORY = 0
USER_DEFINE = 1
ADAPTIVE = 2
NEIGHBOR = 3
UNKNOWN = 0
ACTIVE = 1
INACTIVE = 2
DECAYED = 4
REMOVED = 8


_ADAPTIVETHRESHOLDPARAM_PARTITIONMODE = _descriptor.EnumDescriptor(
  name='PartitionMode',
  full_name='zb.dcts.scenario.detection.AdaptiveThresholdParam.PartitionMode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PM_STANDARD', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PM_AGGRESIVE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PM_FAST', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=572,
  serialized_end=635,
)
_sym_db.RegisterEnumDescriptor(_ADAPTIVETHRESHOLDPARAM_PARTITIONMODE)

_ENERGYDETECTIONPARAM_LOGICTYPE = _descriptor.EnumDescriptor(
  name='LogicType',
  full_name='zb.dcts.scenario.detection.EnergyDetectionParam.LogicType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LT_AND', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LT_OR', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1267,
  serialized_end=1301,
)
_sym_db.RegisterEnumDescriptor(_ENERGYDETECTIONPARAM_LOGICTYPE)


_THRESHOLDSECTOR = _descriptor.Descriptor(
  name='ThresholdSector',
  full_name='zb.dcts.scenario.detection.ThresholdSector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='freq_span', full_name='zb.dcts.scenario.detection.ThresholdSector.freq_span', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='level', full_name='zb.dcts.scenario.detection.ThresholdSector.level', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=139,
  serialized_end=232,
)


_USERTHRESHOLDPARAM = _descriptor.Descriptor(
  name='UserThresholdParam',
  full_name='zb.dcts.scenario.detection.UserThresholdParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sectors', full_name='zb.dcts.scenario.detection.UserThresholdParam.sectors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=234,
  serialized_end=316,
)


_HISTORYTHRESHOLDPARAM = _descriptor.Descriptor(
  name='HistoryThresholdParam',
  full_name='zb.dcts.scenario.detection.HistoryThresholdParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='span', full_name='zb.dcts.scenario.detection.HistoryThresholdParam.span', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_load_count', full_name='zb.dcts.scenario.detection.HistoryThresholdParam.max_load_count', index=1,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='zb.dcts.scenario.detection.HistoryThresholdParam.offset', index=2,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=318,
  serialized_end=414,
)


_ADAPTIVETHRESHOLDPARAM = _descriptor.Descriptor(
  name='AdaptiveThresholdParam',
  full_name='zb.dcts.scenario.detection.AdaptiveThresholdParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='average_count', full_name='zb.dcts.scenario.detection.AdaptiveThresholdParam.average_count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='partition_mode', full_name='zb.dcts.scenario.detection.AdaptiveThresholdParam.partition_mode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='zb.dcts.scenario.detection.AdaptiveThresholdParam.offset', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ADAPTIVETHRESHOLDPARAM_PARTITIONMODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=417,
  serialized_end=635,
)


_NEIGHBORVARTHRESHOLDPARAM = _descriptor.Descriptor(
  name='NeighborVarThresholdParam',
  full_name='zb.dcts.scenario.detection.NeighborVarThresholdParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='noise_variance_scale', full_name='zb.dcts.scenario.detection.NeighborVarThresholdParam.noise_variance_scale', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='noise_max_variance', full_name='zb.dcts.scenario.detection.NeighborVarThresholdParam.noise_max_variance', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='zb.dcts.scenario.detection.NeighborVarThresholdParam.offset', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lookup_freq_span', full_name='zb.dcts.scenario.detection.NeighborVarThresholdParam.lookup_freq_span', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='smooth_range', full_name='zb.dcts.scenario.detection.NeighborVarThresholdParam.smooth_range', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=638,
  serialized_end=787,
)


_ENERGYDETECTIONPARAM = _descriptor.Descriptor(
  name='EnergyDetectionParam',
  full_name='zb.dcts.scenario.detection.EnergyDetectionParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='active_types', full_name='zb.dcts.scenario.detection.EnergyDetectionParam.active_types', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='logic', full_name='zb.dcts.scenario.detection.EnergyDetectionParam.logic', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='history_threshold', full_name='zb.dcts.scenario.detection.EnergyDetectionParam.history_threshold', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='user_threshold', full_name='zb.dcts.scenario.detection.EnergyDetectionParam.user_threshold', index=3,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='adaptive_threshold', full_name='zb.dcts.scenario.detection.EnergyDetectionParam.adaptive_threshold', index=4,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='neighbor_threshold', full_name='zb.dcts.scenario.detection.EnergyDetectionParam.neighbor_threshold', index=5,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ENERGYDETECTIONPARAM_LOGICTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=790,
  serialized_end=1301,
)


_THRESHOLDTRACE = _descriptor.Descriptor(
  name='ThresholdTrace',
  full_name='zb.dcts.scenario.detection.ThresholdTrace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='zb.dcts.scenario.detection.ThresholdTrace.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='threshold_trace', full_name='zb.dcts.scenario.detection.ThresholdTrace.threshold_trace', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1303,
  serialized_end=1401,
)


_FREQSPANFILTER = _descriptor.Descriptor(
  name='FreqSpanFilter',
  full_name='zb.dcts.scenario.detection.FreqSpanFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='freq_spans', full_name='zb.dcts.scenario.detection.FreqSpanFilter.freq_spans', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1403,
  serialized_end=1481,
)


_SIGNALSEGMENTATIONPARAM = _descriptor.Descriptor(
  name='SignalSegmentationParam',
  full_name='zb.dcts.scenario.detection.SignalSegmentationParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='freq_center_jitter_tolerance', full_name='zb.dcts.scenario.detection.SignalSegmentationParam.freq_center_jitter_tolerance', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='freq_border_blur_tolerance', full_name='zb.dcts.scenario.detection.SignalSegmentationParam.freq_border_blur_tolerance', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='min_rss', full_name='zb.dcts.scenario.detection.SignalSegmentationParam.min_rss', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_gap_tolerance', full_name='zb.dcts.scenario.detection.SignalSegmentationParam.time_gap_tolerance', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1484,
  serialized_end=1628,
)


_HOPSIGNALCLUSTERPARAM = _descriptor.Descriptor(
  name='HopSignalClusterParam',
  full_name='zb.dcts.scenario.detection.HopSignalClusterParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='zb.dcts.scenario.detection.HopSignalClusterParam.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='frequency_range', full_name='zb.dcts.scenario.detection.HopSignalClusterParam.frequency_range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='band_width_range', full_name='zb.dcts.scenario.detection.HopSignalClusterParam.band_width_range', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='freq_jitter_tolerance', full_name='zb.dcts.scenario.detection.HopSignalClusterParam.freq_jitter_tolerance', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1631,
  serialized_end=1809,
)


_HOPSIGNALDETECTIONPARAM = _descriptor.Descriptor(
  name='HopSignalDetectionParam',
  full_name='zb.dcts.scenario.detection.HopSignalDetectionParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hop_signal_clusters', full_name='zb.dcts.scenario.detection.HopSignalDetectionParam.hop_signal_clusters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1811,
  serialized_end=1916,
)


_SIGNALDETECTPARAM = _descriptor.Descriptor(
  name='SignalDetectParam',
  full_name='zb.dcts.scenario.detection.SignalDetectParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='white_list', full_name='zb.dcts.scenario.detection.SignalDetectParam.white_list', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signal_segmenation_param', full_name='zb.dcts.scenario.detection.SignalDetectParam.signal_segmenation_param', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hop_signal_detection_param', full_name='zb.dcts.scenario.detection.SignalDetectParam.hop_signal_detection_param', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1919,
  serialized_end=2178,
)


_DETECTIONPARAM = _descriptor.Descriptor(
  name='DetectionParam',
  full_name='zb.dcts.scenario.detection.DetectionParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_interval', full_name='zb.dcts.scenario.detection.DetectionParam.result_interval', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='energy_detect_param', full_name='zb.dcts.scenario.detection.DetectionParam.energy_detect_param', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signal_detect_param', full_name='zb.dcts.scenario.detection.DetectionParam.signal_detect_param', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2181,
  serialized_end=2377,
)


_SIGNALFEATURE = _descriptor.Descriptor(
  name='SignalFeature',
  full_name='zb.dcts.scenario.detection.SignalFeature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='zb.dcts.scenario.detection.SignalFeature.sequence_number', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signal_band', full_name='zb.dcts.scenario.detection.SignalFeature.signal_band', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='amplitude', full_name='zb.dcts.scenario.detection.SignalFeature.amplitude', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hits', full_name='zb.dcts.scenario.detection.SignalFeature.hits', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2380,
  serialized_end=2559,
)


_SIGNALDIGEST = _descriptor.Descriptor(
  name='SignalDigest',
  full_name='zb.dcts.scenario.detection.SignalDigest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='zb.dcts.scenario.detection.SignalDigest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='activity', full_name='zb.dcts.scenario.detection.SignalDigest.activity', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='center_freq', full_name='zb.dcts.scenario.detection.SignalDigest.center_freq', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='band_width', full_name='zb.dcts.scenario.detection.SignalDigest.band_width', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='amplitude', full_name='zb.dcts.scenario.detection.SignalDigest.amplitude', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='emit_time_span', full_name='zb.dcts.scenario.detection.SignalDigest.emit_time_span', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_features', full_name='zb.dcts.scenario.detection.SignalDigest.num_features', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dir_of_arrival', full_name='zb.dcts.scenario.detection.SignalDigest.dir_of_arrival', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='classification', full_name='zb.dcts.scenario.detection.SignalDigest.classification', index=8,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description', full_name='zb.dcts.scenario.detection.SignalDigest.description', index=9,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2562,
  serialized_end=2927,
)


_SIGNALSEGMENT = _descriptor.Descriptor(
  name='SignalSegment',
  full_name='zb.dcts.scenario.detection.SignalSegment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='digest', full_name='zb.dcts.scenario.detection.SignalSegment.digest', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='feature_details', full_name='zb.dcts.scenario.detection.SignalSegment.feature_details', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2930,
  serialized_end=3071,
)


_HOPSIGNALDIGEST = _descriptor.Descriptor(
  name='HopSignalDigest',
  full_name='zb.dcts.scenario.detection.HopSignalDigest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='center_freq', full_name='zb.dcts.scenario.detection.HopSignalDigest.center_freq', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='band_width', full_name='zb.dcts.scenario.detection.HopSignalDigest.band_width', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='amplitude', full_name='zb.dcts.scenario.detection.HopSignalDigest.amplitude', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_features', full_name='zb.dcts.scenario.detection.HopSignalDigest.num_features', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3074,
  serialized_end=3242,
)


_HOPSIGNALCLUSTER = _descriptor.Descriptor(
  name='HopSignalCluster',
  full_name='zb.dcts.scenario.detection.HopSignalCluster',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='zb.dcts.scenario.detection.HopSignalCluster.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='activity', full_name='zb.dcts.scenario.detection.HopSignalCluster.activity', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='emit_time_span', full_name='zb.dcts.scenario.detection.HopSignalCluster.emit_time_span', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='freq_set', full_name='zb.dcts.scenario.detection.HopSignalCluster.freq_set', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3245,
  serialized_end=3445,
)


_FIXSIGNALLIST = _descriptor.Descriptor(
  name='FixSignalList',
  full_name='zb.dcts.scenario.detection.FixSignalList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fix_signals', full_name='zb.dcts.scenario.detection.FixSignalList.fix_signals', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3447,
  serialized_end=3526,
)


_HOPSIGNALLIST = _descriptor.Descriptor(
  name='HopSignalList',
  full_name='zb.dcts.scenario.detection.HopSignalList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hop_signal_clusters', full_name='zb.dcts.scenario.detection.HopSignalList.hop_signal_clusters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3528,
  serialized_end=3618,
)


_DETECTIONREQUEST = _descriptor.Descriptor(
  name='DetectionRequest',
  full_name='zb.dcts.scenario.detection.DetectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='responser', full_name='zb.dcts.scenario.detection.DetectionRequest.responser', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='detection_param', full_name='zb.dcts.scenario.detection.DetectionRequest.detection_param', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3621,
  serialized_end=3761,
)


_AUTOGATHERINGPARAM = _descriptor.Descriptor(
  name='AutoGatheringParam',
  full_name='zb.dcts.scenario.detection.AutoGatheringParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='time_span_in_msec', full_name='zb.dcts.scenario.detection.AutoGatheringParam.time_span_in_msec', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signal_candidates', full_name='zb.dcts.scenario.detection.AutoGatheringParam.signal_candidates', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3763,
  serialized_end=3837,
)


_MANUALGATHERINGPARAM = _descriptor.Descriptor(
  name='ManualGatheringParam',
  full_name='zb.dcts.scenario.detection.ManualGatheringParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='zb.dcts.scenario.detection.ManualGatheringParam.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_span_in_msec', full_name='zb.dcts.scenario.detection.ManualGatheringParam.time_span_in_msec', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='freq_span', full_name='zb.dcts.scenario.detection.ManualGatheringParam.freq_span', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3839,
  serialized_end=3961,
)


_SIGNALGATHERINGREQUEST = _descriptor.Descriptor(
  name='SignalGatheringRequest',
  full_name='zb.dcts.scenario.detection.SignalGatheringRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='responser', full_name='zb.dcts.scenario.detection.SignalGatheringRequest.responser', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='auto_gathering_param', full_name='zb.dcts.scenario.detection.SignalGatheringRequest.auto_gathering_param', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='manual_gathering_param', full_name='zb.dcts.scenario.detection.SignalGatheringRequest.manual_gathering_param', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3964,
  serialized_end=4201,
)


_SIGNALSAMPLE = _descriptor.Descriptor(
  name='SignalSample',
  full_name='zb.dcts.scenario.detection.SignalSample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='zb.dcts.scenario.detection.SignalSample.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sample_block', full_name='zb.dcts.scenario.detection.SignalSample.sample_block', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4203,
  serialized_end=4293,
)


_SIGNALSAMPLELIST = _descriptor.Descriptor(
  name='SignalSampleList',
  full_name='zb.dcts.scenario.detection.SignalSampleList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='samples', full_name='zb.dcts.scenario.detection.SignalSampleList.samples', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4295,
  serialized_end=4372,
)


_SIGNALTABLEQUERYREQUEST = _descriptor.Descriptor(
  name='SignalTableQueryRequest',
  full_name='zb.dcts.scenario.detection.SignalTableQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='responser', full_name='zb.dcts.scenario.detection.SignalTableQueryRequest.responser', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data_source', full_name='zb.dcts.scenario.detection.SignalTableQueryRequest.data_source', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='activiy_mask', full_name='zb.dcts.scenario.detection.SignalTableQueryRequest.activiy_mask', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='freq_range', full_name='zb.dcts.scenario.detection.SignalTableQueryRequest.freq_range', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_range', full_name='zb.dcts.scenario.detection.SignalTableQueryRequest.time_range', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4375,
  serialized_end=4641,
)


_SIGNALTABLEQUERYRESPONSE = _descriptor.Descriptor(
  name='SignalTableQueryResponse',
  full_name='zb.dcts.scenario.detection.SignalTableQueryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_source', full_name='zb.dcts.scenario.detection.SignalTableQueryResponse.data_source', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_sweeps', full_name='zb.dcts.scenario.detection.SignalTableQueryResponse.num_sweeps', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_detects', full_name='zb.dcts.scenario.detection.SignalTableQueryResponse.num_detects', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_total_signals', full_name='zb.dcts.scenario.detection.SignalTableQueryResponse.num_total_signals', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_query_signals', full_name='zb.dcts.scenario.detection.SignalTableQueryResponse.num_query_signals', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fix_signal_list', full_name='zb.dcts.scenario.detection.SignalTableQueryResponse.fix_signal_list', index=5,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hop_signal_list', full_name='zb.dcts.scenario.detection.SignalTableQueryResponse.hop_signal_list', index=6,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4644,
  serialized_end=4950,
)


_HEADER = _descriptor.Descriptor(
  name='Header',
  full_name='zb.dcts.scenario.detection.Header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_from', full_name='zb.dcts.scenario.detection.Header.result_from', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='zb.dcts.scenario.detection.Header.sequence_number', index=1,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sweep_count', full_name='zb.dcts.scenario.detection.Header.sweep_count', index=2,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_span', full_name='zb.dcts.scenario.detection.Header.time_span', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_position', full_name='zb.dcts.scenario.detection.Header.device_position', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4953,
  serialized_end=5136,
)


_RAWBODY = _descriptor.Descriptor(
  name='RawBody',
  full_name='zb.dcts.scenario.detection.RawBody',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='freq_seg', full_name='zb.dcts.scenario.detection.RawBody.freq_seg', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='over_threshold_hits', full_name='zb.dcts.scenario.detection.RawBody.over_threshold_hits', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='raw_spectrum_lines', full_name='zb.dcts.scenario.detection.RawBody.raw_spectrum_lines', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5139,
  serialized_end=5350,
)


_RAWDATA = _descriptor.Descriptor(
  name='RawData',
  full_name='zb.dcts.scenario.detection.RawData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='zb.dcts.scenario.detection.RawData.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='body', full_name='zb.dcts.scenario.detection.RawData.body', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signal_segments', full_name='zb.dcts.scenario.detection.RawData.signal_segments', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5353,
  serialized_end=5507,
)


_DEVICEDETECTRESULT = _descriptor.Descriptor(
  name='DeviceDetectResult',
  full_name='zb.dcts.scenario.detection.DeviceDetectResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='zb.dcts.scenario.detection.DeviceDetectResult.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fix_signal_list', full_name='zb.dcts.scenario.detection.DeviceDetectResult.fix_signal_list', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hop_signal_list', full_name='zb.dcts.scenario.detection.DeviceDetectResult.hop_signal_list', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signal_sample_list', full_name='zb.dcts.scenario.detection.DeviceDetectResult.signal_sample_list', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5510,
  serialized_end=5792,
)


_SIGNALLAYERSURVEY = _descriptor.Descriptor(
  name='SignalLayerSurvey',
  full_name='zb.dcts.scenario.detection.SignalLayerSurvey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_from', full_name='zb.dcts.scenario.detection.SignalLayerSurvey.result_from', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_stamp', full_name='zb.dcts.scenario.detection.SignalLayerSurvey.time_stamp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='position', full_name='zb.dcts.scenario.detection.SignalLayerSurvey.position', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fix_signal_list', full_name='zb.dcts.scenario.detection.SignalLayerSurvey.fix_signal_list', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hop_signal_list', full_name='zb.dcts.scenario.detection.SignalLayerSurvey.hop_signal_list', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5795,
  serialized_end=6076,
)

_THRESHOLDSECTOR.fields_by_name['freq_span'].message_type = scenario_dot_spectrum__pb2._FREQUENCYSPAN
_USERTHRESHOLDPARAM.fields_by_name['sectors'].message_type = _THRESHOLDSECTOR
_HISTORYTHRESHOLDPARAM.fields_by_name['span'].message_type = dcts__pb2._TIMESPAN
_ADAPTIVETHRESHOLDPARAM.fields_by_name['partition_mode'].enum_type = _ADAPTIVETHRESHOLDPARAM_PARTITIONMODE
_ADAPTIVETHRESHOLDPARAM_PARTITIONMODE.containing_type = _ADAPTIVETHRESHOLDPARAM
_ENERGYDETECTIONPARAM.fields_by_name['active_types'].enum_type = _THRESHOLDTYPE
_ENERGYDETECTIONPARAM.fields_by_name['logic'].enum_type = _ENERGYDETECTIONPARAM_LOGICTYPE
_ENERGYDETECTIONPARAM.fields_by_name['history_threshold'].message_type = _HISTORYTHRESHOLDPARAM
_ENERGYDETECTIONPARAM.fields_by_name['user_threshold'].message_type = _USERTHRESHOLDPARAM
_ENERGYDETECTIONPARAM.fields_by_name['adaptive_threshold'].message_type = _ADAPTIVETHRESHOLDPARAM
_ENERGYDETECTIONPARAM.fields_by_name['neighbor_threshold'].message_type = _NEIGHBORVARTHRESHOLDPARAM
_ENERGYDETECTIONPARAM_LOGICTYPE.containing_type = _ENERGYDETECTIONPARAM
_THRESHOLDTRACE.fields_by_name['type'].enum_type = _THRESHOLDTYPE
_FREQSPANFILTER.fields_by_name['freq_spans'].message_type = scenario_dot_spectrum__pb2._FREQUENCYSPAN
_HOPSIGNALCLUSTERPARAM.fields_by_name['frequency_range'].message_type = scenario_dot_spectrum__pb2._FREQUENCYSPAN
_HOPSIGNALCLUSTERPARAM.fields_by_name['band_width_range'].message_type = dcts__pb2._DRANGE
_HOPSIGNALDETECTIONPARAM.fields_by_name['hop_signal_clusters'].message_type = _HOPSIGNALCLUSTERPARAM
_SIGNALDETECTPARAM.fields_by_name['white_list'].message_type = _FREQSPANFILTER
_SIGNALDETECTPARAM.fields_by_name['signal_segmenation_param'].message_type = _SIGNALSEGMENTATIONPARAM
_SIGNALDETECTPARAM.fields_by_name['hop_signal_detection_param'].message_type = _HOPSIGNALDETECTIONPARAM
_DETECTIONPARAM.fields_by_name['energy_detect_param'].message_type = _ENERGYDETECTIONPARAM
_DETECTIONPARAM.fields_by_name['signal_detect_param'].message_type = _SIGNALDETECTPARAM
_SIGNALFEATURE.fields_by_name['signal_band'].message_type = scenario_dot_spectrum__pb2._SIGNALBAND
_SIGNALFEATURE.fields_by_name['amplitude'].message_type = dcts__pb2._STATISTICVAL
_SIGNALFEATURE.fields_by_name['hits'].message_type = dcts__pb2._STATISTICVAL
_SIGNALDIGEST.fields_by_name['activity'].enum_type = _SIGNALACTIVITY
_SIGNALDIGEST.fields_by_name['center_freq'].message_type = dcts__pb2._STATISTICVAL
_SIGNALDIGEST.fields_by_name['band_width'].message_type = dcts__pb2._STATISTICVAL
_SIGNALDIGEST.fields_by_name['amplitude'].message_type = dcts__pb2._STATISTICVAL
_SIGNALDIGEST.fields_by_name['emit_time_span'].message_type = dcts__pb2._TIMESPAN
_SIGNALDIGEST.fields_by_name['dir_of_arrival'].message_type = dcts__pb2._DOA
_SIGNALSEGMENT.fields_by_name['digest'].message_type = _SIGNALDIGEST
_SIGNALSEGMENT.fields_by_name['feature_details'].message_type = _SIGNALFEATURE
_HOPSIGNALDIGEST.fields_by_name['center_freq'].message_type = dcts__pb2._STATISTICVAL
_HOPSIGNALDIGEST.fields_by_name['band_width'].message_type = dcts__pb2._STATISTICVAL
_HOPSIGNALDIGEST.fields_by_name['amplitude'].message_type = dcts__pb2._STATISTICVAL
_HOPSIGNALCLUSTER.fields_by_name['activity'].enum_type = _SIGNALACTIVITY
_HOPSIGNALCLUSTER.fields_by_name['emit_time_span'].message_type = dcts__pb2._TIMESPAN
_HOPSIGNALCLUSTER.fields_by_name['freq_set'].message_type = _HOPSIGNALDIGEST
_FIXSIGNALLIST.fields_by_name['fix_signals'].message_type = _SIGNALSEGMENT
_HOPSIGNALLIST.fields_by_name['hop_signal_clusters'].message_type = _HOPSIGNALCLUSTER
_DETECTIONREQUEST.fields_by_name['responser'].message_type = scenario_dot_scenario__pb2._SCENARIOTASKID
_DETECTIONREQUEST.fields_by_name['detection_param'].message_type = _DETECTIONPARAM
_MANUALGATHERINGPARAM.fields_by_name['freq_span'].message_type = scenario_dot_spectrum__pb2._FREQUENCYSPAN
_SIGNALGATHERINGREQUEST.fields_by_name['responser'].message_type = scenario_dot_scenario__pb2._SCENARIOTASKID
_SIGNALGATHERINGREQUEST.fields_by_name['auto_gathering_param'].message_type = _AUTOGATHERINGPARAM
_SIGNALGATHERINGREQUEST.fields_by_name['manual_gathering_param'].message_type = _MANUALGATHERINGPARAM
_SIGNALSAMPLE.fields_by_name['sample_block'].message_type = scenario_dot_spectrum__pb2._SPECTRUMBLOCK
_SIGNALSAMPLELIST.fields_by_name['samples'].message_type = _SIGNALSAMPLE
_SIGNALTABLEQUERYREQUEST.fields_by_name['responser'].message_type = scenario_dot_scenario__pb2._SCENARIOTASKID
_SIGNALTABLEQUERYREQUEST.fields_by_name['data_source'].message_type = source_dot_source__pb2._SOURCEID
_SIGNALTABLEQUERYREQUEST.fields_by_name['activiy_mask'].message_type = dcts__pb2._INTEGER
_SIGNALTABLEQUERYREQUEST.fields_by_name['freq_range'].message_type = scenario_dot_spectrum__pb2._FREQUENCYSPAN
_SIGNALTABLEQUERYREQUEST.fields_by_name['time_range'].message_type = dcts__pb2._TIMESPAN
_SIGNALTABLEQUERYRESPONSE.fields_by_name['data_source'].message_type = source_dot_source__pb2._SOURCEID
_SIGNALTABLEQUERYRESPONSE.fields_by_name['fix_signal_list'].message_type = _SIGNALDIGEST
_SIGNALTABLEQUERYRESPONSE.fields_by_name['hop_signal_list'].message_type = _HOPSIGNALCLUSTER
_HEADER.fields_by_name['result_from'].message_type = source_dot_source__pb2._SOURCEID
_HEADER.fields_by_name['time_span'].message_type = dcts__pb2._TIMESPAN
_HEADER.fields_by_name['device_position'].message_type = dcts__pb2._POSITION
_RAWBODY.fields_by_name['freq_seg'].message_type = scenario_dot_spectrum__pb2._FREQUENCYSEGMENT
_RAWBODY.fields_by_name['over_threshold_hits'].message_type = scenario_dot_spectrum__pb2._SPECTRUMLINE
_RAWBODY.fields_by_name['raw_spectrum_lines'].message_type = scenario_dot_spectrum__pb2._SPECTRUMLINE
_RAWDATA.fields_by_name['header'].message_type = _HEADER
_RAWDATA.fields_by_name['body'].message_type = _RAWBODY
_RAWDATA.fields_by_name['signal_segments'].message_type = dcts__pb2._IRANGE
_DEVICEDETECTRESULT.fields_by_name['header'].message_type = _HEADER
_DEVICEDETECTRESULT.fields_by_name['fix_signal_list'].message_type = _FIXSIGNALLIST
_DEVICEDETECTRESULT.fields_by_name['hop_signal_list'].message_type = _HOPSIGNALLIST
_DEVICEDETECTRESULT.fields_by_name['signal_sample_list'].message_type = _SIGNALSAMPLELIST
_SIGNALLAYERSURVEY.fields_by_name['result_from'].message_type = source_dot_source__pb2._SOURCEID
_SIGNALLAYERSURVEY.fields_by_name['time_stamp'].message_type = dcts__pb2._TIMESTAMP
_SIGNALLAYERSURVEY.fields_by_name['position'].message_type = dcts__pb2._POSITION
_SIGNALLAYERSURVEY.fields_by_name['fix_signal_list'].message_type = _SIGNALDIGEST
_SIGNALLAYERSURVEY.fields_by_name['hop_signal_list'].message_type = _HOPSIGNALCLUSTER
DESCRIPTOR.message_types_by_name['ThresholdSector'] = _THRESHOLDSECTOR
DESCRIPTOR.message_types_by_name['UserThresholdParam'] = _USERTHRESHOLDPARAM
DESCRIPTOR.message_types_by_name['HistoryThresholdParam'] = _HISTORYTHRESHOLDPARAM
DESCRIPTOR.message_types_by_name['AdaptiveThresholdParam'] = _ADAPTIVETHRESHOLDPARAM
DESCRIPTOR.message_types_by_name['NeighborVarThresholdParam'] = _NEIGHBORVARTHRESHOLDPARAM
DESCRIPTOR.message_types_by_name['EnergyDetectionParam'] = _ENERGYDETECTIONPARAM
DESCRIPTOR.message_types_by_name['ThresholdTrace'] = _THRESHOLDTRACE
DESCRIPTOR.message_types_by_name['FreqSpanFilter'] = _FREQSPANFILTER
DESCRIPTOR.message_types_by_name['SignalSegmentationParam'] = _SIGNALSEGMENTATIONPARAM
DESCRIPTOR.message_types_by_name['HopSignalClusterParam'] = _HOPSIGNALCLUSTERPARAM
DESCRIPTOR.message_types_by_name['HopSignalDetectionParam'] = _HOPSIGNALDETECTIONPARAM
DESCRIPTOR.message_types_by_name['SignalDetectParam'] = _SIGNALDETECTPARAM
DESCRIPTOR.message_types_by_name['DetectionParam'] = _DETECTIONPARAM
DESCRIPTOR.message_types_by_name['SignalFeature'] = _SIGNALFEATURE
DESCRIPTOR.message_types_by_name['SignalDigest'] = _SIGNALDIGEST
DESCRIPTOR.message_types_by_name['SignalSegment'] = _SIGNALSEGMENT
DESCRIPTOR.message_types_by_name['HopSignalDigest'] = _HOPSIGNALDIGEST
DESCRIPTOR.message_types_by_name['HopSignalCluster'] = _HOPSIGNALCLUSTER
DESCRIPTOR.message_types_by_name['FixSignalList'] = _FIXSIGNALLIST
DESCRIPTOR.message_types_by_name['HopSignalList'] = _HOPSIGNALLIST
DESCRIPTOR.message_types_by_name['DetectionRequest'] = _DETECTIONREQUEST
DESCRIPTOR.message_types_by_name['AutoGatheringParam'] = _AUTOGATHERINGPARAM
DESCRIPTOR.message_types_by_name['ManualGatheringParam'] = _MANUALGATHERINGPARAM
DESCRIPTOR.message_types_by_name['SignalGatheringRequest'] = _SIGNALGATHERINGREQUEST
DESCRIPTOR.message_types_by_name['SignalSample'] = _SIGNALSAMPLE
DESCRIPTOR.message_types_by_name['SignalSampleList'] = _SIGNALSAMPLELIST
DESCRIPTOR.message_types_by_name['SignalTableQueryRequest'] = _SIGNALTABLEQUERYREQUEST
DESCRIPTOR.message_types_by_name['SignalTableQueryResponse'] = _SIGNALTABLEQUERYRESPONSE
DESCRIPTOR.message_types_by_name['Header'] = _HEADER
DESCRIPTOR.message_types_by_name['RawBody'] = _RAWBODY
DESCRIPTOR.message_types_by_name['RawData'] = _RAWDATA
DESCRIPTOR.message_types_by_name['DeviceDetectResult'] = _DEVICEDETECTRESULT
DESCRIPTOR.message_types_by_name['SignalLayerSurvey'] = _SIGNALLAYERSURVEY
DESCRIPTOR.enum_types_by_name['ThresholdType'] = _THRESHOLDTYPE
DESCRIPTOR.enum_types_by_name['SignalActivity'] = _SIGNALACTIVITY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ThresholdSector = _reflection.GeneratedProtocolMessageType('ThresholdSector', (_message.Message,), {
  'DESCRIPTOR' : _THRESHOLDSECTOR,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.ThresholdSector)
  })
_sym_db.RegisterMessage(ThresholdSector)

UserThresholdParam = _reflection.GeneratedProtocolMessageType('UserThresholdParam', (_message.Message,), {
  'DESCRIPTOR' : _USERTHRESHOLDPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.UserThresholdParam)
  })
_sym_db.RegisterMessage(UserThresholdParam)

HistoryThresholdParam = _reflection.GeneratedProtocolMessageType('HistoryThresholdParam', (_message.Message,), {
  'DESCRIPTOR' : _HISTORYTHRESHOLDPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HistoryThresholdParam)
  })
_sym_db.RegisterMessage(HistoryThresholdParam)

AdaptiveThresholdParam = _reflection.GeneratedProtocolMessageType('AdaptiveThresholdParam', (_message.Message,), {
  'DESCRIPTOR' : _ADAPTIVETHRESHOLDPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.AdaptiveThresholdParam)
  })
_sym_db.RegisterMessage(AdaptiveThresholdParam)

NeighborVarThresholdParam = _reflection.GeneratedProtocolMessageType('NeighborVarThresholdParam', (_message.Message,), {
  'DESCRIPTOR' : _NEIGHBORVARTHRESHOLDPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.NeighborVarThresholdParam)
  })
_sym_db.RegisterMessage(NeighborVarThresholdParam)

EnergyDetectionParam = _reflection.GeneratedProtocolMessageType('EnergyDetectionParam', (_message.Message,), {
  'DESCRIPTOR' : _ENERGYDETECTIONPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.EnergyDetectionParam)
  })
_sym_db.RegisterMessage(EnergyDetectionParam)

ThresholdTrace = _reflection.GeneratedProtocolMessageType('ThresholdTrace', (_message.Message,), {
  'DESCRIPTOR' : _THRESHOLDTRACE,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.ThresholdTrace)
  })
_sym_db.RegisterMessage(ThresholdTrace)

FreqSpanFilter = _reflection.GeneratedProtocolMessageType('FreqSpanFilter', (_message.Message,), {
  'DESCRIPTOR' : _FREQSPANFILTER,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.FreqSpanFilter)
  })
_sym_db.RegisterMessage(FreqSpanFilter)

SignalSegmentationParam = _reflection.GeneratedProtocolMessageType('SignalSegmentationParam', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALSEGMENTATIONPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSegmentationParam)
  })
_sym_db.RegisterMessage(SignalSegmentationParam)

HopSignalClusterParam = _reflection.GeneratedProtocolMessageType('HopSignalClusterParam', (_message.Message,), {
  'DESCRIPTOR' : _HOPSIGNALCLUSTERPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalClusterParam)
  })
_sym_db.RegisterMessage(HopSignalClusterParam)

HopSignalDetectionParam = _reflection.GeneratedProtocolMessageType('HopSignalDetectionParam', (_message.Message,), {
  'DESCRIPTOR' : _HOPSIGNALDETECTIONPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalDetectionParam)
  })
_sym_db.RegisterMessage(HopSignalDetectionParam)

SignalDetectParam = _reflection.GeneratedProtocolMessageType('SignalDetectParam', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALDETECTPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalDetectParam)
  })
_sym_db.RegisterMessage(SignalDetectParam)

DetectionParam = _reflection.GeneratedProtocolMessageType('DetectionParam', (_message.Message,), {
  'DESCRIPTOR' : _DETECTIONPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.DetectionParam)
  })
_sym_db.RegisterMessage(DetectionParam)

SignalFeature = _reflection.GeneratedProtocolMessageType('SignalFeature', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALFEATURE,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalFeature)
  })
_sym_db.RegisterMessage(SignalFeature)

SignalDigest = _reflection.GeneratedProtocolMessageType('SignalDigest', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALDIGEST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalDigest)
  })
_sym_db.RegisterMessage(SignalDigest)

SignalSegment = _reflection.GeneratedProtocolMessageType('SignalSegment', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALSEGMENT,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSegment)
  })
_sym_db.RegisterMessage(SignalSegment)

HopSignalDigest = _reflection.GeneratedProtocolMessageType('HopSignalDigest', (_message.Message,), {
  'DESCRIPTOR' : _HOPSIGNALDIGEST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalDigest)
  })
_sym_db.RegisterMessage(HopSignalDigest)

HopSignalCluster = _reflection.GeneratedProtocolMessageType('HopSignalCluster', (_message.Message,), {
  'DESCRIPTOR' : _HOPSIGNALCLUSTER,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalCluster)
  })
_sym_db.RegisterMessage(HopSignalCluster)

FixSignalList = _reflection.GeneratedProtocolMessageType('FixSignalList', (_message.Message,), {
  'DESCRIPTOR' : _FIXSIGNALLIST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.FixSignalList)
  })
_sym_db.RegisterMessage(FixSignalList)

HopSignalList = _reflection.GeneratedProtocolMessageType('HopSignalList', (_message.Message,), {
  'DESCRIPTOR' : _HOPSIGNALLIST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.HopSignalList)
  })
_sym_db.RegisterMessage(HopSignalList)

DetectionRequest = _reflection.GeneratedProtocolMessageType('DetectionRequest', (_message.Message,), {
  'DESCRIPTOR' : _DETECTIONREQUEST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.DetectionRequest)
  })
_sym_db.RegisterMessage(DetectionRequest)

AutoGatheringParam = _reflection.GeneratedProtocolMessageType('AutoGatheringParam', (_message.Message,), {
  'DESCRIPTOR' : _AUTOGATHERINGPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.AutoGatheringParam)
  })
_sym_db.RegisterMessage(AutoGatheringParam)

ManualGatheringParam = _reflection.GeneratedProtocolMessageType('ManualGatheringParam', (_message.Message,), {
  'DESCRIPTOR' : _MANUALGATHERINGPARAM,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.ManualGatheringParam)
  })
_sym_db.RegisterMessage(ManualGatheringParam)

SignalGatheringRequest = _reflection.GeneratedProtocolMessageType('SignalGatheringRequest', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALGATHERINGREQUEST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalGatheringRequest)
  })
_sym_db.RegisterMessage(SignalGatheringRequest)

SignalSample = _reflection.GeneratedProtocolMessageType('SignalSample', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALSAMPLE,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSample)
  })
_sym_db.RegisterMessage(SignalSample)

SignalSampleList = _reflection.GeneratedProtocolMessageType('SignalSampleList', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALSAMPLELIST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalSampleList)
  })
_sym_db.RegisterMessage(SignalSampleList)

SignalTableQueryRequest = _reflection.GeneratedProtocolMessageType('SignalTableQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALTABLEQUERYREQUEST,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalTableQueryRequest)
  })
_sym_db.RegisterMessage(SignalTableQueryRequest)

SignalTableQueryResponse = _reflection.GeneratedProtocolMessageType('SignalTableQueryResponse', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALTABLEQUERYRESPONSE,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalTableQueryResponse)
  })
_sym_db.RegisterMessage(SignalTableQueryResponse)

Header = _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), {
  'DESCRIPTOR' : _HEADER,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.Header)
  })
_sym_db.RegisterMessage(Header)

RawBody = _reflection.GeneratedProtocolMessageType('RawBody', (_message.Message,), {
  'DESCRIPTOR' : _RAWBODY,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.RawBody)
  })
_sym_db.RegisterMessage(RawBody)

RawData = _reflection.GeneratedProtocolMessageType('RawData', (_message.Message,), {
  'DESCRIPTOR' : _RAWDATA,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.RawData)
  })
_sym_db.RegisterMessage(RawData)

DeviceDetectResult = _reflection.GeneratedProtocolMessageType('DeviceDetectResult', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEDETECTRESULT,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.DeviceDetectResult)
  })
_sym_db.RegisterMessage(DeviceDetectResult)

SignalLayerSurvey = _reflection.GeneratedProtocolMessageType('SignalLayerSurvey', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALLAYERSURVEY,
  '__module__' : 'scenario.detection_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.detection.SignalLayerSurvey)
  })
_sym_db.RegisterMessage(SignalLayerSurvey)


# @@protoc_insertion_point(module_scope)
