# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scenario/MCP/trunk.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import dcts_pb2 as dcts__pb2
from source import source_pb2 as source_dot_source__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2
from scenario import spectrum_pb2 as scenario_dot_spectrum__pb2
from scenario import detection_pb2 as scenario_dot_detection__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='scenario/MCP/trunk.proto',
  package='zb.dcts.scenario.MCP',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x18scenario/MCP/trunk.proto\x12\x14zb.dcts.scenario.MCP\x1a\ndcts.proto\x1a\x13source/source.proto\x1a\x17scenario/scenario.proto\x1a\x17scenario/spectrum.proto\x1a\x18scenario/detection.proto\"\xe3\x01\n\x0bPScanSource\x12$\n\x02id\x18\x01 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12\x15\n\raverage_count\x18\x03 \x01(\x05\x12\x18\n\x10\x61ttenuation_gain\x18\x04 \x01(\x05\x12\x0f\n\x07\x61ntenna\x18\x05 \x01(\x05\x12=\n\x06params\x18\x06 \x03(\x0b\x32-.zb.dcts.scenario.MCP.PScanSource.ParamsEntry\x1a-\n\x0bParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x88\x01\n\nPScanParam\x12;\n\tfreq_span\x18\x01 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\x12\x0b\n\x03rbw\x18\x02 \x01(\x01\x12\x17\n\x0fresult_interval\x18\x03 \x01(\x05\x12\x17\n\x0f\x65xpected_points\x18\x05 \x01(\x05\"\xfb\x01\n\x15\x43reateScenarioRequest\x12\x37\n\x0cpscan_source\x18\x01 \x01(\x0b\x32!.zb.dcts.scenario.MCP.PScanSource\x12\x35\n\x0bpscan_param\x18\x02 \x01(\x0b\x32 .zb.dcts.scenario.MCP.PScanParam\x12\x43\n\x0f\x64\x65tection_param\x18\x03 \x01(\x0b\x32*.zb.dcts.scenario.detection.DetectionParam\x12-\n\x0b\x46\x46P_sources\x18\x04 \x03(\x0b\x32\x18.zb.dcts.source.SourceId\"I\n\x06Status\x12$\n\ttime_span\x18\x01 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\x12\x19\n\x11total_sweep_count\x18\x02 \x01(\r\"\xda\x01\n\x06Result\x12\x31\n\x06header\x18\x01 \x01(\x0b\x32!.zb.dcts.scenario.spectrum.Header\x12,\n\x06status\x18\x02 \x01(\x0b\x32\x1c.zb.dcts.scenario.MCP.Status\x12\x36\n\rpanorama_view\x18\x06 \x01(\x0b\x32\x1f.zb.dcts.scenario.spectrum.View\x12\x37\n\x0e\x63loseshot_view\x18\x07 \x01(\x0b\x32\x1f.zb.dcts.scenario.spectrum.View2\xce\n\n\x0fMCPTrunkService\x12`\n\x0e\x43reateScenario\x12+.zb.dcts.scenario.MCP.CreateScenarioRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12T\n\x0eGetPScanResult\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1c.zb.dcts.scenario.MCP.Result\"\x00\x30\x01\x12P\n\rCloseScenario\x12\x1c.zb.dcts.scenario.ScenarioId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12Y\n\nOpenZoomIn\x12(.zb.dcts.scenario.spectrum.ZoomInRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12R\n\x0b\x43loseZoomIn\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12]\n\x0cOpenDataHold\x12*.zb.dcts.scenario.spectrum.DataHoldRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12^\n\rResetDataHold\x12*.zb.dcts.scenario.spectrum.DataHoldRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12^\n\rCloseDataHold\x12*.zb.dcts.scenario.spectrum.DataHoldRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12`\n\rOpenDetection\x12,.zb.dcts.scenario.detection.DetectionRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12U\n\x0e\x43loseDetection\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12\x7f\n\x10QuerySignalTable\x12\x33.zb.dcts.scenario.detection.SignalTableQueryRequest\x1a\x34.zb.dcts.scenario.detection.SignalTableQueryResponse\"\x00\x12W\n\x10\x43learSignalTable\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12h\n\x0fSignalGathering\x12\x32.zb.dcts.scenario.detection.SignalGatheringRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12\x66\n\x12GetGatheringResult\x12 .zb.dcts.scenario.ScenarioTaskId\x1a,.zb.dcts.scenario.detection.SignalSampleList\"\x00\x62\x06proto3'
  ,
  dependencies=[dcts__pb2.DESCRIPTOR,source_dot_source__pb2.DESCRIPTOR,scenario_dot_scenario__pb2.DESCRIPTOR,scenario_dot_spectrum__pb2.DESCRIPTOR,scenario_dot_detection__pb2.DESCRIPTOR,])




_PSCANSOURCE_PARAMSENTRY = _descriptor.Descriptor(
  name='ParamsEntry',
  full_name='zb.dcts.scenario.MCP.PScanSource.ParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zb.dcts.scenario.MCP.PScanSource.ParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='zb.dcts.scenario.MCP.PScanSource.ParamsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=342,
  serialized_end=387,
)

_PSCANSOURCE = _descriptor.Descriptor(
  name='PScanSource',
  full_name='zb.dcts.scenario.MCP.PScanSource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='zb.dcts.scenario.MCP.PScanSource.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='average_count', full_name='zb.dcts.scenario.MCP.PScanSource.average_count', index=1,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='attenuation_gain', full_name='zb.dcts.scenario.MCP.PScanSource.attenuation_gain', index=2,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='antenna', full_name='zb.dcts.scenario.MCP.PScanSource.antenna', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='params', full_name='zb.dcts.scenario.MCP.PScanSource.params', index=4,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PSCANSOURCE_PARAMSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=160,
  serialized_end=387,
)


_PSCANPARAM = _descriptor.Descriptor(
  name='PScanParam',
  full_name='zb.dcts.scenario.MCP.PScanParam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='freq_span', full_name='zb.dcts.scenario.MCP.PScanParam.freq_span', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rbw', full_name='zb.dcts.scenario.MCP.PScanParam.rbw', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='result_interval', full_name='zb.dcts.scenario.MCP.PScanParam.result_interval', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='expected_points', full_name='zb.dcts.scenario.MCP.PScanParam.expected_points', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=390,
  serialized_end=526,
)


_CREATESCENARIOREQUEST = _descriptor.Descriptor(
  name='CreateScenarioRequest',
  full_name='zb.dcts.scenario.MCP.CreateScenarioRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pscan_source', full_name='zb.dcts.scenario.MCP.CreateScenarioRequest.pscan_source', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pscan_param', full_name='zb.dcts.scenario.MCP.CreateScenarioRequest.pscan_param', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='detection_param', full_name='zb.dcts.scenario.MCP.CreateScenarioRequest.detection_param', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='FFP_sources', full_name='zb.dcts.scenario.MCP.CreateScenarioRequest.FFP_sources', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=529,
  serialized_end=780,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='zb.dcts.scenario.MCP.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='time_span', full_name='zb.dcts.scenario.MCP.Status.time_span', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='total_sweep_count', full_name='zb.dcts.scenario.MCP.Status.total_sweep_count', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=782,
  serialized_end=855,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='zb.dcts.scenario.MCP.Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='zb.dcts.scenario.MCP.Result.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='status', full_name='zb.dcts.scenario.MCP.Result.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='panorama_view', full_name='zb.dcts.scenario.MCP.Result.panorama_view', index=2,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='closeshot_view', full_name='zb.dcts.scenario.MCP.Result.closeshot_view', index=3,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=858,
  serialized_end=1076,
)

_PSCANSOURCE_PARAMSENTRY.containing_type = _PSCANSOURCE
_PSCANSOURCE.fields_by_name['id'].message_type = source_dot_source__pb2._SOURCEID
_PSCANSOURCE.fields_by_name['params'].message_type = _PSCANSOURCE_PARAMSENTRY
_PSCANPARAM.fields_by_name['freq_span'].message_type = scenario_dot_spectrum__pb2._FREQUENCYSPAN
_CREATESCENARIOREQUEST.fields_by_name['pscan_source'].message_type = _PSCANSOURCE
_CREATESCENARIOREQUEST.fields_by_name['pscan_param'].message_type = _PSCANPARAM
_CREATESCENARIOREQUEST.fields_by_name['detection_param'].message_type = scenario_dot_detection__pb2._DETECTIONPARAM
_CREATESCENARIOREQUEST.fields_by_name['FFP_sources'].message_type = source_dot_source__pb2._SOURCEID
_STATUS.fields_by_name['time_span'].message_type = dcts__pb2._TIMESPAN
_RESULT.fields_by_name['header'].message_type = scenario_dot_spectrum__pb2._HEADER
_RESULT.fields_by_name['status'].message_type = _STATUS
_RESULT.fields_by_name['panorama_view'].message_type = scenario_dot_spectrum__pb2._VIEW
_RESULT.fields_by_name['closeshot_view'].message_type = scenario_dot_spectrum__pb2._VIEW
DESCRIPTOR.message_types_by_name['PScanSource'] = _PSCANSOURCE
DESCRIPTOR.message_types_by_name['PScanParam'] = _PSCANPARAM
DESCRIPTOR.message_types_by_name['CreateScenarioRequest'] = _CREATESCENARIOREQUEST
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PScanSource = _reflection.GeneratedProtocolMessageType('PScanSource', (_message.Message,), {

  'ParamsEntry' : _reflection.GeneratedProtocolMessageType('ParamsEntry', (_message.Message,), {
    'DESCRIPTOR' : _PSCANSOURCE_PARAMSENTRY,
    '__module__' : 'scenario.MCP.trunk_pb2'
    # @@protoc_insertion_point(class_scope:zb.dcts.scenario.MCP.PScanSource.ParamsEntry)
    })
  ,
  'DESCRIPTOR' : _PSCANSOURCE,
  '__module__' : 'scenario.MCP.trunk_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.MCP.PScanSource)
  })
_sym_db.RegisterMessage(PScanSource)
_sym_db.RegisterMessage(PScanSource.ParamsEntry)

PScanParam = _reflection.GeneratedProtocolMessageType('PScanParam', (_message.Message,), {
  'DESCRIPTOR' : _PSCANPARAM,
  '__module__' : 'scenario.MCP.trunk_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.MCP.PScanParam)
  })
_sym_db.RegisterMessage(PScanParam)

CreateScenarioRequest = _reflection.GeneratedProtocolMessageType('CreateScenarioRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATESCENARIOREQUEST,
  '__module__' : 'scenario.MCP.trunk_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.MCP.CreateScenarioRequest)
  })
_sym_db.RegisterMessage(CreateScenarioRequest)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), {
  'DESCRIPTOR' : _STATUS,
  '__module__' : 'scenario.MCP.trunk_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.MCP.Status)
  })
_sym_db.RegisterMessage(Status)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
  'DESCRIPTOR' : _RESULT,
  '__module__' : 'scenario.MCP.trunk_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.MCP.Result)
  })
_sym_db.RegisterMessage(Result)


_PSCANSOURCE_PARAMSENTRY._options = None

_MCPTRUNKSERVICE = _descriptor.ServiceDescriptor(
  name='MCPTrunkService',
  full_name='zb.dcts.scenario.MCP.MCPTrunkService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=1079,
  serialized_end=2437,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateScenario',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.CreateScenario',
    index=0,
    containing_service=None,
    input_type=_CREATESCENARIOREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetPScanResult',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.GetPScanResult',
    index=1,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=_RESULT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CloseScenario',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.CloseScenario',
    index=2,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='OpenZoomIn',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.OpenZoomIn',
    index=3,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._ZOOMINREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CloseZoomIn',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.CloseZoomIn',
    index=4,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='OpenDataHold',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.OpenDataHold',
    index=5,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._DATAHOLDREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ResetDataHold',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.ResetDataHold',
    index=6,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._DATAHOLDREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CloseDataHold',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.CloseDataHold',
    index=7,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._DATAHOLDREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='OpenDetection',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.OpenDetection',
    index=8,
    containing_service=None,
    input_type=scenario_dot_detection__pb2._DETECTIONREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CloseDetection',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.CloseDetection',
    index=9,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='QuerySignalTable',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.QuerySignalTable',
    index=10,
    containing_service=None,
    input_type=scenario_dot_detection__pb2._SIGNALTABLEQUERYREQUEST,
    output_type=scenario_dot_detection__pb2._SIGNALTABLEQUERYRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ClearSignalTable',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.ClearSignalTable',
    index=11,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SignalGathering',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.SignalGathering',
    index=12,
    containing_service=None,
    input_type=scenario_dot_detection__pb2._SIGNALGATHERINGREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGatheringResult',
    full_name='zb.dcts.scenario.MCP.MCPTrunkService.GetGatheringResult',
    index=13,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_detection__pb2._SIGNALSAMPLELIST,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_MCPTRUNKSERVICE)

DESCRIPTOR.services_by_name['MCPTrunkService'] = _MCPTRUNKSERVICE

# @@protoc_insertion_point(module_scope)
