# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from scenario import DF_pb2 as scenario_dot_DF__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2


class DirectionFindingServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartDFTask = channel.unary_unary(
                '/zb.dcts.scenario.DF.DirectionFindingService/StartDFTask',
                request_serializer=scenario_dot_DF__pb2.DirectionFindingRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.ChangeDFSignals = channel.unary_unary(
                '/zb.dcts.scenario.DF.DirectionFindingService/ChangeDFSignals',
                request_serializer=scenario_dot_DF__pb2.ChangeSignalsRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.GetDFResult = channel.unary_stream(
                '/zb.dcts.scenario.DF.DirectionFindingService/GetDFResult',
                request_serializer=scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
                response_deserializer=scenario_dot_DF__pb2.DirectionFindingResult.FromString,
                )
        self.StopDFTask = channel.unary_unary(
                '/zb.dcts.scenario.DF.DirectionFindingService/StopDFTask',
                request_serializer=scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )


class DirectionFindingServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def StartDFTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeDFSignals(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDFResult(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopDFTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DirectionFindingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartDFTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartDFTask,
                    request_deserializer=scenario_dot_DF__pb2.DirectionFindingRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'ChangeDFSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeDFSignals,
                    request_deserializer=scenario_dot_DF__pb2.ChangeSignalsRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'GetDFResult': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDFResult,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioTaskId.FromString,
                    response_serializer=scenario_dot_DF__pb2.DirectionFindingResult.SerializeToString,
            ),
            'StopDFTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StopDFTask,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioTaskId.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zb.dcts.scenario.DF.DirectionFindingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DirectionFindingService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def StartDFTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.DF.DirectionFindingService/StartDFTask',
            scenario_dot_DF__pb2.DirectionFindingRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeDFSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.DF.DirectionFindingService/ChangeDFSignals',
            scenario_dot_DF__pb2.ChangeSignalsRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDFResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/zb.dcts.scenario.DF.DirectionFindingService/GetDFResult',
            scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
            scenario_dot_DF__pb2.DirectionFindingResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopDFTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.DF.DirectionFindingService/StopDFTask',
            scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
