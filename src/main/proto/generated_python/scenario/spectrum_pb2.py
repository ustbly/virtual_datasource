# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scenario/spectrum.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import dcts_pb2 as dcts__pb2
from source import source_pb2 as source_dot_source__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='scenario/spectrum.proto',
  package='zb.dcts.scenario.spectrum',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x17scenario/spectrum.proto\x12\x19zb.dcts.scenario.spectrum\x1a\ndcts.proto\x1a\x13source/source.proto\x1a\x17scenario/scenario.proto\"6\n\rFrequencySpan\x12\x12\n\nstart_freq\x18\x01 \x01(\x01\x12\x11\n\tstop_freq\x18\x02 \x01(\x01\"_\n\x10\x46requencySegment\x12;\n\tfreq_span\x18\x01 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\x12\x0e\n\x06points\x18\x02 \x01(\x05\"@\n\x0c\x46requencyPos\x12\x13\n\x0bsegment_idx\x18\x01 \x01(\x05\x12\x1b\n\x13seg_internal_offset\x18\x02 \x01(\x05\"N\n\rFrequencyBand\x12=\n\x08segments\x18\x01 \x03(\x0b\x32+.zb.dcts.scenario.spectrum.FrequencySegment\"\x87\x01\n\x0e\x46requencyRange\x12:\n\tstart_pos\x18\x01 \x01(\x0b\x32\'.zb.dcts.scenario.spectrum.FrequencyPos\x12\x39\n\x08stop_pos\x18\x02 \x01(\x0b\x32\'.zb.dcts.scenario.spectrum.FrequencyPos\":\n\nSignalBand\x12\x18\n\x10\x63\x65nter_frequency\x18\x01 \x01(\x01\x12\x12\n\nband_width\x18\x02 \x01(\x01\"8\n\x07\x44\x44\x43\x42\x61nk\x12\x18\n\x10\x63\x65nter_frequency\x18\x01 \x01(\x01\x12\x13\n\x0bsample_rate\x18\x02 \x01(\x01\"\x87\x01\n\x0f\x44\x61taHoldRequest\x12\x33\n\tresponser\x18\x01 \x01(\x0b\x32 .zb.dcts.scenario.ScenarioTaskId\x12?\n\x0e\x64\x61ta_hold_type\x18\x02 \x01(\x0e\x32\'.zb.dcts.scenario.spectrum.DataHoldType\"\'\n\x0cSpectrumLine\x12\x17\n\x0fspectrum_points\x18\x01 \x03(\x02\"\xb2\x01\n\rSpectrumBlock\x12:\n\x0bsignal_band\x18\x02 \x01(\x0b\x32%.zb.dcts.scenario.spectrum.SignalBand\x12$\n\ttime_span\x18\x03 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\x12?\n\x0espectrum_lines\x18\x04 \x03(\x0b\x32\'.zb.dcts.scenario.spectrum.SpectrumLine\"\x87\x01\n\rZoomInRequest\x12\x33\n\tresponser\x18\x01 \x01(\x0b\x32 .zb.dcts.scenario.ScenarioTaskId\x12\x41\n\x0czoom_in_part\x18\x02 \x01(\x0b\x32+.zb.dcts.scenario.spectrum.FrequencySegment\"\xd8\x01\n\x04View\x12;\n\tfreq_span\x18\x01 \x01(\x0b\x32(.zb.dcts.scenario.spectrum.FrequencySpan\x12;\n\x06traces\x18\x02 \x03(\x0b\x32+.zb.dcts.scenario.spectrum.View.TracesEntry\x1aV\n\x0bTracesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x36\n\x05value\x18\x02 \x01(\x0b\x32\'.zb.dcts.scenario.spectrum.SpectrumLine:\x02\x38\x01\"\xca\x01\n\x06Header\x12-\n\x0bresult_from\x18\x01 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12\x11\n\trecord_id\x18\x02 \x01(\t\x12\x17\n\x0fsequence_number\x18\x03 \x01(\r\x12\x13\n\x0bsweep_count\x18\x04 \x01(\r\x12$\n\ttime_span\x18\x05 \x01(\x0b\x32\x11.zb.dcts.TimeSpan\x12*\n\x0f\x64\x65vice_position\x18\x06 \x01(\x0b\x32\x11.zb.dcts.Position\"\x95\x02\n\rSegmentHeader\x12-\n\x0bresult_from\x18\x01 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12\x17\n\x0fsequence_number\x18\x03 \x01(\x04\x12\x13\n\x0bsweep_index\x18\x04 \x01(\x04\x12\x15\n\rsegment_index\x18\x05 \x01(\r\x12\x17\n\x0fstart_frequency\x18\x06 \x01(\x01\x12\x16\n\x0e\x66requency_step\x18\x07 \x01(\x01\x12\x12\n\nnum_points\x18\x08 \x01(\r\x12&\n\ntime_stamp\x18\x0c \x01(\x0b\x32\x12.zb.dcts.Timestamp\x12#\n\x08position\x18\x0f \x01(\x0b\x32\x11.zb.dcts.Position*S\n\x0c\x44\x61taHoldType\x12\x0b\n\x07NO_HOLD\x10\x00\x12\x0c\n\x08MAX_HOLD\x10\x01\x12\x0c\n\x08MIN_HOLD\x10\x02\x12\x0c\n\x08RMS_HOLD\x10\x03\x12\x0c\n\x08\x41VG_HOLD\x10\x04\x62\x06proto3'
  ,
  dependencies=[dcts__pb2.DESCRIPTOR,source_dot_source__pb2.DESCRIPTOR,scenario_dot_scenario__pb2.DESCRIPTOR,])

_DATAHOLDTYPE = _descriptor.EnumDescriptor(
  name='DataHoldType',
  full_name='zb.dcts.scenario.spectrum.DataHoldType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_HOLD', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MAX_HOLD', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIN_HOLD', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RMS_HOLD', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AVG_HOLD', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1869,
  serialized_end=1952,
)
_sym_db.RegisterEnumDescriptor(_DATAHOLDTYPE)

DataHoldType = enum_type_wrapper.EnumTypeWrapper(_DATAHOLDTYPE)
NO_HOLD = 0
MAX_HOLD = 1
MIN_HOLD = 2
RMS_HOLD = 3
AVG_HOLD = 4



_FREQUENCYSPAN = _descriptor.Descriptor(
  name='FrequencySpan',
  full_name='zb.dcts.scenario.spectrum.FrequencySpan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_freq', full_name='zb.dcts.scenario.spectrum.FrequencySpan.start_freq', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stop_freq', full_name='zb.dcts.scenario.spectrum.FrequencySpan.stop_freq', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=166,
)


_FREQUENCYSEGMENT = _descriptor.Descriptor(
  name='FrequencySegment',
  full_name='zb.dcts.scenario.spectrum.FrequencySegment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='freq_span', full_name='zb.dcts.scenario.spectrum.FrequencySegment.freq_span', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='points', full_name='zb.dcts.scenario.spectrum.FrequencySegment.points', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=263,
)


_FREQUENCYPOS = _descriptor.Descriptor(
  name='FrequencyPos',
  full_name='zb.dcts.scenario.spectrum.FrequencyPos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='segment_idx', full_name='zb.dcts.scenario.spectrum.FrequencyPos.segment_idx', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='seg_internal_offset', full_name='zb.dcts.scenario.spectrum.FrequencyPos.seg_internal_offset', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=265,
  serialized_end=329,
)


_FREQUENCYBAND = _descriptor.Descriptor(
  name='FrequencyBand',
  full_name='zb.dcts.scenario.spectrum.FrequencyBand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='segments', full_name='zb.dcts.scenario.spectrum.FrequencyBand.segments', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=331,
  serialized_end=409,
)


_FREQUENCYRANGE = _descriptor.Descriptor(
  name='FrequencyRange',
  full_name='zb.dcts.scenario.spectrum.FrequencyRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_pos', full_name='zb.dcts.scenario.spectrum.FrequencyRange.start_pos', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stop_pos', full_name='zb.dcts.scenario.spectrum.FrequencyRange.stop_pos', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=412,
  serialized_end=547,
)


_SIGNALBAND = _descriptor.Descriptor(
  name='SignalBand',
  full_name='zb.dcts.scenario.spectrum.SignalBand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='center_frequency', full_name='zb.dcts.scenario.spectrum.SignalBand.center_frequency', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='band_width', full_name='zb.dcts.scenario.spectrum.SignalBand.band_width', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=549,
  serialized_end=607,
)


_DDCBANK = _descriptor.Descriptor(
  name='DDCBank',
  full_name='zb.dcts.scenario.spectrum.DDCBank',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='center_frequency', full_name='zb.dcts.scenario.spectrum.DDCBank.center_frequency', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sample_rate', full_name='zb.dcts.scenario.spectrum.DDCBank.sample_rate', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=609,
  serialized_end=665,
)


_DATAHOLDREQUEST = _descriptor.Descriptor(
  name='DataHoldRequest',
  full_name='zb.dcts.scenario.spectrum.DataHoldRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='responser', full_name='zb.dcts.scenario.spectrum.DataHoldRequest.responser', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data_hold_type', full_name='zb.dcts.scenario.spectrum.DataHoldRequest.data_hold_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=668,
  serialized_end=803,
)


_SPECTRUMLINE = _descriptor.Descriptor(
  name='SpectrumLine',
  full_name='zb.dcts.scenario.spectrum.SpectrumLine',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='spectrum_points', full_name='zb.dcts.scenario.spectrum.SpectrumLine.spectrum_points', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=805,
  serialized_end=844,
)


_SPECTRUMBLOCK = _descriptor.Descriptor(
  name='SpectrumBlock',
  full_name='zb.dcts.scenario.spectrum.SpectrumBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='signal_band', full_name='zb.dcts.scenario.spectrum.SpectrumBlock.signal_band', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_span', full_name='zb.dcts.scenario.spectrum.SpectrumBlock.time_span', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='spectrum_lines', full_name='zb.dcts.scenario.spectrum.SpectrumBlock.spectrum_lines', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=847,
  serialized_end=1025,
)


_ZOOMINREQUEST = _descriptor.Descriptor(
  name='ZoomInRequest',
  full_name='zb.dcts.scenario.spectrum.ZoomInRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='responser', full_name='zb.dcts.scenario.spectrum.ZoomInRequest.responser', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='zoom_in_part', full_name='zb.dcts.scenario.spectrum.ZoomInRequest.zoom_in_part', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1028,
  serialized_end=1163,
)


_VIEW_TRACESENTRY = _descriptor.Descriptor(
  name='TracesEntry',
  full_name='zb.dcts.scenario.spectrum.View.TracesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zb.dcts.scenario.spectrum.View.TracesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='zb.dcts.scenario.spectrum.View.TracesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1296,
  serialized_end=1382,
)

_VIEW = _descriptor.Descriptor(
  name='View',
  full_name='zb.dcts.scenario.spectrum.View',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='freq_span', full_name='zb.dcts.scenario.spectrum.View.freq_span', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='traces', full_name='zb.dcts.scenario.spectrum.View.traces', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_VIEW_TRACESENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1166,
  serialized_end=1382,
)


_HEADER = _descriptor.Descriptor(
  name='Header',
  full_name='zb.dcts.scenario.spectrum.Header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_from', full_name='zb.dcts.scenario.spectrum.Header.result_from', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='record_id', full_name='zb.dcts.scenario.spectrum.Header.record_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='zb.dcts.scenario.spectrum.Header.sequence_number', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sweep_count', full_name='zb.dcts.scenario.spectrum.Header.sweep_count', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_span', full_name='zb.dcts.scenario.spectrum.Header.time_span', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_position', full_name='zb.dcts.scenario.spectrum.Header.device_position', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1385,
  serialized_end=1587,
)


_SEGMENTHEADER = _descriptor.Descriptor(
  name='SegmentHeader',
  full_name='zb.dcts.scenario.spectrum.SegmentHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_from', full_name='zb.dcts.scenario.spectrum.SegmentHeader.result_from', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='zb.dcts.scenario.spectrum.SegmentHeader.sequence_number', index=1,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sweep_index', full_name='zb.dcts.scenario.spectrum.SegmentHeader.sweep_index', index=2,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='segment_index', full_name='zb.dcts.scenario.spectrum.SegmentHeader.segment_index', index=3,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start_frequency', full_name='zb.dcts.scenario.spectrum.SegmentHeader.start_frequency', index=4,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='frequency_step', full_name='zb.dcts.scenario.spectrum.SegmentHeader.frequency_step', index=5,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_points', full_name='zb.dcts.scenario.spectrum.SegmentHeader.num_points', index=6,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_stamp', full_name='zb.dcts.scenario.spectrum.SegmentHeader.time_stamp', index=7,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='position', full_name='zb.dcts.scenario.spectrum.SegmentHeader.position', index=8,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1590,
  serialized_end=1867,
)

_FREQUENCYSEGMENT.fields_by_name['freq_span'].message_type = _FREQUENCYSPAN
_FREQUENCYBAND.fields_by_name['segments'].message_type = _FREQUENCYSEGMENT
_FREQUENCYRANGE.fields_by_name['start_pos'].message_type = _FREQUENCYPOS
_FREQUENCYRANGE.fields_by_name['stop_pos'].message_type = _FREQUENCYPOS
_DATAHOLDREQUEST.fields_by_name['responser'].message_type = scenario_dot_scenario__pb2._SCENARIOTASKID
_DATAHOLDREQUEST.fields_by_name['data_hold_type'].enum_type = _DATAHOLDTYPE
_SPECTRUMBLOCK.fields_by_name['signal_band'].message_type = _SIGNALBAND
_SPECTRUMBLOCK.fields_by_name['time_span'].message_type = dcts__pb2._TIMESPAN
_SPECTRUMBLOCK.fields_by_name['spectrum_lines'].message_type = _SPECTRUMLINE
_ZOOMINREQUEST.fields_by_name['responser'].message_type = scenario_dot_scenario__pb2._SCENARIOTASKID
_ZOOMINREQUEST.fields_by_name['zoom_in_part'].message_type = _FREQUENCYSEGMENT
_VIEW_TRACESENTRY.fields_by_name['value'].message_type = _SPECTRUMLINE
_VIEW_TRACESENTRY.containing_type = _VIEW
_VIEW.fields_by_name['freq_span'].message_type = _FREQUENCYSPAN
_VIEW.fields_by_name['traces'].message_type = _VIEW_TRACESENTRY
_HEADER.fields_by_name['result_from'].message_type = source_dot_source__pb2._SOURCEID
_HEADER.fields_by_name['time_span'].message_type = dcts__pb2._TIMESPAN
_HEADER.fields_by_name['device_position'].message_type = dcts__pb2._POSITION
_SEGMENTHEADER.fields_by_name['result_from'].message_type = source_dot_source__pb2._SOURCEID
_SEGMENTHEADER.fields_by_name['time_stamp'].message_type = dcts__pb2._TIMESTAMP
_SEGMENTHEADER.fields_by_name['position'].message_type = dcts__pb2._POSITION
DESCRIPTOR.message_types_by_name['FrequencySpan'] = _FREQUENCYSPAN
DESCRIPTOR.message_types_by_name['FrequencySegment'] = _FREQUENCYSEGMENT
DESCRIPTOR.message_types_by_name['FrequencyPos'] = _FREQUENCYPOS
DESCRIPTOR.message_types_by_name['FrequencyBand'] = _FREQUENCYBAND
DESCRIPTOR.message_types_by_name['FrequencyRange'] = _FREQUENCYRANGE
DESCRIPTOR.message_types_by_name['SignalBand'] = _SIGNALBAND
DESCRIPTOR.message_types_by_name['DDCBank'] = _DDCBANK
DESCRIPTOR.message_types_by_name['DataHoldRequest'] = _DATAHOLDREQUEST
DESCRIPTOR.message_types_by_name['SpectrumLine'] = _SPECTRUMLINE
DESCRIPTOR.message_types_by_name['SpectrumBlock'] = _SPECTRUMBLOCK
DESCRIPTOR.message_types_by_name['ZoomInRequest'] = _ZOOMINREQUEST
DESCRIPTOR.message_types_by_name['View'] = _VIEW
DESCRIPTOR.message_types_by_name['Header'] = _HEADER
DESCRIPTOR.message_types_by_name['SegmentHeader'] = _SEGMENTHEADER
DESCRIPTOR.enum_types_by_name['DataHoldType'] = _DATAHOLDTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FrequencySpan = _reflection.GeneratedProtocolMessageType('FrequencySpan', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCYSPAN,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.FrequencySpan)
  })
_sym_db.RegisterMessage(FrequencySpan)

FrequencySegment = _reflection.GeneratedProtocolMessageType('FrequencySegment', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCYSEGMENT,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.FrequencySegment)
  })
_sym_db.RegisterMessage(FrequencySegment)

FrequencyPos = _reflection.GeneratedProtocolMessageType('FrequencyPos', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCYPOS,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.FrequencyPos)
  })
_sym_db.RegisterMessage(FrequencyPos)

FrequencyBand = _reflection.GeneratedProtocolMessageType('FrequencyBand', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCYBAND,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.FrequencyBand)
  })
_sym_db.RegisterMessage(FrequencyBand)

FrequencyRange = _reflection.GeneratedProtocolMessageType('FrequencyRange', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCYRANGE,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.FrequencyRange)
  })
_sym_db.RegisterMessage(FrequencyRange)

SignalBand = _reflection.GeneratedProtocolMessageType('SignalBand', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALBAND,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.SignalBand)
  })
_sym_db.RegisterMessage(SignalBand)

DDCBank = _reflection.GeneratedProtocolMessageType('DDCBank', (_message.Message,), {
  'DESCRIPTOR' : _DDCBANK,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.DDCBank)
  })
_sym_db.RegisterMessage(DDCBank)

DataHoldRequest = _reflection.GeneratedProtocolMessageType('DataHoldRequest', (_message.Message,), {
  'DESCRIPTOR' : _DATAHOLDREQUEST,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.DataHoldRequest)
  })
_sym_db.RegisterMessage(DataHoldRequest)

SpectrumLine = _reflection.GeneratedProtocolMessageType('SpectrumLine', (_message.Message,), {
  'DESCRIPTOR' : _SPECTRUMLINE,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.SpectrumLine)
  })
_sym_db.RegisterMessage(SpectrumLine)

SpectrumBlock = _reflection.GeneratedProtocolMessageType('SpectrumBlock', (_message.Message,), {
  'DESCRIPTOR' : _SPECTRUMBLOCK,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.SpectrumBlock)
  })
_sym_db.RegisterMessage(SpectrumBlock)

ZoomInRequest = _reflection.GeneratedProtocolMessageType('ZoomInRequest', (_message.Message,), {
  'DESCRIPTOR' : _ZOOMINREQUEST,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.ZoomInRequest)
  })
_sym_db.RegisterMessage(ZoomInRequest)

View = _reflection.GeneratedProtocolMessageType('View', (_message.Message,), {

  'TracesEntry' : _reflection.GeneratedProtocolMessageType('TracesEntry', (_message.Message,), {
    'DESCRIPTOR' : _VIEW_TRACESENTRY,
    '__module__' : 'scenario.spectrum_pb2'
    # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.View.TracesEntry)
    })
  ,
  'DESCRIPTOR' : _VIEW,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.View)
  })
_sym_db.RegisterMessage(View)
_sym_db.RegisterMessage(View.TracesEntry)

Header = _reflection.GeneratedProtocolMessageType('Header', (_message.Message,), {
  'DESCRIPTOR' : _HEADER,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.Header)
  })
_sym_db.RegisterMessage(Header)

SegmentHeader = _reflection.GeneratedProtocolMessageType('SegmentHeader', (_message.Message,), {
  'DESCRIPTOR' : _SEGMENTHEADER,
  '__module__' : 'scenario.spectrum_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.spectrum.SegmentHeader)
  })
_sym_db.RegisterMessage(SegmentHeader)


_VIEW_TRACESENTRY._options = None
# @@protoc_insertion_point(module_scope)
