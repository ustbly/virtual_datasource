# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scenario/kh/KhMultiChannel.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import dcts_pb2 as dcts__pb2
from source import source_pb2 as source_dot_source__pb2
from source.kh import KhContext_pb2 as source_dot_kh_dot_KhContext__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2
from scenario import spectrum_pb2 as scenario_dot_spectrum__pb2
from scenario import detection_pb2 as scenario_dot_detection__pb2
from scenario.kh import KhMultiChannelAcq_pb2 as scenario_dot_kh_dot_KhMultiChannelAcq__pb2
from scenario.FFP import demodulate_pb2 as scenario_dot_FFP_dot_demodulate__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='scenario/kh/KhMultiChannel.proto',
  package='zb.dcts.scenario.kh.commMultiChannel',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n scenario/kh/KhMultiChannel.proto\x12$zb.dcts.scenario.kh.commMultiChannel\x1a\ndcts.proto\x1a\x13source/source.proto\x1a\x19source/kh/KhContext.proto\x1a\x17scenario/scenario.proto\x1a\x17scenario/spectrum.proto\x1a\x18scenario/detection.proto\x1a#scenario/kh/KhMultiChannelAcq.proto\x1a\x1dscenario/FFP/demodulate.proto\"\xb1\x01\n\x0bMultiSource\x12$\n\x02id\x18\x01 \x01(\x0b\x32\x18.zb.dcts.source.SourceId\x12M\n\x06params\x18\x06 \x03(\x0b\x32=.zb.dcts.scenario.kh.commMultiChannel.MultiSource.ParamsEntry\x1a-\n\x0bParamsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9d\x02\n\x15MultiTaskStartRequest\x12.\n\x08scenario\x18\x01 \x01(\x0b\x32\x1c.zb.dcts.scenario.ScenarioId\x12G\n\x0csource_param\x18\x02 \x01(\x0b\x32\x31.zb.dcts.scenario.kh.commMultiChannel.MultiSource\x12\x46\n\tacq_param\x18\x03 \x01(\x0b\x32\x33.zb.dcts.scenario.kh.commMultiChannel.MultiAcqParam\x12\x43\n\x0f\x64\x65tection_param\x18\x04 \x01(\x0b\x32*.zb.dcts.scenario.detection.DetectionParam\"\xe2\x01\n\x11NarrowChannelData\x12\x12\n\nchannel_id\x18\x02 \x01(\x05\x12\x11\n\tcent_freq\x18\x04 \x01(\x01\x12\x11\n\tsamp_rate\x18\x06 \x01(\x01\x12&\n\ntime_stamp\x18\x07 \x01(\x0b\x32\x12.zb.dcts.Timestamp\x12\x0e\n\x06\x64\x61ta_i\x18\x08 \x03(\x02\x12\x0e\n\x06\x64\x61ta_q\x18\t \x03(\x02\x12\x10\n\x08spectrum\x18\x0b \x03(\x02\x12\x39\n\rchannel_audio\x18\x0c \x01(\x0b\x32\".zb.dcts.scenario.FFP.ChannelAudio\"\xb4\x02\n\x0bMultiResult\x12\x31\n\x06header\x18\x01 \x01(\x0b\x32!.zb.dcts.scenario.spectrum.Header\x12\x32\n\x06status\x18\x02 \x01(\x0b\x32\".zb.dcts.source.kh.OperationStatus\x12\x36\n\rpanorama_view\x18\x03 \x01(\x0b\x32\x1f.zb.dcts.scenario.spectrum.View\x12\x37\n\x0e\x63loseshot_view\x18\x04 \x01(\x0b\x32\x1f.zb.dcts.scenario.spectrum.View\x12M\n\x0c\x63hannel_data\x18\x05 \x03(\x0b\x32\x37.zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData\"\xd3\x01\n\x14\x43hannelChangeRequest\x12\x33\n\tresponser\x18\x01 \x01(\x0b\x32 .zb.dcts.scenario.ScenarioTaskId\x12?\n\x05index\x18\x02 \x01(\x0e\x32\x30.zb.dcts.scenario.kh.commMultiChannel.ParamIndex\x12\x45\n\x08\x63hannels\x18\x04 \x03(\x0b\x32\x33.zb.dcts.scenario.kh.commMultiChannel.NarrowChannel*\'\n\nParamIndex\x12\x0b\n\x07INVALID\x10\x00\x12\x0c\n\x08NB_PARAM\x10~2\xda\x0b\n\x13MultiChannelService\x12k\n\tStartTask\x12;.zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12\x64\n\tGetResult\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x31.zb.dcts.scenario.kh.commMultiChannel.MultiResult\"\x00\x30\x01\x12l\n\x0b\x43hangeParam\x12:.zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12O\n\x08StopTask\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12Y\n\nOpenZoomIn\x12(.zb.dcts.scenario.spectrum.ZoomInRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12R\n\x0b\x43loseZoomIn\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12]\n\x0cOpenDataHold\x12*.zb.dcts.scenario.spectrum.DataHoldRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12^\n\rResetDataHold\x12*.zb.dcts.scenario.spectrum.DataHoldRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12^\n\rCloseDataHold\x12*.zb.dcts.scenario.spectrum.DataHoldRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12`\n\rOpenDetection\x12,.zb.dcts.scenario.detection.DetectionRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12U\n\x0e\x43loseDetection\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12\x7f\n\x10QuerySignalTable\x12\x33.zb.dcts.scenario.detection.SignalTableQueryRequest\x1a\x34.zb.dcts.scenario.detection.SignalTableQueryResponse\"\x00\x12W\n\x10\x43learSignalTable\x12 .zb.dcts.scenario.ScenarioTaskId\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12h\n\x0fSignalGathering\x12\x32.zb.dcts.scenario.detection.SignalGatheringRequest\x1a\x1f.zb.dcts.scenario.ScenarioReply\"\x00\x12\x66\n\x12GetGatheringResult\x12 .zb.dcts.scenario.ScenarioTaskId\x1a,.zb.dcts.scenario.detection.SignalSampleList\"\x00\x62\x06proto3'
  ,
  dependencies=[dcts__pb2.DESCRIPTOR,source_dot_source__pb2.DESCRIPTOR,source_dot_kh_dot_KhContext__pb2.DESCRIPTOR,scenario_dot_scenario__pb2.DESCRIPTOR,scenario_dot_spectrum__pb2.DESCRIPTOR,scenario_dot_detection__pb2.DESCRIPTOR,scenario_dot_kh_dot_KhMultiChannelAcq__pb2.DESCRIPTOR,scenario_dot_FFP_dot_demodulate__pb2.DESCRIPTOR,])

_PARAMINDEX = _descriptor.EnumDescriptor(
  name='ParamIndex',
  full_name='zb.dcts.scenario.kh.commMultiChannel.ParamIndex',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NB_PARAM', index=1, number=126,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1500,
  serialized_end=1539,
)
_sym_db.RegisterEnumDescriptor(_PARAMINDEX)

ParamIndex = enum_type_wrapper.EnumTypeWrapper(_PARAMINDEX)
INVALID = 0
NB_PARAM = 126



_MULTISOURCE_PARAMSENTRY = _descriptor.Descriptor(
  name='ParamsEntry',
  full_name='zb.dcts.scenario.kh.commMultiChannel.MultiSource.ParamsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiSource.ParamsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiSource.ParamsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=411,
  serialized_end=456,
)

_MULTISOURCE = _descriptor.Descriptor(
  name='MultiSource',
  full_name='zb.dcts.scenario.kh.commMultiChannel.MultiSource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiSource.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='params', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiSource.params', index=1,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_MULTISOURCE_PARAMSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=279,
  serialized_end=456,
)


_MULTITASKSTARTREQUEST = _descriptor.Descriptor(
  name='MultiTaskStartRequest',
  full_name='zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='scenario', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest.scenario', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='source_param', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest.source_param', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='acq_param', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest.acq_param', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='detection_param', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest.detection_param', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=459,
  serialized_end=744,
)


_NARROWCHANNELDATA = _descriptor.Descriptor(
  name='NarrowChannelData',
  full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_id', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.channel_id', index=0,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cent_freq', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.cent_freq', index=1,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='samp_rate', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.samp_rate', index=2,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_stamp', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.time_stamp', index=3,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data_i', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.data_i', index=4,
      number=8, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data_q', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.data_q', index=5,
      number=9, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='spectrum', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.spectrum', index=6,
      number=11, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='channel_audio', full_name='zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData.channel_audio', index=7,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=747,
  serialized_end=973,
)


_MULTIRESULT = _descriptor.Descriptor(
  name='MultiResult',
  full_name='zb.dcts.scenario.kh.commMultiChannel.MultiResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiResult.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='status', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiResult.status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='panorama_view', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiResult.panorama_view', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='closeshot_view', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiResult.closeshot_view', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='channel_data', full_name='zb.dcts.scenario.kh.commMultiChannel.MultiResult.channel_data', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=976,
  serialized_end=1284,
)


_CHANNELCHANGEREQUEST = _descriptor.Descriptor(
  name='ChannelChangeRequest',
  full_name='zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='responser', full_name='zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest.responser', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='index', full_name='zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest.index', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='channels', full_name='zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest.channels', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1287,
  serialized_end=1498,
)

_MULTISOURCE_PARAMSENTRY.containing_type = _MULTISOURCE
_MULTISOURCE.fields_by_name['id'].message_type = source_dot_source__pb2._SOURCEID
_MULTISOURCE.fields_by_name['params'].message_type = _MULTISOURCE_PARAMSENTRY
_MULTITASKSTARTREQUEST.fields_by_name['scenario'].message_type = scenario_dot_scenario__pb2._SCENARIOID
_MULTITASKSTARTREQUEST.fields_by_name['source_param'].message_type = _MULTISOURCE
_MULTITASKSTARTREQUEST.fields_by_name['acq_param'].message_type = scenario_dot_kh_dot_KhMultiChannelAcq__pb2._MULTIACQPARAM
_MULTITASKSTARTREQUEST.fields_by_name['detection_param'].message_type = scenario_dot_detection__pb2._DETECTIONPARAM
_NARROWCHANNELDATA.fields_by_name['time_stamp'].message_type = dcts__pb2._TIMESTAMP
_NARROWCHANNELDATA.fields_by_name['channel_audio'].message_type = scenario_dot_FFP_dot_demodulate__pb2._CHANNELAUDIO
_MULTIRESULT.fields_by_name['header'].message_type = scenario_dot_spectrum__pb2._HEADER
_MULTIRESULT.fields_by_name['status'].message_type = source_dot_kh_dot_KhContext__pb2._OPERATIONSTATUS
_MULTIRESULT.fields_by_name['panorama_view'].message_type = scenario_dot_spectrum__pb2._VIEW
_MULTIRESULT.fields_by_name['closeshot_view'].message_type = scenario_dot_spectrum__pb2._VIEW
_MULTIRESULT.fields_by_name['channel_data'].message_type = _NARROWCHANNELDATA
_CHANNELCHANGEREQUEST.fields_by_name['responser'].message_type = scenario_dot_scenario__pb2._SCENARIOTASKID
_CHANNELCHANGEREQUEST.fields_by_name['index'].enum_type = _PARAMINDEX
_CHANNELCHANGEREQUEST.fields_by_name['channels'].message_type = scenario_dot_kh_dot_KhMultiChannelAcq__pb2._NARROWCHANNEL
DESCRIPTOR.message_types_by_name['MultiSource'] = _MULTISOURCE
DESCRIPTOR.message_types_by_name['MultiTaskStartRequest'] = _MULTITASKSTARTREQUEST
DESCRIPTOR.message_types_by_name['NarrowChannelData'] = _NARROWCHANNELDATA
DESCRIPTOR.message_types_by_name['MultiResult'] = _MULTIRESULT
DESCRIPTOR.message_types_by_name['ChannelChangeRequest'] = _CHANNELCHANGEREQUEST
DESCRIPTOR.enum_types_by_name['ParamIndex'] = _PARAMINDEX
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MultiSource = _reflection.GeneratedProtocolMessageType('MultiSource', (_message.Message,), {

  'ParamsEntry' : _reflection.GeneratedProtocolMessageType('ParamsEntry', (_message.Message,), {
    'DESCRIPTOR' : _MULTISOURCE_PARAMSENTRY,
    '__module__' : 'scenario.kh.KhMultiChannel_pb2'
    # @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.MultiSource.ParamsEntry)
    })
  ,
  'DESCRIPTOR' : _MULTISOURCE,
  '__module__' : 'scenario.kh.KhMultiChannel_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.MultiSource)
  })
_sym_db.RegisterMessage(MultiSource)
_sym_db.RegisterMessage(MultiSource.ParamsEntry)

MultiTaskStartRequest = _reflection.GeneratedProtocolMessageType('MultiTaskStartRequest', (_message.Message,), {
  'DESCRIPTOR' : _MULTITASKSTARTREQUEST,
  '__module__' : 'scenario.kh.KhMultiChannel_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.MultiTaskStartRequest)
  })
_sym_db.RegisterMessage(MultiTaskStartRequest)

NarrowChannelData = _reflection.GeneratedProtocolMessageType('NarrowChannelData', (_message.Message,), {
  'DESCRIPTOR' : _NARROWCHANNELDATA,
  '__module__' : 'scenario.kh.KhMultiChannel_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.NarrowChannelData)
  })
_sym_db.RegisterMessage(NarrowChannelData)

MultiResult = _reflection.GeneratedProtocolMessageType('MultiResult', (_message.Message,), {
  'DESCRIPTOR' : _MULTIRESULT,
  '__module__' : 'scenario.kh.KhMultiChannel_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.MultiResult)
  })
_sym_db.RegisterMessage(MultiResult)

ChannelChangeRequest = _reflection.GeneratedProtocolMessageType('ChannelChangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELCHANGEREQUEST,
  '__module__' : 'scenario.kh.KhMultiChannel_pb2'
  # @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commMultiChannel.ChannelChangeRequest)
  })
_sym_db.RegisterMessage(ChannelChangeRequest)


_MULTISOURCE_PARAMSENTRY._options = None

_MULTICHANNELSERVICE = _descriptor.ServiceDescriptor(
  name='MultiChannelService',
  full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=1542,
  serialized_end=3040,
  methods=[
  _descriptor.MethodDescriptor(
    name='StartTask',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.StartTask',
    index=0,
    containing_service=None,
    input_type=_MULTITASKSTARTREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetResult',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.GetResult',
    index=1,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=_MULTIRESULT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ChangeParam',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.ChangeParam',
    index=2,
    containing_service=None,
    input_type=_CHANNELCHANGEREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='StopTask',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.StopTask',
    index=3,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='OpenZoomIn',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.OpenZoomIn',
    index=4,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._ZOOMINREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CloseZoomIn',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.CloseZoomIn',
    index=5,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='OpenDataHold',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.OpenDataHold',
    index=6,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._DATAHOLDREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ResetDataHold',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.ResetDataHold',
    index=7,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._DATAHOLDREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CloseDataHold',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.CloseDataHold',
    index=8,
    containing_service=None,
    input_type=scenario_dot_spectrum__pb2._DATAHOLDREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='OpenDetection',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.OpenDetection',
    index=9,
    containing_service=None,
    input_type=scenario_dot_detection__pb2._DETECTIONREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CloseDetection',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.CloseDetection',
    index=10,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='QuerySignalTable',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.QuerySignalTable',
    index=11,
    containing_service=None,
    input_type=scenario_dot_detection__pb2._SIGNALTABLEQUERYREQUEST,
    output_type=scenario_dot_detection__pb2._SIGNALTABLEQUERYRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ClearSignalTable',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.ClearSignalTable',
    index=12,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SignalGathering',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.SignalGathering',
    index=13,
    containing_service=None,
    input_type=scenario_dot_detection__pb2._SIGNALGATHERINGREQUEST,
    output_type=scenario_dot_scenario__pb2._SCENARIOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGatheringResult',
    full_name='zb.dcts.scenario.kh.commMultiChannel.MultiChannelService.GetGatheringResult',
    index=14,
    containing_service=None,
    input_type=scenario_dot_scenario__pb2._SCENARIOTASKID,
    output_type=scenario_dot_detection__pb2._SIGNALSAMPLELIST,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_MULTICHANNELSERVICE)

DESCRIPTOR.services_by_name['MultiChannelService'] = _MULTICHANNELSERVICE

# @@protoc_insertion_point(module_scope)
