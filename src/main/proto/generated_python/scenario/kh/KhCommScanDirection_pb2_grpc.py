# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from scenario.kh import KhCommDirectionAcq_pb2 as scenario_dot_kh_dot_KhCommDirectionAcq__pb2
from scenario.kh import KhCommScanDirection_pb2 as scenario_dot_kh_dot_KhCommScanDirection__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2
from scenario import spectrum_pb2 as scenario_dot_spectrum__pb2


class CommScanDirectionServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateScenario = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CreateScenario',
                request_serializer=scenario_dot_kh_dot_KhCommScanDirection__pb2.CommScanDirectionCreateScenarioRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.GetScanResult = channel.unary_stream(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/GetScanResult',
                request_serializer=scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
                response_deserializer=scenario_dot_kh_dot_KhCommDirectionAcq__pb2.CommDirectionResult.FromString,
                )
        self.CloseScenario = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CloseScenario',
                request_serializer=scenario_dot_scenario__pb2.ScenarioId.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.Change = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/Change',
                request_serializer=scenario_dot_kh_dot_KhCommDirectionAcq__pb2.DirectionChangeRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.OpenZoomIn = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/OpenZoomIn',
                request_serializer=scenario_dot_spectrum__pb2.ZoomInRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.CloseZoomIn = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CloseZoomIn',
                request_serializer=scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.OpenDataHold = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/OpenDataHold',
                request_serializer=scenario_dot_spectrum__pb2.DataHoldRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.ResetDataHold = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/ResetDataHold',
                request_serializer=scenario_dot_spectrum__pb2.DataHoldRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.CloseDataHold = channel.unary_unary(
                '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CloseDataHold',
                request_serializer=scenario_dot_spectrum__pb2.DataHoldRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )


class CommScanDirectionServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def CreateScenario(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScanResult(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseScenario(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Change(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenZoomIn(self, request, context):
        """-----zoomin/datahold/detection-----
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseZoomIn(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenDataHold(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetDataHold(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseDataHold(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommScanDirectionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateScenario': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateScenario,
                    request_deserializer=scenario_dot_kh_dot_KhCommScanDirection__pb2.CommScanDirectionCreateScenarioRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'GetScanResult': grpc.unary_stream_rpc_method_handler(
                    servicer.GetScanResult,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioTaskId.FromString,
                    response_serializer=scenario_dot_kh_dot_KhCommDirectionAcq__pb2.CommDirectionResult.SerializeToString,
            ),
            'CloseScenario': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseScenario,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioId.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'Change': grpc.unary_unary_rpc_method_handler(
                    servicer.Change,
                    request_deserializer=scenario_dot_kh_dot_KhCommDirectionAcq__pb2.DirectionChangeRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'OpenZoomIn': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenZoomIn,
                    request_deserializer=scenario_dot_spectrum__pb2.ZoomInRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'CloseZoomIn': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseZoomIn,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioTaskId.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'OpenDataHold': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenDataHold,
                    request_deserializer=scenario_dot_spectrum__pb2.DataHoldRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'ResetDataHold': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetDataHold,
                    request_deserializer=scenario_dot_spectrum__pb2.DataHoldRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'CloseDataHold': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseDataHold,
                    request_deserializer=scenario_dot_spectrum__pb2.DataHoldRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zb.dcts.scenario.kh.commDirection.CommScanDirectionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CommScanDirectionService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def CreateScenario(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CreateScenario',
            scenario_dot_kh_dot_KhCommScanDirection__pb2.CommScanDirectionCreateScenarioRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScanResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/GetScanResult',
            scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
            scenario_dot_kh_dot_KhCommDirectionAcq__pb2.CommDirectionResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseScenario(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CloseScenario',
            scenario_dot_scenario__pb2.ScenarioId.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Change(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/Change',
            scenario_dot_kh_dot_KhCommDirectionAcq__pb2.DirectionChangeRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenZoomIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/OpenZoomIn',
            scenario_dot_spectrum__pb2.ZoomInRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseZoomIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CloseZoomIn',
            scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenDataHold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/OpenDataHold',
            scenario_dot_spectrum__pb2.DataHoldRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetDataHold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/ResetDataHold',
            scenario_dot_spectrum__pb2.DataHoldRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseDataHold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commDirection.CommScanDirectionService/CloseDataHold',
            scenario_dot_spectrum__pb2.DataHoldRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
