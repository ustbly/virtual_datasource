# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from scenario.FFP import modIdentify_pb2 as scenario_dot_FFP_dot_modIdentify__pb2
from scenario.kh import KhTargetClassify_pb2 as scenario_dot_kh_dot_KhTargetClassify__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2


class CommTargetClassifyServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartTask = channel.unary_unary(
                '/zb.dcts.scenario.kh.commTargetClassify.CommTargetClassifyService/StartTask',
                request_serializer=scenario_dot_kh_dot_KhTargetClassify__pb2.CommTargetClassifyTaskRequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.GetResult = channel.unary_stream(
                '/zb.dcts.scenario.kh.commTargetClassify.CommTargetClassifyService/GetResult',
                request_serializer=scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
                response_deserializer=scenario_dot_FFP_dot_modIdentify__pb2.ModIdentifyResult.FromString,
                )
        self.StopTask = channel.unary_unary(
                '/zb.dcts.scenario.kh.commTargetClassify.CommTargetClassifyService/StopTask',
                request_serializer=scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )


class CommTargetClassifyServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def StartTask(self, request, context):
        """realtime
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResult(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopTask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommTargetClassifyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartTask,
                    request_deserializer=scenario_dot_kh_dot_KhTargetClassify__pb2.CommTargetClassifyTaskRequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'GetResult': grpc.unary_stream_rpc_method_handler(
                    servicer.GetResult,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioTaskId.FromString,
                    response_serializer=scenario_dot_FFP_dot_modIdentify__pb2.ModIdentifyResult.SerializeToString,
            ),
            'StopTask': grpc.unary_unary_rpc_method_handler(
                    servicer.StopTask,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioTaskId.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zb.dcts.scenario.kh.commTargetClassify.CommTargetClassifyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CommTargetClassifyService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def StartTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commTargetClassify.CommTargetClassifyService/StartTask',
            scenario_dot_kh_dot_KhTargetClassify__pb2.CommTargetClassifyTaskRequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/zb.dcts.scenario.kh.commTargetClassify.CommTargetClassifyService/GetResult',
            scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
            scenario_dot_FFP_dot_modIdentify__pb2.ModIdentifyResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.kh.commTargetClassify.CommTargetClassifyService/StopTask',
            scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
