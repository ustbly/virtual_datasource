# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from scenario.FFP import VSA_pb2 as scenario_dot_FFP_dot_VSA__pb2
from scenario import scenario_pb2 as scenario_dot_scenario__pb2


class VSAServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartVSATask = channel.unary_unary(
                '/zb.dcts.scenario.FFP.VSAService/StartVSATask',
                request_serializer=scenario_dot_FFP_dot_VSA__pb2.VSARequest.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )
        self.StopVSATask = channel.unary_unary(
                '/zb.dcts.scenario.FFP.VSAService/StopVSATask',
                request_serializer=scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
                response_deserializer=scenario_dot_scenario__pb2.ScenarioReply.FromString,
                )


class VSAServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def StartVSATask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopVSATask(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VSAServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartVSATask': grpc.unary_unary_rpc_method_handler(
                    servicer.StartVSATask,
                    request_deserializer=scenario_dot_FFP_dot_VSA__pb2.VSARequest.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
            'StopVSATask': grpc.unary_unary_rpc_method_handler(
                    servicer.StopVSATask,
                    request_deserializer=scenario_dot_scenario__pb2.ScenarioTaskId.FromString,
                    response_serializer=scenario_dot_scenario__pb2.ScenarioReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zb.dcts.scenario.FFP.VSAService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VSAService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def StartVSATask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.FFP.VSAService/StartVSATask',
            scenario_dot_FFP_dot_VSA__pb2.VSARequest.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopVSATask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zb.dcts.scenario.FFP.VSAService/StopVSATask',
            scenario_dot_scenario__pb2.ScenarioTaskId.SerializeToString,
            scenario_dot_scenario__pb2.ScenarioReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
