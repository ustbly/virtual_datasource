syntax = "proto3";
package zb.dcts.scenario.FFP;
import "dcts.proto";
import "source/source.proto";
import "scenario/scenario.proto";
import "scenario/spectrum.proto";

message DemodSource
{
    source.SourceId      id = 1;
    string        address = 2;                      //文件路径或网络地址(可选项)
    int32         attenuation_gain = 3;             //衰减增益[-30, 20]
    int32         antenna = 4;                      //天线选择[0,1]
}

enum AnalogModType
{
    AM = 0;        //调幅
    FM = 1;        //调频
    PM = 2;        //调相
    CW = 3;        //连续波，电报
    LSB = 4;    //下边带
    USB = 5;    //上边带
    PULSE = 6;    //脉冲
}

message DemodChannel
{
    string id = 1;              //信道id
    spectrum.SignalBand signal_band = 2;   //信道位置
    double audio_sr = 3;     //音频采样率
}

//音频结果
message AudioBlock
{
    repeated int32 pcm_bitstream = 3;      //音频PCM码流, 16位单声道audio_sr速率，2个样点拼接成一个int32
}

message ChannelAudio
{
    string id = 1;                      //信道id
    repeated AudioBlock blocks = 2;       //音频码流
}

//解调结果
message AnalogDemodResult
{
    message Header
    {
        source.SourceId result_from = 1;         //数据来源
        uint32 sequence_number = 2;         //顺序号，每个任务执行者维护自身的顺序号
        TimeSpan time_span = 3;             //当前上报周期内的首段和末端采集时刻（由设备提供的时间）
        Position device_position = 4;       //设备位置
    }
    Header header = 1;                    //结果头
    ChannelAudio channel_audio = 2;       //音频结果
}

message AnalogDemodParam
{
    AnalogModType type = 1;
    DemodChannel channel = 2;
}

message AnalogDemodRequest
{
    ScenarioId scenario = 1;
    DemodSource source = 2;
    AnalogDemodParam param = 3;
}

message ChangeDemodChannelRequest
{
    ScenarioTaskId responser = 1;
    AnalogDemodParam param = 2;
}

service DemodulationService
{
    rpc StartAnalogDemodTask(AnalogDemodRequest) returns (ScenarioReply){}
    rpc ChangeDemodChannel(ChangeDemodChannelRequest) returns (ScenarioReply) {}
    rpc GetAnalogDemodResult(ScenarioTaskId) returns (stream AnalogDemodResult) {}
    rpc StopAnalogDemodTask(ScenarioTaskId) returns (ScenarioReply) {}
}
