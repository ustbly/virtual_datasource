// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/FFP/comSystemIdentify.proto

#include "scenario/FFP/comSystemIdentify.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_dcts_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Position_dcts_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dcts_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TimeSpan_dcts_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fFFP_2fcomSystemIdentify_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fFFP_2fcomSystemIdentify_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fFFP_2fcomSystemIdentify_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScenarioId_scenario_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fspectrum_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DDCBank_scenario_2fspectrum_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_source_2fsource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceId_source_2fsource_2eproto;
namespace zb {
namespace dcts {
namespace scenario {
namespace FFP {
class ComSystemSourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComSystemSource> _instance;
} _ComSystemSource_default_instance_;
class ComSystemParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComSystemParam> _instance;
} _ComSystemParam_default_instance_;
class ComSystemIdentifyResult_HeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComSystemIdentifyResult_Header> _instance;
} _ComSystemIdentifyResult_Header_default_instance_;
class ComSystemIdentifyResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComSystemIdentifyResult> _instance;
} _ComSystemIdentifyResult_default_instance_;
class ComSystemRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComSystemRequest> _instance;
} _ComSystemRequest_default_instance_;
}  // namespace FFP
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
static void InitDefaultsscc_info_ComSystemIdentifyResult_scenario_2fFFP_2fcomSystemIdentify_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_default_instance_;
    new (ptr) ::zb::dcts::scenario::FFP::ComSystemIdentifyResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::FFP::ComSystemIdentifyResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComSystemIdentifyResult_scenario_2fFFP_2fcomSystemIdentify_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ComSystemIdentifyResult_scenario_2fFFP_2fcomSystemIdentify_2eproto}, {
      &scc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,}};

static void InitDefaultsscc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_Header_default_instance_;
    new (ptr) ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto}, {
      &scc_info_SourceId_source_2fsource_2eproto.base,
      &scc_info_TimeSpan_dcts_2eproto.base,
      &scc_info_Position_dcts_2eproto.base,}};

static void InitDefaultsscc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::FFP::_ComSystemParam_default_instance_;
    new (ptr) ::zb::dcts::scenario::FFP::ComSystemParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::FFP::ComSystemParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto}, {
      &scc_info_DDCBank_scenario_2fspectrum_2eproto.base,}};

static void InitDefaultsscc_info_ComSystemRequest_scenario_2fFFP_2fcomSystemIdentify_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::FFP::_ComSystemRequest_default_instance_;
    new (ptr) ::zb::dcts::scenario::FFP::ComSystemRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::FFP::ComSystemRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ComSystemRequest_scenario_2fFFP_2fcomSystemIdentify_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ComSystemRequest_scenario_2fFFP_2fcomSystemIdentify_2eproto}, {
      &scc_info_ScenarioId_scenario_2fscenario_2eproto.base,
      &scc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,
      &scc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,}};

static void InitDefaultsscc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::FFP::_ComSystemSource_default_instance_;
    new (ptr) ::zb::dcts::scenario::FFP::ComSystemSource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::FFP::ComSystemSource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto}, {
      &scc_info_SourceId_source_2fsource_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scenario_2fFFP_2fcomSystemIdentify_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_scenario_2fFFP_2fcomSystemIdentify_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scenario_2fFFP_2fcomSystemIdentify_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scenario_2fFFP_2fcomSystemIdentify_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemSource, id_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemSource, address_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemSource, attenuation_gain_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemSource, antenna_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemParam, bank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header, result_from_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header, sequence_number_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header, time_span_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header, device_position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult, header_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult, type_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemIdentifyResult, spectrum_samples_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemRequest, scenario_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemRequest, source_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::FFP::ComSystemRequest, param_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zb::dcts::scenario::FFP::ComSystemSource)},
  { 9, -1, sizeof(::zb::dcts::scenario::FFP::ComSystemParam)},
  { 15, -1, sizeof(::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header)},
  { 24, -1, sizeof(::zb::dcts::scenario::FFP::ComSystemIdentifyResult)},
  { 32, -1, sizeof(::zb::dcts::scenario::FFP::ComSystemRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::FFP::_ComSystemSource_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::FFP::_ComSystemParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_Header_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::FFP::_ComSystemRequest_default_instance_),
};

const char descriptor_table_protodef_scenario_2fFFP_2fcomSystemIdentify_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$scenario/FFP/comSystemIdentify.proto\022\024"
  "zb.dcts.scenario.FFP\032\ndcts.proto\032\023source"
  "/source.proto\032\027scenario/scenario.proto\032\027"
  "scenario/spectrum.proto\"s\n\017ComSystemSour"
  "ce\022$\n\002id\030\001 \001(\0132\030.zb.dcts.source.SourceId"
  "\022\017\n\007address\030\002 \001(\t\022\030\n\020attenuation_gain\030\003 "
  "\001(\005\022\017\n\007antenna\030\004 \001(\005\"B\n\016ComSystemParam\0220"
  "\n\004bank\030\003 \001(\0132\".zb.dcts.scenario.spectrum"
  ".DDCBank\"\277\003\n\027ComSystemIdentifyResult\022D\n\006"
  "header\030\001 \001(\01324.zb.dcts.scenario.FFP.ComS"
  "ystemIdentifyResult.Header\022I\n\004type\030\002 \001(\016"
  "2;.zb.dcts.scenario.FFP.ComSystemIdentif"
  "yResult.ComSystemType\022\030\n\020spectrum_sample"
  "s\030\003 \003(\002\032\242\001\n\006Header\022-\n\013result_from\030\001 \001(\0132"
  "\030.zb.dcts.source.SourceId\022\027\n\017sequence_nu"
  "mber\030\002 \001(\r\022$\n\ttime_span\030\003 \001(\0132\021.zb.dcts."
  "TimeSpan\022*\n\017device_position\030\004 \001(\0132\021.zb.d"
  "cts.Position\"T\n\rComSystemType\022\013\n\007UNKNOWN"
  "\020\000\022\007\n\003DME\020\001\022\t\n\005TACAN\020\002\022\n\n\006Link4A\020\003\022\n\n\006Li"
  "nk11\020\004\022\n\n\006Link16\020\005\"\256\001\n\020ComSystemRequest\022"
  ".\n\010scenario\030\001 \001(\0132\034.zb.dcts.scenario.Sce"
  "narioId\0225\n\006source\030\002 \001(\0132%.zb.dcts.scenar"
  "io.FFP.ComSystemSource\0223\n\005param\030\003 \001(\0132$."
  "zb.dcts.scenario.FFP.ComSystemParam2\345\001\n\030"
  "ComSystemIdentifyService\022g\n\032StartComSyst"
  "emIdentifyTask\022&.zb.dcts.scenario.FFP.Co"
  "mSystemRequest\032\037.zb.dcts.scenario.Scenar"
  "ioReply\"\000\022`\n\031StopComSystemIdentifyTask\022 "
  ".zb.dcts.scenario.ScenarioTaskId\032\037.zb.dc"
  "ts.scenario.ScenarioReply\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto_deps[4] = {
  &::descriptor_table_dcts_2eproto,
  &::descriptor_table_scenario_2fscenario_2eproto,
  &::descriptor_table_scenario_2fspectrum_2eproto,
  &::descriptor_table_source_2fsource_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto_sccs[5] = {
  &scc_info_ComSystemIdentifyResult_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,
  &scc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,
  &scc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,
  &scc_info_ComSystemRequest_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,
  &scc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto = {
  false, false, descriptor_table_protodef_scenario_2fFFP_2fcomSystemIdentify_2eproto, "scenario/FFP/comSystemIdentify.proto", 1195,
  &descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto_once, descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto_sccs, descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto_deps, 5, 4,
  schemas, file_default_instances, TableStruct_scenario_2fFFP_2fcomSystemIdentify_2eproto::offsets,
  file_level_metadata_scenario_2fFFP_2fcomSystemIdentify_2eproto, 5, file_level_enum_descriptors_scenario_2fFFP_2fcomSystemIdentify_2eproto, file_level_service_descriptors_scenario_2fFFP_2fcomSystemIdentify_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scenario_2fFFP_2fcomSystemIdentify_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto)), true);
namespace zb {
namespace dcts {
namespace scenario {
namespace FFP {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ComSystemIdentifyResult_ComSystemType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenario_2fFFP_2fcomSystemIdentify_2eproto);
  return file_level_enum_descriptors_scenario_2fFFP_2fcomSystemIdentify_2eproto[0];
}
bool ComSystemIdentifyResult_ComSystemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::UNKNOWN;
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::DME;
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::TACAN;
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::Link4A;
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::Link11;
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::Link16;
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::ComSystemType_MIN;
constexpr ComSystemIdentifyResult_ComSystemType ComSystemIdentifyResult::ComSystemType_MAX;
constexpr int ComSystemIdentifyResult::ComSystemType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ComSystemSource::InitAsDefaultInstance() {
  ::zb::dcts::scenario::FFP::_ComSystemSource_default_instance_._instance.get_mutable()->id_ = const_cast< ::zb::dcts::source::SourceId*>(
      ::zb::dcts::source::SourceId::internal_default_instance());
}
class ComSystemSource::_Internal {
 public:
  static const ::zb::dcts::source::SourceId& id(const ComSystemSource* msg);
};

const ::zb::dcts::source::SourceId&
ComSystemSource::_Internal::id(const ComSystemSource* msg) {
  return *msg->id_;
}
void ComSystemSource::clear_id() {
  if (GetArena() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
}
ComSystemSource::ComSystemSource(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.FFP.ComSystemSource)
}
ComSystemSource::ComSystemSource(const ComSystemSource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_address(),
      GetArena());
  }
  if (from._internal_has_id()) {
    id_ = new ::zb::dcts::source::SourceId(*from.id_);
  } else {
    id_ = nullptr;
  }
  ::memcpy(&attenuation_gain_, &from.attenuation_gain_,
    static_cast<size_t>(reinterpret_cast<char*>(&antenna_) -
    reinterpret_cast<char*>(&attenuation_gain_)) + sizeof(antenna_));
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.FFP.ComSystemSource)
}

void ComSystemSource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&antenna_) -
      reinterpret_cast<char*>(&id_)) + sizeof(antenna_));
}

ComSystemSource::~ComSystemSource() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.FFP.ComSystemSource)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComSystemSource::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void ComSystemSource::ArenaDtor(void* object) {
  ComSystemSource* _this = reinterpret_cast< ComSystemSource* >(object);
  (void)_this;
}
void ComSystemSource::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComSystemSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComSystemSource& ComSystemSource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComSystemSource_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  return *internal_default_instance();
}


void ComSystemSource::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.FFP.ComSystemSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  ::memset(&attenuation_gain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&antenna_) -
      reinterpret_cast<char*>(&attenuation_gain_)) + sizeof(antenna_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComSystemSource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.source.SourceId id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "zb.dcts.scenario.FFP.ComSystemSource.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 attenuation_gain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          attenuation_gain_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 antenna = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          antenna_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComSystemSource::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.FFP.ComSystemSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId id = 1;
  if (this->has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::id(this), target, stream);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "zb.dcts.scenario.FFP.ComSystemSource.address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_address(), target);
  }

  // int32 attenuation_gain = 3;
  if (this->attenuation_gain() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_attenuation_gain(), target);
  }

  // int32 antenna = 4;
  if (this->antenna() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_antenna(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.FFP.ComSystemSource)
  return target;
}

size_t ComSystemSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.FFP.ComSystemSource)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // .zb.dcts.source.SourceId id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // int32 attenuation_gain = 3;
  if (this->attenuation_gain() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_attenuation_gain());
  }

  // int32 antenna = 4;
  if (this->antenna() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_antenna());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComSystemSource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.FFP.ComSystemSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ComSystemSource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComSystemSource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.FFP.ComSystemSource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.FFP.ComSystemSource)
    MergeFrom(*source);
  }
}

void ComSystemSource::MergeFrom(const ComSystemSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.FFP.ComSystemSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.has_id()) {
    _internal_mutable_id()->::zb::dcts::source::SourceId::MergeFrom(from._internal_id());
  }
  if (from.attenuation_gain() != 0) {
    _internal_set_attenuation_gain(from._internal_attenuation_gain());
  }
  if (from.antenna() != 0) {
    _internal_set_antenna(from._internal_antenna());
  }
}

void ComSystemSource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.FFP.ComSystemSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComSystemSource::CopyFrom(const ComSystemSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.FFP.ComSystemSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComSystemSource::IsInitialized() const {
  return true;
}

void ComSystemSource::InternalSwap(ComSystemSource* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComSystemSource, antenna_)
      + sizeof(ComSystemSource::antenna_)
      - PROTOBUF_FIELD_OFFSET(ComSystemSource, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComSystemSource::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ComSystemParam::InitAsDefaultInstance() {
  ::zb::dcts::scenario::FFP::_ComSystemParam_default_instance_._instance.get_mutable()->bank_ = const_cast< ::zb::dcts::scenario::spectrum::DDCBank*>(
      ::zb::dcts::scenario::spectrum::DDCBank::internal_default_instance());
}
class ComSystemParam::_Internal {
 public:
  static const ::zb::dcts::scenario::spectrum::DDCBank& bank(const ComSystemParam* msg);
};

const ::zb::dcts::scenario::spectrum::DDCBank&
ComSystemParam::_Internal::bank(const ComSystemParam* msg) {
  return *msg->bank_;
}
void ComSystemParam::clear_bank() {
  if (GetArena() == nullptr && bank_ != nullptr) {
    delete bank_;
  }
  bank_ = nullptr;
}
ComSystemParam::ComSystemParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.FFP.ComSystemParam)
}
ComSystemParam::ComSystemParam(const ComSystemParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bank()) {
    bank_ = new ::zb::dcts::scenario::spectrum::DDCBank(*from.bank_);
  } else {
    bank_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.FFP.ComSystemParam)
}

void ComSystemParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  bank_ = nullptr;
}

ComSystemParam::~ComSystemParam() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.FFP.ComSystemParam)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComSystemParam::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete bank_;
}

void ComSystemParam::ArenaDtor(void* object) {
  ComSystemParam* _this = reinterpret_cast< ComSystemParam* >(object);
  (void)_this;
}
void ComSystemParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComSystemParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComSystemParam& ComSystemParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComSystemParam_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  return *internal_default_instance();
}


void ComSystemParam::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.FFP.ComSystemParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && bank_ != nullptr) {
    delete bank_;
  }
  bank_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComSystemParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.spectrum.DDCBank bank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_bank(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComSystemParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.FFP.ComSystemParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.spectrum.DDCBank bank = 3;
  if (this->has_bank()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::bank(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.FFP.ComSystemParam)
  return target;
}

size_t ComSystemParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.FFP.ComSystemParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .zb.dcts.scenario.spectrum.DDCBank bank = 3;
  if (this->has_bank()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bank_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComSystemParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.FFP.ComSystemParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ComSystemParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComSystemParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.FFP.ComSystemParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.FFP.ComSystemParam)
    MergeFrom(*source);
  }
}

void ComSystemParam::MergeFrom(const ComSystemParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.FFP.ComSystemParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bank()) {
    _internal_mutable_bank()->::zb::dcts::scenario::spectrum::DDCBank::MergeFrom(from._internal_bank());
  }
}

void ComSystemParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.FFP.ComSystemParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComSystemParam::CopyFrom(const ComSystemParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.FFP.ComSystemParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComSystemParam::IsInitialized() const {
  return true;
}

void ComSystemParam::InternalSwap(ComSystemParam* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(bank_, other->bank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComSystemParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ComSystemIdentifyResult_Header::InitAsDefaultInstance() {
  ::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_Header_default_instance_._instance.get_mutable()->result_from_ = const_cast< ::zb::dcts::source::SourceId*>(
      ::zb::dcts::source::SourceId::internal_default_instance());
  ::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_Header_default_instance_._instance.get_mutable()->time_span_ = const_cast< ::zb::dcts::TimeSpan*>(
      ::zb::dcts::TimeSpan::internal_default_instance());
  ::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_Header_default_instance_._instance.get_mutable()->device_position_ = const_cast< ::zb::dcts::Position*>(
      ::zb::dcts::Position::internal_default_instance());
}
class ComSystemIdentifyResult_Header::_Internal {
 public:
  static const ::zb::dcts::source::SourceId& result_from(const ComSystemIdentifyResult_Header* msg);
  static const ::zb::dcts::TimeSpan& time_span(const ComSystemIdentifyResult_Header* msg);
  static const ::zb::dcts::Position& device_position(const ComSystemIdentifyResult_Header* msg);
};

const ::zb::dcts::source::SourceId&
ComSystemIdentifyResult_Header::_Internal::result_from(const ComSystemIdentifyResult_Header* msg) {
  return *msg->result_from_;
}
const ::zb::dcts::TimeSpan&
ComSystemIdentifyResult_Header::_Internal::time_span(const ComSystemIdentifyResult_Header* msg) {
  return *msg->time_span_;
}
const ::zb::dcts::Position&
ComSystemIdentifyResult_Header::_Internal::device_position(const ComSystemIdentifyResult_Header* msg) {
  return *msg->device_position_;
}
void ComSystemIdentifyResult_Header::clear_result_from() {
  if (GetArena() == nullptr && result_from_ != nullptr) {
    delete result_from_;
  }
  result_from_ = nullptr;
}
void ComSystemIdentifyResult_Header::clear_time_span() {
  if (GetArena() == nullptr && time_span_ != nullptr) {
    delete time_span_;
  }
  time_span_ = nullptr;
}
void ComSystemIdentifyResult_Header::clear_device_position() {
  if (GetArena() == nullptr && device_position_ != nullptr) {
    delete device_position_;
  }
  device_position_ = nullptr;
}
ComSystemIdentifyResult_Header::ComSystemIdentifyResult_Header(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
}
ComSystemIdentifyResult_Header::ComSystemIdentifyResult_Header(const ComSystemIdentifyResult_Header& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result_from()) {
    result_from_ = new ::zb::dcts::source::SourceId(*from.result_from_);
  } else {
    result_from_ = nullptr;
  }
  if (from._internal_has_time_span()) {
    time_span_ = new ::zb::dcts::TimeSpan(*from.time_span_);
  } else {
    time_span_ = nullptr;
  }
  if (from._internal_has_device_position()) {
    device_position_ = new ::zb::dcts::Position(*from.device_position_);
  } else {
    device_position_ = nullptr;
  }
  sequence_number_ = from.sequence_number_;
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
}

void ComSystemIdentifyResult_Header::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  ::memset(&result_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_number_) -
      reinterpret_cast<char*>(&result_from_)) + sizeof(sequence_number_));
}

ComSystemIdentifyResult_Header::~ComSystemIdentifyResult_Header() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComSystemIdentifyResult_Header::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_from_;
  if (this != internal_default_instance()) delete time_span_;
  if (this != internal_default_instance()) delete device_position_;
}

void ComSystemIdentifyResult_Header::ArenaDtor(void* object) {
  ComSystemIdentifyResult_Header* _this = reinterpret_cast< ComSystemIdentifyResult_Header* >(object);
  (void)_this;
}
void ComSystemIdentifyResult_Header::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComSystemIdentifyResult_Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComSystemIdentifyResult_Header& ComSystemIdentifyResult_Header::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComSystemIdentifyResult_Header_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  return *internal_default_instance();
}


void ComSystemIdentifyResult_Header::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_from_ != nullptr) {
    delete result_from_;
  }
  result_from_ = nullptr;
  if (GetArena() == nullptr && time_span_ != nullptr) {
    delete time_span_;
  }
  time_span_ = nullptr;
  if (GetArena() == nullptr && device_position_ != nullptr) {
    delete device_position_;
  }
  device_position_ = nullptr;
  sequence_number_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComSystemIdentifyResult_Header::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.source.SourceId result_from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result_from(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 sequence_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.TimeSpan time_span = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_time_span(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.Position device_position = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_device_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComSystemIdentifyResult_Header::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId result_from = 1;
  if (this->has_result_from()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result_from(this), target, stream);
  }

  // uint32 sequence_number = 2;
  if (this->sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_sequence_number(), target);
  }

  // .zb.dcts.TimeSpan time_span = 3;
  if (this->has_time_span()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::time_span(this), target, stream);
  }

  // .zb.dcts.Position device_position = 4;
  if (this->has_device_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::device_position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  return target;
}

size_t ComSystemIdentifyResult_Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId result_from = 1;
  if (this->has_result_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_from_);
  }

  // .zb.dcts.TimeSpan time_span = 3;
  if (this->has_time_span()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_span_);
  }

  // .zb.dcts.Position device_position = 4;
  if (this->has_device_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_position_);
  }

  // uint32 sequence_number = 2;
  if (this->sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_sequence_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComSystemIdentifyResult_Header::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const ComSystemIdentifyResult_Header* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComSystemIdentifyResult_Header>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
    MergeFrom(*source);
  }
}

void ComSystemIdentifyResult_Header::MergeFrom(const ComSystemIdentifyResult_Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result_from()) {
    _internal_mutable_result_from()->::zb::dcts::source::SourceId::MergeFrom(from._internal_result_from());
  }
  if (from.has_time_span()) {
    _internal_mutable_time_span()->::zb::dcts::TimeSpan::MergeFrom(from._internal_time_span());
  }
  if (from.has_device_position()) {
    _internal_mutable_device_position()->::zb::dcts::Position::MergeFrom(from._internal_device_position());
  }
  if (from.sequence_number() != 0) {
    _internal_set_sequence_number(from._internal_sequence_number());
  }
}

void ComSystemIdentifyResult_Header::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComSystemIdentifyResult_Header::CopyFrom(const ComSystemIdentifyResult_Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComSystemIdentifyResult_Header::IsInitialized() const {
  return true;
}

void ComSystemIdentifyResult_Header::InternalSwap(ComSystemIdentifyResult_Header* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComSystemIdentifyResult_Header, sequence_number_)
      + sizeof(ComSystemIdentifyResult_Header::sequence_number_)
      - PROTOBUF_FIELD_OFFSET(ComSystemIdentifyResult_Header, result_from_)>(
          reinterpret_cast<char*>(&result_from_),
          reinterpret_cast<char*>(&other->result_from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComSystemIdentifyResult_Header::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ComSystemIdentifyResult::InitAsDefaultInstance() {
  ::zb::dcts::scenario::FFP::_ComSystemIdentifyResult_default_instance_._instance.get_mutable()->header_ = const_cast< ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header*>(
      ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header::internal_default_instance());
}
class ComSystemIdentifyResult::_Internal {
 public:
  static const ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header& header(const ComSystemIdentifyResult* msg);
};

const ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header&
ComSystemIdentifyResult::_Internal::header(const ComSystemIdentifyResult* msg) {
  return *msg->header_;
}
ComSystemIdentifyResult::ComSystemIdentifyResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  spectrum_samples_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
}
ComSystemIdentifyResult::ComSystemIdentifyResult(const ComSystemIdentifyResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      spectrum_samples_(from.spectrum_samples_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
}

void ComSystemIdentifyResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComSystemIdentifyResult_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&header_)) + sizeof(type_));
}

ComSystemIdentifyResult::~ComSystemIdentifyResult() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComSystemIdentifyResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void ComSystemIdentifyResult::ArenaDtor(void* object) {
  ComSystemIdentifyResult* _this = reinterpret_cast< ComSystemIdentifyResult* >(object);
  (void)_this;
}
void ComSystemIdentifyResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComSystemIdentifyResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComSystemIdentifyResult& ComSystemIdentifyResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComSystemIdentifyResult_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  return *internal_default_instance();
}


void ComSystemIdentifyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spectrum_samples_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComSystemIdentifyResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.FFP.ComSystemIdentifyResult.ComSystemType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::zb::dcts::scenario::FFP::ComSystemIdentifyResult_ComSystemType>(val));
        } else goto handle_unusual;
        continue;
      // repeated float spectrum_samples = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_spectrum_samples(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29) {
          _internal_add_spectrum_samples(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComSystemIdentifyResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .zb.dcts.scenario.FFP.ComSystemIdentifyResult.ComSystemType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // repeated float spectrum_samples = 3;
  if (this->_internal_spectrum_samples_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_spectrum_samples(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  return target;
}

size_t ComSystemIdentifyResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float spectrum_samples = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_spectrum_samples_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _spectrum_samples_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .zb.dcts.scenario.FFP.ComSystemIdentifyResult.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .zb.dcts.scenario.FFP.ComSystemIdentifyResult.ComSystemType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComSystemIdentifyResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ComSystemIdentifyResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComSystemIdentifyResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
    MergeFrom(*source);
  }
}

void ComSystemIdentifyResult::MergeFrom(const ComSystemIdentifyResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spectrum_samples_.MergeFrom(from.spectrum_samples_);
  if (from.has_header()) {
    _internal_mutable_header()->::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header::MergeFrom(from._internal_header());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void ComSystemIdentifyResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComSystemIdentifyResult::CopyFrom(const ComSystemIdentifyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.FFP.ComSystemIdentifyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComSystemIdentifyResult::IsInitialized() const {
  return true;
}

void ComSystemIdentifyResult::InternalSwap(ComSystemIdentifyResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spectrum_samples_.InternalSwap(&other->spectrum_samples_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComSystemIdentifyResult, type_)
      + sizeof(ComSystemIdentifyResult::type_)
      - PROTOBUF_FIELD_OFFSET(ComSystemIdentifyResult, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComSystemIdentifyResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ComSystemRequest::InitAsDefaultInstance() {
  ::zb::dcts::scenario::FFP::_ComSystemRequest_default_instance_._instance.get_mutable()->scenario_ = const_cast< ::zb::dcts::scenario::ScenarioId*>(
      ::zb::dcts::scenario::ScenarioId::internal_default_instance());
  ::zb::dcts::scenario::FFP::_ComSystemRequest_default_instance_._instance.get_mutable()->source_ = const_cast< ::zb::dcts::scenario::FFP::ComSystemSource*>(
      ::zb::dcts::scenario::FFP::ComSystemSource::internal_default_instance());
  ::zb::dcts::scenario::FFP::_ComSystemRequest_default_instance_._instance.get_mutable()->param_ = const_cast< ::zb::dcts::scenario::FFP::ComSystemParam*>(
      ::zb::dcts::scenario::FFP::ComSystemParam::internal_default_instance());
}
class ComSystemRequest::_Internal {
 public:
  static const ::zb::dcts::scenario::ScenarioId& scenario(const ComSystemRequest* msg);
  static const ::zb::dcts::scenario::FFP::ComSystemSource& source(const ComSystemRequest* msg);
  static const ::zb::dcts::scenario::FFP::ComSystemParam& param(const ComSystemRequest* msg);
};

const ::zb::dcts::scenario::ScenarioId&
ComSystemRequest::_Internal::scenario(const ComSystemRequest* msg) {
  return *msg->scenario_;
}
const ::zb::dcts::scenario::FFP::ComSystemSource&
ComSystemRequest::_Internal::source(const ComSystemRequest* msg) {
  return *msg->source_;
}
const ::zb::dcts::scenario::FFP::ComSystemParam&
ComSystemRequest::_Internal::param(const ComSystemRequest* msg) {
  return *msg->param_;
}
void ComSystemRequest::clear_scenario() {
  if (GetArena() == nullptr && scenario_ != nullptr) {
    delete scenario_;
  }
  scenario_ = nullptr;
}
ComSystemRequest::ComSystemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.FFP.ComSystemRequest)
}
ComSystemRequest::ComSystemRequest(const ComSystemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scenario()) {
    scenario_ = new ::zb::dcts::scenario::ScenarioId(*from.scenario_);
  } else {
    scenario_ = nullptr;
  }
  if (from._internal_has_source()) {
    source_ = new ::zb::dcts::scenario::FFP::ComSystemSource(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from._internal_has_param()) {
    param_ = new ::zb::dcts::scenario::FFP::ComSystemParam(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.FFP.ComSystemRequest)
}

void ComSystemRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComSystemRequest_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  ::memset(&scenario_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&scenario_)) + sizeof(param_));
}

ComSystemRequest::~ComSystemRequest() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.FFP.ComSystemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComSystemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete scenario_;
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete param_;
}

void ComSystemRequest::ArenaDtor(void* object) {
  ComSystemRequest* _this = reinterpret_cast< ComSystemRequest* >(object);
  (void)_this;
}
void ComSystemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComSystemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComSystemRequest& ComSystemRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComSystemRequest_scenario_2fFFP_2fcomSystemIdentify_2eproto.base);
  return *internal_default_instance();
}


void ComSystemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.FFP.ComSystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && scenario_ != nullptr) {
    delete scenario_;
  }
  scenario_ = nullptr;
  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComSystemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.ScenarioId scenario = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scenario(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.FFP.ComSystemSource source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.FFP.ComSystemParam param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComSystemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.FFP.ComSystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.ScenarioId scenario = 1;
  if (this->has_scenario()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::scenario(this), target, stream);
  }

  // .zb.dcts.scenario.FFP.ComSystemSource source = 2;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::source(this), target, stream);
  }

  // .zb.dcts.scenario.FFP.ComSystemParam param = 3;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.FFP.ComSystemRequest)
  return target;
}

size_t ComSystemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.FFP.ComSystemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .zb.dcts.scenario.ScenarioId scenario = 1;
  if (this->has_scenario()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scenario_);
  }

  // .zb.dcts.scenario.FFP.ComSystemSource source = 2;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .zb.dcts.scenario.FFP.ComSystemParam param = 3;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComSystemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.FFP.ComSystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ComSystemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComSystemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.FFP.ComSystemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.FFP.ComSystemRequest)
    MergeFrom(*source);
  }
}

void ComSystemRequest::MergeFrom(const ComSystemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.FFP.ComSystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scenario()) {
    _internal_mutable_scenario()->::zb::dcts::scenario::ScenarioId::MergeFrom(from._internal_scenario());
  }
  if (from.has_source()) {
    _internal_mutable_source()->::zb::dcts::scenario::FFP::ComSystemSource::MergeFrom(from._internal_source());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::zb::dcts::scenario::FFP::ComSystemParam::MergeFrom(from._internal_param());
  }
}

void ComSystemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.FFP.ComSystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComSystemRequest::CopyFrom(const ComSystemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.FFP.ComSystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComSystemRequest::IsInitialized() const {
  return true;
}

void ComSystemRequest::InternalSwap(ComSystemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComSystemRequest, param_)
      + sizeof(ComSystemRequest::param_)
      - PROTOBUF_FIELD_OFFSET(ComSystemRequest, scenario_)>(
          reinterpret_cast<char*>(&scenario_),
          reinterpret_cast<char*>(&other->scenario_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComSystemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FFP
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::FFP::ComSystemSource* Arena::CreateMaybeMessage< ::zb::dcts::scenario::FFP::ComSystemSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::FFP::ComSystemSource >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::FFP::ComSystemParam* Arena::CreateMaybeMessage< ::zb::dcts::scenario::FFP::ComSystemParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::FFP::ComSystemParam >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header* Arena::CreateMaybeMessage< ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::FFP::ComSystemIdentifyResult_Header >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::FFP::ComSystemIdentifyResult* Arena::CreateMaybeMessage< ::zb::dcts::scenario::FFP::ComSystemIdentifyResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::FFP::ComSystemIdentifyResult >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::FFP::ComSystemRequest* Arena::CreateMaybeMessage< ::zb::dcts::scenario::FFP::ComSystemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::FFP::ComSystemRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
