// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/kh/KhCommScanDirection.proto

#include "scenario/kh/KhCommScanDirection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhCommDirectionAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CommDirectionAcqParam_scenario_2fkh_2fKhCommDirectionAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhCommDirectionAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CommDirectionAcqSource_scenario_2fkh_2fKhCommDirectionAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_source_2fsource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceId_source_2fsource_2eproto;
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commDirection {
class CommScanDirectionCreateScenarioRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommScanDirectionCreateScenarioRequest> _instance;
} _CommScanDirectionCreateScenarioRequest_default_instance_;
}  // namespace commDirection
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
static void InitDefaultsscc_info_CommScanDirectionCreateScenarioRequest_scenario_2fkh_2fKhCommScanDirection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commDirection::_CommScanDirectionCreateScenarioRequest_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CommScanDirectionCreateScenarioRequest_scenario_2fkh_2fKhCommScanDirection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CommScanDirectionCreateScenarioRequest_scenario_2fkh_2fKhCommScanDirection_2eproto}, {
      &scc_info_CommDirectionAcqSource_scenario_2fkh_2fKhCommDirectionAcq_2eproto.base,
      &scc_info_CommDirectionAcqParam_scenario_2fkh_2fKhCommDirectionAcq_2eproto.base,
      &scc_info_SourceId_source_2fsource_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scenario_2fkh_2fKhCommScanDirection_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_scenario_2fkh_2fKhCommScanDirection_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scenario_2fkh_2fKhCommScanDirection_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scenario_2fkh_2fKhCommScanDirection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest, source_param_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest, acq_param_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest, ffp_sources_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commDirection::_CommScanDirectionCreateScenarioRequest_default_instance_),
};

const char descriptor_table_protodef_scenario_2fkh_2fKhCommScanDirection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%scenario/kh/KhCommScanDirection.proto\022"
  "!zb.dcts.scenario.kh.commDirection\032\023sour"
  "ce/source.proto\032\027scenario/scenario.proto"
  "\032\027scenario/spectrum.proto\032$scenario/kh/K"
  "hCommDirectionAcq.proto\"\365\001\n&CommScanDire"
  "ctionCreateScenarioRequest\022O\n\014source_par"
  "am\030\001 \001(\01329.zb.dcts.scenario.kh.commDirec"
  "tion.CommDirectionAcqSource\022K\n\tacq_param"
  "\030\002 \001(\01328.zb.dcts.scenario.kh.commDirecti"
  "on.CommDirectionAcqParam\022-\n\013FFP_sources\030"
  "\004 \003(\0132\030.zb.dcts.source.SourceId2\221\007\n\030Comm"
  "ScanDirectionService\022~\n\016CreateScenario\022I"
  ".zb.dcts.scenario.kh.commDirection.CommS"
  "canDirectionCreateScenarioRequest\032\037.zb.d"
  "cts.scenario.ScenarioReply\"\000\022m\n\rGetScanR"
  "esult\022 .zb.dcts.scenario.ScenarioTaskId\032"
  "6.zb.dcts.scenario.kh.commDirection.Comm"
  "DirectionResult\"\0000\001\022P\n\rCloseScenario\022\034.z"
  "b.dcts.scenario.ScenarioId\032\037.zb.dcts.sce"
  "nario.ScenarioReply\"\000\022f\n\006Change\0229.zb.dct"
  "s.scenario.kh.commDirection.DirectionCha"
  "ngeRequest\032\037.zb.dcts.scenario.ScenarioRe"
  "ply\"\000\022Y\n\nOpenZoomIn\022(.zb.dcts.scenario.s"
  "pectrum.ZoomInRequest\032\037.zb.dcts.scenario"
  ".ScenarioReply\"\000\022R\n\013CloseZoomIn\022 .zb.dct"
  "s.scenario.ScenarioTaskId\032\037.zb.dcts.scen"
  "ario.ScenarioReply\"\000\022]\n\014OpenDataHold\022*.z"
  "b.dcts.scenario.spectrum.DataHoldRequest"
  "\032\037.zb.dcts.scenario.ScenarioReply\"\000\022^\n\rR"
  "esetDataHold\022*.zb.dcts.scenario.spectrum"
  ".DataHoldRequest\032\037.zb.dcts.scenario.Scen"
  "arioReply\"\000\022^\n\rCloseDataHold\022*.zb.dcts.s"
  "cenario.spectrum.DataHoldRequest\032\037.zb.dc"
  "ts.scenario.ScenarioReply\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto_deps[4] = {
  &::descriptor_table_scenario_2fkh_2fKhCommDirectionAcq_2eproto,
  &::descriptor_table_scenario_2fscenario_2eproto,
  &::descriptor_table_scenario_2fspectrum_2eproto,
  &::descriptor_table_source_2fsource_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto_sccs[1] = {
  &scc_info_CommScanDirectionCreateScenarioRequest_scenario_2fkh_2fKhCommScanDirection_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto = {
  false, false, descriptor_table_protodef_scenario_2fkh_2fKhCommScanDirection_2eproto, "scenario/kh/KhCommScanDirection.proto", 1355,
  &descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto_once, descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto_sccs, descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_scenario_2fkh_2fKhCommScanDirection_2eproto::offsets,
  file_level_metadata_scenario_2fkh_2fKhCommScanDirection_2eproto, 1, file_level_enum_descriptors_scenario_2fkh_2fKhCommScanDirection_2eproto, file_level_service_descriptors_scenario_2fkh_2fKhCommScanDirection_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scenario_2fkh_2fKhCommScanDirection_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scenario_2fkh_2fKhCommScanDirection_2eproto)), true);
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commDirection {

// ===================================================================

void CommScanDirectionCreateScenarioRequest::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commDirection::_CommScanDirectionCreateScenarioRequest_default_instance_._instance.get_mutable()->source_param_ = const_cast< ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource*>(
      ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource::internal_default_instance());
  ::zb::dcts::scenario::kh::commDirection::_CommScanDirectionCreateScenarioRequest_default_instance_._instance.get_mutable()->acq_param_ = const_cast< ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam*>(
      ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::internal_default_instance());
}
class CommScanDirectionCreateScenarioRequest::_Internal {
 public:
  static const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource& source_param(const CommScanDirectionCreateScenarioRequest* msg);
  static const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam& acq_param(const CommScanDirectionCreateScenarioRequest* msg);
};

const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource&
CommScanDirectionCreateScenarioRequest::_Internal::source_param(const CommScanDirectionCreateScenarioRequest* msg) {
  return *msg->source_param_;
}
const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam&
CommScanDirectionCreateScenarioRequest::_Internal::acq_param(const CommScanDirectionCreateScenarioRequest* msg) {
  return *msg->acq_param_;
}
void CommScanDirectionCreateScenarioRequest::clear_source_param() {
  if (GetArena() == nullptr && source_param_ != nullptr) {
    delete source_param_;
  }
  source_param_ = nullptr;
}
void CommScanDirectionCreateScenarioRequest::clear_acq_param() {
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
}
void CommScanDirectionCreateScenarioRequest::clear_ffp_sources() {
  ffp_sources_.Clear();
}
CommScanDirectionCreateScenarioRequest::CommScanDirectionCreateScenarioRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ffp_sources_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
}
CommScanDirectionCreateScenarioRequest::CommScanDirectionCreateScenarioRequest(const CommScanDirectionCreateScenarioRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ffp_sources_(from.ffp_sources_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source_param()) {
    source_param_ = new ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource(*from.source_param_);
  } else {
    source_param_ = nullptr;
  }
  if (from._internal_has_acq_param()) {
    acq_param_ = new ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam(*from.acq_param_);
  } else {
    acq_param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
}

void CommScanDirectionCreateScenarioRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommScanDirectionCreateScenarioRequest_scenario_2fkh_2fKhCommScanDirection_2eproto.base);
  ::memset(&source_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acq_param_) -
      reinterpret_cast<char*>(&source_param_)) + sizeof(acq_param_));
}

CommScanDirectionCreateScenarioRequest::~CommScanDirectionCreateScenarioRequest() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommScanDirectionCreateScenarioRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_param_;
  if (this != internal_default_instance()) delete acq_param_;
}

void CommScanDirectionCreateScenarioRequest::ArenaDtor(void* object) {
  CommScanDirectionCreateScenarioRequest* _this = reinterpret_cast< CommScanDirectionCreateScenarioRequest* >(object);
  (void)_this;
}
void CommScanDirectionCreateScenarioRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommScanDirectionCreateScenarioRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommScanDirectionCreateScenarioRequest& CommScanDirectionCreateScenarioRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommScanDirectionCreateScenarioRequest_scenario_2fkh_2fKhCommScanDirection_2eproto.base);
  return *internal_default_instance();
}


void CommScanDirectionCreateScenarioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ffp_sources_.Clear();
  if (GetArena() == nullptr && source_param_ != nullptr) {
    delete source_param_;
  }
  source_param_ = nullptr;
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommScanDirectionCreateScenarioRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_acq_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .zb.dcts.source.SourceId FFP_sources = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ffp_sources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommScanDirectionCreateScenarioRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 1;
  if (this->has_source_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source_param(this), target, stream);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 2;
  if (this->has_acq_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::acq_param(this), target, stream);
  }

  // repeated .zb.dcts.source.SourceId FFP_sources = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ffp_sources_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_ffp_sources(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  return target;
}

size_t CommScanDirectionCreateScenarioRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .zb.dcts.source.SourceId FFP_sources = 4;
  total_size += 1UL * this->_internal_ffp_sources_size();
  for (const auto& msg : this->ffp_sources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 1;
  if (this->has_source_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_param_);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 2;
  if (this->has_acq_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *acq_param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommScanDirectionCreateScenarioRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommScanDirectionCreateScenarioRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommScanDirectionCreateScenarioRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
    MergeFrom(*source);
  }
}

void CommScanDirectionCreateScenarioRequest::MergeFrom(const CommScanDirectionCreateScenarioRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ffp_sources_.MergeFrom(from.ffp_sources_);
  if (from.has_source_param()) {
    _internal_mutable_source_param()->::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource::MergeFrom(from._internal_source_param());
  }
  if (from.has_acq_param()) {
    _internal_mutable_acq_param()->::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::MergeFrom(from._internal_acq_param());
  }
}

void CommScanDirectionCreateScenarioRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommScanDirectionCreateScenarioRequest::CopyFrom(const CommScanDirectionCreateScenarioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commDirection.CommScanDirectionCreateScenarioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommScanDirectionCreateScenarioRequest::IsInitialized() const {
  return true;
}

void CommScanDirectionCreateScenarioRequest::InternalSwap(CommScanDirectionCreateScenarioRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ffp_sources_.InternalSwap(&other->ffp_sources_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommScanDirectionCreateScenarioRequest, acq_param_)
      + sizeof(CommScanDirectionCreateScenarioRequest::acq_param_)
      - PROTOBUF_FIELD_OFFSET(CommScanDirectionCreateScenarioRequest, source_param_)>(
          reinterpret_cast<char*>(&source_param_),
          reinterpret_cast<char*>(&other->source_param_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommScanDirectionCreateScenarioRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commDirection
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commDirection::CommScanDirectionCreateScenarioRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
