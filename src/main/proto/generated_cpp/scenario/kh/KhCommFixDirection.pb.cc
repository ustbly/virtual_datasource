// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/kh/KhCommFixDirection.proto

#include "scenario/kh/KhCommFixDirection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScenarioId_scenario_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhCommDirectionAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CommDirectionAcqParam_scenario_2fkh_2fKhCommDirectionAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhCommDirectionAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CommDirectionAcqSource_scenario_2fkh_2fKhCommDirectionAcq_2eproto;
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commDirection {
class CommFixDirectionTaskRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommFixDirectionTaskRequest> _instance;
} _CommFixDirectionTaskRequest_default_instance_;
}  // namespace commDirection
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
static void InitDefaultsscc_info_CommFixDirectionTaskRequest_scenario_2fkh_2fKhCommFixDirection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commDirection::_CommFixDirectionTaskRequest_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CommFixDirectionTaskRequest_scenario_2fkh_2fKhCommFixDirection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CommFixDirectionTaskRequest_scenario_2fkh_2fKhCommFixDirection_2eproto}, {
      &scc_info_ScenarioId_scenario_2fscenario_2eproto.base,
      &scc_info_CommDirectionAcqSource_scenario_2fkh_2fKhCommDirectionAcq_2eproto.base,
      &scc_info_CommDirectionAcqParam_scenario_2fkh_2fKhCommDirectionAcq_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scenario_2fkh_2fKhCommFixDirection_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_scenario_2fkh_2fKhCommFixDirection_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scenario_2fkh_2fKhCommFixDirection_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scenario_2fkh_2fKhCommFixDirection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest, scenario_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest, source_param_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest, acq_param_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commDirection::_CommFixDirectionTaskRequest_default_instance_),
};

const char descriptor_table_protodef_scenario_2fkh_2fKhCommFixDirection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$scenario/kh/KhCommFixDirection.proto\022!"
  "zb.dcts.scenario.kh.commDirection\032\027scena"
  "rio/scenario.proto\032\027scenario/spectrum.pr"
  "oto\032$scenario/kh/KhCommDirectionAcq.prot"
  "o\"\353\001\n\033CommFixDirectionTaskRequest\022.\n\010sce"
  "nario\030\001 \001(\0132\034.zb.dcts.scenario.ScenarioI"
  "d\022O\n\014source_param\030\002 \001(\01329.zb.dcts.scenar"
  "io.kh.commDirection.CommDirectionAcqSour"
  "ce\022K\n\tacq_param\030\003 \001(\01328.zb.dcts.scenario"
  ".kh.commDirection.CommDirectionAcqParam2"
  "\376\006\n\027CommFixDirectionService\022n\n\tStartTask"
  "\022>.zb.dcts.scenario.kh.commDirection.Com"
  "mFixDirectionTaskRequest\032\037.zb.dcts.scena"
  "rio.ScenarioReply\"\000\022l\n\014GetFixResult\022 .zb"
  ".dcts.scenario.ScenarioTaskId\0326.zb.dcts."
  "scenario.kh.commDirection.CommDirectionR"
  "esult\"\0000\001\022O\n\010StopTask\022 .zb.dcts.scenario"
  ".ScenarioTaskId\032\037.zb.dcts.scenario.Scena"
  "rioReply\"\000\022f\n\006Change\0229.zb.dcts.scenario."
  "kh.commDirection.DirectionChangeRequest\032"
  "\037.zb.dcts.scenario.ScenarioReply\"\000\022Y\n\nOp"
  "enZoomIn\022(.zb.dcts.scenario.spectrum.Zoo"
  "mInRequest\032\037.zb.dcts.scenario.ScenarioRe"
  "ply\"\000\022R\n\013CloseZoomIn\022 .zb.dcts.scenario."
  "ScenarioTaskId\032\037.zb.dcts.scenario.Scenar"
  "ioReply\"\000\022]\n\014OpenDataHold\022*.zb.dcts.scen"
  "ario.spectrum.DataHoldRequest\032\037.zb.dcts."
  "scenario.ScenarioReply\"\000\022^\n\rResetDataHol"
  "d\022*.zb.dcts.scenario.spectrum.DataHoldRe"
  "quest\032\037.zb.dcts.scenario.ScenarioReply\"\000"
  "\022^\n\rCloseDataHold\022*.zb.dcts.scenario.spe"
  "ctrum.DataHoldRequest\032\037.zb.dcts.scenario"
  ".ScenarioReply\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto_deps[3] = {
  &::descriptor_table_scenario_2fkh_2fKhCommDirectionAcq_2eproto,
  &::descriptor_table_scenario_2fscenario_2eproto,
  &::descriptor_table_scenario_2fspectrum_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto_sccs[1] = {
  &scc_info_CommFixDirectionTaskRequest_scenario_2fkh_2fKhCommFixDirection_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto = {
  false, false, descriptor_table_protodef_scenario_2fkh_2fKhCommFixDirection_2eproto, "scenario/kh/KhCommFixDirection.proto", 1304,
  &descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto_once, descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto_sccs, descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_scenario_2fkh_2fKhCommFixDirection_2eproto::offsets,
  file_level_metadata_scenario_2fkh_2fKhCommFixDirection_2eproto, 1, file_level_enum_descriptors_scenario_2fkh_2fKhCommFixDirection_2eproto, file_level_service_descriptors_scenario_2fkh_2fKhCommFixDirection_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scenario_2fkh_2fKhCommFixDirection_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scenario_2fkh_2fKhCommFixDirection_2eproto)), true);
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commDirection {

// ===================================================================

void CommFixDirectionTaskRequest::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commDirection::_CommFixDirectionTaskRequest_default_instance_._instance.get_mutable()->scenario_ = const_cast< ::zb::dcts::scenario::ScenarioId*>(
      ::zb::dcts::scenario::ScenarioId::internal_default_instance());
  ::zb::dcts::scenario::kh::commDirection::_CommFixDirectionTaskRequest_default_instance_._instance.get_mutable()->source_param_ = const_cast< ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource*>(
      ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource::internal_default_instance());
  ::zb::dcts::scenario::kh::commDirection::_CommFixDirectionTaskRequest_default_instance_._instance.get_mutable()->acq_param_ = const_cast< ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam*>(
      ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::internal_default_instance());
}
class CommFixDirectionTaskRequest::_Internal {
 public:
  static const ::zb::dcts::scenario::ScenarioId& scenario(const CommFixDirectionTaskRequest* msg);
  static const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource& source_param(const CommFixDirectionTaskRequest* msg);
  static const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam& acq_param(const CommFixDirectionTaskRequest* msg);
};

const ::zb::dcts::scenario::ScenarioId&
CommFixDirectionTaskRequest::_Internal::scenario(const CommFixDirectionTaskRequest* msg) {
  return *msg->scenario_;
}
const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource&
CommFixDirectionTaskRequest::_Internal::source_param(const CommFixDirectionTaskRequest* msg) {
  return *msg->source_param_;
}
const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam&
CommFixDirectionTaskRequest::_Internal::acq_param(const CommFixDirectionTaskRequest* msg) {
  return *msg->acq_param_;
}
void CommFixDirectionTaskRequest::clear_scenario() {
  if (GetArena() == nullptr && scenario_ != nullptr) {
    delete scenario_;
  }
  scenario_ = nullptr;
}
void CommFixDirectionTaskRequest::clear_source_param() {
  if (GetArena() == nullptr && source_param_ != nullptr) {
    delete source_param_;
  }
  source_param_ = nullptr;
}
void CommFixDirectionTaskRequest::clear_acq_param() {
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
}
CommFixDirectionTaskRequest::CommFixDirectionTaskRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
}
CommFixDirectionTaskRequest::CommFixDirectionTaskRequest(const CommFixDirectionTaskRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scenario()) {
    scenario_ = new ::zb::dcts::scenario::ScenarioId(*from.scenario_);
  } else {
    scenario_ = nullptr;
  }
  if (from._internal_has_source_param()) {
    source_param_ = new ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource(*from.source_param_);
  } else {
    source_param_ = nullptr;
  }
  if (from._internal_has_acq_param()) {
    acq_param_ = new ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam(*from.acq_param_);
  } else {
    acq_param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
}

void CommFixDirectionTaskRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommFixDirectionTaskRequest_scenario_2fkh_2fKhCommFixDirection_2eproto.base);
  ::memset(&scenario_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acq_param_) -
      reinterpret_cast<char*>(&scenario_)) + sizeof(acq_param_));
}

CommFixDirectionTaskRequest::~CommFixDirectionTaskRequest() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommFixDirectionTaskRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete scenario_;
  if (this != internal_default_instance()) delete source_param_;
  if (this != internal_default_instance()) delete acq_param_;
}

void CommFixDirectionTaskRequest::ArenaDtor(void* object) {
  CommFixDirectionTaskRequest* _this = reinterpret_cast< CommFixDirectionTaskRequest* >(object);
  (void)_this;
}
void CommFixDirectionTaskRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommFixDirectionTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommFixDirectionTaskRequest& CommFixDirectionTaskRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommFixDirectionTaskRequest_scenario_2fkh_2fKhCommFixDirection_2eproto.base);
  return *internal_default_instance();
}


void CommFixDirectionTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && scenario_ != nullptr) {
    delete scenario_;
  }
  scenario_ = nullptr;
  if (GetArena() == nullptr && source_param_ != nullptr) {
    delete source_param_;
  }
  source_param_ = nullptr;
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommFixDirectionTaskRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.ScenarioId scenario = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scenario(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_acq_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommFixDirectionTaskRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.ScenarioId scenario = 1;
  if (this->has_scenario()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::scenario(this), target, stream);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 2;
  if (this->has_source_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::source_param(this), target, stream);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
  if (this->has_acq_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::acq_param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  return target;
}

size_t CommFixDirectionTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .zb.dcts.scenario.ScenarioId scenario = 1;
  if (this->has_scenario()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scenario_);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 2;
  if (this->has_source_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_param_);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
  if (this->has_acq_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *acq_param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommFixDirectionTaskRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommFixDirectionTaskRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommFixDirectionTaskRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
    MergeFrom(*source);
  }
}

void CommFixDirectionTaskRequest::MergeFrom(const CommFixDirectionTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scenario()) {
    _internal_mutable_scenario()->::zb::dcts::scenario::ScenarioId::MergeFrom(from._internal_scenario());
  }
  if (from.has_source_param()) {
    _internal_mutable_source_param()->::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource::MergeFrom(from._internal_source_param());
  }
  if (from.has_acq_param()) {
    _internal_mutable_acq_param()->::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::MergeFrom(from._internal_acq_param());
  }
}

void CommFixDirectionTaskRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommFixDirectionTaskRequest::CopyFrom(const CommFixDirectionTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commDirection.CommFixDirectionTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommFixDirectionTaskRequest::IsInitialized() const {
  return true;
}

void CommFixDirectionTaskRequest::InternalSwap(CommFixDirectionTaskRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommFixDirectionTaskRequest, acq_param_)
      + sizeof(CommFixDirectionTaskRequest::acq_param_)
      - PROTOBUF_FIELD_OFFSET(CommFixDirectionTaskRequest, scenario_)>(
          reinterpret_cast<char*>(&scenario_),
          reinterpret_cast<char*>(&other->scenario_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommFixDirectionTaskRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commDirection
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commDirection::CommFixDirectionTaskRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
