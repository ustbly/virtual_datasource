// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/kh/KhIQDataAcq.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_scenario_2fkh_2fKhIQDataAcq_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_scenario_2fkh_2fKhIQDataAcq_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "dcts.pb.h"
#include "source/source.pb.h"
#include "source/kh/KhContext.pb.h"
#include "scenario/spectrum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhIQDataAcq_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto;
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commIqData {
class CommIQAcqResult;
class CommIQAcqResultDefaultTypeInternal;
extern CommIQAcqResultDefaultTypeInternal _CommIQAcqResult_default_instance_;
class CommIQAcqResult_IQHeader;
class CommIQAcqResult_IQHeaderDefaultTypeInternal;
extern CommIQAcqResult_IQHeaderDefaultTypeInternal _CommIQAcqResult_IQHeader_default_instance_;
class CommIQAcqSource;
class CommIQAcqSourceDefaultTypeInternal;
extern CommIQAcqSourceDefaultTypeInternal _CommIQAcqSource_default_instance_;
class CommIQAcqSource_ParamsEntry_DoNotUse;
class CommIQAcqSource_ParamsEntry_DoNotUseDefaultTypeInternal;
extern CommIQAcqSource_ParamsEntry_DoNotUseDefaultTypeInternal _CommIQAcqSource_ParamsEntry_DoNotUse_default_instance_;
class CommIQAcquireParam;
class CommIQAcquireParamDefaultTypeInternal;
extern CommIQAcquireParamDefaultTypeInternal _CommIQAcquireParam_default_instance_;
class CommIQAcquireParam_OthersEntry_DoNotUse;
class CommIQAcquireParam_OthersEntry_DoNotUseDefaultTypeInternal;
extern CommIQAcquireParam_OthersEntry_DoNotUseDefaultTypeInternal _CommIQAcquireParam_OthersEntry_DoNotUse_default_instance_;
class CommIQData;
class CommIQDataDefaultTypeInternal;
extern CommIQDataDefaultTypeInternal _CommIQData_default_instance_;
}  // namespace commIqData
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
PROTOBUF_NAMESPACE_OPEN
template<> ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult* Arena::CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQAcqResult>(Arena*);
template<> ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* Arena::CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader>(Arena*);
template<> ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource* Arena::CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQAcqSource>(Arena*);
template<> ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse>(Arena*);
template<> ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam* Arena::CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam>(Arena*);
template<> ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse* Arena::CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse>(Arena*);
template<> ::zb::dcts::scenario::kh::commIqData::CommIQData* Arena::CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commIqData {

enum ChangeRequestType : int {
  ANALOGDEMOD_CHANNEL = 0,
  ChangeRequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ChangeRequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ChangeRequestType_IsValid(int value);
constexpr ChangeRequestType ChangeRequestType_MIN = ANALOGDEMOD_CHANNEL;
constexpr ChangeRequestType ChangeRequestType_MAX = ANALOGDEMOD_CHANNEL;
constexpr int ChangeRequestType_ARRAYSIZE = ChangeRequestType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChangeRequestType_descriptor();
template<typename T>
inline const std::string& ChangeRequestType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ChangeRequestType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ChangeRequestType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ChangeRequestType_descriptor(), enum_t_value);
}
inline bool ChangeRequestType_Parse(
    const std::string& name, ChangeRequestType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ChangeRequestType>(
    ChangeRequestType_descriptor(), name, value);
}
// ===================================================================

class CommIQAcqSource_ParamsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CommIQAcqSource_ParamsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CommIQAcqSource_ParamsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  CommIQAcqSource_ParamsEntry_DoNotUse();
  CommIQAcqSource_ParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const CommIQAcqSource_ParamsEntry_DoNotUse& other);
  static const CommIQAcqSource_ParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CommIQAcqSource_ParamsEntry_DoNotUse*>(&_CommIQAcqSource_ParamsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "zb.dcts.scenario.kh.commIqData.CommIQAcqSource.ParamsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "zb.dcts.scenario.kh.commIqData.CommIQAcqSource.ParamsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
    return ::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class CommIQAcqSource PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zb.dcts.scenario.kh.commIqData.CommIQAcqSource) */ {
 public:
  inline CommIQAcqSource() : CommIQAcqSource(nullptr) {};
  virtual ~CommIQAcqSource();

  CommIQAcqSource(const CommIQAcqSource& from);
  CommIQAcqSource(CommIQAcqSource&& from) noexcept
    : CommIQAcqSource() {
    *this = ::std::move(from);
  }

  inline CommIQAcqSource& operator=(const CommIQAcqSource& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommIQAcqSource& operator=(CommIQAcqSource&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommIQAcqSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommIQAcqSource* internal_default_instance() {
    return reinterpret_cast<const CommIQAcqSource*>(
               &_CommIQAcqSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CommIQAcqSource& a, CommIQAcqSource& b) {
    a.Swap(&b);
  }
  inline void Swap(CommIQAcqSource* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommIQAcqSource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommIQAcqSource* New() const final {
    return CreateMaybeMessage<CommIQAcqSource>(nullptr);
  }

  CommIQAcqSource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommIQAcqSource>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommIQAcqSource& from);
  void MergeFrom(const CommIQAcqSource& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommIQAcqSource* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zb.dcts.scenario.kh.commIqData.CommIQAcqSource";
  }
  protected:
  explicit CommIQAcqSource(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
    return ::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 6,
    kIdFieldNumber = 1,
  };
  // map<string, string> params = 6;
  int params_size() const;
  private:
  int _internal_params_size() const;
  public:
  void clear_params();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_params() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_params();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      params() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_params();

  // .zb.dcts.source.SourceId id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const ::zb::dcts::source::SourceId& id() const;
  ::zb::dcts::source::SourceId* release_id();
  ::zb::dcts::source::SourceId* mutable_id();
  void set_allocated_id(::zb::dcts::source::SourceId* id);
  private:
  const ::zb::dcts::source::SourceId& _internal_id() const;
  ::zb::dcts::source::SourceId* _internal_mutable_id();
  public:
  void unsafe_arena_set_allocated_id(
      ::zb::dcts::source::SourceId* id);
  ::zb::dcts::source::SourceId* unsafe_arena_release_id();

  // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      CommIQAcqSource_ParamsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > params_;
  ::zb::dcts::source::SourceId* id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto;
};
// -------------------------------------------------------------------

class CommIQAcquireParam_OthersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CommIQAcquireParam_OthersEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CommIQAcquireParam_OthersEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  CommIQAcquireParam_OthersEntry_DoNotUse();
  CommIQAcquireParam_OthersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const CommIQAcquireParam_OthersEntry_DoNotUse& other);
  static const CommIQAcquireParam_OthersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CommIQAcquireParam_OthersEntry_DoNotUse*>(&_CommIQAcquireParam_OthersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.OthersEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.OthersEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
    return ::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class CommIQAcquireParam PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam) */ {
 public:
  inline CommIQAcquireParam() : CommIQAcquireParam(nullptr) {};
  virtual ~CommIQAcquireParam();

  CommIQAcquireParam(const CommIQAcquireParam& from);
  CommIQAcquireParam(CommIQAcquireParam&& from) noexcept
    : CommIQAcquireParam() {
    *this = ::std::move(from);
  }

  inline CommIQAcquireParam& operator=(const CommIQAcquireParam& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommIQAcquireParam& operator=(CommIQAcquireParam&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommIQAcquireParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommIQAcquireParam* internal_default_instance() {
    return reinterpret_cast<const CommIQAcquireParam*>(
               &_CommIQAcquireParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CommIQAcquireParam& a, CommIQAcquireParam& b) {
    a.Swap(&b);
  }
  inline void Swap(CommIQAcquireParam* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommIQAcquireParam* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommIQAcquireParam* New() const final {
    return CreateMaybeMessage<CommIQAcquireParam>(nullptr);
  }

  CommIQAcquireParam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommIQAcquireParam>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommIQAcquireParam& from);
  void MergeFrom(const CommIQAcquireParam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommIQAcquireParam* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zb.dcts.scenario.kh.commIqData.CommIQAcquireParam";
  }
  protected:
  explicit CommIQAcquireParam(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
    return ::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOthersFieldNumber = 10,
    kSignalBandFieldNumber = 1,
    kLevelTriggerFieldNumber = 6,
    kWinParamsFieldNumber = 9,
    kDetectModeFieldNumber = 2,
    kChannelModeFieldNumber = 3,
    kAttenuationGainFieldNumber = 4,
    kAntennaFieldNumber = 5,
    kAcquireSamplesFieldNumber = 7,
    kScaleToVoltageFieldNumber = 8,
  };
  // map<string, string> others = 10;
  int others_size() const;
  private:
  int _internal_others_size() const;
  public:
  void clear_others();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_others() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_others();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      others() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_others();

  // .zb.dcts.scenario.spectrum.SignalBand signal_band = 1;
  bool has_signal_band() const;
  private:
  bool _internal_has_signal_band() const;
  public:
  void clear_signal_band();
  const ::zb::dcts::scenario::spectrum::SignalBand& signal_band() const;
  ::zb::dcts::scenario::spectrum::SignalBand* release_signal_band();
  ::zb::dcts::scenario::spectrum::SignalBand* mutable_signal_band();
  void set_allocated_signal_band(::zb::dcts::scenario::spectrum::SignalBand* signal_band);
  private:
  const ::zb::dcts::scenario::spectrum::SignalBand& _internal_signal_band() const;
  ::zb::dcts::scenario::spectrum::SignalBand* _internal_mutable_signal_band();
  public:
  void unsafe_arena_set_allocated_signal_band(
      ::zb::dcts::scenario::spectrum::SignalBand* signal_band);
  ::zb::dcts::scenario::spectrum::SignalBand* unsafe_arena_release_signal_band();

  // .zb.dcts.source.kh.LevelTriggerParam level_trigger = 6;
  bool has_level_trigger() const;
  private:
  bool _internal_has_level_trigger() const;
  public:
  void clear_level_trigger();
  const ::zb::dcts::source::kh::LevelTriggerParam& level_trigger() const;
  ::zb::dcts::source::kh::LevelTriggerParam* release_level_trigger();
  ::zb::dcts::source::kh::LevelTriggerParam* mutable_level_trigger();
  void set_allocated_level_trigger(::zb::dcts::source::kh::LevelTriggerParam* level_trigger);
  private:
  const ::zb::dcts::source::kh::LevelTriggerParam& _internal_level_trigger() const;
  ::zb::dcts::source::kh::LevelTriggerParam* _internal_mutable_level_trigger();
  public:
  void unsafe_arena_set_allocated_level_trigger(
      ::zb::dcts::source::kh::LevelTriggerParam* level_trigger);
  ::zb::dcts::source::kh::LevelTriggerParam* unsafe_arena_release_level_trigger();

  // .zb.dcts.source.kh.WindowParams win_params = 9;
  bool has_win_params() const;
  private:
  bool _internal_has_win_params() const;
  public:
  void clear_win_params();
  const ::zb::dcts::source::kh::WindowParams& win_params() const;
  ::zb::dcts::source::kh::WindowParams* release_win_params();
  ::zb::dcts::source::kh::WindowParams* mutable_win_params();
  void set_allocated_win_params(::zb::dcts::source::kh::WindowParams* win_params);
  private:
  const ::zb::dcts::source::kh::WindowParams& _internal_win_params() const;
  ::zb::dcts::source::kh::WindowParams* _internal_mutable_win_params();
  public:
  void unsafe_arena_set_allocated_win_params(
      ::zb::dcts::source::kh::WindowParams* win_params);
  ::zb::dcts::source::kh::WindowParams* unsafe_arena_release_win_params();

  // .zb.dcts.source.kh.DetectMode detect_mode = 2;
  void clear_detect_mode();
  ::zb::dcts::source::kh::DetectMode detect_mode() const;
  void set_detect_mode(::zb::dcts::source::kh::DetectMode value);
  private:
  ::zb::dcts::source::kh::DetectMode _internal_detect_mode() const;
  void _internal_set_detect_mode(::zb::dcts::source::kh::DetectMode value);
  public:

  // .zb.dcts.source.kh.ChannelMode channel_mode = 3;
  void clear_channel_mode();
  ::zb::dcts::source::kh::ChannelMode channel_mode() const;
  void set_channel_mode(::zb::dcts::source::kh::ChannelMode value);
  private:
  ::zb::dcts::source::kh::ChannelMode _internal_channel_mode() const;
  void _internal_set_channel_mode(::zb::dcts::source::kh::ChannelMode value);
  public:

  // double attenuation_gain = 4;
  void clear_attenuation_gain();
  double attenuation_gain() const;
  void set_attenuation_gain(double value);
  private:
  double _internal_attenuation_gain() const;
  void _internal_set_attenuation_gain(double value);
  public:

  // int32 antenna = 5;
  void clear_antenna();
  ::PROTOBUF_NAMESPACE_ID::int32 antenna() const;
  void set_antenna(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_antenna() const;
  void _internal_set_antenna(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 acquire_samples = 7;
  void clear_acquire_samples();
  ::PROTOBUF_NAMESPACE_ID::int32 acquire_samples() const;
  void set_acquire_samples(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_acquire_samples() const;
  void _internal_set_acquire_samples(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double scale_to_voltage = 8;
  void clear_scale_to_voltage();
  double scale_to_voltage() const;
  void set_scale_to_voltage(double value);
  private:
  double _internal_scale_to_voltage() const;
  void _internal_set_scale_to_voltage(double value);
  public:

  // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      CommIQAcquireParam_OthersEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > others_;
  ::zb::dcts::scenario::spectrum::SignalBand* signal_band_;
  ::zb::dcts::source::kh::LevelTriggerParam* level_trigger_;
  ::zb::dcts::source::kh::WindowParams* win_params_;
  int detect_mode_;
  int channel_mode_;
  double attenuation_gain_;
  ::PROTOBUF_NAMESPACE_ID::int32 antenna_;
  ::PROTOBUF_NAMESPACE_ID::int32 acquire_samples_;
  double scale_to_voltage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto;
};
// -------------------------------------------------------------------

class CommIQData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zb.dcts.scenario.kh.commIqData.CommIQData) */ {
 public:
  inline CommIQData() : CommIQData(nullptr) {};
  virtual ~CommIQData();

  CommIQData(const CommIQData& from);
  CommIQData(CommIQData&& from) noexcept
    : CommIQData() {
    *this = ::std::move(from);
  }

  inline CommIQData& operator=(const CommIQData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommIQData& operator=(CommIQData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommIQData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommIQData* internal_default_instance() {
    return reinterpret_cast<const CommIQData*>(
               &_CommIQData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CommIQData& a, CommIQData& b) {
    a.Swap(&b);
  }
  inline void Swap(CommIQData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommIQData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommIQData* New() const final {
    return CreateMaybeMessage<CommIQData>(nullptr);
  }

  CommIQData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommIQData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommIQData& from);
  void MergeFrom(const CommIQData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommIQData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zb.dcts.scenario.kh.commIqData.CommIQData";
  }
  protected:
  explicit CommIQData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
    return ::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataIFieldNumber = 1,
    kDataQFieldNumber = 2,
  };
  // repeated float data_i = 1;
  int data_i_size() const;
  private:
  int _internal_data_i_size() const;
  public:
  void clear_data_i();
  private:
  float _internal_data_i(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_data_i() const;
  void _internal_add_data_i(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_data_i();
  public:
  float data_i(int index) const;
  void set_data_i(int index, float value);
  void add_data_i(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      data_i() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_data_i();

  // repeated float data_q = 2;
  int data_q_size() const;
  private:
  int _internal_data_q_size() const;
  public:
  void clear_data_q();
  private:
  float _internal_data_q(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_data_q() const;
  void _internal_add_data_q(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_data_q();
  public:
  float data_q(int index) const;
  void set_data_q(int index, float value);
  void add_data_q(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      data_q() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_data_q();

  // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commIqData.CommIQData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > data_i_;
  mutable std::atomic<int> _data_i_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > data_q_;
  mutable std::atomic<int> _data_q_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto;
};
// -------------------------------------------------------------------

class CommIQAcqResult_IQHeader PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader) */ {
 public:
  inline CommIQAcqResult_IQHeader() : CommIQAcqResult_IQHeader(nullptr) {};
  virtual ~CommIQAcqResult_IQHeader();

  CommIQAcqResult_IQHeader(const CommIQAcqResult_IQHeader& from);
  CommIQAcqResult_IQHeader(CommIQAcqResult_IQHeader&& from) noexcept
    : CommIQAcqResult_IQHeader() {
    *this = ::std::move(from);
  }

  inline CommIQAcqResult_IQHeader& operator=(const CommIQAcqResult_IQHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommIQAcqResult_IQHeader& operator=(CommIQAcqResult_IQHeader&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommIQAcqResult_IQHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommIQAcqResult_IQHeader* internal_default_instance() {
    return reinterpret_cast<const CommIQAcqResult_IQHeader*>(
               &_CommIQAcqResult_IQHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CommIQAcqResult_IQHeader& a, CommIQAcqResult_IQHeader& b) {
    a.Swap(&b);
  }
  inline void Swap(CommIQAcqResult_IQHeader* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommIQAcqResult_IQHeader* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommIQAcqResult_IQHeader* New() const final {
    return CreateMaybeMessage<CommIQAcqResult_IQHeader>(nullptr);
  }

  CommIQAcqResult_IQHeader* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommIQAcqResult_IQHeader>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommIQAcqResult_IQHeader& from);
  void MergeFrom(const CommIQAcqResult_IQHeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommIQAcqResult_IQHeader* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader";
  }
  protected:
  explicit CommIQAcqResult_IQHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
    return ::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFromFieldNumber = 1,
    kSignalBandFieldNumber = 5,
    kTimeStampFieldNumber = 6,
    kPositionFieldNumber = 7,
    kSequenceNumberFieldNumber = 2,
    kQtzFieldNumber = 8,
    kSpanIFFieldNumber = 9,
  };
  // .zb.dcts.source.SourceId result_from = 1;
  bool has_result_from() const;
  private:
  bool _internal_has_result_from() const;
  public:
  void clear_result_from();
  const ::zb::dcts::source::SourceId& result_from() const;
  ::zb::dcts::source::SourceId* release_result_from();
  ::zb::dcts::source::SourceId* mutable_result_from();
  void set_allocated_result_from(::zb::dcts::source::SourceId* result_from);
  private:
  const ::zb::dcts::source::SourceId& _internal_result_from() const;
  ::zb::dcts::source::SourceId* _internal_mutable_result_from();
  public:
  void unsafe_arena_set_allocated_result_from(
      ::zb::dcts::source::SourceId* result_from);
  ::zb::dcts::source::SourceId* unsafe_arena_release_result_from();

  // .zb.dcts.scenario.spectrum.SignalBand signal_band = 5;
  bool has_signal_band() const;
  private:
  bool _internal_has_signal_band() const;
  public:
  void clear_signal_band();
  const ::zb::dcts::scenario::spectrum::SignalBand& signal_band() const;
  ::zb::dcts::scenario::spectrum::SignalBand* release_signal_band();
  ::zb::dcts::scenario::spectrum::SignalBand* mutable_signal_band();
  void set_allocated_signal_band(::zb::dcts::scenario::spectrum::SignalBand* signal_band);
  private:
  const ::zb::dcts::scenario::spectrum::SignalBand& _internal_signal_band() const;
  ::zb::dcts::scenario::spectrum::SignalBand* _internal_mutable_signal_band();
  public:
  void unsafe_arena_set_allocated_signal_band(
      ::zb::dcts::scenario::spectrum::SignalBand* signal_band);
  ::zb::dcts::scenario::spectrum::SignalBand* unsafe_arena_release_signal_band();

  // .zb.dcts.Timestamp time_stamp = 6;
  bool has_time_stamp() const;
  private:
  bool _internal_has_time_stamp() const;
  public:
  void clear_time_stamp();
  const ::zb::dcts::Timestamp& time_stamp() const;
  ::zb::dcts::Timestamp* release_time_stamp();
  ::zb::dcts::Timestamp* mutable_time_stamp();
  void set_allocated_time_stamp(::zb::dcts::Timestamp* time_stamp);
  private:
  const ::zb::dcts::Timestamp& _internal_time_stamp() const;
  ::zb::dcts::Timestamp* _internal_mutable_time_stamp();
  public:
  void unsafe_arena_set_allocated_time_stamp(
      ::zb::dcts::Timestamp* time_stamp);
  ::zb::dcts::Timestamp* unsafe_arena_release_time_stamp();

  // .zb.dcts.Position position = 7;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::zb::dcts::Position& position() const;
  ::zb::dcts::Position* release_position();
  ::zb::dcts::Position* mutable_position();
  void set_allocated_position(::zb::dcts::Position* position);
  private:
  const ::zb::dcts::Position& _internal_position() const;
  ::zb::dcts::Position* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::zb::dcts::Position* position);
  ::zb::dcts::Position* unsafe_arena_release_position();

  // uint64 sequence_number = 2;
  void clear_sequence_number();
  ::PROTOBUF_NAMESPACE_ID::uint64 sequence_number() const;
  void set_sequence_number(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sequence_number() const;
  void _internal_set_sequence_number(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double qtz = 8;
  void clear_qtz();
  double qtz() const;
  void set_qtz(double value);
  private:
  double _internal_qtz() const;
  void _internal_set_qtz(double value);
  public:

  // double spanIF = 9;
  void clear_spanif();
  double spanif() const;
  void set_spanif(double value);
  private:
  double _internal_spanif() const;
  void _internal_set_spanif(double value);
  public:

  // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::zb::dcts::source::SourceId* result_from_;
  ::zb::dcts::scenario::spectrum::SignalBand* signal_band_;
  ::zb::dcts::Timestamp* time_stamp_;
  ::zb::dcts::Position* position_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sequence_number_;
  double qtz_;
  double spanif_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto;
};
// -------------------------------------------------------------------

class CommIQAcqResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zb.dcts.scenario.kh.commIqData.CommIQAcqResult) */ {
 public:
  inline CommIQAcqResult() : CommIQAcqResult(nullptr) {};
  virtual ~CommIQAcqResult();

  CommIQAcqResult(const CommIQAcqResult& from);
  CommIQAcqResult(CommIQAcqResult&& from) noexcept
    : CommIQAcqResult() {
    *this = ::std::move(from);
  }

  inline CommIQAcqResult& operator=(const CommIQAcqResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommIQAcqResult& operator=(CommIQAcqResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CommIQAcqResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommIQAcqResult* internal_default_instance() {
    return reinterpret_cast<const CommIQAcqResult*>(
               &_CommIQAcqResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CommIQAcqResult& a, CommIQAcqResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CommIQAcqResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommIQAcqResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CommIQAcqResult* New() const final {
    return CreateMaybeMessage<CommIQAcqResult>(nullptr);
  }

  CommIQAcqResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CommIQAcqResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CommIQAcqResult& from);
  void MergeFrom(const CommIQAcqResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommIQAcqResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zb.dcts.scenario.kh.commIqData.CommIQAcqResult";
  }
  protected:
  explicit CommIQAcqResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
    return ::descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CommIQAcqResult_IQHeader IQHeader;

  // accessors -------------------------------------------------------

  enum : int {
    kSpectrumViewsFieldNumber = 3,
    kHeaderFieldNumber = 1,
    kBodyFieldNumber = 2,
    kSampleRateFieldNumber = 4,
  };
  // repeated float spectrum_views = 3;
  int spectrum_views_size() const;
  private:
  int _internal_spectrum_views_size() const;
  public:
  void clear_spectrum_views();
  private:
  float _internal_spectrum_views(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_spectrum_views() const;
  void _internal_add_spectrum_views(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_spectrum_views();
  public:
  float spectrum_views(int index) const;
  void set_spectrum_views(int index, float value);
  void add_spectrum_views(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      spectrum_views() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_spectrum_views();

  // .zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader& header() const;
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* release_header();
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* mutable_header();
  void set_allocated_header(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* header);
  private:
  const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader& _internal_header() const;
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* header);
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* unsafe_arena_release_header();

  // .zb.dcts.scenario.kh.commIqData.CommIQData body = 2;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const ::zb::dcts::scenario::kh::commIqData::CommIQData& body() const;
  ::zb::dcts::scenario::kh::commIqData::CommIQData* release_body();
  ::zb::dcts::scenario::kh::commIqData::CommIQData* mutable_body();
  void set_allocated_body(::zb::dcts::scenario::kh::commIqData::CommIQData* body);
  private:
  const ::zb::dcts::scenario::kh::commIqData::CommIQData& _internal_body() const;
  ::zb::dcts::scenario::kh::commIqData::CommIQData* _internal_mutable_body();
  public:
  void unsafe_arena_set_allocated_body(
      ::zb::dcts::scenario::kh::commIqData::CommIQData* body);
  ::zb::dcts::scenario::kh::commIqData::CommIQData* unsafe_arena_release_body();

  // double sample_rate = 4;
  void clear_sample_rate();
  double sample_rate() const;
  void set_sample_rate(double value);
  private:
  double _internal_sample_rate() const;
  void _internal_set_sample_rate(double value);
  public:

  // @@protoc_insertion_point(class_scope:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > spectrum_views_;
  mutable std::atomic<int> _spectrum_views_cached_byte_size_;
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* header_;
  ::zb::dcts::scenario::kh::commIqData::CommIQData* body_;
  double sample_rate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CommIQAcqSource

// .zb.dcts.source.SourceId id = 1;
inline bool CommIQAcqSource::_internal_has_id() const {
  return this != internal_default_instance() && id_ != nullptr;
}
inline bool CommIQAcqSource::has_id() const {
  return _internal_has_id();
}
inline const ::zb::dcts::source::SourceId& CommIQAcqSource::_internal_id() const {
  const ::zb::dcts::source::SourceId* p = id_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::source::SourceId*>(
      &::zb::dcts::source::_SourceId_default_instance_);
}
inline const ::zb::dcts::source::SourceId& CommIQAcqSource::id() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqSource.id)
  return _internal_id();
}
inline void CommIQAcqSource::unsafe_arena_set_allocated_id(
    ::zb::dcts::source::SourceId* id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(id_);
  }
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqSource.id)
}
inline ::zb::dcts::source::SourceId* CommIQAcqSource::release_id() {
  auto temp = unsafe_arena_release_id();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::source::SourceId* CommIQAcqSource::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcqSource.id)
  
  ::zb::dcts::source::SourceId* temp = id_;
  id_ = nullptr;
  return temp;
}
inline ::zb::dcts::source::SourceId* CommIQAcqSource::_internal_mutable_id() {
  
  if (id_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::source::SourceId>(GetArena());
    id_ = p;
  }
  return id_;
}
inline ::zb::dcts::source::SourceId* CommIQAcqSource::mutable_id() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcqSource.id)
  return _internal_mutable_id();
}
inline void CommIQAcqSource::set_allocated_id(::zb::dcts::source::SourceId* id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(id_);
  }
  if (id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(id)->GetArena();
    if (message_arena != submessage_arena) {
      id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqSource.id)
}

// map<string, string> params = 6;
inline int CommIQAcqSource::_internal_params_size() const {
  return params_.size();
}
inline int CommIQAcqSource::params_size() const {
  return _internal_params_size();
}
inline void CommIQAcqSource::clear_params() {
  params_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
CommIQAcqSource::_internal_params() const {
  return params_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
CommIQAcqSource::params() const {
  // @@protoc_insertion_point(field_map:zb.dcts.scenario.kh.commIqData.CommIQAcqSource.params)
  return _internal_params();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
CommIQAcqSource::_internal_mutable_params() {
  return params_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
CommIQAcqSource::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:zb.dcts.scenario.kh.commIqData.CommIQAcqSource.params)
  return _internal_mutable_params();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CommIQAcquireParam

// .zb.dcts.scenario.spectrum.SignalBand signal_band = 1;
inline bool CommIQAcquireParam::_internal_has_signal_band() const {
  return this != internal_default_instance() && signal_band_ != nullptr;
}
inline bool CommIQAcquireParam::has_signal_band() const {
  return _internal_has_signal_band();
}
inline const ::zb::dcts::scenario::spectrum::SignalBand& CommIQAcquireParam::_internal_signal_band() const {
  const ::zb::dcts::scenario::spectrum::SignalBand* p = signal_band_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::scenario::spectrum::SignalBand*>(
      &::zb::dcts::scenario::spectrum::_SignalBand_default_instance_);
}
inline const ::zb::dcts::scenario::spectrum::SignalBand& CommIQAcquireParam::signal_band() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.signal_band)
  return _internal_signal_band();
}
inline void CommIQAcquireParam::unsafe_arena_set_allocated_signal_band(
    ::zb::dcts::scenario::spectrum::SignalBand* signal_band) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(signal_band_);
  }
  signal_band_ = signal_band;
  if (signal_band) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.signal_band)
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcquireParam::release_signal_band() {
  auto temp = unsafe_arena_release_signal_band();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcquireParam::unsafe_arena_release_signal_band() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.signal_band)
  
  ::zb::dcts::scenario::spectrum::SignalBand* temp = signal_band_;
  signal_band_ = nullptr;
  return temp;
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcquireParam::_internal_mutable_signal_band() {
  
  if (signal_band_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::scenario::spectrum::SignalBand>(GetArena());
    signal_band_ = p;
  }
  return signal_band_;
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcquireParam::mutable_signal_band() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.signal_band)
  return _internal_mutable_signal_band();
}
inline void CommIQAcquireParam::set_allocated_signal_band(::zb::dcts::scenario::spectrum::SignalBand* signal_band) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(signal_band_);
  }
  if (signal_band) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(signal_band)->GetArena();
    if (message_arena != submessage_arena) {
      signal_band = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, signal_band, submessage_arena);
    }
    
  } else {
    
  }
  signal_band_ = signal_band;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.signal_band)
}

// .zb.dcts.source.kh.DetectMode detect_mode = 2;
inline void CommIQAcquireParam::clear_detect_mode() {
  detect_mode_ = 0;
}
inline ::zb::dcts::source::kh::DetectMode CommIQAcquireParam::_internal_detect_mode() const {
  return static_cast< ::zb::dcts::source::kh::DetectMode >(detect_mode_);
}
inline ::zb::dcts::source::kh::DetectMode CommIQAcquireParam::detect_mode() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.detect_mode)
  return _internal_detect_mode();
}
inline void CommIQAcquireParam::_internal_set_detect_mode(::zb::dcts::source::kh::DetectMode value) {
  
  detect_mode_ = value;
}
inline void CommIQAcquireParam::set_detect_mode(::zb::dcts::source::kh::DetectMode value) {
  _internal_set_detect_mode(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.detect_mode)
}

// .zb.dcts.source.kh.ChannelMode channel_mode = 3;
inline void CommIQAcquireParam::clear_channel_mode() {
  channel_mode_ = 0;
}
inline ::zb::dcts::source::kh::ChannelMode CommIQAcquireParam::_internal_channel_mode() const {
  return static_cast< ::zb::dcts::source::kh::ChannelMode >(channel_mode_);
}
inline ::zb::dcts::source::kh::ChannelMode CommIQAcquireParam::channel_mode() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.channel_mode)
  return _internal_channel_mode();
}
inline void CommIQAcquireParam::_internal_set_channel_mode(::zb::dcts::source::kh::ChannelMode value) {
  
  channel_mode_ = value;
}
inline void CommIQAcquireParam::set_channel_mode(::zb::dcts::source::kh::ChannelMode value) {
  _internal_set_channel_mode(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.channel_mode)
}

// double attenuation_gain = 4;
inline void CommIQAcquireParam::clear_attenuation_gain() {
  attenuation_gain_ = 0;
}
inline double CommIQAcquireParam::_internal_attenuation_gain() const {
  return attenuation_gain_;
}
inline double CommIQAcquireParam::attenuation_gain() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.attenuation_gain)
  return _internal_attenuation_gain();
}
inline void CommIQAcquireParam::_internal_set_attenuation_gain(double value) {
  
  attenuation_gain_ = value;
}
inline void CommIQAcquireParam::set_attenuation_gain(double value) {
  _internal_set_attenuation_gain(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.attenuation_gain)
}

// int32 antenna = 5;
inline void CommIQAcquireParam::clear_antenna() {
  antenna_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommIQAcquireParam::_internal_antenna() const {
  return antenna_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommIQAcquireParam::antenna() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.antenna)
  return _internal_antenna();
}
inline void CommIQAcquireParam::_internal_set_antenna(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  antenna_ = value;
}
inline void CommIQAcquireParam::set_antenna(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_antenna(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.antenna)
}

// .zb.dcts.source.kh.LevelTriggerParam level_trigger = 6;
inline bool CommIQAcquireParam::_internal_has_level_trigger() const {
  return this != internal_default_instance() && level_trigger_ != nullptr;
}
inline bool CommIQAcquireParam::has_level_trigger() const {
  return _internal_has_level_trigger();
}
inline const ::zb::dcts::source::kh::LevelTriggerParam& CommIQAcquireParam::_internal_level_trigger() const {
  const ::zb::dcts::source::kh::LevelTriggerParam* p = level_trigger_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::source::kh::LevelTriggerParam*>(
      &::zb::dcts::source::kh::_LevelTriggerParam_default_instance_);
}
inline const ::zb::dcts::source::kh::LevelTriggerParam& CommIQAcquireParam::level_trigger() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.level_trigger)
  return _internal_level_trigger();
}
inline void CommIQAcquireParam::unsafe_arena_set_allocated_level_trigger(
    ::zb::dcts::source::kh::LevelTriggerParam* level_trigger) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(level_trigger_);
  }
  level_trigger_ = level_trigger;
  if (level_trigger) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.level_trigger)
}
inline ::zb::dcts::source::kh::LevelTriggerParam* CommIQAcquireParam::release_level_trigger() {
  auto temp = unsafe_arena_release_level_trigger();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::source::kh::LevelTriggerParam* CommIQAcquireParam::unsafe_arena_release_level_trigger() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.level_trigger)
  
  ::zb::dcts::source::kh::LevelTriggerParam* temp = level_trigger_;
  level_trigger_ = nullptr;
  return temp;
}
inline ::zb::dcts::source::kh::LevelTriggerParam* CommIQAcquireParam::_internal_mutable_level_trigger() {
  
  if (level_trigger_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::source::kh::LevelTriggerParam>(GetArena());
    level_trigger_ = p;
  }
  return level_trigger_;
}
inline ::zb::dcts::source::kh::LevelTriggerParam* CommIQAcquireParam::mutable_level_trigger() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.level_trigger)
  return _internal_mutable_level_trigger();
}
inline void CommIQAcquireParam::set_allocated_level_trigger(::zb::dcts::source::kh::LevelTriggerParam* level_trigger) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(level_trigger_);
  }
  if (level_trigger) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(level_trigger)->GetArena();
    if (message_arena != submessage_arena) {
      level_trigger = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, level_trigger, submessage_arena);
    }
    
  } else {
    
  }
  level_trigger_ = level_trigger;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.level_trigger)
}

// int32 acquire_samples = 7;
inline void CommIQAcquireParam::clear_acquire_samples() {
  acquire_samples_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommIQAcquireParam::_internal_acquire_samples() const {
  return acquire_samples_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CommIQAcquireParam::acquire_samples() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.acquire_samples)
  return _internal_acquire_samples();
}
inline void CommIQAcquireParam::_internal_set_acquire_samples(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  acquire_samples_ = value;
}
inline void CommIQAcquireParam::set_acquire_samples(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_acquire_samples(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.acquire_samples)
}

// double scale_to_voltage = 8;
inline void CommIQAcquireParam::clear_scale_to_voltage() {
  scale_to_voltage_ = 0;
}
inline double CommIQAcquireParam::_internal_scale_to_voltage() const {
  return scale_to_voltage_;
}
inline double CommIQAcquireParam::scale_to_voltage() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.scale_to_voltage)
  return _internal_scale_to_voltage();
}
inline void CommIQAcquireParam::_internal_set_scale_to_voltage(double value) {
  
  scale_to_voltage_ = value;
}
inline void CommIQAcquireParam::set_scale_to_voltage(double value) {
  _internal_set_scale_to_voltage(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.scale_to_voltage)
}

// .zb.dcts.source.kh.WindowParams win_params = 9;
inline bool CommIQAcquireParam::_internal_has_win_params() const {
  return this != internal_default_instance() && win_params_ != nullptr;
}
inline bool CommIQAcquireParam::has_win_params() const {
  return _internal_has_win_params();
}
inline const ::zb::dcts::source::kh::WindowParams& CommIQAcquireParam::_internal_win_params() const {
  const ::zb::dcts::source::kh::WindowParams* p = win_params_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::source::kh::WindowParams*>(
      &::zb::dcts::source::kh::_WindowParams_default_instance_);
}
inline const ::zb::dcts::source::kh::WindowParams& CommIQAcquireParam::win_params() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.win_params)
  return _internal_win_params();
}
inline void CommIQAcquireParam::unsafe_arena_set_allocated_win_params(
    ::zb::dcts::source::kh::WindowParams* win_params) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(win_params_);
  }
  win_params_ = win_params;
  if (win_params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.win_params)
}
inline ::zb::dcts::source::kh::WindowParams* CommIQAcquireParam::release_win_params() {
  auto temp = unsafe_arena_release_win_params();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::source::kh::WindowParams* CommIQAcquireParam::unsafe_arena_release_win_params() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.win_params)
  
  ::zb::dcts::source::kh::WindowParams* temp = win_params_;
  win_params_ = nullptr;
  return temp;
}
inline ::zb::dcts::source::kh::WindowParams* CommIQAcquireParam::_internal_mutable_win_params() {
  
  if (win_params_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::source::kh::WindowParams>(GetArena());
    win_params_ = p;
  }
  return win_params_;
}
inline ::zb::dcts::source::kh::WindowParams* CommIQAcquireParam::mutable_win_params() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.win_params)
  return _internal_mutable_win_params();
}
inline void CommIQAcquireParam::set_allocated_win_params(::zb::dcts::source::kh::WindowParams* win_params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(win_params_);
  }
  if (win_params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(win_params)->GetArena();
    if (message_arena != submessage_arena) {
      win_params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, win_params, submessage_arena);
    }
    
  } else {
    
  }
  win_params_ = win_params;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.win_params)
}

// map<string, string> others = 10;
inline int CommIQAcquireParam::_internal_others_size() const {
  return others_.size();
}
inline int CommIQAcquireParam::others_size() const {
  return _internal_others_size();
}
inline void CommIQAcquireParam::clear_others() {
  others_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
CommIQAcquireParam::_internal_others() const {
  return others_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
CommIQAcquireParam::others() const {
  // @@protoc_insertion_point(field_map:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.others)
  return _internal_others();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
CommIQAcquireParam::_internal_mutable_others() {
  return others_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
CommIQAcquireParam::mutable_others() {
  // @@protoc_insertion_point(field_mutable_map:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.others)
  return _internal_mutable_others();
}

// -------------------------------------------------------------------

// CommIQData

// repeated float data_i = 1;
inline int CommIQData::_internal_data_i_size() const {
  return data_i_.size();
}
inline int CommIQData::data_i_size() const {
  return _internal_data_i_size();
}
inline void CommIQData::clear_data_i() {
  data_i_.Clear();
}
inline float CommIQData::_internal_data_i(int index) const {
  return data_i_.Get(index);
}
inline float CommIQData::data_i(int index) const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQData.data_i)
  return _internal_data_i(index);
}
inline void CommIQData::set_data_i(int index, float value) {
  data_i_.Set(index, value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQData.data_i)
}
inline void CommIQData::_internal_add_data_i(float value) {
  data_i_.Add(value);
}
inline void CommIQData::add_data_i(float value) {
  _internal_add_data_i(value);
  // @@protoc_insertion_point(field_add:zb.dcts.scenario.kh.commIqData.CommIQData.data_i)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CommIQData::_internal_data_i() const {
  return data_i_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CommIQData::data_i() const {
  // @@protoc_insertion_point(field_list:zb.dcts.scenario.kh.commIqData.CommIQData.data_i)
  return _internal_data_i();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CommIQData::_internal_mutable_data_i() {
  return &data_i_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CommIQData::mutable_data_i() {
  // @@protoc_insertion_point(field_mutable_list:zb.dcts.scenario.kh.commIqData.CommIQData.data_i)
  return _internal_mutable_data_i();
}

// repeated float data_q = 2;
inline int CommIQData::_internal_data_q_size() const {
  return data_q_.size();
}
inline int CommIQData::data_q_size() const {
  return _internal_data_q_size();
}
inline void CommIQData::clear_data_q() {
  data_q_.Clear();
}
inline float CommIQData::_internal_data_q(int index) const {
  return data_q_.Get(index);
}
inline float CommIQData::data_q(int index) const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQData.data_q)
  return _internal_data_q(index);
}
inline void CommIQData::set_data_q(int index, float value) {
  data_q_.Set(index, value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQData.data_q)
}
inline void CommIQData::_internal_add_data_q(float value) {
  data_q_.Add(value);
}
inline void CommIQData::add_data_q(float value) {
  _internal_add_data_q(value);
  // @@protoc_insertion_point(field_add:zb.dcts.scenario.kh.commIqData.CommIQData.data_q)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CommIQData::_internal_data_q() const {
  return data_q_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CommIQData::data_q() const {
  // @@protoc_insertion_point(field_list:zb.dcts.scenario.kh.commIqData.CommIQData.data_q)
  return _internal_data_q();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CommIQData::_internal_mutable_data_q() {
  return &data_q_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CommIQData::mutable_data_q() {
  // @@protoc_insertion_point(field_mutable_list:zb.dcts.scenario.kh.commIqData.CommIQData.data_q)
  return _internal_mutable_data_q();
}

// -------------------------------------------------------------------

// CommIQAcqResult_IQHeader

// .zb.dcts.source.SourceId result_from = 1;
inline bool CommIQAcqResult_IQHeader::_internal_has_result_from() const {
  return this != internal_default_instance() && result_from_ != nullptr;
}
inline bool CommIQAcqResult_IQHeader::has_result_from() const {
  return _internal_has_result_from();
}
inline const ::zb::dcts::source::SourceId& CommIQAcqResult_IQHeader::_internal_result_from() const {
  const ::zb::dcts::source::SourceId* p = result_from_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::source::SourceId*>(
      &::zb::dcts::source::_SourceId_default_instance_);
}
inline const ::zb::dcts::source::SourceId& CommIQAcqResult_IQHeader::result_from() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.result_from)
  return _internal_result_from();
}
inline void CommIQAcqResult_IQHeader::unsafe_arena_set_allocated_result_from(
    ::zb::dcts::source::SourceId* result_from) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_from_);
  }
  result_from_ = result_from;
  if (result_from) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.result_from)
}
inline ::zb::dcts::source::SourceId* CommIQAcqResult_IQHeader::release_result_from() {
  auto temp = unsafe_arena_release_result_from();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::source::SourceId* CommIQAcqResult_IQHeader::unsafe_arena_release_result_from() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.result_from)
  
  ::zb::dcts::source::SourceId* temp = result_from_;
  result_from_ = nullptr;
  return temp;
}
inline ::zb::dcts::source::SourceId* CommIQAcqResult_IQHeader::_internal_mutable_result_from() {
  
  if (result_from_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::source::SourceId>(GetArena());
    result_from_ = p;
  }
  return result_from_;
}
inline ::zb::dcts::source::SourceId* CommIQAcqResult_IQHeader::mutable_result_from() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.result_from)
  return _internal_mutable_result_from();
}
inline void CommIQAcqResult_IQHeader::set_allocated_result_from(::zb::dcts::source::SourceId* result_from) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_from_);
  }
  if (result_from) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_from)->GetArena();
    if (message_arena != submessage_arena) {
      result_from = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result_from, submessage_arena);
    }
    
  } else {
    
  }
  result_from_ = result_from;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.result_from)
}

// uint64 sequence_number = 2;
inline void CommIQAcqResult_IQHeader::clear_sequence_number() {
  sequence_number_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommIQAcqResult_IQHeader::_internal_sequence_number() const {
  return sequence_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CommIQAcqResult_IQHeader::sequence_number() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.sequence_number)
  return _internal_sequence_number();
}
inline void CommIQAcqResult_IQHeader::_internal_set_sequence_number(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  sequence_number_ = value;
}
inline void CommIQAcqResult_IQHeader::set_sequence_number(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sequence_number(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.sequence_number)
}

// .zb.dcts.scenario.spectrum.SignalBand signal_band = 5;
inline bool CommIQAcqResult_IQHeader::_internal_has_signal_band() const {
  return this != internal_default_instance() && signal_band_ != nullptr;
}
inline bool CommIQAcqResult_IQHeader::has_signal_band() const {
  return _internal_has_signal_band();
}
inline const ::zb::dcts::scenario::spectrum::SignalBand& CommIQAcqResult_IQHeader::_internal_signal_band() const {
  const ::zb::dcts::scenario::spectrum::SignalBand* p = signal_band_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::scenario::spectrum::SignalBand*>(
      &::zb::dcts::scenario::spectrum::_SignalBand_default_instance_);
}
inline const ::zb::dcts::scenario::spectrum::SignalBand& CommIQAcqResult_IQHeader::signal_band() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.signal_band)
  return _internal_signal_band();
}
inline void CommIQAcqResult_IQHeader::unsafe_arena_set_allocated_signal_band(
    ::zb::dcts::scenario::spectrum::SignalBand* signal_band) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(signal_band_);
  }
  signal_band_ = signal_band;
  if (signal_band) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.signal_band)
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcqResult_IQHeader::release_signal_band() {
  auto temp = unsafe_arena_release_signal_band();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcqResult_IQHeader::unsafe_arena_release_signal_band() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.signal_band)
  
  ::zb::dcts::scenario::spectrum::SignalBand* temp = signal_band_;
  signal_band_ = nullptr;
  return temp;
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcqResult_IQHeader::_internal_mutable_signal_band() {
  
  if (signal_band_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::scenario::spectrum::SignalBand>(GetArena());
    signal_band_ = p;
  }
  return signal_band_;
}
inline ::zb::dcts::scenario::spectrum::SignalBand* CommIQAcqResult_IQHeader::mutable_signal_band() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.signal_band)
  return _internal_mutable_signal_band();
}
inline void CommIQAcqResult_IQHeader::set_allocated_signal_band(::zb::dcts::scenario::spectrum::SignalBand* signal_band) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(signal_band_);
  }
  if (signal_band) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(signal_band)->GetArena();
    if (message_arena != submessage_arena) {
      signal_band = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, signal_band, submessage_arena);
    }
    
  } else {
    
  }
  signal_band_ = signal_band;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.signal_band)
}

// .zb.dcts.Timestamp time_stamp = 6;
inline bool CommIQAcqResult_IQHeader::_internal_has_time_stamp() const {
  return this != internal_default_instance() && time_stamp_ != nullptr;
}
inline bool CommIQAcqResult_IQHeader::has_time_stamp() const {
  return _internal_has_time_stamp();
}
inline const ::zb::dcts::Timestamp& CommIQAcqResult_IQHeader::_internal_time_stamp() const {
  const ::zb::dcts::Timestamp* p = time_stamp_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::Timestamp*>(
      &::zb::dcts::_Timestamp_default_instance_);
}
inline const ::zb::dcts::Timestamp& CommIQAcqResult_IQHeader::time_stamp() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.time_stamp)
  return _internal_time_stamp();
}
inline void CommIQAcqResult_IQHeader::unsafe_arena_set_allocated_time_stamp(
    ::zb::dcts::Timestamp* time_stamp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_stamp_);
  }
  time_stamp_ = time_stamp;
  if (time_stamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.time_stamp)
}
inline ::zb::dcts::Timestamp* CommIQAcqResult_IQHeader::release_time_stamp() {
  auto temp = unsafe_arena_release_time_stamp();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::Timestamp* CommIQAcqResult_IQHeader::unsafe_arena_release_time_stamp() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.time_stamp)
  
  ::zb::dcts::Timestamp* temp = time_stamp_;
  time_stamp_ = nullptr;
  return temp;
}
inline ::zb::dcts::Timestamp* CommIQAcqResult_IQHeader::_internal_mutable_time_stamp() {
  
  if (time_stamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::Timestamp>(GetArena());
    time_stamp_ = p;
  }
  return time_stamp_;
}
inline ::zb::dcts::Timestamp* CommIQAcqResult_IQHeader::mutable_time_stamp() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.time_stamp)
  return _internal_mutable_time_stamp();
}
inline void CommIQAcqResult_IQHeader::set_allocated_time_stamp(::zb::dcts::Timestamp* time_stamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_stamp_);
  }
  if (time_stamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_stamp)->GetArena();
    if (message_arena != submessage_arena) {
      time_stamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time_stamp, submessage_arena);
    }
    
  } else {
    
  }
  time_stamp_ = time_stamp;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.time_stamp)
}

// .zb.dcts.Position position = 7;
inline bool CommIQAcqResult_IQHeader::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool CommIQAcqResult_IQHeader::has_position() const {
  return _internal_has_position();
}
inline const ::zb::dcts::Position& CommIQAcqResult_IQHeader::_internal_position() const {
  const ::zb::dcts::Position* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::Position*>(
      &::zb::dcts::_Position_default_instance_);
}
inline const ::zb::dcts::Position& CommIQAcqResult_IQHeader::position() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.position)
  return _internal_position();
}
inline void CommIQAcqResult_IQHeader::unsafe_arena_set_allocated_position(
    ::zb::dcts::Position* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.position)
}
inline ::zb::dcts::Position* CommIQAcqResult_IQHeader::release_position() {
  auto temp = unsafe_arena_release_position();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::Position* CommIQAcqResult_IQHeader::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.position)
  
  ::zb::dcts::Position* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::zb::dcts::Position* CommIQAcqResult_IQHeader::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::Position>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::zb::dcts::Position* CommIQAcqResult_IQHeader::mutable_position() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.position)
  return _internal_mutable_position();
}
inline void CommIQAcqResult_IQHeader::set_allocated_position(::zb::dcts::Position* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position)->GetArena();
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.position)
}

// double qtz = 8;
inline void CommIQAcqResult_IQHeader::clear_qtz() {
  qtz_ = 0;
}
inline double CommIQAcqResult_IQHeader::_internal_qtz() const {
  return qtz_;
}
inline double CommIQAcqResult_IQHeader::qtz() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.qtz)
  return _internal_qtz();
}
inline void CommIQAcqResult_IQHeader::_internal_set_qtz(double value) {
  
  qtz_ = value;
}
inline void CommIQAcqResult_IQHeader::set_qtz(double value) {
  _internal_set_qtz(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.qtz)
}

// double spanIF = 9;
inline void CommIQAcqResult_IQHeader::clear_spanif() {
  spanif_ = 0;
}
inline double CommIQAcqResult_IQHeader::_internal_spanif() const {
  return spanif_;
}
inline double CommIQAcqResult_IQHeader::spanif() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.spanIF)
  return _internal_spanif();
}
inline void CommIQAcqResult_IQHeader::_internal_set_spanif(double value) {
  
  spanif_ = value;
}
inline void CommIQAcqResult_IQHeader::set_spanif(double value) {
  _internal_set_spanif(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader.spanIF)
}

// -------------------------------------------------------------------

// CommIQAcqResult

// .zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader header = 1;
inline bool CommIQAcqResult::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool CommIQAcqResult::has_header() const {
  return _internal_has_header();
}
inline void CommIQAcqResult::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader& CommIQAcqResult::_internal_header() const {
  const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader*>(
      &::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_IQHeader_default_instance_);
}
inline const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader& CommIQAcqResult::header() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.header)
  return _internal_header();
}
inline void CommIQAcqResult::unsafe_arena_set_allocated_header(
    ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.header)
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* CommIQAcqResult::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* CommIQAcqResult::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.header)
  
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* CommIQAcqResult::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* CommIQAcqResult::mutable_header() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.header)
  return _internal_mutable_header();
}
inline void CommIQAcqResult::set_allocated_header(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.header)
}

// .zb.dcts.scenario.kh.commIqData.CommIQData body = 2;
inline bool CommIQAcqResult::_internal_has_body() const {
  return this != internal_default_instance() && body_ != nullptr;
}
inline bool CommIQAcqResult::has_body() const {
  return _internal_has_body();
}
inline void CommIQAcqResult::clear_body() {
  if (GetArena() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
}
inline const ::zb::dcts::scenario::kh::commIqData::CommIQData& CommIQAcqResult::_internal_body() const {
  const ::zb::dcts::scenario::kh::commIqData::CommIQData* p = body_;
  return p != nullptr ? *p : *reinterpret_cast<const ::zb::dcts::scenario::kh::commIqData::CommIQData*>(
      &::zb::dcts::scenario::kh::commIqData::_CommIQData_default_instance_);
}
inline const ::zb::dcts::scenario::kh::commIqData::CommIQData& CommIQAcqResult::body() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.body)
  return _internal_body();
}
inline void CommIQAcqResult::unsafe_arena_set_allocated_body(
    ::zb::dcts::scenario::kh::commIqData::CommIQData* body) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(body_);
  }
  body_ = body;
  if (body) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.body)
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQData* CommIQAcqResult::release_body() {
  auto temp = unsafe_arena_release_body();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQData* CommIQAcqResult::unsafe_arena_release_body() {
  // @@protoc_insertion_point(field_release:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.body)
  
  ::zb::dcts::scenario::kh::commIqData::CommIQData* temp = body_;
  body_ = nullptr;
  return temp;
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQData* CommIQAcqResult::_internal_mutable_body() {
  
  if (body_ == nullptr) {
    auto* p = CreateMaybeMessage<::zb::dcts::scenario::kh::commIqData::CommIQData>(GetArena());
    body_ = p;
  }
  return body_;
}
inline ::zb::dcts::scenario::kh::commIqData::CommIQData* CommIQAcqResult::mutable_body() {
  // @@protoc_insertion_point(field_mutable:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.body)
  return _internal_mutable_body();
}
inline void CommIQAcqResult::set_allocated_body(::zb::dcts::scenario::kh::commIqData::CommIQData* body) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete body_;
  }
  if (body) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(body);
    if (message_arena != submessage_arena) {
      body = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  body_ = body;
  // @@protoc_insertion_point(field_set_allocated:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.body)
}

// repeated float spectrum_views = 3;
inline int CommIQAcqResult::_internal_spectrum_views_size() const {
  return spectrum_views_.size();
}
inline int CommIQAcqResult::spectrum_views_size() const {
  return _internal_spectrum_views_size();
}
inline void CommIQAcqResult::clear_spectrum_views() {
  spectrum_views_.Clear();
}
inline float CommIQAcqResult::_internal_spectrum_views(int index) const {
  return spectrum_views_.Get(index);
}
inline float CommIQAcqResult::spectrum_views(int index) const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.spectrum_views)
  return _internal_spectrum_views(index);
}
inline void CommIQAcqResult::set_spectrum_views(int index, float value) {
  spectrum_views_.Set(index, value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.spectrum_views)
}
inline void CommIQAcqResult::_internal_add_spectrum_views(float value) {
  spectrum_views_.Add(value);
}
inline void CommIQAcqResult::add_spectrum_views(float value) {
  _internal_add_spectrum_views(value);
  // @@protoc_insertion_point(field_add:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.spectrum_views)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CommIQAcqResult::_internal_spectrum_views() const {
  return spectrum_views_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CommIQAcqResult::spectrum_views() const {
  // @@protoc_insertion_point(field_list:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.spectrum_views)
  return _internal_spectrum_views();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CommIQAcqResult::_internal_mutable_spectrum_views() {
  return &spectrum_views_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CommIQAcqResult::mutable_spectrum_views() {
  // @@protoc_insertion_point(field_mutable_list:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.spectrum_views)
  return _internal_mutable_spectrum_views();
}

// double sample_rate = 4;
inline void CommIQAcqResult::clear_sample_rate() {
  sample_rate_ = 0;
}
inline double CommIQAcqResult::_internal_sample_rate() const {
  return sample_rate_;
}
inline double CommIQAcqResult::sample_rate() const {
  // @@protoc_insertion_point(field_get:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.sample_rate)
  return _internal_sample_rate();
}
inline void CommIQAcqResult::_internal_set_sample_rate(double value) {
  
  sample_rate_ = value;
}
inline void CommIQAcqResult::set_sample_rate(double value) {
  _internal_set_sample_rate(value);
  // @@protoc_insertion_point(field_set:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.sample_rate)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace commIqData
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::zb::dcts::scenario::kh::commIqData::ChangeRequestType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zb::dcts::scenario::kh::commIqData::ChangeRequestType>() {
  return ::zb::dcts::scenario::kh::commIqData::ChangeRequestType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_scenario_2fkh_2fKhIQDataAcq_2eproto
