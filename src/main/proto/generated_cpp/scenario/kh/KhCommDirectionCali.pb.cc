// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/kh/KhCommDirectionCali.proto

#include "scenario/kh/KhCommDirectionCali.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ScenarioTaskId_scenario_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhCommDirectionAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CommDirectionAcqParam_scenario_2fkh_2fKhCommDirectionAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhCommDirectionAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CommDirectionAcqSource_scenario_2fkh_2fKhCommDirectionAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_source_2fsource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceId_source_2fsource_2eproto;
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commDirection {
class CommDirectionCaliTaskRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommDirectionCaliTaskRequest> _instance;
} _CommDirectionCaliTaskRequest_default_instance_;
class CaliChangeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CaliChangeRequest> _instance;
} _CaliChangeRequest_default_instance_;
}  // namespace commDirection
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
static void InitDefaultsscc_info_CaliChangeRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commDirection::_CaliChangeRequest_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commDirection::CaliChangeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commDirection::CaliChangeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CaliChangeRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CaliChangeRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto}, {
      &scc_info_ScenarioTaskId_scenario_2fscenario_2eproto.base,
      &scc_info_CommDirectionAcqParam_scenario_2fkh_2fKhCommDirectionAcq_2eproto.base,}};

static void InitDefaultsscc_info_CommDirectionCaliTaskRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commDirection::_CommDirectionCaliTaskRequest_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_CommDirectionCaliTaskRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_CommDirectionCaliTaskRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto}, {
      &scc_info_SourceId_source_2fsource_2eproto.base,
      &scc_info_CommDirectionAcqSource_scenario_2fkh_2fKhCommDirectionAcq_2eproto.base,
      &scc_info_CommDirectionAcqParam_scenario_2fkh_2fKhCommDirectionAcq_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scenario_2fkh_2fKhCommDirectionCali_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_scenario_2fkh_2fKhCommDirectionCali_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scenario_2fkh_2fKhCommDirectionCali_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scenario_2fkh_2fKhCommDirectionCali_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest, source_id_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest, source_param_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest, acq_param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CaliChangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CaliChangeRequest, responser_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CaliChangeRequest, param_index_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CaliChangeRequest, acq_param_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commDirection::CaliChangeRequest, center_freq_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest)},
  { 8, -1, sizeof(::zb::dcts::scenario::kh::commDirection::CaliChangeRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commDirection::_CommDirectionCaliTaskRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commDirection::_CaliChangeRequest_default_instance_),
};

const char descriptor_table_protodef_scenario_2fkh_2fKhCommDirectionCali_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%scenario/kh/KhCommDirectionCali.proto\022"
  "!zb.dcts.scenario.kh.commDirection\032\023sour"
  "ce/source.proto\032\027scenario/scenario.proto"
  "\032$scenario/kh/KhCommDirectionAcq.proto\"\351"
  "\001\n\034CommDirectionCaliTaskRequest\022+\n\tsourc"
  "e_id\030\001 \001(\0132\030.zb.dcts.source.SourceId\022O\n\014"
  "source_param\030\002 \001(\01329.zb.dcts.scenario.kh"
  ".commDirection.CommDirectionAcqSource\022K\n"
  "\tacq_param\030\003 \001(\01328.zb.dcts.scenario.kh.c"
  "ommDirection.CommDirectionAcqParam\"\362\001\n\021C"
  "aliChangeRequest\0223\n\tresponser\030\001 \001(\0132 .zb"
  ".dcts.scenario.ScenarioTaskId\022F\n\013param_i"
  "ndex\030\002 \001(\01621.zb.dcts.scenario.kh.commDir"
  "ection.CaliParamIndex\022K\n\tacq_param\030\003 \001(\013"
  "28.zb.dcts.scenario.kh.commDirection.Com"
  "mDirectionAcqParam\022\023\n\013center_freq\030\004 \001(\001*"
  "z\n\016CaliParamIndex\022\007\n\003ALL\020\000\022\016\n\nATT_GAIN_C"
  "\020\001\022\016\n\nFREQ_RANGE\020\002\022\014\n\010FREQ_RBW\020\003\022\016\n\nFREQ"
  "_TUNER\020\004\022\021\n\rCENTER_FREQ_C\020\005\022\016\n\nOUTPUT_PO"
  "W\020\0062\255\003\n\030CommDirectionCaliService\022o\n\tStar"
  "tTask\022\?.zb.dcts.scenario.kh.commDirectio"
  "n.CommDirectionCaliTaskRequest\032\037.zb.dcts"
  ".scenario.ScenarioReply\"\000\022l\n\014GetFixResul"
  "t\022 .zb.dcts.scenario.ScenarioTaskId\0326.zb"
  ".dcts.scenario.kh.commDirection.CommDire"
  "ctionResult\"\0000\001\022O\n\010StopTask\022 .zb.dcts.sc"
  "enario.ScenarioTaskId\032\037.zb.dcts.scenario"
  ".ScenarioReply\"\000\022a\n\006Change\0224.zb.dcts.sce"
  "nario.kh.commDirection.CaliChangeRequest"
  "\032\037.zb.dcts.scenario.ScenarioReply\"\000b\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto_deps[3] = {
  &::descriptor_table_scenario_2fkh_2fKhCommDirectionAcq_2eproto,
  &::descriptor_table_scenario_2fscenario_2eproto,
  &::descriptor_table_source_2fsource_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto_sccs[2] = {
  &scc_info_CaliChangeRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto.base,
  &scc_info_CommDirectionCaliTaskRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto = {
  false, false, descriptor_table_protodef_scenario_2fkh_2fKhCommDirectionCali_2eproto, "scenario/kh/KhCommDirectionCali.proto", 1203,
  &descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto_once, descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto_sccs, descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto_deps, 2, 3,
  schemas, file_default_instances, TableStruct_scenario_2fkh_2fKhCommDirectionCali_2eproto::offsets,
  file_level_metadata_scenario_2fkh_2fKhCommDirectionCali_2eproto, 2, file_level_enum_descriptors_scenario_2fkh_2fKhCommDirectionCali_2eproto, file_level_service_descriptors_scenario_2fkh_2fKhCommDirectionCali_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scenario_2fkh_2fKhCommDirectionCali_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto)), true);
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commDirection {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CaliParamIndex_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenario_2fkh_2fKhCommDirectionCali_2eproto);
  return file_level_enum_descriptors_scenario_2fkh_2fKhCommDirectionCali_2eproto[0];
}
bool CaliParamIndex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CommDirectionCaliTaskRequest::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commDirection::_CommDirectionCaliTaskRequest_default_instance_._instance.get_mutable()->source_id_ = const_cast< ::zb::dcts::source::SourceId*>(
      ::zb::dcts::source::SourceId::internal_default_instance());
  ::zb::dcts::scenario::kh::commDirection::_CommDirectionCaliTaskRequest_default_instance_._instance.get_mutable()->source_param_ = const_cast< ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource*>(
      ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource::internal_default_instance());
  ::zb::dcts::scenario::kh::commDirection::_CommDirectionCaliTaskRequest_default_instance_._instance.get_mutable()->acq_param_ = const_cast< ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam*>(
      ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::internal_default_instance());
}
class CommDirectionCaliTaskRequest::_Internal {
 public:
  static const ::zb::dcts::source::SourceId& source_id(const CommDirectionCaliTaskRequest* msg);
  static const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource& source_param(const CommDirectionCaliTaskRequest* msg);
  static const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam& acq_param(const CommDirectionCaliTaskRequest* msg);
};

const ::zb::dcts::source::SourceId&
CommDirectionCaliTaskRequest::_Internal::source_id(const CommDirectionCaliTaskRequest* msg) {
  return *msg->source_id_;
}
const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource&
CommDirectionCaliTaskRequest::_Internal::source_param(const CommDirectionCaliTaskRequest* msg) {
  return *msg->source_param_;
}
const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam&
CommDirectionCaliTaskRequest::_Internal::acq_param(const CommDirectionCaliTaskRequest* msg) {
  return *msg->acq_param_;
}
void CommDirectionCaliTaskRequest::clear_source_id() {
  if (GetArena() == nullptr && source_id_ != nullptr) {
    delete source_id_;
  }
  source_id_ = nullptr;
}
void CommDirectionCaliTaskRequest::clear_source_param() {
  if (GetArena() == nullptr && source_param_ != nullptr) {
    delete source_param_;
  }
  source_param_ = nullptr;
}
void CommDirectionCaliTaskRequest::clear_acq_param() {
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
}
CommDirectionCaliTaskRequest::CommDirectionCaliTaskRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
}
CommDirectionCaliTaskRequest::CommDirectionCaliTaskRequest(const CommDirectionCaliTaskRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source_id()) {
    source_id_ = new ::zb::dcts::source::SourceId(*from.source_id_);
  } else {
    source_id_ = nullptr;
  }
  if (from._internal_has_source_param()) {
    source_param_ = new ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource(*from.source_param_);
  } else {
    source_param_ = nullptr;
  }
  if (from._internal_has_acq_param()) {
    acq_param_ = new ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam(*from.acq_param_);
  } else {
    acq_param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
}

void CommDirectionCaliTaskRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommDirectionCaliTaskRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto.base);
  ::memset(&source_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acq_param_) -
      reinterpret_cast<char*>(&source_id_)) + sizeof(acq_param_));
}

CommDirectionCaliTaskRequest::~CommDirectionCaliTaskRequest() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommDirectionCaliTaskRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_id_;
  if (this != internal_default_instance()) delete source_param_;
  if (this != internal_default_instance()) delete acq_param_;
}

void CommDirectionCaliTaskRequest::ArenaDtor(void* object) {
  CommDirectionCaliTaskRequest* _this = reinterpret_cast< CommDirectionCaliTaskRequest* >(object);
  (void)_this;
}
void CommDirectionCaliTaskRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommDirectionCaliTaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommDirectionCaliTaskRequest& CommDirectionCaliTaskRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommDirectionCaliTaskRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto.base);
  return *internal_default_instance();
}


void CommDirectionCaliTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_id_ != nullptr) {
    delete source_id_;
  }
  source_id_ = nullptr;
  if (GetArena() == nullptr && source_param_ != nullptr) {
    delete source_param_;
  }
  source_param_ = nullptr;
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommDirectionCaliTaskRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.source.SourceId source_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_acq_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommDirectionCaliTaskRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId source_id = 1;
  if (this->has_source_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source_id(this), target, stream);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 2;
  if (this->has_source_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::source_param(this), target, stream);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
  if (this->has_acq_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::acq_param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  return target;
}

size_t CommDirectionCaliTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId source_id = 1;
  if (this->has_source_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_id_);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqSource source_param = 2;
  if (this->has_source_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_param_);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
  if (this->has_acq_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *acq_param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommDirectionCaliTaskRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommDirectionCaliTaskRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommDirectionCaliTaskRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
    MergeFrom(*source);
  }
}

void CommDirectionCaliTaskRequest::MergeFrom(const CommDirectionCaliTaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_id()) {
    _internal_mutable_source_id()->::zb::dcts::source::SourceId::MergeFrom(from._internal_source_id());
  }
  if (from.has_source_param()) {
    _internal_mutable_source_param()->::zb::dcts::scenario::kh::commDirection::CommDirectionAcqSource::MergeFrom(from._internal_source_param());
  }
  if (from.has_acq_param()) {
    _internal_mutable_acq_param()->::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::MergeFrom(from._internal_acq_param());
  }
}

void CommDirectionCaliTaskRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommDirectionCaliTaskRequest::CopyFrom(const CommDirectionCaliTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commDirection.CommDirectionCaliTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommDirectionCaliTaskRequest::IsInitialized() const {
  return true;
}

void CommDirectionCaliTaskRequest::InternalSwap(CommDirectionCaliTaskRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommDirectionCaliTaskRequest, acq_param_)
      + sizeof(CommDirectionCaliTaskRequest::acq_param_)
      - PROTOBUF_FIELD_OFFSET(CommDirectionCaliTaskRequest, source_id_)>(
          reinterpret_cast<char*>(&source_id_),
          reinterpret_cast<char*>(&other->source_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommDirectionCaliTaskRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CaliChangeRequest::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commDirection::_CaliChangeRequest_default_instance_._instance.get_mutable()->responser_ = const_cast< ::zb::dcts::scenario::ScenarioTaskId*>(
      ::zb::dcts::scenario::ScenarioTaskId::internal_default_instance());
  ::zb::dcts::scenario::kh::commDirection::_CaliChangeRequest_default_instance_._instance.get_mutable()->acq_param_ = const_cast< ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam*>(
      ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::internal_default_instance());
}
class CaliChangeRequest::_Internal {
 public:
  static const ::zb::dcts::scenario::ScenarioTaskId& responser(const CaliChangeRequest* msg);
  static const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam& acq_param(const CaliChangeRequest* msg);
};

const ::zb::dcts::scenario::ScenarioTaskId&
CaliChangeRequest::_Internal::responser(const CaliChangeRequest* msg) {
  return *msg->responser_;
}
const ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam&
CaliChangeRequest::_Internal::acq_param(const CaliChangeRequest* msg) {
  return *msg->acq_param_;
}
void CaliChangeRequest::clear_responser() {
  if (GetArena() == nullptr && responser_ != nullptr) {
    delete responser_;
  }
  responser_ = nullptr;
}
void CaliChangeRequest::clear_acq_param() {
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
}
CaliChangeRequest::CaliChangeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
}
CaliChangeRequest::CaliChangeRequest(const CaliChangeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_responser()) {
    responser_ = new ::zb::dcts::scenario::ScenarioTaskId(*from.responser_);
  } else {
    responser_ = nullptr;
  }
  if (from._internal_has_acq_param()) {
    acq_param_ = new ::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam(*from.acq_param_);
  } else {
    acq_param_ = nullptr;
  }
  ::memcpy(&center_freq_, &from.center_freq_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_index_) -
    reinterpret_cast<char*>(&center_freq_)) + sizeof(param_index_));
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
}

void CaliChangeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CaliChangeRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto.base);
  ::memset(&responser_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_index_) -
      reinterpret_cast<char*>(&responser_)) + sizeof(param_index_));
}

CaliChangeRequest::~CaliChangeRequest() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CaliChangeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete responser_;
  if (this != internal_default_instance()) delete acq_param_;
}

void CaliChangeRequest::ArenaDtor(void* object) {
  CaliChangeRequest* _this = reinterpret_cast< CaliChangeRequest* >(object);
  (void)_this;
}
void CaliChangeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CaliChangeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaliChangeRequest& CaliChangeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CaliChangeRequest_scenario_2fkh_2fKhCommDirectionCali_2eproto.base);
  return *internal_default_instance();
}


void CaliChangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && responser_ != nullptr) {
    delete responser_;
  }
  responser_ = nullptr;
  if (GetArena() == nullptr && acq_param_ != nullptr) {
    delete acq_param_;
  }
  acq_param_ = nullptr;
  ::memset(&center_freq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_index_) -
      reinterpret_cast<char*>(&center_freq_)) + sizeof(param_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CaliChangeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.ScenarioTaskId responser = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_responser(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commDirection.CaliParamIndex param_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_param_index(static_cast<::zb::dcts::scenario::kh::commDirection::CaliParamIndex>(val));
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_acq_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double center_freq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          center_freq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CaliChangeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.ScenarioTaskId responser = 1;
  if (this->has_responser()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::responser(this), target, stream);
  }

  // .zb.dcts.scenario.kh.commDirection.CaliParamIndex param_index = 2;
  if (this->param_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_param_index(), target);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
  if (this->has_acq_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::acq_param(this), target, stream);
  }

  // double center_freq = 4;
  if (!(this->center_freq() <= 0 && this->center_freq() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_center_freq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  return target;
}

size_t CaliChangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .zb.dcts.scenario.ScenarioTaskId responser = 1;
  if (this->has_responser()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *responser_);
  }

  // .zb.dcts.scenario.kh.commDirection.CommDirectionAcqParam acq_param = 3;
  if (this->has_acq_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *acq_param_);
  }

  // double center_freq = 4;
  if (!(this->center_freq() <= 0 && this->center_freq() >= 0)) {
    total_size += 1 + 8;
  }

  // .zb.dcts.scenario.kh.commDirection.CaliParamIndex param_index = 2;
  if (this->param_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_param_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaliChangeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CaliChangeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CaliChangeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
    MergeFrom(*source);
  }
}

void CaliChangeRequest::MergeFrom(const CaliChangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_responser()) {
    _internal_mutable_responser()->::zb::dcts::scenario::ScenarioTaskId::MergeFrom(from._internal_responser());
  }
  if (from.has_acq_param()) {
    _internal_mutable_acq_param()->::zb::dcts::scenario::kh::commDirection::CommDirectionAcqParam::MergeFrom(from._internal_acq_param());
  }
  if (!(from.center_freq() <= 0 && from.center_freq() >= 0)) {
    _internal_set_center_freq(from._internal_center_freq());
  }
  if (from.param_index() != 0) {
    _internal_set_param_index(from._internal_param_index());
  }
}

void CaliChangeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaliChangeRequest::CopyFrom(const CaliChangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commDirection.CaliChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaliChangeRequest::IsInitialized() const {
  return true;
}

void CaliChangeRequest::InternalSwap(CaliChangeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaliChangeRequest, param_index_)
      + sizeof(CaliChangeRequest::param_index_)
      - PROTOBUF_FIELD_OFFSET(CaliChangeRequest, responser_)>(
          reinterpret_cast<char*>(&responser_),
          reinterpret_cast<char*>(&other->responser_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CaliChangeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commDirection
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commDirection::CommDirectionCaliTaskRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commDirection::CaliChangeRequest* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commDirection::CaliChangeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commDirection::CaliChangeRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
