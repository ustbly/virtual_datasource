// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario/kh/KhIQDataAcq.proto

#include "scenario/kh/KhIQDataAcq.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_dcts_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Position_dcts_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dcts_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_dcts_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhIQDataAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhIQDataAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommIQAcqSource_ParamsEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhIQDataAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommIQAcquireParam_OthersEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fkh_2fKhIQDataAcq_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommIQData_scenario_2fkh_2fKhIQDataAcq_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scenario_2fspectrum_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignalBand_scenario_2fspectrum_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_source_2fsource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceId_source_2fsource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_source_2fkh_2fKhContext_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelTriggerParam_source_2fkh_2fKhContext_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_source_2fkh_2fKhContext_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WindowParams_source_2fkh_2fKhContext_2eproto;
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commIqData {
class CommIQAcqSource_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommIQAcqSource_ParamsEntry_DoNotUse> _instance;
} _CommIQAcqSource_ParamsEntry_DoNotUse_default_instance_;
class CommIQAcqSourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommIQAcqSource> _instance;
} _CommIQAcqSource_default_instance_;
class CommIQAcquireParam_OthersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommIQAcquireParam_OthersEntry_DoNotUse> _instance;
} _CommIQAcquireParam_OthersEntry_DoNotUse_default_instance_;
class CommIQAcquireParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommIQAcquireParam> _instance;
} _CommIQAcquireParam_default_instance_;
class CommIQDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommIQData> _instance;
} _CommIQData_default_instance_;
class CommIQAcqResult_IQHeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommIQAcqResult_IQHeader> _instance;
} _CommIQAcqResult_IQHeader_default_instance_;
class CommIQAcqResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommIQAcqResult> _instance;
} _CommIQAcqResult_default_instance_;
}  // namespace commIqData
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
static void InitDefaultsscc_info_CommIQAcqResult_scenario_2fkh_2fKhIQDataAcq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CommIQAcqResult_scenario_2fkh_2fKhIQDataAcq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CommIQAcqResult_scenario_2fkh_2fKhIQDataAcq_2eproto}, {
      &scc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
      &scc_info_CommIQData_scenario_2fkh_2fKhIQDataAcq_2eproto.base,}};

static void InitDefaultsscc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_IQHeader_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto}, {
      &scc_info_SourceId_source_2fsource_2eproto.base,
      &scc_info_SignalBand_scenario_2fspectrum_2eproto.base,
      &scc_info_Timestamp_dcts_2eproto.base,
      &scc_info_Position_dcts_2eproto.base,}};

static void InitDefaultsscc_info_CommIQAcqSource_scenario_2fkh_2fKhIQDataAcq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commIqData::_CommIQAcqSource_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CommIQAcqSource_scenario_2fkh_2fKhIQDataAcq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CommIQAcqSource_scenario_2fkh_2fKhIQDataAcq_2eproto}, {
      &scc_info_SourceId_source_2fsource_2eproto.base,
      &scc_info_CommIQAcqSource_ParamsEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto.base,}};

static void InitDefaultsscc_info_CommIQAcqSource_ParamsEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commIqData::_CommIQAcqSource_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse();
  }
  ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommIQAcqSource_ParamsEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommIQAcqSource_ParamsEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto}, {}};

static void InitDefaultsscc_info_CommIQAcquireParam_scenario_2fkh_2fKhIQDataAcq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commIqData::_CommIQAcquireParam_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CommIQAcquireParam_scenario_2fkh_2fKhIQDataAcq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_CommIQAcquireParam_scenario_2fkh_2fKhIQDataAcq_2eproto}, {
      &scc_info_SignalBand_scenario_2fspectrum_2eproto.base,
      &scc_info_LevelTriggerParam_source_2fkh_2fKhContext_2eproto.base,
      &scc_info_WindowParams_source_2fkh_2fKhContext_2eproto.base,
      &scc_info_CommIQAcquireParam_OthersEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto.base,}};

static void InitDefaultsscc_info_CommIQAcquireParam_OthersEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commIqData::_CommIQAcquireParam_OthersEntry_DoNotUse_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse();
  }
  ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommIQAcquireParam_OthersEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommIQAcquireParam_OthersEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto}, {}};

static void InitDefaultsscc_info_CommIQData_scenario_2fkh_2fKhIQDataAcq_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zb::dcts::scenario::kh::commIqData::_CommIQData_default_instance_;
    new (ptr) ::zb::dcts::scenario::kh::commIqData::CommIQData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zb::dcts::scenario::kh::commIqData::CommIQData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommIQData_scenario_2fkh_2fKhIQDataAcq_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommIQData_scenario_2fkh_2fKhIQDataAcq_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scenario_2fkh_2fKhIQDataAcq_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_scenario_2fkh_2fKhIQDataAcq_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scenario_2fkh_2fKhIQDataAcq_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource, id_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource, params_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, signal_band_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, detect_mode_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, channel_mode_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, attenuation_gain_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, antenna_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, level_trigger_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, acquire_samples_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, scale_to_voltage_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, win_params_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam, others_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQData, data_i_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQData, data_q_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, result_from_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, sequence_number_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, signal_band_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, time_stamp_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, position_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, qtz_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader, spanif_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult, header_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult, body_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult, spectrum_views_),
  PROTOBUF_FIELD_OFFSET(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult, sample_rate_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse)},
  { 9, -1, sizeof(::zb::dcts::scenario::kh::commIqData::CommIQAcqSource)},
  { 16, 23, sizeof(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse)},
  { 25, -1, sizeof(::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam)},
  { 40, -1, sizeof(::zb::dcts::scenario::kh::commIqData::CommIQData)},
  { 47, -1, sizeof(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader)},
  { 59, -1, sizeof(::zb::dcts::scenario::kh::commIqData::CommIQAcqResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commIqData::_CommIQAcqSource_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commIqData::_CommIQAcqSource_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commIqData::_CommIQAcquireParam_OthersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commIqData::_CommIQAcquireParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commIqData::_CommIQData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_IQHeader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_default_instance_),
};

const char descriptor_table_protodef_scenario_2fkh_2fKhIQDataAcq_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035scenario/kh/KhIQDataAcq.proto\022\036zb.dcts"
  ".scenario.kh.commIqData\032\ndcts.proto\032\023sou"
  "rce/source.proto\032\031source/kh/KhContext.pr"
  "oto\032\027scenario/spectrum.proto\"\263\001\n\017CommIQA"
  "cqSource\022$\n\002id\030\001 \001(\0132\030.zb.dcts.source.So"
  "urceId\022K\n\006params\030\006 \003(\0132;.zb.dcts.scenari"
  "o.kh.commIqData.CommIQAcqSource.ParamsEn"
  "try\032-\n\013ParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001\"\211\004\n\022CommIQAcquireParam\022:\n\013sig"
  "nal_band\030\001 \001(\0132%.zb.dcts.scenario.spectr"
  "um.SignalBand\0222\n\013detect_mode\030\002 \001(\0162\035.zb."
  "dcts.source.kh.DetectMode\0224\n\014channel_mod"
  "e\030\003 \001(\0162\036.zb.dcts.source.kh.ChannelMode\022"
  "\030\n\020attenuation_gain\030\004 \001(\001\022\017\n\007antenna\030\005 \001"
  "(\005\022;\n\rlevel_trigger\030\006 \001(\0132$.zb.dcts.sour"
  "ce.kh.LevelTriggerParam\022\027\n\017acquire_sampl"
  "es\030\007 \001(\005\022\030\n\020scale_to_voltage\030\010 \001(\001\0223\n\nwi"
  "n_params\030\t \001(\0132\037.zb.dcts.source.kh.Windo"
  "wParams\022N\n\006others\030\n \003(\0132>.zb.dcts.scenar"
  "io.kh.commIqData.CommIQAcquireParam.Othe"
  "rsEntry\032-\n\013OthersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\t:\0028\001\",\n\nCommIQData\022\016\n\006data_i\030\001"
  " \003(\002\022\016\n\006data_q\030\002 \003(\002\"\275\003\n\017CommIQAcqResult"
  "\022H\n\006header\030\001 \001(\01328.zb.dcts.scenario.kh.c"
  "ommIqData.CommIQAcqResult.IQHeader\0228\n\004bo"
  "dy\030\002 \001(\0132*.zb.dcts.scenario.kh.commIqDat"
  "a.CommIQData\022\026\n\016spectrum_views\030\003 \003(\002\022\023\n\013"
  "sample_rate\030\004 \001(\001\032\370\001\n\010IQHeader\022-\n\013result"
  "_from\030\001 \001(\0132\030.zb.dcts.source.SourceId\022\027\n"
  "\017sequence_number\030\002 \001(\004\022:\n\013signal_band\030\005 "
  "\001(\0132%.zb.dcts.scenario.spectrum.SignalBa"
  "nd\022&\n\ntime_stamp\030\006 \001(\0132\022.zb.dcts.Timesta"
  "mp\022#\n\010position\030\007 \001(\0132\021.zb.dcts.Position\022"
  "\013\n\003qtz\030\010 \001(\001\022\016\n\006spanIF\030\t \001(\001*,\n\021ChangeRe"
  "questType\022\027\n\023ANALOGDEMOD_CHANNEL\020\000b\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto_deps[4] = {
  &::descriptor_table_dcts_2eproto,
  &::descriptor_table_scenario_2fspectrum_2eproto,
  &::descriptor_table_source_2fkh_2fKhContext_2eproto,
  &::descriptor_table_source_2fsource_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto_sccs[7] = {
  &scc_info_CommIQAcqResult_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
  &scc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
  &scc_info_CommIQAcqSource_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
  &scc_info_CommIQAcqSource_ParamsEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
  &scc_info_CommIQAcquireParam_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
  &scc_info_CommIQAcquireParam_OthersEntry_DoNotUse_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
  &scc_info_CommIQData_scenario_2fkh_2fKhIQDataAcq_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto = {
  false, false, descriptor_table_protodef_scenario_2fkh_2fKhIQDataAcq_2eproto, "scenario/kh/KhIQDataAcq.proto", 1402,
  &descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto_once, descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto_sccs, descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto_deps, 7, 4,
  schemas, file_default_instances, TableStruct_scenario_2fkh_2fKhIQDataAcq_2eproto::offsets,
  file_level_metadata_scenario_2fkh_2fKhIQDataAcq_2eproto, 7, file_level_enum_descriptors_scenario_2fkh_2fKhIQDataAcq_2eproto, file_level_service_descriptors_scenario_2fkh_2fKhIQDataAcq_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scenario_2fkh_2fKhIQDataAcq_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto)), true);
namespace zb {
namespace dcts {
namespace scenario {
namespace kh {
namespace commIqData {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChangeRequestType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_scenario_2fkh_2fKhIQDataAcq_2eproto);
  return file_level_enum_descriptors_scenario_2fkh_2fKhIQDataAcq_2eproto[0];
}
bool ChangeRequestType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

CommIQAcqSource_ParamsEntry_DoNotUse::CommIQAcqSource_ParamsEntry_DoNotUse() {}
CommIQAcqSource_ParamsEntry_DoNotUse::CommIQAcqSource_ParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CommIQAcqSource_ParamsEntry_DoNotUse::MergeFrom(const CommIQAcqSource_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CommIQAcqSource_ParamsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CommIQAcqSource_ParamsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CommIQAcqSource::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcqSource_default_instance_._instance.get_mutable()->id_ = const_cast< ::zb::dcts::source::SourceId*>(
      ::zb::dcts::source::SourceId::internal_default_instance());
}
class CommIQAcqSource::_Internal {
 public:
  static const ::zb::dcts::source::SourceId& id(const CommIQAcqSource* msg);
};

const ::zb::dcts::source::SourceId&
CommIQAcqSource::_Internal::id(const CommIQAcqSource* msg) {
  return *msg->id_;
}
void CommIQAcqSource::clear_id() {
  if (GetArena() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
}
CommIQAcqSource::CommIQAcqSource(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
}
CommIQAcqSource::CommIQAcqSource(const CommIQAcqSource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  if (from._internal_has_id()) {
    id_ = new ::zb::dcts::source::SourceId(*from.id_);
  } else {
    id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
}

void CommIQAcqSource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommIQAcqSource_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  id_ = nullptr;
}

CommIQAcqSource::~CommIQAcqSource() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommIQAcqSource::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete id_;
}

void CommIQAcqSource::ArenaDtor(void* object) {
  CommIQAcqSource* _this = reinterpret_cast< CommIQAcqSource* >(object);
  (void)_this;
}
void CommIQAcqSource::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommIQAcqSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommIQAcqSource& CommIQAcqSource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommIQAcqSource_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  return *internal_default_instance();
}


void CommIQAcqSource::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  if (GetArena() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommIQAcqSource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.source.SourceId id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> params = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&params_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommIQAcqSource::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId id = 1;
  if (this->has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::id(this), target, stream);
  }

  // map<string, string> params = 6;
  if (!this->_internal_params().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "zb.dcts.scenario.kh.commIqData.CommIQAcqSource.ParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "zb.dcts.scenario.kh.commIqData.CommIQAcqSource.ParamsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_params().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_params().begin();
          it != this->_internal_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CommIQAcqSource_ParamsEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_params().begin();
          it != this->_internal_params().end(); ++it) {
        target = CommIQAcqSource_ParamsEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  return target;
}

size_t CommIQAcqSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> params = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_params_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_params().begin();
      it != this->_internal_params().end(); ++it) {
    total_size += CommIQAcqSource_ParamsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .zb.dcts.source.SourceId id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommIQAcqSource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  GOOGLE_DCHECK_NE(&from, this);
  const CommIQAcqSource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommIQAcqSource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
    MergeFrom(*source);
  }
}

void CommIQAcqSource::MergeFrom(const CommIQAcqSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_id()) {
    _internal_mutable_id()->::zb::dcts::source::SourceId::MergeFrom(from._internal_id());
  }
}

void CommIQAcqSource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommIQAcqSource::CopyFrom(const CommIQAcqSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommIQAcqSource::IsInitialized() const {
  return true;
}

void CommIQAcqSource::InternalSwap(CommIQAcqSource* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  params_.Swap(&other->params_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommIQAcqSource::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CommIQAcquireParam_OthersEntry_DoNotUse::CommIQAcquireParam_OthersEntry_DoNotUse() {}
CommIQAcquireParam_OthersEntry_DoNotUse::CommIQAcquireParam_OthersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CommIQAcquireParam_OthersEntry_DoNotUse::MergeFrom(const CommIQAcquireParam_OthersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CommIQAcquireParam_OthersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CommIQAcquireParam_OthersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CommIQAcquireParam::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcquireParam_default_instance_._instance.get_mutable()->signal_band_ = const_cast< ::zb::dcts::scenario::spectrum::SignalBand*>(
      ::zb::dcts::scenario::spectrum::SignalBand::internal_default_instance());
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcquireParam_default_instance_._instance.get_mutable()->level_trigger_ = const_cast< ::zb::dcts::source::kh::LevelTriggerParam*>(
      ::zb::dcts::source::kh::LevelTriggerParam::internal_default_instance());
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcquireParam_default_instance_._instance.get_mutable()->win_params_ = const_cast< ::zb::dcts::source::kh::WindowParams*>(
      ::zb::dcts::source::kh::WindowParams::internal_default_instance());
}
class CommIQAcquireParam::_Internal {
 public:
  static const ::zb::dcts::scenario::spectrum::SignalBand& signal_band(const CommIQAcquireParam* msg);
  static const ::zb::dcts::source::kh::LevelTriggerParam& level_trigger(const CommIQAcquireParam* msg);
  static const ::zb::dcts::source::kh::WindowParams& win_params(const CommIQAcquireParam* msg);
};

const ::zb::dcts::scenario::spectrum::SignalBand&
CommIQAcquireParam::_Internal::signal_band(const CommIQAcquireParam* msg) {
  return *msg->signal_band_;
}
const ::zb::dcts::source::kh::LevelTriggerParam&
CommIQAcquireParam::_Internal::level_trigger(const CommIQAcquireParam* msg) {
  return *msg->level_trigger_;
}
const ::zb::dcts::source::kh::WindowParams&
CommIQAcquireParam::_Internal::win_params(const CommIQAcquireParam* msg) {
  return *msg->win_params_;
}
void CommIQAcquireParam::clear_signal_band() {
  if (GetArena() == nullptr && signal_band_ != nullptr) {
    delete signal_band_;
  }
  signal_band_ = nullptr;
}
void CommIQAcquireParam::clear_level_trigger() {
  if (GetArena() == nullptr && level_trigger_ != nullptr) {
    delete level_trigger_;
  }
  level_trigger_ = nullptr;
}
void CommIQAcquireParam::clear_win_params() {
  if (GetArena() == nullptr && win_params_ != nullptr) {
    delete win_params_;
  }
  win_params_ = nullptr;
}
CommIQAcquireParam::CommIQAcquireParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  others_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
}
CommIQAcquireParam::CommIQAcquireParam(const CommIQAcquireParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  others_.MergeFrom(from.others_);
  if (from._internal_has_signal_band()) {
    signal_band_ = new ::zb::dcts::scenario::spectrum::SignalBand(*from.signal_band_);
  } else {
    signal_band_ = nullptr;
  }
  if (from._internal_has_level_trigger()) {
    level_trigger_ = new ::zb::dcts::source::kh::LevelTriggerParam(*from.level_trigger_);
  } else {
    level_trigger_ = nullptr;
  }
  if (from._internal_has_win_params()) {
    win_params_ = new ::zb::dcts::source::kh::WindowParams(*from.win_params_);
  } else {
    win_params_ = nullptr;
  }
  ::memcpy(&detect_mode_, &from.detect_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&scale_to_voltage_) -
    reinterpret_cast<char*>(&detect_mode_)) + sizeof(scale_to_voltage_));
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
}

void CommIQAcquireParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommIQAcquireParam_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  ::memset(&signal_band_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_to_voltage_) -
      reinterpret_cast<char*>(&signal_band_)) + sizeof(scale_to_voltage_));
}

CommIQAcquireParam::~CommIQAcquireParam() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommIQAcquireParam::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete signal_band_;
  if (this != internal_default_instance()) delete level_trigger_;
  if (this != internal_default_instance()) delete win_params_;
}

void CommIQAcquireParam::ArenaDtor(void* object) {
  CommIQAcquireParam* _this = reinterpret_cast< CommIQAcquireParam* >(object);
  (void)_this;
}
void CommIQAcquireParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommIQAcquireParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommIQAcquireParam& CommIQAcquireParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommIQAcquireParam_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  return *internal_default_instance();
}


void CommIQAcquireParam::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  others_.Clear();
  if (GetArena() == nullptr && signal_band_ != nullptr) {
    delete signal_band_;
  }
  signal_band_ = nullptr;
  if (GetArena() == nullptr && level_trigger_ != nullptr) {
    delete level_trigger_;
  }
  level_trigger_ = nullptr;
  if (GetArena() == nullptr && win_params_ != nullptr) {
    delete win_params_;
  }
  win_params_ = nullptr;
  ::memset(&detect_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_to_voltage_) -
      reinterpret_cast<char*>(&detect_mode_)) + sizeof(scale_to_voltage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommIQAcquireParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.spectrum.SignalBand signal_band = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_signal_band(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.source.kh.DetectMode detect_mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_detect_mode(static_cast<::zb::dcts::source::kh::DetectMode>(val));
        } else goto handle_unusual;
        continue;
      // .zb.dcts.source.kh.ChannelMode channel_mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_channel_mode(static_cast<::zb::dcts::source::kh::ChannelMode>(val));
        } else goto handle_unusual;
        continue;
      // double attenuation_gain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          attenuation_gain_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 antenna = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          antenna_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.source.kh.LevelTriggerParam level_trigger = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_level_trigger(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 acquire_samples = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          acquire_samples_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double scale_to_voltage = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          scale_to_voltage_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.source.kh.WindowParams win_params = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_win_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> others = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&others_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommIQAcquireParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.spectrum.SignalBand signal_band = 1;
  if (this->has_signal_band()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::signal_band(this), target, stream);
  }

  // .zb.dcts.source.kh.DetectMode detect_mode = 2;
  if (this->detect_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_detect_mode(), target);
  }

  // .zb.dcts.source.kh.ChannelMode channel_mode = 3;
  if (this->channel_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_channel_mode(), target);
  }

  // double attenuation_gain = 4;
  if (!(this->attenuation_gain() <= 0 && this->attenuation_gain() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_attenuation_gain(), target);
  }

  // int32 antenna = 5;
  if (this->antenna() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_antenna(), target);
  }

  // .zb.dcts.source.kh.LevelTriggerParam level_trigger = 6;
  if (this->has_level_trigger()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::level_trigger(this), target, stream);
  }

  // int32 acquire_samples = 7;
  if (this->acquire_samples() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_acquire_samples(), target);
  }

  // double scale_to_voltage = 8;
  if (!(this->scale_to_voltage() <= 0 && this->scale_to_voltage() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_scale_to_voltage(), target);
  }

  // .zb.dcts.source.kh.WindowParams win_params = 9;
  if (this->has_win_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::win_params(this), target, stream);
  }

  // map<string, string> others = 10;
  if (!this->_internal_others().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.OthersEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "zb.dcts.scenario.kh.commIqData.CommIQAcquireParam.OthersEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_others().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_others().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_others().begin();
          it != this->_internal_others().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CommIQAcquireParam_OthersEntry_DoNotUse::Funcs::InternalSerialize(10, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_others().begin();
          it != this->_internal_others().end(); ++it) {
        target = CommIQAcquireParam_OthersEntry_DoNotUse::Funcs::InternalSerialize(10, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  return target;
}

size_t CommIQAcquireParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> others = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_others_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_others().begin();
      it != this->_internal_others().end(); ++it) {
    total_size += CommIQAcquireParam_OthersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .zb.dcts.scenario.spectrum.SignalBand signal_band = 1;
  if (this->has_signal_band()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *signal_band_);
  }

  // .zb.dcts.source.kh.LevelTriggerParam level_trigger = 6;
  if (this->has_level_trigger()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *level_trigger_);
  }

  // .zb.dcts.source.kh.WindowParams win_params = 9;
  if (this->has_win_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *win_params_);
  }

  // .zb.dcts.source.kh.DetectMode detect_mode = 2;
  if (this->detect_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_detect_mode());
  }

  // .zb.dcts.source.kh.ChannelMode channel_mode = 3;
  if (this->channel_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_channel_mode());
  }

  // double attenuation_gain = 4;
  if (!(this->attenuation_gain() <= 0 && this->attenuation_gain() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 antenna = 5;
  if (this->antenna() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_antenna());
  }

  // int32 acquire_samples = 7;
  if (this->acquire_samples() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_acquire_samples());
  }

  // double scale_to_voltage = 8;
  if (!(this->scale_to_voltage() <= 0 && this->scale_to_voltage() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommIQAcquireParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  GOOGLE_DCHECK_NE(&from, this);
  const CommIQAcquireParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommIQAcquireParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
    MergeFrom(*source);
  }
}

void CommIQAcquireParam::MergeFrom(const CommIQAcquireParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  others_.MergeFrom(from.others_);
  if (from.has_signal_band()) {
    _internal_mutable_signal_band()->::zb::dcts::scenario::spectrum::SignalBand::MergeFrom(from._internal_signal_band());
  }
  if (from.has_level_trigger()) {
    _internal_mutable_level_trigger()->::zb::dcts::source::kh::LevelTriggerParam::MergeFrom(from._internal_level_trigger());
  }
  if (from.has_win_params()) {
    _internal_mutable_win_params()->::zb::dcts::source::kh::WindowParams::MergeFrom(from._internal_win_params());
  }
  if (from.detect_mode() != 0) {
    _internal_set_detect_mode(from._internal_detect_mode());
  }
  if (from.channel_mode() != 0) {
    _internal_set_channel_mode(from._internal_channel_mode());
  }
  if (!(from.attenuation_gain() <= 0 && from.attenuation_gain() >= 0)) {
    _internal_set_attenuation_gain(from._internal_attenuation_gain());
  }
  if (from.antenna() != 0) {
    _internal_set_antenna(from._internal_antenna());
  }
  if (from.acquire_samples() != 0) {
    _internal_set_acquire_samples(from._internal_acquire_samples());
  }
  if (!(from.scale_to_voltage() <= 0 && from.scale_to_voltage() >= 0)) {
    _internal_set_scale_to_voltage(from._internal_scale_to_voltage());
  }
}

void CommIQAcquireParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommIQAcquireParam::CopyFrom(const CommIQAcquireParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcquireParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommIQAcquireParam::IsInitialized() const {
  return true;
}

void CommIQAcquireParam::InternalSwap(CommIQAcquireParam* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  others_.Swap(&other->others_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommIQAcquireParam, scale_to_voltage_)
      + sizeof(CommIQAcquireParam::scale_to_voltage_)
      - PROTOBUF_FIELD_OFFSET(CommIQAcquireParam, signal_band_)>(
          reinterpret_cast<char*>(&signal_band_),
          reinterpret_cast<char*>(&other->signal_band_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommIQAcquireParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CommIQData::InitAsDefaultInstance() {
}
class CommIQData::_Internal {
 public:
};

CommIQData::CommIQData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_i_(arena),
  data_q_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commIqData.CommIQData)
}
CommIQData::CommIQData(const CommIQData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_i_(from.data_i_),
      data_q_(from.data_q_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commIqData.CommIQData)
}

void CommIQData::SharedCtor() {
}

CommIQData::~CommIQData() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commIqData.CommIQData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommIQData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CommIQData::ArenaDtor(void* object) {
  CommIQData* _this = reinterpret_cast< CommIQData* >(object);
  (void)_this;
}
void CommIQData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommIQData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommIQData& CommIQData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommIQData_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  return *internal_default_instance();
}


void CommIQData::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commIqData.CommIQData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_i_.Clear();
  data_q_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommIQData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated float data_i = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_data_i(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13) {
          _internal_add_data_i(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated float data_q = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_data_q(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21) {
          _internal_add_data_q(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommIQData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commIqData.CommIQData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data_i = 1;
  if (this->_internal_data_i_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data_i(), target);
  }

  // repeated float data_q = 2;
  if (this->_internal_data_q_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_data_q(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commIqData.CommIQData)
  return target;
}

size_t CommIQData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commIqData.CommIQData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float data_i = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_data_i_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_i_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float data_q = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_data_q_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_q_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommIQData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQData)
  GOOGLE_DCHECK_NE(&from, this);
  const CommIQData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommIQData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commIqData.CommIQData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commIqData.CommIQData)
    MergeFrom(*source);
  }
}

void CommIQData::MergeFrom(const CommIQData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_i_.MergeFrom(from.data_i_);
  data_q_.MergeFrom(from.data_q_);
}

void CommIQData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommIQData::CopyFrom(const CommIQData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommIQData::IsInitialized() const {
  return true;
}

void CommIQData::InternalSwap(CommIQData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_i_.InternalSwap(&other->data_i_);
  data_q_.InternalSwap(&other->data_q_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommIQData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CommIQAcqResult_IQHeader::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_IQHeader_default_instance_._instance.get_mutable()->result_from_ = const_cast< ::zb::dcts::source::SourceId*>(
      ::zb::dcts::source::SourceId::internal_default_instance());
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_IQHeader_default_instance_._instance.get_mutable()->signal_band_ = const_cast< ::zb::dcts::scenario::spectrum::SignalBand*>(
      ::zb::dcts::scenario::spectrum::SignalBand::internal_default_instance());
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_IQHeader_default_instance_._instance.get_mutable()->time_stamp_ = const_cast< ::zb::dcts::Timestamp*>(
      ::zb::dcts::Timestamp::internal_default_instance());
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_IQHeader_default_instance_._instance.get_mutable()->position_ = const_cast< ::zb::dcts::Position*>(
      ::zb::dcts::Position::internal_default_instance());
}
class CommIQAcqResult_IQHeader::_Internal {
 public:
  static const ::zb::dcts::source::SourceId& result_from(const CommIQAcqResult_IQHeader* msg);
  static const ::zb::dcts::scenario::spectrum::SignalBand& signal_band(const CommIQAcqResult_IQHeader* msg);
  static const ::zb::dcts::Timestamp& time_stamp(const CommIQAcqResult_IQHeader* msg);
  static const ::zb::dcts::Position& position(const CommIQAcqResult_IQHeader* msg);
};

const ::zb::dcts::source::SourceId&
CommIQAcqResult_IQHeader::_Internal::result_from(const CommIQAcqResult_IQHeader* msg) {
  return *msg->result_from_;
}
const ::zb::dcts::scenario::spectrum::SignalBand&
CommIQAcqResult_IQHeader::_Internal::signal_band(const CommIQAcqResult_IQHeader* msg) {
  return *msg->signal_band_;
}
const ::zb::dcts::Timestamp&
CommIQAcqResult_IQHeader::_Internal::time_stamp(const CommIQAcqResult_IQHeader* msg) {
  return *msg->time_stamp_;
}
const ::zb::dcts::Position&
CommIQAcqResult_IQHeader::_Internal::position(const CommIQAcqResult_IQHeader* msg) {
  return *msg->position_;
}
void CommIQAcqResult_IQHeader::clear_result_from() {
  if (GetArena() == nullptr && result_from_ != nullptr) {
    delete result_from_;
  }
  result_from_ = nullptr;
}
void CommIQAcqResult_IQHeader::clear_signal_band() {
  if (GetArena() == nullptr && signal_band_ != nullptr) {
    delete signal_band_;
  }
  signal_band_ = nullptr;
}
void CommIQAcqResult_IQHeader::clear_time_stamp() {
  if (GetArena() == nullptr && time_stamp_ != nullptr) {
    delete time_stamp_;
  }
  time_stamp_ = nullptr;
}
void CommIQAcqResult_IQHeader::clear_position() {
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
CommIQAcqResult_IQHeader::CommIQAcqResult_IQHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
}
CommIQAcqResult_IQHeader::CommIQAcqResult_IQHeader(const CommIQAcqResult_IQHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result_from()) {
    result_from_ = new ::zb::dcts::source::SourceId(*from.result_from_);
  } else {
    result_from_ = nullptr;
  }
  if (from._internal_has_signal_band()) {
    signal_band_ = new ::zb::dcts::scenario::spectrum::SignalBand(*from.signal_band_);
  } else {
    signal_band_ = nullptr;
  }
  if (from._internal_has_time_stamp()) {
    time_stamp_ = new ::zb::dcts::Timestamp(*from.time_stamp_);
  } else {
    time_stamp_ = nullptr;
  }
  if (from._internal_has_position()) {
    position_ = new ::zb::dcts::Position(*from.position_);
  } else {
    position_ = nullptr;
  }
  ::memcpy(&sequence_number_, &from.sequence_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&spanif_) -
    reinterpret_cast<char*>(&sequence_number_)) + sizeof(spanif_));
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
}

void CommIQAcqResult_IQHeader::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  ::memset(&result_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spanif_) -
      reinterpret_cast<char*>(&result_from_)) + sizeof(spanif_));
}

CommIQAcqResult_IQHeader::~CommIQAcqResult_IQHeader() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommIQAcqResult_IQHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_from_;
  if (this != internal_default_instance()) delete signal_band_;
  if (this != internal_default_instance()) delete time_stamp_;
  if (this != internal_default_instance()) delete position_;
}

void CommIQAcqResult_IQHeader::ArenaDtor(void* object) {
  CommIQAcqResult_IQHeader* _this = reinterpret_cast< CommIQAcqResult_IQHeader* >(object);
  (void)_this;
}
void CommIQAcqResult_IQHeader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommIQAcqResult_IQHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommIQAcqResult_IQHeader& CommIQAcqResult_IQHeader::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommIQAcqResult_IQHeader_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  return *internal_default_instance();
}


void CommIQAcqResult_IQHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_from_ != nullptr) {
    delete result_from_;
  }
  result_from_ = nullptr;
  if (GetArena() == nullptr && signal_band_ != nullptr) {
    delete signal_band_;
  }
  signal_band_ = nullptr;
  if (GetArena() == nullptr && time_stamp_ != nullptr) {
    delete time_stamp_;
  }
  time_stamp_ = nullptr;
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  ::memset(&sequence_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spanif_) -
      reinterpret_cast<char*>(&sequence_number_)) + sizeof(spanif_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommIQAcqResult_IQHeader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.source.SourceId result_from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result_from(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 sequence_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.spectrum.SignalBand signal_band = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_signal_band(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.Timestamp time_stamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_time_stamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.Position position = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double qtz = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          qtz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double spanIF = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          spanif_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommIQAcqResult_IQHeader::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId result_from = 1;
  if (this->has_result_from()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result_from(this), target, stream);
  }

  // uint64 sequence_number = 2;
  if (this->sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_sequence_number(), target);
  }

  // .zb.dcts.scenario.spectrum.SignalBand signal_band = 5;
  if (this->has_signal_band()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::signal_band(this), target, stream);
  }

  // .zb.dcts.Timestamp time_stamp = 6;
  if (this->has_time_stamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::time_stamp(this), target, stream);
  }

  // .zb.dcts.Position position = 7;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::position(this), target, stream);
  }

  // double qtz = 8;
  if (!(this->qtz() <= 0 && this->qtz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_qtz(), target);
  }

  // double spanIF = 9;
  if (!(this->spanif() <= 0 && this->spanif() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_spanif(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  return target;
}

size_t CommIQAcqResult_IQHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .zb.dcts.source.SourceId result_from = 1;
  if (this->has_result_from()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_from_);
  }

  // .zb.dcts.scenario.spectrum.SignalBand signal_band = 5;
  if (this->has_signal_band()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *signal_band_);
  }

  // .zb.dcts.Timestamp time_stamp = 6;
  if (this->has_time_stamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_stamp_);
  }

  // .zb.dcts.Position position = 7;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // uint64 sequence_number = 2;
  if (this->sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_sequence_number());
  }

  // double qtz = 8;
  if (!(this->qtz() <= 0 && this->qtz() >= 0)) {
    total_size += 1 + 8;
  }

  // double spanIF = 9;
  if (!(this->spanif() <= 0 && this->spanif() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommIQAcqResult_IQHeader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CommIQAcqResult_IQHeader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommIQAcqResult_IQHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
    MergeFrom(*source);
  }
}

void CommIQAcqResult_IQHeader::MergeFrom(const CommIQAcqResult_IQHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result_from()) {
    _internal_mutable_result_from()->::zb::dcts::source::SourceId::MergeFrom(from._internal_result_from());
  }
  if (from.has_signal_band()) {
    _internal_mutable_signal_band()->::zb::dcts::scenario::spectrum::SignalBand::MergeFrom(from._internal_signal_band());
  }
  if (from.has_time_stamp()) {
    _internal_mutable_time_stamp()->::zb::dcts::Timestamp::MergeFrom(from._internal_time_stamp());
  }
  if (from.has_position()) {
    _internal_mutable_position()->::zb::dcts::Position::MergeFrom(from._internal_position());
  }
  if (from.sequence_number() != 0) {
    _internal_set_sequence_number(from._internal_sequence_number());
  }
  if (!(from.qtz() <= 0 && from.qtz() >= 0)) {
    _internal_set_qtz(from._internal_qtz());
  }
  if (!(from.spanif() <= 0 && from.spanif() >= 0)) {
    _internal_set_spanif(from._internal_spanif());
  }
}

void CommIQAcqResult_IQHeader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommIQAcqResult_IQHeader::CopyFrom(const CommIQAcqResult_IQHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommIQAcqResult_IQHeader::IsInitialized() const {
  return true;
}

void CommIQAcqResult_IQHeader::InternalSwap(CommIQAcqResult_IQHeader* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommIQAcqResult_IQHeader, spanif_)
      + sizeof(CommIQAcqResult_IQHeader::spanif_)
      - PROTOBUF_FIELD_OFFSET(CommIQAcqResult_IQHeader, result_from_)>(
          reinterpret_cast<char*>(&result_from_),
          reinterpret_cast<char*>(&other->result_from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommIQAcqResult_IQHeader::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CommIQAcqResult::InitAsDefaultInstance() {
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_default_instance_._instance.get_mutable()->header_ = const_cast< ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader*>(
      ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader::internal_default_instance());
  ::zb::dcts::scenario::kh::commIqData::_CommIQAcqResult_default_instance_._instance.get_mutable()->body_ = const_cast< ::zb::dcts::scenario::kh::commIqData::CommIQData*>(
      ::zb::dcts::scenario::kh::commIqData::CommIQData::internal_default_instance());
}
class CommIQAcqResult::_Internal {
 public:
  static const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader& header(const CommIQAcqResult* msg);
  static const ::zb::dcts::scenario::kh::commIqData::CommIQData& body(const CommIQAcqResult* msg);
};

const ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader&
CommIQAcqResult::_Internal::header(const CommIQAcqResult* msg) {
  return *msg->header_;
}
const ::zb::dcts::scenario::kh::commIqData::CommIQData&
CommIQAcqResult::_Internal::body(const CommIQAcqResult* msg) {
  return *msg->body_;
}
CommIQAcqResult::CommIQAcqResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  spectrum_views_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
}
CommIQAcqResult::CommIQAcqResult(const CommIQAcqResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      spectrum_views_(from.spectrum_views_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_body()) {
    body_ = new ::zb::dcts::scenario::kh::commIqData::CommIQData(*from.body_);
  } else {
    body_ = nullptr;
  }
  sample_rate_ = from.sample_rate_;
  // @@protoc_insertion_point(copy_constructor:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
}

void CommIQAcqResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommIQAcqResult_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_) -
      reinterpret_cast<char*>(&header_)) + sizeof(sample_rate_));
}

CommIQAcqResult::~CommIQAcqResult() {
  // @@protoc_insertion_point(destructor:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommIQAcqResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void CommIQAcqResult::ArenaDtor(void* object) {
  CommIQAcqResult* _this = reinterpret_cast< CommIQAcqResult* >(object);
  (void)_this;
}
void CommIQAcqResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommIQAcqResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommIQAcqResult& CommIQAcqResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommIQAcqResult_scenario_2fkh_2fKhIQDataAcq_2eproto.base);
  return *internal_default_instance();
}


void CommIQAcqResult::Clear() {
// @@protoc_insertion_point(message_clear_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spectrum_views_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
  sample_rate_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommIQAcqResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .zb.dcts.scenario.kh.commIqData.CommIQData body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float spectrum_views = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_spectrum_views(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29) {
          _internal_add_spectrum_views(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // double sample_rate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          sample_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommIQAcqResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .zb.dcts.scenario.kh.commIqData.CommIQData body = 2;
  if (this->has_body()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::body(this), target, stream);
  }

  // repeated float spectrum_views = 3;
  if (this->_internal_spectrum_views_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_spectrum_views(), target);
  }

  // double sample_rate = 4;
  if (!(this->sample_rate() <= 0 && this->sample_rate() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_sample_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  return target;
}

size_t CommIQAcqResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float spectrum_views = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_spectrum_views_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _spectrum_views_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .zb.dcts.scenario.kh.commIqData.CommIQAcqResult.IQHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .zb.dcts.scenario.kh.commIqData.CommIQData body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *body_);
  }

  // double sample_rate = 4;
  if (!(this->sample_rate() <= 0 && this->sample_rate() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommIQAcqResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CommIQAcqResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommIQAcqResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
    MergeFrom(*source);
  }
}

void CommIQAcqResult::MergeFrom(const CommIQAcqResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spectrum_views_.MergeFrom(from.spectrum_views_);
  if (from.has_header()) {
    _internal_mutable_header()->::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader::MergeFrom(from._internal_header());
  }
  if (from.has_body()) {
    _internal_mutable_body()->::zb::dcts::scenario::kh::commIqData::CommIQData::MergeFrom(from._internal_body());
  }
  if (!(from.sample_rate() <= 0 && from.sample_rate() >= 0)) {
    _internal_set_sample_rate(from._internal_sample_rate());
  }
}

void CommIQAcqResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommIQAcqResult::CopyFrom(const CommIQAcqResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zb.dcts.scenario.kh.commIqData.CommIQAcqResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommIQAcqResult::IsInitialized() const {
  return true;
}

void CommIQAcqResult::InternalSwap(CommIQAcqResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spectrum_views_.InternalSwap(&other->spectrum_views_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommIQAcqResult, sample_rate_)
      + sizeof(CommIQAcqResult::sample_rate_)
      - PROTOBUF_FIELD_OFFSET(CommIQAcqResult, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommIQAcqResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commIqData
}  // namespace kh
}  // namespace scenario
}  // namespace dcts
}  // namespace zb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource_ParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commIqData::CommIQAcqSource >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam_OthersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commIqData::CommIQAcquireParam >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commIqData::CommIQData* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commIqData::CommIQData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commIqData::CommIQData >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult_IQHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult* Arena::CreateMaybeMessage< ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zb::dcts::scenario::kh::commIqData::CommIQAcqResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
